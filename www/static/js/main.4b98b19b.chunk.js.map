{"version":3,"sources":["maps/ArchiveLoader.wasm","maps/ArchiveLoader.jscc","maps/parser.worker.js","utils/ActiveContainer.js","utils/createChainedFunction.js","utils/ErrorView.js","utils/scrollIntoView.js","utils/SearchBox.js","utils/withAsync.js","utils/cache.js","utils/scrollView.js","utils/OverlayNav.js","utils/ScrollSaver.js","utils/downloadBlob.js","data/hash.js","maps/archive.js","maps/parser.js","notify.js","data/cache.js","data/title.js","data/options.js","objects/types.js","DataMenu.js","objects/ObjectCtx.js","objects/DataDownload.js","objects/ObjectList.js","data/tagString.js","objects/Tooltip.js","mdx/parsers/ini/file.js","mdx/parsers/ini/index.js","mdx/parsers/slk/file.js","mdx/parsers/slk/index.js","mdx/common/typecast.js","mdx/common/binarystream.js","mdx/parsers/w3x/doo/randomitem.js","mdx/parsers/w3x/doo/randomitemset.js","mdx/parsers/w3x/doo/doodad.js","mdx/parsers/w3x/doo/terraindoodad.js","mdx/parsers/w3x/doo/file.js","mdx/parsers/w3x/imp/import.js","mdx/parsers/w3x/imp/file.js","mdx/parsers/w3x/w3u/modification.js","mdx/parsers/w3x/w3u/modifiedobject.js","mdx/parsers/w3x/w3u/modificationtable.js","mdx/parsers/w3x/w3d/file.js","mdx/parsers/w3x/w3e/corner.js","mdx/parsers/w3x/w3e/file.js","mdx/parsers/w3x/w3i/player.js","mdx/parsers/w3x/w3i/force.js","mdx/parsers/w3x/w3i/upgradeavailabilitychange.js","mdx/parsers/w3x/w3i/techavailabilitychange.js","mdx/parsers/w3x/w3i/randomunit.js","mdx/parsers/w3x/w3i/randomunittable.js","mdx/parsers/w3x/w3i/randomitem.js","mdx/parsers/w3x/w3i/randomitemset.js","mdx/parsers/w3x/w3i/randomitemtable.js","mdx/parsers/w3x/w3i/file.js","mdx/parsers/w3x/w3u/file.js","mdx/parsers/w3x/wct/customtexttrigger.js","mdx/parsers/w3x/wct/file.js","mdx/parsers/w3x/wtg/triggercategory.js","mdx/parsers/w3x/wtg/variable.js","mdx/parsers/w3x/wtg/subparameters.js","mdx/parsers/w3x/wtg/parameter.js","mdx/parsers/w3x/wtg/eca.js","mdx/parsers/w3x/wtg/trigger.js","mdx/parsers/w3x/wtg/file.js","mdx/common/tokenstream.js","mdx/parsers/w3x/wts/file.js","mdx/parsers/w3x/unitsdoo/droppeditem.js","mdx/parsers/w3x/unitsdoo/droppeditemset.js","mdx/parsers/w3x/unitsdoo/inventoryitem.js","mdx/parsers/w3x/unitsdoo/modifiedability.js","mdx/parsers/w3x/unitsdoo/randomunit.js","mdx/parsers/w3x/unitsdoo/unit.js","mdx/parsers/w3x/unitsdoo/file.js","mdx/parsers/w3x/map.js","mdx/parsers/w3x/mmp/minimapicon.js","mdx/parsers/w3x/w3c/camera.js","mdx/parsers/w3x/w3r/region.js","mdx/parsers/w3x/w3s/sound.js","mdx/parsers/w3x/w3f/maptitle.js","mdx/parsers/w3x/w3f/maporder.js","mdx/parsers/w3x/w3f/index.js","mdx/parsers/w3x/index.js","mdx/parsers/w3x/doo/index.js","mdx/parsers/w3x/imp/index.js","mdx/parsers/w3x/mmp/index.js","mdx/parsers/w3x/mmp/file.js","mdx/parsers/w3x/shd/index.js","mdx/parsers/w3x/shd/file.js","mdx/parsers/w3x/w3c/index.js","mdx/parsers/w3x/w3c/file.js","mdx/parsers/w3x/w3d/index.js","mdx/parsers/w3x/w3e/index.js","mdx/parsers/w3x/w3i/index.js","mdx/parsers/w3x/w3o/index.js","mdx/parsers/w3x/w3o/file.js","mdx/parsers/w3x/w3r/index.js","mdx/parsers/w3x/w3r/file.js","mdx/parsers/w3x/w3s/index.js","mdx/parsers/w3x/w3s/file.js","mdx/parsers/w3x/w3u/index.js","mdx/parsers/w3x/wct/index.js","mdx/parsers/w3x/wpm/index.js","mdx/parsers/w3x/wpm/file.js","mdx/parsers/w3x/wtg/index.js","mdx/parsers/w3x/wtg/triggerdata.js","mdx/parsers/w3x/wts/index.js","mdx/parsers/w3x/unitsdoo/index.js","mdx/parsers/w3x/w3f/file.js","mdx/parsers/mdlx/extent.js","mdx/parsers/mdlx/sequence.js","mdx/parsers/mdlx/tracks.js","mdx/parsers/mdlx/animations.js","mdx/parsers/mdlx/animationmap.js","mdx/parsers/mdlx/animatedobject.js","mdx/parsers/mdlx/layer.js","mdx/parsers/mdlx/material.js","mdx/parsers/mdlx/texture.js","mdx/parsers/mdlx/textureanimation.js","mdx/parsers/mdlx/geoset.js","mdx/parsers/mdlx/geosetanimation.js","mdx/parsers/mdlx/genericobject.js","mdx/parsers/mdlx/bone.js","mdx/parsers/mdlx/light.js","mdx/parsers/mdlx/helper.js","mdx/parsers/mdlx/attachment.js","mdx/parsers/mdlx/particleemitter.js","mdx/parsers/mdlx/particleemitter2.js","mdx/parsers/mdlx/ribbonemitter.js","mdx/parsers/mdlx/camera.js","mdx/parsers/mdlx/eventobject.js","mdx/parsers/mdlx/collisionshape.js","mdx/parsers/mdlx/unknownchunk.js","mdx/parsers/mdlx/model.js","mdx/parsers/mdlx/index.js","mdx/parsers/index.js","mdx/common/math.js","mdx/common/canvas.js","mdx/common/fetchdatatype.js","mdx/common/stringhash.js","mdx/viewer/gl/shader.js","mdx/viewer/gl/program.js","mdx/viewer/gl/gl.js","mdx/viewer/promiseresource.js","mdx/common/gl-matrix-addon.js","mdx/viewer/camera.js","mdx/viewer/node.js","mdx/viewer/scene.js","mdx/viewer/resource.js","mdx/viewer/texture.js","mdx/viewer/handlers/imagetexture/texture.js","mdx/viewer/handlers/imagetexture/handler.js","mdx/viewer/genericresource.js","mdx/viewer/viewer.js","mdx/viewer/modelview.js","mdx/viewer/texturedmodelview.js","mdx/viewer/model.js","mdx/viewer/texturedmodel.js","mdx/viewer/handlers/geo/model.js","mdx/viewer/bucket.js","mdx/viewer/handlers/geo/bucket.js","mdx/viewer/modelinstance.js","mdx/viewer/texturedmodelinstance.js","mdx/viewer/handlers/geo/modelinstance.js","mdx/viewer/shaders.js","mdx/viewer/handlers/geo/shaders.js","mdx/viewer/handlers/geo/handler.js","mdx/viewer/handlers/geo/modelview.js","mdx/viewer/handlers/geo/index.js","mdx/viewer/handlers/mdx/sd.js","mdx/common/interpolator.js","mdx/viewer/handlers/mdx/animatedobject.js","mdx/viewer/handlers/mdx/textureanimation.js","mdx/common/arrayunique.js","mdx/viewer/handlers/mdx/filtermode.js","mdx/viewer/handlers/mdx/layer.js","mdx/viewer/handlers/mdx/geosetanimation.js","mdx/viewer/handlers/mdx/geoset.js","mdx/viewer/handlers/mdx/batch.js","mdx/viewer/handlers/mdx/replaceableids.js","mdx/viewer/handlers/mdx/genericobject.js","mdx/viewer/handlers/mdx/bone.js","mdx/viewer/handlers/mdx/light.js","mdx/viewer/handlers/mdx/helper.js","mdx/viewer/handlers/mdx/attachment.js","mdx/viewer/handlers/mdx/modelparticleemitter.js","mdx/viewer/handlers/mdx/modelparticleemitter2.js","mdx/viewer/handlers/mdx/modelribbonemitter.js","mdx/viewer/handlers/mdx/camera.js","mdx/utils/mappeddata.js","mdx/common/audio.js","mdx/viewer/handlers/mdx/modeleventobject.js","mdx/viewer/handlers/mdx/collisionshape.js","mdx/viewer/handlers/mdx/model.js","mdx/common/bounds.js","mdx/viewer/handlers/mdx/sharedemitter.js","mdx/viewer/handlers/mdx/particle.js","mdx/viewer/handlers/mdx/particleemitter.js","mdx/viewer/handlers/mdx/sharedgeometryemitter.js","mdx/viewer/handlers/mdx/particle2.js","mdx/viewer/handlers/mdx/particleemitter2.js","mdx/viewer/handlers/mdx/ribbon.js","mdx/viewer/handlers/mdx/ribbonemitter.js","mdx/viewer/handlers/mdx/eventobjectspn.js","mdx/viewer/handlers/mdx/eventobjectspnemitter.js","mdx/viewer/handlers/mdx/eventobjectspl.js","mdx/viewer/handlers/mdx/eventobjectsplemitter.js","mdx/viewer/handlers/mdx/eventobjectubr.js","mdx/viewer/handlers/mdx/eventobjectubremitter.js","mdx/viewer/handlers/mdx/eventobjectsndemitter.js","mdx/viewer/handlers/mdx/bucket.js","mdx/viewer/handlers/mdx/node.js","mdx/viewer/handlers/mdx/attachmentinstance.js","mdx/viewer/handlers/mdx/particleemitterview.js","mdx/viewer/handlers/mdx/particleemitter2view.js","mdx/viewer/handlers/mdx/ribbonemitterview.js","mdx/viewer/handlers/mdx/eventobjectemitterview.js","mdx/viewer/handlers/mdx/modelinstance.js","mdx/viewer/handlers/mdx/shaders.js","mdx/viewer/handlers/mdx/handler.js","mdx/viewer/handlers/mdx/modelview.js","mdx/viewer/handlers/mdx/index.js","mdx/viewer/handlers/imagetexture/index.js","mdx/viewer/handlers/w3x/shaders.js","mdx/viewer/handlers/w3x/variations.js","mdx/viewer/handlers/w3x/terrainmodel.js","mdx/viewer/handlers/w3x/splatmodel.js","mdx/viewer/handlers/w3x/standsequence.js","mdx/viewer/handlers/w3x/viewer.js","mdx/viewer/handlers/w3x/index.js","mdx/index.js","mdx/viewer/index.js","mdx/viewer/handlers/index.js","files/FileModel.js","objects/ObjectModel.js","objects/ObjectValue.js","objects/ObjectData.js","objects/ObjectView.js","files/FileCtx.js","files/FileList.js","files/FileSlk2.js","files/FileHex.js","text/TextView.js","utils/string.js","files/FileText.js","files/FileImage.js","files/FileAudio.js","jass/keywords.js","files/FileJass.js","files/FileData.js","files/FileSlk.js","files/GameFileData.js","files/FileView.js","MapHome.js","jass/JassView.js","MapView.js","DataView.js","HomePage.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","__filename","process","__dirname","ArchiveLoader","_scriptName","document","currentScript","src","undefined","moduleArg","readyPromiseResolve","readyPromiseReject","read_","readAsync","readBinary","Module","readyPromise","Promise","resolve","reject","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","ENVIRONMENT_IS_NODE","versions","node","moduleOverrides","Object","assign","thisProgram","quit_","status","toThrow","scriptDirectory","fs","nodePath","filename","binary","isFileURI","URL","normalize","readFileSync","ret","buffer","Uint8Array","onload","onerror","readFile","err","data","argv","length","replace","slice","exitCode","self","location","href","startsWith","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","fetch","credentials","then","ok","arrayBuffer","Error","wasmBinary","wasmMemory","out","console","log","bind","error","HEAP8","HEAPU8","HEAPU32","ABORT","updateMemoryViews","b","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","addOnPostRun","cb","unshift","runDependencies","runDependencyWatcher","dependenciesFulfilled","abort","what","e","WebAssembly","RuntimeError","wasmBinaryFile","isDataURI","findWasmBinary","path","f","getBinarySync","file","instantiateArrayBuffer","binaryFile","imports","receiver","getBinaryPromise","instantiate","reason","ExitStatus","this","name","message","callRuntimeCallbacks","callbacks","shift","noExitRuntime","stackRestore","val","__emscripten_stack_restore","stackSave","_emscripten_stack_get_current","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","ExceptionInfo","[object Object]","excPtr","type","destructor","caught","rethrown","set_adjusted_ptr","set_type","set_destructor","adjustedPtr","___cxa_is_pointer_type","get_type","adjusted","get_adjusted_ptr","growMemory","size","pages","byteLength","grow","ENV","getEnvStrings","strings","env","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","_","x","push","_proc_exit","code","convertI32PairToI53Checked","lo","hi","NaN","wasmTable","calledRun","printCharBuffers","printChar","stream","curr","wasmTableMirror","getWasmTableEntry","funcPtr","func","get","wasmImports","d","condition","line","k","init","uncaughtExceptionCount","o","u","dest","num","copyWithin","Infinity","q","requestedSize","oldSize","alignUp","multiple","cutDown","overGrownHeapSize","Math","min","newSize","max","s","__environ","environ_buf","bufSize","forEach","string","i","charCodeAt","stringToAscii","t","penviron_count","penviron_buf_size","v","implicit","r","fd","l","offset_low","offset_high","whence","newOffset","j","iov","iovcnt","pnum","len","a","index","a1","sp","_setThrew","a2","a3","g","a4","c","a5","m","dynCall_ji","w","n","dynCall_viji","h","postResult","wasmExports","callback","info","receiveInstance","instance","id","clearInterval","removeRunDependency","result","instantiateStreaming","catch","createWasm","a0","run","doRun","postRun","preRun","setTimeout","runCaller","pop","Worker","ActiveContainer","React","Component","render","children","exact","strict","activeClassName","className","activeStyle","style","isActive","getIsActive","props","child","Children","only","createElement","Route","_ref","match","cloneElement","join","trim","contextTypes","router","PropTypes","shape","history","isRequired","createHref","defaultProps","createChainedFunction","_len","arguments","funcs","Array","_key","filter","reduce","acc","_len2","args","_key2","apply","ErrorView","scrollIntoView","SearchBox","constructor","context","super","onGlobalKeyDown","which","keycode","codes","ctrlKey","show","preventDefault","f3","shiftKey","findPrev","findNext","_input","focus","select","hide","setState","results","onSearch","value","onKeyDown","esc","enter","onChange","target","state","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevState","found","count","classNames","search-hidden","ref","pos","disabled","onClick","title","Glyphicon","glyph","withAsync","requests","Loading","_WithAsync","requestNames","keys","setStateChecked","unmounted","updateRequests","request","shouldComponentUpdate","nextProps","nextState","some","every","success","failure","loaded","errors","displayName","concat","Cache","cache","counter","subs","subscribe","unsubscribe","_start","_stop","opt","curl","refresh","text","res","json","compressed","parseInt","headers","uncompressed","JSON","parse","global","scrollView","PopupWrap","setActive","OverlayNav","active","overlay","OverlayTrigger","$history","ScrollSaverComponent","onScroll","scrollTop","scrollTimeout","clearTimeout","pathname","hash","onRef","ScrollSaver","downloadBlob","blob","createObjectURL","el","setAttribute","display","body","appendChild","click","removeChild","revokeObjectURL","cryptTable","pathHashTyped","hashType","seed","seed1","seed2","pathHash","imExt","delta","u32","org","makeUid","toString","padStart","parseUid","isNaN","equalUid","wasm","images_","fileId","hasFile","_hasFile","loadBinary","buf","_loadFile","flags","loadFile","encoding","loadImage","key","_loadImage","Blob","loadJASS","options","_malloc","mem","indent","restoreInt","restoreId","insertLines","restoreStrings","renameGlobals","renameFunctions","renameLocals","inlineFunctions","getObjectName","_loadJASS","_free","lines","dec","prev","loadArchive","LoaderModule","locateFile","LoaderBinary","array","addr","set","_openArchive","parseMapPromise","worker","meta","map","progress","terminate","ArrayBuffer","isView","postMessage","MapParser","onProgress","notifyComp","pendingNotify","setNotifyComponent","comp","setNotification","notifyMessage","postProcess","values","objects","obj","repl","toLowerCase","reader","FileReader","onabort","readAsArrayBuffer","BaseData","build","core","listFile","image","jass","icon","iconByName","MapData","archive","files_","isMap","objects_","version","hasOwnProperty","tileset","backgroundImage","backgroundSize","AppCache","root","baseData_","mapNames_","mapData_","maps","dataStore","IdbKvStore","nameStore","proms","ready","all","images","names","icons_","Map","imageList","uid","forceUpdate","custom","customDesc","entries","_ref2","desc","metaRaw","meta_","isLocal","arc","hasData","col","row","backgroundPosition","loadMap","abortMap","parser","stage","onMapProgress","beginMapLoad","remove","finishMapLoad","failMapLoad","unloadMap","confirm","Context","createContext","DataContext","MapsContext","TitleContext","Title","PureComponent","updateTitle","indexOf","splice","getTitle","combiner","Provider","contextType","current","Options","localStorage","getItem","update","setItem","stringify","objects_types","unit","item","destructible","doodad","ability","buff","upgrade","ObjectMenuInner","params","NavDropdown","eventKey","objectTypes","LinkContainer","to","MenuItem","ObjectMenu","component","DataMenu2","Consumer","Fragment","NavItem","RawNames","BuildCtx","TypeCtx","IdCtx","RawNamesSwitch","ObjectIcon","object","nextComma","instr","UpgradeData","atdb","atdm","levb","levm","levc","hpxb","hpxm","mnxb","mnxm","mvxb","mvxm","mnrb","mnrm","hpob","hpom","manb","manm","movb","movm","atxb","atxm","lumb","lumm","atrb","atrm","atsb","atsm","spib","spim","hprb","hprm","sigb","sigm","atcb","atcm","adlb","adlm","minb","minm","raib","raim","entb","entm","enwb","audb","audm","asdb","asdm","asrb","asrm","roob","urob","uart","utma","ttma","TileSets","A","B","K","Y","X","J","D","C","I","F","L","W","N","O","Z","G","V","Q","*","DestructableCategory","P","DoodadCategory","S","E","TechList","HERO","TALT","TWN1","TWN2","TWN3","TWN4","TWN5","TWN6","TWN7","TWN8","TWN9","getString","cmp","cur","listObjectData","rawNames","getInt","use","levels","metaNames","field","m2","getName","sort","category","categories","localeCompare","specific","fname","ObjectFilters","base","order","race","hostilepal","campaign","special","isbldg","class","hero","isEffect","DataCompiler","outJs","outLines","onObject","curJs","onValue","translateSub","types","parseFloat","toFixed","stringExt","find","translate","split","part","iValue","flag","processObject","processSingle","output","preview","DataDownload","setOption","setType","onDownload","encoded","TextEncoder","encode","onHide","dataDownload","defaultState","Modal","Header","closeButton","Body","FormGroup","controlId","ControlLabel","FormControl","componentClass","Radio","inline","checked","Footer","Button","bsStyle","ObjectName","raw","ObjectLink","Link","selected","searched","ObjectItem","parent","height","upVisit","fn","downVisit","renderLine","ObjectGroup","filters","toggle","expanded","collapse","expand","level","_title","cat","rest","childrenByName","openHeight","top","modHeight","onResize","expandItem","sub","__proto__","onDoubleClick","firstLevelChild","left","right","mid","subIndex","lineStyle","ObjectList","search","searchResults","onSearchKeyDown","_list","forceUpdateGrid","group","re","RegExp","isMatch","propernames","matched","rowRenderer","_ref3","flNode","showDownload","onCloseDownload","_data","_type","_id","scrollToRow","Panel","placeholder","bsSize","onSwitch","AutoSizer","_ref4","width","List","rowCount","rowHeight","ColorGroup","arr","color","tagString","regex","exec","substring","TooltipContent","objectId","setObject","useState","useEffect","async","fetchObject","Popover","Content","description","alt","Tooltip","IniFile","properties","sections","load","section","save","getSection","ini","SlkFile","rows","y","token","op","valueString","comments","cols","slk","int8","int16","int32","uint8","uint16","uint32","float32","float64","uint8ToInt8","uint8ToInt16","uint8ToUint16","uint8ToUint24","uint8ToUint32","uint8ToFloat32","uint8ToFloat64","int8ToUint8","int16ToUint8","int32ToUint8","uint16ToUint8","uint32ToUint8","float32ToUint8","float64ToUint8","BinaryStream","byteOffset","TypeError","uint8array","substream","remaining","skip","bytes","seek","tell","peek","allowNulls","RangeError","read","peekUntilNull","readUntilNull","peekCharArray","readCharArray","readInt8","readInt16","readInt32","readUint8","readUint16","readUint32","readFloat32","readFloat64","readInt8Array","view","readInt16Array","offset","readInt32Array","readUint8Array","readUint16Array","readUint32Array","readFloat32Array","readFloat64Array","readTypedArray","write","writeInt8","writeInt16","writeInt32","writeUint8","writeUint16","writeUint32","writeFloat32","writeFloat64","writeInt8Array","writeInt16Array","writeInt32Array","writeUint8Array","writeUint16Array","writeUint32Array","writeFloat32Array","writeFloat64Array","writeTypedArray","RandomItem","chance","RandomItemSet","items","getByteLength","Doodad","variation","angle","scale","life","itemTable","itemSets","editorId","itemSet","TerrainDoodad","War3MapDoo","doodads","terrainDoodads","terrainDoodad","Import","isCustom","War3MapImp","entry","has","delete","rename","newName","Modification","variableType","levelOrVariation","dataPointer","useOptionalInts","ModifiedObject","oldId","newId","modifications","modification","ModificationTable","War3MapW3d","originalTable","customTable","Corner","groundHeight","waterHeight","mapEdge","ramp","blight","water","boundary","groundTexture","cliffVariation","groundVariation","cliffTexture","layerHeight","waterAndEdge","textureAndFlags","cliffTextureAndLayer","War3MapW3e","haveCustomTileset","groundTilesets","cliffTilesets","mapSize","centerOffset","corners","columns","column","corner","groundTileset","cliffTileset","Player","isFixedStartPosition","startLocation","allyLowPriorities","allyHighPriorities","Force","playerMasks","UpgradeAvailabilityChange","playerFlags","levelAffected","availability","TechAvailabilityChange","RandomUnit","ids","positions","RandomUnitTable","columnTypes","units","RandomItemTable","sets","War3MapW3i","saves","editorVersion","author","recommendedPlayers","cameraBounds","cameraBoundsComplements","playableSize","campaignBackground","loadingScreenModel","loadingScreenText","loadingScreenTitle","loadingScreenSubtitle","loadingScreen","prologueScreenModel","prologueScreenText","prologueScreenTitle","prologueScreenSubtitle","useTerrainFog","fogHeight","fogDensity","fogColor","globalWeather","soundEnvironment","lightEnvironmentTileset","waterVertexColor","players","forces","upgradeAvailabilityChanges","techAvailabilityChanges","randomUnitTables","randomItemTables","gameVersionMajor","gameVersionMinor","gameVersionPatch","gameVersionBuild","lua","player","force","upgradeAvailabilityChange","techAvailabilityChange","randomUnitTable","randomItemTable","change","table","War3MapW3u","CustomTextTrigger","textLength","War3MapWct","comment","trigger","triggers","TriggerCategory","isComment","Variable","isArray","arraySize","isInitialized","initialValue","SubParameters","beginParameters","parameters","triggerData","getFunction","parameter","Parameter","subParameters","arrayIndex","ECA","isEnabled","ecas","isChildECA","eca","Trigger","isInitiallyOff","runOnInitialization","isCustomText","War3MapWtg","variables","variable","TokenStream","ident","fractionDigits","decoder","DataView","accessPosition","getUint8","readUntil","fromIndex","cc","inComment","inString","readInt","readFloat","readKeyframe","readIntArray","readFloatArray","readColor","readVectorArray","writeColor","writeLine","writeFlag","writeAttrib","writeFloatAttrib","formatFloat","writeStringAttrib","writeArrayAttrib","writeFloatArrayAttrib","formatFloatArray","writeTypedArrayAttrib","writeKeyframe","start","writeArray","writeFloatArray","writeVectorArray","startBlock","endBlock","repeat","startObjectBlock","header","endBlockComma","unindent","War3MapWts","stringMap","content","DroppedItem","DroppedItemSet","InventoryItem","slot","ModifiedAbility","activeForAutocast","heroLevel","Unit","unknown","hitpoints","mana","droppedItemTable","droppedItemSets","goldAmount","targetAcquisition","heroStrength","heroAgility","heroIntelligence","itemsInInventory","modifiedAbilities","randomFlag","itemClass","unitGroup","positionInGroup","customTeamColor","waygate","creationNumber","modifiedAbility","randomUnit","droppedItemSet","itemInInventory","War3MapUnitsDoo","Set","it","add","War3Map","readonly","maxPlayers","getFileNames","setImportsFile","archiveBuffer","typedArray","writer","getImportNames","import","getScript","readHelper","Constructor","readImports","readMapInformation","readEnvironment","readDoodads","readUnits","readTriggers","readCustomTextTriggers","readStringTable","readModifications","fileNames","MinimapIcon","Camera","targetLocation","rotation","angleOfAttack","distance","roll","fieldOfView","farClippingPlane","nearClippingPlane","cinematicName","Region","bottom","weatherEffectId","ambientSound","Sound","eaxEffect","fadeInRate","fadeOutRate","volume","pitch","channel","minDistance","maxDistance","distanceCutoff","u3","u4","u5","u6","u7","u8","MapTitle","visible","chapterTitle","mapTitle","MapOrder","w3x","doo","File","imp","mmp","icons","shd","shadows","w3c","cameras","camera","w3d","w3e","w3i","w3o","destructables","abilities","buffs","upgrades","w3r","regions","region","calcSize","w3s","sounds","sound","w3u","wct","wpm","pathing","wtg","TriggerData","functions","presets","externalTypes","externalFunctions","externalPresets","addTriggerData","isExternal","addTriggerTypes","addTriggerDataFunctions","addTriggerDataPresets","tokens","skipped","scriptName","argument","getBaseType","isBaseFunction","getPreset","preset","isCustomPreset","wts","unitsdoo","w3f","campaignVersion","difficulty","mode","backgroundScreen","backgroundScreenPath","minimapImagePath","ambientSoundPath","terrainFog","fogStartZ","fogEndZ","userInterface","mapTitles","mapOrders","mapOrder","Extent","boundsRadius","readMdx","writeMdx","writeMdl","Sequence","interval","moveSpeed","rarity","syncPoint","extent","readMdl","readBlock","templatedTrack","DataType","frame","inTan","outTan","interpolationType","valueSize","UintTrack","FloatTrack","Vector3Track","Vector4Track","templatedAnimation","TrackType","globalSequenceId","tracks","tracksCount","track","numberOfTracks","UintAnimation","FloatAnimation","Vector3Animation","Vector4Animation","animationmap","KMTF","KMTA","KTAT","KTAR","KTAS","KGAO","KGAC","KLAS","KLAE","KLAC","KLAI","KLBI","KLBC","KLAV","KATV","KPEE","KPEG","KPLN","KPLT","KPEL","KPES","KPEV","KP2S","KP2R","KP2L","KP2G","KP2E","KP2N","KP2W","KP2V","KRHA","KRHB","KRAL","KRCO","KRTX","KRVS","KCTR","KTTR","KCRL","KGTR","KGRT","KGSC","AnimatedObject","animations","readAnimations","animation","animationMap","writeAnimations","readAnimation","writeAnimation","filterModeToMdx","None","Transparent","Blend","Additive","AddAlpha","Modulate","Modulate2x","filterModeToMdl","0","1","2","3","4","5","6","Layer","filterMode","textureId","textureAnimationId","coordId","alpha","readAnimatedBlock","Material","priorityPlane","layers","layer","Texture","replaceableId","TextureAnimation","Geoset","vertices","normals","faceTypeGroups","faceGroups","faces","vertexGroups","matrixGroups","matrixIndices","materialId","selectionGroup","selectionFlags","sequenceExtents","uvSets","sequenceExtent","uvSet","vertexGroup","indices","groups","matrix","groupSize","GeosetAnimation","geosetId","GenericObject","parentId","getGenericByteLength","eachAnimation","writeNonGenericAnimationChunks","writeGenericHeader","writeGenericAnimations","wantGeneric","isGeneric","Bone","geosetAnimationId","Light","attenuation","intensity","ambientColor","ambientIntensity","Helper","Attachment","attachmentId","ParticleEmitter","emissionRate","gravity","longitude","latitude","lifeSpan","speed","ParticleEmitter2","headOrTail","tailLength","timeMiddle","segmentColors","segmentAlphas","segmentScaling","headIntervals","tailIntervals","squirt","RibbonEmitter","heightAbove","heightBelow","textureSlot","position","targetPosition","EventObject","CollisionShape","UnknownChunk","tag","chunk","Model","animationFile","blendTime","sequences","globalSequences","materials","textures","textureAnimations","geosets","geosetAnimations","bones","lights","helpers","attachments","pivotPoints","particleEmitters","particleEmitters2","ribbonEmitters","eventObjects","collisionShapes","unknownChunks","loadMdx","loadMdl","loadVersionChunk","loadModelChunk","loadStaticObjects","loadGlobalSequenceChunk","loadDynamicObjects","loadPivotPointChunk","totalSize","saveMdx","saveVersionChunk","saveModelChunk","saveStaticObjectChunk","saveGlobalSequenceChunk","saveDynamicObjectChunk","savePivotPointChunk","globalSequence","getObjectsByteLength","pivotPoint","loadVersionBlock","loadModelBlock","loadNumberedObjectBlock","loadGlobalSequenceBlock","loadObject","loadPivotPointBlock","saveMdl","saveVersionBlock","saveModelBlock","saveStaticObjectsBlock","saveGlobalSequenceBlock","saveObjects","savePivotPointBlock","getStaticObjectsChunkByteLength","getDynamicObjectsChunkByteLength","parsers","mdlx","randomInRange","random","lerp","powerOfTwo","canvas","ctx","getContext","canvas2","ctx2","scaleNPOT","imageData","potWidth","potHeight","srcWidth","srcHeight","ImageData","putImageData","drawImage","getImageData","resizeImageData","fetchDataType","dataType","Image","stringHash","lineNumberReg","ShaderUnit","gl","createShader","webglResource","shaderType","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","lineNumber","integer","ShaderProgram","vertexShader","fragmentShader","createProgram","uniforms","attribs","shaders","attribsCount","attachShader","linkProgram","getProgramParameter","LINK_STATUS","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","getProgramInfoLog","extensionToCamelCase","ext","toUpperCase","WebGL","antialias","webgl2","extensions","extension","getSupportedExtensions","getExtension","getParameter","MAX_VERTEX_TEXTURE_IMAGE_UNITS","textureFloat","instancedArrays","VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE","VERTEX_ATTRIB_ARRAY_DIVISOR","drawArraysInstancedANGLE","drawArraysInstanced","drawElementsInstancedANGLE","drawElementsInstanced","vertexAttribDivisorANGLE","vertexAttribDivisor","texImage2D","RED","ALPHA","RG","LUMINANCE_ALPHA","internalformat","call","depthFunc","LEQUAL","enable","DEPTH_TEST","shaderUnits","shaderPrograms","currentShaderProgram","floatPrecision","shaderDefines","emptyTexture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","RGBA","UNSIGNED_BYTE","createShaderUnit","createShaderProgram","vertexSrc","fragmentSrc","VERTEX_SHADER","FRAGMENT_SHADER","shaderProgram","enableVertexAttribs","end","enableVertexAttribArray","disableVertexAttribs","disableVertexAttribArray","useShaderProgram","oldAttribs","newAttribs","useProgram","texture","activeTexture","TEXTURE0","PromiseResource","EventEmitter","promise","emit","VEC3_UNIT_X","vec3","fromValues","VEC3_UNIT_Y","VEC3_UNIT_Z","VEC3_ZERO","create","VEC3_ONE","QUAT_DEFAULT","quat","heap","vec4","unproject","inverseMatrix","viewport","z","transformMat4","distanceToPlane","plane","point","normalizePlane","vectorHeap","vectorHeap2","vectorHeap3","quatHeap","matHeap","mat4","rect","isPerspective","fov","aspect","isOrtho","leftClipPlane","rightClipPlane","bottomClipPlane","topClipPlane","nearClipPlane","farClipPlane","inverseRotation","worldMatrix","projectionMatrix","worldProjectionMatrix","inverseWorldMatrix","inverseRotationMatrix","inverseWorldProjectionMatrix","directionX","directionY","directionZ","vectors","billboardedVectors","planes","dirty","perspective","near","far","ortho","copy","setLocation","move","setRotation","rotate","mul","setRotationAngles","horizontalAngle","verticalAngle","identity","rotateAngles","rotateAround","conjugate","transformQuat","setRotationAround","setRotationAroundAngles","rotateX","rotateZ","face","worldUp","lookAt","getRotation","moveToAndFace","reset","fromQuat","negate","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","unpackPlanes","invert","testSphere","center","radius","cameraToWorld","worldToCamera","worldToScreen","round","screenToWorldRay","locationHeap","rotationHeap","scalingHeap","nodeMixin","superclass","pivot","localLocation","localRotation","localScale","worldLocation","worldRotation","worldScale","inverseWorldLocation","inverseWorldRotation","inverseWorldScale","localMatrix","dontInheritTranslation","dontInheritRotation","dontInheritScaling","wasDirty","setPivot","setScale","varying","setUniformScale","uniform","setTransformation","resetTransformation","movePivot","rotateLocal","uniformScale","setParent","recalculateTransformation","computedLocation","computedScaling","parentPivot","parentInverseScale","parentScale","fromRotationTranslationScale","scene","updateObject","updateChildren","SceneNode","EventNode","SkeletalNode","shared","fill","billboarded","billboardedX","billboardedY","billboardedZ","computedRotation","convertBasis","fromRotationTranslationScaleOrigin","NODE_SHARED_SIZE","ndcHeap","Scene","viewer","instances","instanceSet","modelViews","modelViewSet","rendered","renderedInstances","renderedParticles","renderedBuckets","renderCalls","audioEnabled","audioContext","PI","AudioContext","resume","disableAudio","suspend","addInstance","removeInstance","modelView","sceneChanged","addView","removeView","clear","detach","removeScene","listener","setPosition","isVisible","bounds","model","renderOpaque","renderTranslucent","clearEmittedObjects","Resource","handler","pathSolver","fetchUrl","setMaxListeners","loadData","lateLoad","unload","whenLoaded","once","resourceData","wrapS","wrapT","setParameters","magFilter","minFilter","webgl","CLAMP_TO_EDGE","ImageTexture","HTMLImageElement","HTMLVideoElement","HTMLCanvasElement","imageToImageData","originalData","LINEAR_MIPMAP_LINEAR","generateMipmap","WebGLTexture","imagetexture_handler","GenericResource","ModelViewer","appendParam","resourcesMap","resources","frameTime","shaderMap","handlers","scenes","resourcesLoading","on","noCulling","noUpdating","textureAtlases","batchSize","renderedScenes","enableAudio","addHandler","imageTextureHandler","addScene","findHandler","extention","serverFetch","originalSrc","handlerAndDataType","resource","registerEvents","exists","loadGeneric","originalPath","appyCallback","loadShader","vertex","fragment","loadTextureAtlas","textureAtlas","atlasData","texturesPerRow","ceil","sqrt","floor","createTextureAtlas","getTextureAtlas","atlas","promises","whenAllLoaded","toBlob","updateAndRender","startFrame","depthMask","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","_this","ModelView","sceneData","getShallowCopy","applyShallowCopy","equals","addSceneData","createSceneData","baseIndex","buckets","usedBuckets","neededBuckets","oldScene","instancesCount","Bucket","TexturedModelView","dst","dstTextures","views","Instance","View","viewChanged","shallowView","TexturedModel","GeometryModel","geometry","material","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","uvBuffer","uvs","faceBuffer","ELEMENT_ARRAY_BUFFER","edgeBuffer","edges","boundingRadius","vertexArray","uvArray","faceArray","edgeArray","bytesPerElement","BYTES_PER_ELEMENT","faceIndexType","UNSIGNED_SHORT","UNSIGNED_INT","edgeIndexType","twoSided","noDepthTest","noDepthSet","uvScale","uvOffset","vertexColor","edgeColor","renderMode","isBGR","isBlended","translucent","opaque","bucket","shader","uniformMatrix4fv","u_mvp","TEXTURE15","boneTexture","uniform1i","u_boneMap","uniform1f","u_vectorSize","vectorSize","u_rowSize","rowSize","instanceIdAttrib","a_InstanceID","instanceIdBuffer","vertexAttribPointer","a_position","FLOAT","a_uv","disable","CULL_FACE","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","u_texture","colorAttrib","a_color","hasTexture","u_hasTexture","u_isEdge","uniform2fv","u_uvScale","u_uvOffset","u_isBGR","u_alphaMod","vertexColorBuffer","TRIANGLES","edgeColorBuffer","LINES","renderBuckets","currentValue","baseInstance","GeometryBucket","boneArrayInstanceSize","numberOfBones","boneArray","boneTextureWidth","boneTextureHeight","NEAREST","RGBA32F","vertexColorArray","DYNAMIC_DRAW","edgeColorArray","instanceOffset","culled","texSubImage2D","bufferSubData","ModelInstance","paused","shown","hidden","updateTimers","updateAnimations","setScene","TexturedModelInstance","setTexture","GeometryModelInstance","setVertexColor","setEdgeColor","geo_shaders","vs","ps","geo_handler","batchCount","geo","templatedSdSequence","interpolator","sd","keyframes","isGlobalSequence","defval","keyframe","keyframeCount","constant","firstValue","getValue","getKeyframe","minVal","maxVal","forcedInterpMap","defVals","templatedSd","SequenceType","forcedInterp","sequence","isVariant","getValues","ScalarSd","factorTimes2","hermite","invt","inverseFactorTimesTwo","bezier","Vector3Sd","Vector4Sd","slerp","sqlerp","createTypedSd","ClassObject","getUintValue","defaultValue","getFloatValue","getVector3Value","getVector4Value","getTranslation","getScale","isTranslationVariant","isRotationVariant","isScaleVariant","unique","reverse","emitterFilterMode","ONE","ZERO","SRC_COLOR","DEST_COLOR","layerId","unshaded","sphereEnvironmentMap","unfogged","depthMaskValue","alphaTestValue","blendSrc","blendDst","blended","DST_COLOR","layerFilterMode","uvDivisor","textureAnimation","variants","translation","hasSlotAnim","hasTranslationAnim","hasRotationAnim","hasScaleAnim","isAlphaVariant","isTextureIdVariant","textureIds","u_alphaTest","getAlpha","getTextureId","geosetAnimation","getColor","isColorVariant","ShallowGeoset","offsets","uvSetSize","elements","a_normal","a_bones","a_boneNumber","geoset","textureCoordinateSets","uvsetSize","boneIndices","boneNumbers","slices","boneCount","locationArray","normalArray","uvsArray","boneIndexArray","boneNumberArray","hasAnim","Batch","replaceableids","11","21","31","32","33","34","35","36","37","cameraAnchored","bone","light","eventObject","attachment","particleEmitter","collisionShape","ribbonEmitter","emitterUsesMdlOrUnshaded","emitterUsesTgaOrSortPrimitivesFarZ","lineEmitter","modelSpace","xYQuad","anyBillboarding","generic","getVisibility","getAttenuationStart","getAttenuationEnd","getIntensity","getAmbientIntensity","getAmbientColor","internalModel","emitter","internalResource","getSpeed","getLatitude","getLongitude","getLifeSpan","getGravity","getEmissionRate","dimensions","teamColored","replaceableIds","head","tail","cellWidth","cellHeight","colors","scaling","intervals","getWidth","getLength","getVariation","getHeightBelow","getHeightAbove","getTextureSlot","zero","getPositionTranslation","getTargetTranslation","MappedData","uint8Array","loadText","mapped","property","getRow","getProperty","setRow","OfflineAudioContext","mappedDataCallback","decodedDataCallback","decodeAudioData","decodedBuffers","vec2","tables","StartR","StartG","StartB","StartA","MiddleR","MiddleG","MiddleB","MiddleA","EndR","EndG","EndB","EndA","Scale","Columns","Rows","UVLifespanStart","UVLifespanEnd","LifespanRepeat","UVDecayStart","UVDecayEnd","DecayRepeat","intervalTimes","Lifespan","Decay","lifespan","BirthTime","PauseTime","BlendMode","SoundLabel","DistanceCutoff","MaxDistance","MinDistance","Pitch","pitchVariance","PitchVariance","Volume","FileNames","fileName","DirectoryBase","warn","getValueAtTime","hasLayerAnims","hasGeosetAnims","batches","opaqueBatches","translucentBatches","genericObjects","sortedGenericObjects","hierarchy","replaceables","Parser","minx","miny","minz","maxx","maxy","maxz","dx","dy","dz","extentToSphere","usingTeamTextures","endsWith","textureRes","loadTeamTextures","vMaterial","vLayer","batchId","vGeoset","batch","setupGeosets","helper","particleEmitter2","setupHierarchy","setupVariants","teamColors","teamGlows","shallowGeosets","typedArrays","totalArrayOffset","elementTypedArrays","totalElementOffset","verticesOffset","normalsOffset","uvSetsOffset","boneIndicesOffset","boneNumbersOffset","__webglArrayBuffer","__webglElementBuffer","teamColor","a_teamColor","a_vertexColor","colorBuffer","instanceId","unbind","a_geosetColor","a_layerAlpha","uvTransRot","uvScaleSprite","renderBatch","shallowGeoset","replaceable","isTeamColor","u_isTeamColor","u_hasSlotAnim","u_hasTranslationAnim","u_hasRotationAnim","u_hasScaleAnim","uniform2f","geosetColor","a_uvTransRot","a_uvScaleSprite","layerAlpha","geosetColorsBuffer","layersBuffer","layerAlphasData","renderBatches","eventObjectEmitters","u_isRibbonEmitter","SharedEmitter","modelObject","alive","emitObject","emitterView","createObject","health","updateData","emission","currentEmission","owner","velocityHeap","latitudeHeap","lifeSpanHeap","gravityHeap","speedHeap","Particle","internalInstance","velocity","nodes","rotateY","setAxisAngle","setSequence","frameTimeS","SharedGeometryEmitter","bufferSize","sizeNeeded","elementsPerEmit","lta","lba","rta","rba","rgb","u_dimensions","a_uva_rgb","drawArrays","colorHeap","widthHeap","lengthHeap","variationHeap","vec3Heap","Particle2","nodeScale","isHead","dt","scaleAndAdd","factor","firstColor","lifeFactor","spriteCount","scalex","scaley","scalez","px","py","pz","vx","vy","pv1","pv2","pv3","pv4","offsetx","offsety","offsetz","startx","starty","startz","endx","endy","endz","normal","cross","normalX","normalY","normalZ","belowHeap","aboveHeap","alphaHeap","slotHeap","Ribbon","currentRibbon","ribbonCount","lastEmit","lastVertices","animatedAlpha","animatedSlot","chainLengthFactor","locationInChain","EventObjectSpn","EventObjectSpnEmitter","EventObjectSpl","emitterScale","first","second","time","EventObjectSplEmitter","EventObjectUbr","third","EventObjectUbrEmitter","EventObjectSndEmitter","panner","createPanner","source","createBufferSource","refDistance","connect","destination","colorData","geosetColorsData","layersData","uvTransformsData","geosetCount","layerCount","worldMatrices","geosetColors","layerAlphas","uvOffsets","uvScales","uvRots","particleEmitterViews","particleEmitter2Views","ribbonEmitterViews","eventObjectEmitterViews","instanceOffset4","instanceOffset5","instanceOffset7","geosetIndex","geosetIndex4","layerIndex","layerIndex4","uvBase","MdxNode","visibilityHeap","AttachmentInstance","setSequenceLoopMode","dontInheritScale","emissionRateHeap","ParticleEmitterView","allowParticleSpawn","ParticleEmitter2View","lastEmissionKey","RibbonEmitterView","EventObjectEmitterView","lastTrack","translationHeap","scaleHeap","textureIdHeap","sortedNodes","sequenceLoopMode","forced","sharedNodeData","Node","count3","count4","count16","pivots","localLocations","localRotations","localScales","worldLocations","worldRotations","worldScales","inverseWorldLocations","invereseWorldRotations","inverseWorldScales","localMatrices","i3","i33","i4","i44","i16","i1616","createSkeletalNodes","nodeIndex","initNode","attachmentInstance","genericObject","gen","resetEventEmitters","updateNodes","objectVisible","nodeVisible","wasReallyDirty","updateBatches","i2","setTeamColor","getAttachment","eventEmitterView","mdx_shaders","vsParticles","fsParticles","mdx_handler","imagetexture","standardShader","particleShader","particles","mdx","w3x_shaders","vsGround","fsGround","vsWater","fsWater","vsCliffs","fsCliffs","vsUberSplat","fsUberSplat","vsSimpleModel","fsSimpleModel","cliffVariations","AAAB","AAAC","AABA","AABB","AABC","AACA","AACB","AACC","ABAA","ABAB","ABAC","ABBA","ABBB","ABBC","ABCA","ABCB","ABCC","ACAA","ACAB","ACAC","ACBA","ACBB","ACBC","ACCA","ACCB","ACCC","BAAA","BAAB","BAAC","BABA","BABB","BABC","BACA","BACB","BACC","BBAA","BBAB","BBAC","BBBA","BBCA","BCAA","BCAB","BCAC","BCBA","BCCA","CAAA","CAAB","CAAC","CABA","CABB","CABC","CACA","CACB","CACC","CBAA","CBAB","CBAC","CBBA","CBCA","CCAA","CCAB","CCAC","CCBA","CCCA","cityCliffVariations","getCliffVariation","dir","TerrainModel","locations","loader","MdxParser","uvs2","uvsOffset","uvs2Offset","totalLength","tex","texturesOffset","locationAndTextureBuffer","TEXTURE1","disabledMips","a_instancePosition","a_instanceTexture","a_uv1","a_uv2","SplatModel","x0","y0","x1","y1","zoffs","ix0","ix1","iy0","iy1","newVerts","step","addBatch","iy","ix","i0","uniform4fv","u_color","drawElements","sequenceSorter","sequenceMatch","includes","selectSequence","original","animProps","filtered","filterSequences","findIndex","sequencesLeft","standSequence","standOnRepeat","normalHeap1","normalHeap2","handlers_w3x","MapViewer","wc3PathSolver","mapData","geoHandler","mdxHandler","groundShader","waterShader","cliffShader","simpleModelShader","uberSplatShader","waterIndex","waterIncreasePerFrame","anyReady","terrainCliffsAndWaterLoaded","terrainData","cliffTypesData","waterData","terrainReady","cliffsReady","shadowsReady","terrain","cliffTypes","terrainObjects","doodadsAndDestructiblesLoaded","doodadsData","doodadMetaData","destructableMetaData","doodadsReady","uberSplats","uberSplatsReady","unitsAndItemsLoaded","unitsData","unitMetaData","uberSplatData","unitsReady","shadowMap","R8","renderGround","heightMap","cliffHeightMap","instanceBuffer","instanceCount","textureBuffer","variationBuffer","heightMapSize","terrainRenderData","tilesetTextures","instanceAttrib","positionAttrib","texturesAttrib","a_textures","variationsAttrib","a_variations","u_offset","u_size","u_pixel","u_heightMap","u_tilesets","u_shadowMap","u_heightMap0","u_tilesetHeight","u_tilesetCount","tilesetsTexture","TEXTURE2","TEXTURE3","renderWater","mapBounds","waterHeightMap","waterBuffer","isWaterAttrib","a_isWater","u_waterHeightMap","u_waterMap","u_offsetHeight","waterHeightOffset","u_tileIndex","u_maxDeepColor","maxDeepColor","u_minDeepColor","minDeepColor","u_maxShallowColor","maxShallowColor","uniform4f","u_mapBounds","waterTexture","renderCliffs","u_centerOffset","u_texture1","u_texture2","cliffTextures","cliff","cliffModels","renderUberSplats","blendEquation","FUNC_ADD","splat","uberSplatModels","waterTextures","mapMpq","mapFlags","mapPathSolver","calculateRamps","doodadsLoaded","unitsLoaded","loadTerrainCliffsAndWater","shadowTextures","loadDoodadsAndDestructibles","loadUnitsAndItems","initShadows","numVar","numvar","fileVar","colorr","colorg","colorb","shadow","addShadow","mpqFile","texfile","texid","inPlayableArea","unitsDoo","splats","clone","modelscale","rowTeamColor","teamcolor","red","green","blue","rowMoveHeight","moveheight","ubersplat","Dir","opacity","unitshadow","shadowX","shadowx","shadowY","shadowy","shadowW","shadoww","shadowH","shadowh","buildingshadow","animprops","splatPromises","models","tilesets","blightTextureIndex","texDir","texFile","waterRow","texRate","Dmax_R","Dmax_G","Dmax_B","Dmax_A","Dmin_R","Dmin_G","Dmin_B","Dmin_A","Smax_R","Smax_G","Smax_B","Smax_A","minShallowColor","Smin_R","Smin_G","Smin_B","Smin_A","numTex","createTilesetsAndWaterTextures","cliffHeights","cornerHeights","waterHeights","cornerTextures","cornerVariations","waterFlags","cliffs","cliffPathTex","pathtex","pathTex","rampType","bottomLeft","rampAdjust","depth","isWater","rampModelDir","rampName","cliffType","isCliff","bottomLeftLayer","bottomRightLayer","topLeftLayer","topRightLayer","cliffFileName","cliffModelDir","bottomLeftTexture","cornerTexture","bottomRightTexture","topLeftTexture","topRightTexture","bitset","R32F","createWaves","cliffPromises","ramps","adjust","ae","cf","rampFileName","bf","ty","tx","tile","ah","bh","dh","tilesetsCount","cliffGroundIndex","whichCliff","whichTileset","groundTile","tileID","applyModificationFile","dataMap","metadataMap","modificationFile","applyModificationTable","modificationTable","modificationObject","metadata","groundNormal","cellX","cellY","bottomRight","topLeft","topRight","heightAt","ht","sqX","sqY","shadowSize","shadowData","ox","oy","wavesCliff","wavesRolling","shoreline","shoreDir","shoreSFile","outsideCorner","shoreOCFile","insideCorner","shoreICFile","rotation2","ad","bd","cd","dd","rot","deselect","selModels","doSelectUnits","selScale","selZ","selectUnit","ray","eMid","eSize","rDir","entity","entDist","ent","div","dlen","sqrLen","dp","dot","sqrDist","sel","selectUnits","src_mdx","glMatrix","v3pos","v3dir","v3up","v3sub","m4rot","f32rot","TeamColors","FileModelView","yaw","onMouseDown","onMouseMove","onMouseUp","dragPos","clientX","clientY","dim","setCamera","removeEvents","onMouseWheel","deltaY","seq","cam","animate","ts","requestAnimationFrame","fromRotation","vFov","atan","tan","freeCamera","cancelAnimationFrame","modelLoaded","clearColor","isPortrait","resolvePath","bin","portrait","onWheel","ObjectModel","setPopup","popup","ReactDOM","createPortal","ObjectTooltip","ObjectLinkRaw","StringPopupCell","onMouseOver","getBoundingClientRect","documentElement","clientHeight","innerHeight","onMouseOut","tooltip","onMouseEnter","onMouseLeave","PopupCell","scrollWidth","offsetWidth","closest","StringPopup","StringIconPopup","onLoad","loading","StringIcon","placement","ObjectSubValue","_ref5","ObjectSubValueRaw","_ref6","ObjectValue","_ref7","SubValue","list","formatString","ObjectDataBodyEx","ObjectDataBody","DragHandle","stopPropagation","buttons","removeListeners","ObjectData","sliderPos","setSliderPos","table_","setRef","ObjectViewComponent","setRawNames","minSize","resizable","ObjectViewInner","ObjectView","processFiles","listfile","dirs","files","pl","unk","nameCompare","FileLink","FileItem","upSearchVisit","downSearchVisit","FileDirectory","subDir","subFile","expandFile","parts","preSelect","firstLevelNode","FileListInner","stateChanged","hasSearchResult","rowRendererSearch","_panel","EmptyPanel","FileList","Cell","FileSlkView","rowGetter","getColumnWidth","renderColumns","from","Column","dataKey","cellRenderer","cellData","rowIndex","Number","isInteger","tableWidth","Table","overscanRowCount","FileHexView","foo","bar","digits","byte","nil","numDigits","getChildIndex","childNodes","getChildrenLength","textContent","getNodeOffset","anchor","anchorOffset","parentElement","parentNode","highlightMatches","matches","TextView","searchText","searchMatches","selection","onCopy","_node","getSelection","tempNodes","anchorPos","nodeToPos2","anchorNode","focusPos","focusNode","focusOffset","tsBegin","tsEnd","csBeginNode","csBegin","csEndNode","csEnd","nodeType","prepend","tempNode","fontSize","whiteSpace","innerText","append","insertBefore","onSelect","suppressSelect","badNode","_firstLine","_lastLine","classList","contains","p2n","posToNode","tsPos","nodeToPos","csPos","setBaseAndExtent","searchPos","selectRange","unsuppress","cellRangeRenderer","defaultCellRangeRenderer","highlightExpr","highlightFunc","padding","searchRegex","lineIndex","findMatches","searchMatch","plain","element","isValidElement","replaceReact","data-line-number","rowMeasure","heights","setScroll","scrollToPosition","_scrollTop","setList","findDOMNode","direction","allMatches","nextPos","textLower","next","lineLower","curMatch","origin","querySelectorAll","getAttribute","lineNode","querySelector","posToNode2","findNodeOffset","fromPos","toPos","_lines","recomputeRowHeights","_heights","_avgHeight","sum","estimatedRowSize","FileTextView","imageInfo","getUint32","format","getInt16","hdrPos","FileImageView","FileAudioView","audio","controls","controlsList","parseKeywords","common","commonRe","blizzard","inFunc","inGlob","tokenRe","RowHeight","FileJassView","tokenFunc","chr","com","kw","keywords","gameFileTypes","war3map.doo","Formats","war3map.imp","war3map.mmp","war3map.shd","war3mapUnits.doo","war3map.w3c","war3map.w3d","war3map.w3e","war3map.w3f","war3map.w3i","war3map.w3o","war3map.w3r","war3map.w3s","war3map.w3u","war3map.wct","war3map.wpm","war3map.wtg","war3map.wts","FileData","panel","isJass","maxLength","textHeights","makePanel","renderPane","ObjectInspector","expandLevel","Type","iotaX","iotaY","GameFileImage","GameFileLoader","GameFileData","ab","FileViewComponent","FileView","MapHome","JassOptions","number","numOption","setter","indentFlag","renameFunctionsFlag","renameGlobalsFlag","renameLocalsFlag","JassViewerWithData","onSearchChange","_search","elt","Navbar","fluid","Nav","rootClose","Form","pullLeft","_saver","JassViewParser","realOptions","JassViewInner","jassFormatting","JassView","itemGroupTypes","computeDrops","drops","addTable","addItem","tableId","columnId","tbl","chance2","DropInfo","setExpanded","useContext","SelectionWindow","coords","pressed","unregisterEvents","gameData","misc","xpFunction","xpTable","xpA","xpB","xpC","makeXpFunction","totalXp","dropDiv","makeDrop","levelDiv","xp","AsyncSelectionWindow","notifications","onContextMenu","dragStart","dragButton","rc","dragSelection","selrect","cos","sin","vel","abs","prevTs","rOffsets","ang","dist","_ref8","dataPath","addNotification","expires","_ref9","_ref10","expiring","_ref11","_ref12","_ref13","Switch","MapView","MapLink","MapList","collapsed","paths","descs","Comp","subLists","freeItems","HomePage","messageType","parseFile","Heading","accept","HelpBlock","Spinner","WithData","Redirect","App","dropping","onLoading","onDrop","dataTransfer","kind","getAsFile","getDropFile","onDragEnter","setDropping","onDragOver","isDropFile","onDragLeave","inc","Brand","DataMenu","AppLoader","MapDialog","renderStep","dialogClassName","Root","mapLoadName","mapLoadProgress","mapLoadStatus","mapLoadError","onCloseMapDialog","navigateTo","Router","basename","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,iECAxC,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,MACA,IAAAC,EAAA,oBAAAC,kBAAAC,eAAAD,SAAAC,cAAAC,SAAAC,EAEA,OADsCJ,MAAAJ,GACtC,SACAS,EAAA,IACA,IAEqBC,EAAAC,EAAsrBC,EAAAC,EAAAC,EAA3sBC,EAAAN,EAAgEO,EAAA,IAAAC,QAAA,CAAAC,EAAAC,KAAgDT,EAAAQ,EAA4BP,EAAAQ,IAA4BC,EAAA,iBAAAC,OAA+CC,EAAA,mBAAAC,cAA2DC,EAAA,iBAAAvB,GAAA,iBAAAA,EAAAwB,UAAA,iBAAAxB,EAAAwB,SAAAC,KAAqJC,EAAAC,OAAAC,OAAA,GAAoCd,GAA2Be,EAAA,iBAAiCC,EAAA,CAAAC,EAAAC,KAA6B,MAAAA,GAAeC,EAAA,GAAuL,GAAAV,EAAA,CAAwB,IAAAW,EAAOrC,EAAQ,KAAMsC,EAAatC,EAAQ,KAAQoC,EAAAhC,EAAA,IAA8BU,EAAA,EAAAyB,EAAAC,KAA0BD,EAAAE,EAAAF,GAAA,IAAAG,IAAAH,GAAAD,EAAAK,UAAAJ,GAA4EF,EAAAO,aAAAL,EAAAC,OAAA9B,EAAA,UAA0DM,EAAAuB,KAAsB,IAAAM,EAAA/B,EAAAyB,GAAA,GAAqE,OAAxCM,EAAAC,SAAgBD,EAAA,IAAAE,WAAAF,IAAwBA,IAAY9B,EAAA,EAAAwB,EAAAS,EAAAC,EAAAT,GAAA,KAAkDD,EAAAE,EAAAF,GAAA,IAAAG,IAAAH,GAAAD,EAAAK,UAAAJ,GAA4EF,EAAAa,SAAAX,EAAAC,OAAA9B,EAAA,QAAAyC,EAAAC,KAA0DD,EAAAF,EAAAE,GAAoBH,EAAAR,EAAAY,EAAAN,OAAAM,QAAwCnC,EAAA,aAAAd,EAAAkD,KAAAC,OAAA,IAAkDtB,EAAA7B,EAAAkD,KAAA,GAAAE,QAAA,YAA+CpD,EAAAkD,KAAAG,MAAA,GAAiCvB,EAAA,EAAAC,EAAAC,KAAiD,MAAxBhC,EAAAsD,SAAAvB,EAAwBC,SAAeb,GAAAE,KAAmDA,EAA0BY,EAAAsB,KAAAC,SAAAC,KAAmC,oBAAArD,mBAAAC,gBAA8D4B,EAAA7B,SAAAC,cAAAC,KAA2CH,IAAgB8B,EAAA9B,GAAoE8B,EAAxCA,EAAAyB,WAAA,SAAwC,GAAwBzB,EAAA0B,OAAA,EAAA1B,EAAAmB,QAAA,aAAAQ,YAAA,QAAmGjD,EAAAkD,KAAY,IAAAC,EAAA,IAAAC,eAAoE,OAAzCD,EAAAE,KAAA,MAAAH,GAAA,GAA0BC,EAAAG,KAAA,MAAeH,EAAAI,eAAyB7C,IAA0BR,EAAAgD,KAAiB,IAAAC,EAAA,IAAAC,eAAmG,OAAxED,EAAAE,KAAA,MAAAH,GAAA,GAA0BC,EAAAK,aAAA,cAA+BL,EAAAG,KAAA,MAAe,IAAArB,WAAAkB,EAAAM,aAAqCxD,EAAA,EAAAiD,EAAAhB,EAAAC,KAAiC,GAAAR,EAAAuB,GAAA,CAAmB,IAAAC,EAAA,IAAAC,eAA8N,OAAnMD,EAAAE,KAAA,MAAAH,GAAA,GAAyBC,EAAAK,aAAA,cAA+BL,EAAAjB,OAAA,MAAgB,KAAAiB,EAAA/B,QAAA,GAAA+B,EAAA/B,QAAA+B,EAAAM,SAAiDvB,EAAAiB,EAAAM,UAA4BtB,MAAWgB,EAAAhB,eAAoBgB,EAAAG,KAAA,MAAsBI,MAAAR,EAAA,CAAWS,YAAA,gBAA0BC,KAAAH,GAAkBA,EAAAI,GAAgBJ,EAAAK,cAA8BzD,QAAAE,OAAA,IAAAwD,MAAAN,EAAArC,OAAA,MAAAqC,EAAAP,OAAqEU,KAAA1B,EAAAC,MAA+B,IAA8T6B,EAAuEC,EAArYC,EAAA/D,EAAA,OAAAgE,QAAAC,IAAAC,KAAAF,SAAmD9B,EAAAlC,EAAA,UAAAgE,QAAAG,MAAAD,KAAAF,SAAwDnD,OAAAC,OAAAd,EAAAY,GAAsCA,EAAA,KAAqBZ,EAAA,WAAAA,EAAA,UAAsDA,EAAA,cAAAe,EAAAf,EAAA,aAA2DA,EAAA,OAAAgB,EAAAhB,EAAA,MAAsDA,EAAA,aAAA6D,EAAA7D,EAAA,YAAuE,IAA+BoE,EAAAC,EAAAC,EAA/BC,GAAA,EAA8F,SAAAC,IAA6B,IAAAC,EAAAX,EAAAjC,OAAwB7B,EAAA,MAAAoE,EAAA,IAAAM,UAAAD,GAAuCzE,EAAA,WAAA2E,WAAAF,GAA0CzE,EAAA,OAAAqE,EAAA,IAAAvC,WAAA2C,GAA0CzE,EAAA,YAAA4E,YAAAH,GAA6CzE,EAAA,WAAA6E,WAAAJ,GAA0CzE,EAAA,QAAAsE,EAAA,IAAAQ,YAAAL,GAA6CzE,EAAA,YAAA+E,aAAAN,GAA8CzE,EAAA,YAAAgF,aAAAP,GAA8C,IAAAQ,EAAA,GAAoBC,EAAA,GAAkBC,EAAA,GAAiqB,SAAAC,EAAAC,GAA0BF,EAAAG,QAAAD,GAA0B,IAAAE,EAAA,EAAsBC,EAAA,KAA8BC,EAAA,KAAogB,SAAAC,EAAAC,GAAqB3F,EAAA,SAAAA,EAAA,QAAA2F,GAAoEzD,EAAzByD,EAAA,WAAAA,EAAA,KAAmCpB,GAAA,EAAW,EAAaoB,GAAA,2CAAiD,IAAAC,EAAA,IAAAC,YAAAC,aAAAH,GAA+D,MAAtB/F,EAAAgG,GAAsBA,EAAQ,IAAiRG,EAAvNC,EAAA1E,KAAAsB,WAA1D,yCAAqHpB,EAAAF,KAAAsB,WAAA,WAAuD,SAAAqD,IAA0B,IAAztJC,EAAytJC,EAAA,qBAA2B,OAAAH,EAAAG,GAAuCA,GAA3xJD,EAAswJC,EAA5uJnG,EAAA,WAAyBA,EAAA,WAAAkG,EAAA/E,GAAkDA,EAAA+E,GAAktJ,SAAAE,EAAAC,GAA6B,GAAAA,GAAAN,GAAAlC,EAAqC,WAAA/B,WAAA+B,GAAkC,GAAA9D,EAAe,OAAAA,EAAAsG,GAAwB,uDAAwV,SAAAC,EAAAC,EAAAC,EAAAC,GAA6D,OAA9V,SAAAF,GAAsC,OAAA1C,EAA8L3D,QAAAC,UAAAsD,KAAA,IAAA2C,EAAAG,IAA9K,IAAArG,QAAA,CAAAC,EAAAC,KAAsCN,EAAAyG,EAAAjD,GAAAnD,EAAA,IAAA2B,WAAAwB,IAAAa,IAAyE,IAAIhE,EAAAiG,EAAAG,IAAmC,MAAAX,GAASxF,EAAAwF,QAAyIc,CAAAH,GAAA9C,KAAAlC,GAAAsE,YAAAc,YAAApF,EAAAiF,IAAA/C,KAAAgD,EAAAG,IAAiH1E,4CAA8C0E,KAAUlB,EAAAkB,KAAg+C,SAAAC,EAAA5F,GAA4B6F,KAAAC,KAAA,aAAuBD,KAAAE,wCAA6C/F,KAAU6F,KAAA7F,SAAmB,IAAAgG,EAAAC,IAAqC,KAAAA,EAAA7E,OAAA,GAA0B6E,EAAAC,OAAAD,CAAAlH,IAA4BoH,EAAApH,EAAA,kBAAgDqH,EAAAC,GAAAC,GAAAD,GAAsDE,EAAA,IAAAC,KAAkDC,EAAA,oBAAAC,YAAA,IAAAA,YAAA,aAAAlI,EAAkFmI,EAAA,CAAAC,EAAAC,EAAAC,KAAsG,IAA7C,IAAAC,EAAAF,EAAAC,EAA8BE,EAAAH,EAAeD,EAAAI,SAAAD,MAAAC,EAAsD,GAAAA,EAAAH,EAAA,IAAAD,EAAAhG,QAAA6F,EAAmD,OAAAA,EAAAQ,OAAAL,EAAAM,SAAAL,EAAAG,IAAuE,IAAX,IAAAG,EAAA,GAAWN,EAAAG,GAAA,CAAkB,IAAAI,EAAAR,EAAAC,KAA0B,OAAAO,EAAA,CAAoD,IAAAC,EAAA,GAAAT,EAAAC,KAA6B,aAAAO,GAAA,CAAmE,IAAAE,EAAA,GAAAV,EAAAC,KAA6H,IAA9EO,EAAlB,UAAAA,IAAkB,GAAAA,IAAA,GAAAC,GAAA,EAAAC,GAA6B,EAAAF,IAAA,GAAAC,GAAA,GAAAC,GAAA,KAAAV,EAAAC,MAAiD,MAAaM,GAAAI,OAAAC,aAAAJ,OAA6B,CAAK,IAAAK,EAAAL,EAAA,MAAgBD,GAAAI,OAAAC,aAAA,MAAAC,GAAA,cAAAA,SAA7ON,GAAAI,OAAAC,cAAA,GAAAJ,IAAA,EAAAC,QAArFF,GAAAI,OAAAC,aAAAJ,GAAwX,OAAAD,GAAYO,EAAA,CAAAC,EAAAb,IAAAa,EAAAhB,EAAAvD,EAAAuE,EAAAb,GAAA,GAAiT,MAAAc,EAAoBC,YAAAC,GAAoBjC,KAAAiC,SAAmBjC,KAAA8B,IAAAG,EAAA,GAAmBD,SAAAE,GAAe1E,EAAAwC,KAAA8B,IAAA,MAAAI,EAA4BF,WAAW,OAAAxE,EAAAwC,KAAA8B,IAAA,MAA8BE,eAAAG,GAA2B3E,EAAAwC,KAAA8B,IAAA,MAAAK,EAAkCH,iBAAiB,OAAAxE,EAAAwC,KAAA8B,IAAA,MAA8BE,WAAAI,GAAmBA,IAAA,IAAkB9E,EAAA0C,KAAA8B,IAAA,IAAAM,EAA0BJ,aAAa,UAAA1E,EAAA0C,KAAA8B,IAAA,IAA6BE,aAAAK,GAAuBA,IAAA,IAAsB/E,EAAA0C,KAAA8B,IAAA,IAAAO,EAA4BL,eAAe,UAAA1E,EAAA0C,KAAA8B,IAAA,IAA6BE,KAAAE,EAAAC,GAAsBnC,KAAAsC,iBAAA,GAAyBtC,KAAAuC,SAAAL,GAAoBlC,KAAAwC,eAAAL,GAAgCH,iBAAAS,GAA8BjF,EAAAwC,KAAA8B,IAAA,OAAAW,EAAoCT,mBAAmB,OAAAxE,EAAAwC,KAAA8B,IAAA,OAA+BE,oBAA0E,GAAtDU,GAAA1C,KAAA2C,YAAoE,OAAAnF,EAAAwC,KAAAiC,QAAA,GAA+B,IAAAW,EAAA5C,KAAA6C,mBAAqC,WAAAD,IAAgC5C,KAAAiC,QAAoB,IAAqZa,EAAAC,IAAsB,IAAwBC,GAAAD,EAAxB/F,EAAAjC,OAAwBkI,WAAA,aAA0C,IAA+C,OAA3CjG,EAAAkG,KAAAF,GAAuBtF,IAAoB,EAAS,MAAAoB,MAA8iBqE,GAAA,GAAmEC,GAAA,KAAuB,IAAAA,GAAAC,QAAA,CAA2B,IAAkHC,EAAA,CAASC,KAAA,WAAAC,QAAA,WAAAC,KAAA,IAAAC,IAAA,IAAAC,KAAA,iBAAAC,MAA3H,iBAAAC,qBAAAC,WAAAD,UAAAC,UAAA,SAAAtI,QAAA,kBAA2HuI,EAArO9J,GAAA,kBAAgV,QAAA+J,KAAAb,QAAkBxK,IAAAwK,GAAAa,UAAAV,EAAAU,GAAoCV,EAAAU,GAAAb,GAAAa,GAAmB,IAAAX,EAAA,GAAe,QAAAW,KAAAV,EAAkBD,EAAAY,QAAgBD,KAAKV,EAAAU,MAAUZ,GAAAC,UAA8B,OAAAD,GAAAC,SAAyrBa,GAAAC,IAAsBA,EAAxF7D,IAAgIpH,EAAA,QAAAA,EAAA,OAAAiL,GAAyC1G,GAAA,GAAWvD,EAAAiK,EAAA,IAAApE,EAAAoE,KAA6IC,GAAA,CAAAC,EAAAC,MAAA,sBAAAD,OAAA,cAAAC,EAAAC,IAAqO,IAA2cC,GAAg4GC,GAA30HC,GAAA,aAAkCC,GAAA,CAAAC,EAAAC,KAA8B,IAAA9J,EAAA2J,GAAAE,GAAoC,IAAAC,GAAA,KAAAA,IAAwB,IAAAD,EAAA3H,EAAA7B,GAAA0F,EAAA/F,EAAA,IAAkDA,EAAAQ,OAAA,GAAqBR,EAAAkJ,KAAAY,IAAiPC,GAAA,GAAqCC,GAAAC,IAAgC,IAAAC,EAAAH,GAAAE,GAAqK,OAAnIC,IAAUD,GAAAF,GAAAvJ,SAAAuJ,GAAAvJ,OAAAyJ,EAAA,GAAoEF,GAAAE,GAAAC,EAAAT,GAAAU,IAAAF,IAAqDC,GAAaE,GAAA,CAAiBC,EAAvhJ,CAAAC,EAAA7K,EAAA8K,EAAAL,KAAoDrG,uBAA2BiD,EAAAwD,WAAwB,CAAA7K,EAAAqH,EAAArH,GAAA,mBAAA8K,EAAAL,EAAApD,EAAAoD,GAAA,sBAAg7IM,EAA73G,CAAAzD,EAAAI,EAAAC,KAA+I,MAAtG,IAAAJ,EAAAD,GAAgC0D,KAAAtD,EAAAC,GAA6CsD,EAAlB3D,GAAyxG4D,EAAztG,KAAoB9G,EAAA,KAAqsG+G,EAA1rG,CAAAC,EAAAlN,EAAAmN,IAAAtI,EAAAuI,WAAAF,EAAAlN,IAAAmN,GAA0rG3N,EAA3mG,KAAoC,MAAA6N,KAAukGC,EAA73FC,IAA4C,IAAAC,EAAA3I,EAAAhC,OAA0E,IAAhD0K,KAAA,GAAhQ,WAA8U,SAAwE,IAA3D,IAAAE,EAAA,CAAAnC,EAAAoC,IAAApC,GAAAoC,EAAApC,EAAAoC,KAA2DC,EAAA,EAAkBA,GAAA,EAAWA,GAAA,GAAY,IAAAC,EAAAJ,GAAA,KAAAG,GAA6CC,EAAAC,KAAAC,IAAAF,EAAAL,EAAA,WAAsE,IAAAQ,EAAAF,KAAAC,IAAljB,WAAkjBL,EAAAI,KAAAG,IAAAT,EAAAK,GAAA,QAA+H,GAApCxD,EAAA2D,GAAoD,SAAa,UAAy2EE,EAAzsD,CAAAC,EAAAC,KAA2C,IAAAC,EAAA,EAAkK,OAApJ1D,KAAA2D,QAAA,CAAAC,EAAAC,KAAqC,IAAAnF,EAAA+E,EAAAC,EAA4BtJ,EAAAoJ,EAAA,EAAAK,GAAA,GAAAnF,EAA5O,EAAAR,EAAAvG,KAAiC,QAAAkM,EAAA,EAAYA,EAAA3F,EAAA/F,SAAa0L,EAAK3J,EAAAvC,KAAAuG,EAAA4F,WAAAD,GAAkC3J,EAAAvC,GAAA,GAAyKoM,CAAAH,EAAAlF,GAA0BgF,GAAAE,EAAAzL,OAAA,IAA2B,GAA4/C6L,EAAl/C,CAAAC,EAAAC,KAA4D,IAAAjE,EAAAD,KAA4B5F,EAAA6J,GAAA,GAAAhE,EAAA9H,OAA0C,IAAAuL,EAAA,EAAsG,OAAxFzD,EAAA0D,QAAAC,GAAAF,GAAAE,EAAAzL,OAAA,GAAkDiC,EAAA8J,GAAA,GAAAR,EAAsC,GAA0wCS,EAA5gC,CAAApN,EAAAqN,KAA+BrN,EAAkB+J,GAAA/J,IAA29BsN,EAAt7BC,GAAA,GAAs7BC,EAAl0B,SAAAD,EAAAE,EAAAC,EAAAC,EAAAC,GAA4H,OAA9D3D,GAAAwD,EAAAC,GAA8D,IAAssBG,EAAre,CAAAN,EAAAO,EAAAC,EAAAC,KAA+C,IAAV,IAAAtC,EAAA,EAAUoB,EAAA,EAAYA,EAAAiB,EAASjB,IAAA,CAAK,IAAAnF,EAAAtE,EAAAyK,GAAA,GAAwBG,EAAA5K,EAAAyK,EAAA,MAA0BA,GAAA,EAAO,QAAAD,EAAA,EAAYA,EAAAI,EAAMJ,IAAKrD,GAAA+C,EAAAnK,EAAAuE,EAAAkG,IAA4BnC,GAAAuC,EAA8B,OAArB5K,EAAA2K,GAAA,GAAAtC,EAAqB,GAAkRwC,EAA2xD,SAAAC,EAAAC,GAA6B,IAAAC,EAAA9H,IAAmB,IAAI,OAAAqE,GAAAuD,EAAAvD,CAAAwD,GAAoC,MAAAzJ,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAAh6D9K,EAAg7D,SAAA2K,EAAAC,EAAAG,GAAiC,IAAAF,EAAA9H,IAAmB,IAAI,OAAAqE,GAAAuD,EAAAvD,CAAAwD,EAAAG,GAAuC,MAAA5J,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAA5jE3J,EAAwnD,SAAAwJ,EAAAC,EAAAG,EAAAC,GAAqC,IAAAH,EAAA9H,IAAmB,IAAI,OAAAqE,GAAAuD,EAAAvD,CAAAwD,EAAAG,EAAAC,GAA0C,MAAA7J,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAA3wDG,EAA4kE,SAAAN,EAAAC,EAAAG,EAAAC,EAAAE,GAAyC,IAAAL,EAAA9H,IAAmB,IAAI,OAAAqE,GAAAuD,EAAAvD,CAAAwD,EAAAG,EAAAC,EAAAE,GAA6C,MAAA/J,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAAtuEK,EAAgiF,SAAAR,EAAAC,EAAAG,EAAAC,EAAAE,EAAAE,GAA6C,IAAAP,EAAA9H,IAAmB,IAAI,OAAAqE,GAAAuD,EAAAvD,CAAAwD,EAAAG,EAAAC,EAAAE,EAAAE,GAAgD,MAAAjK,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAAjsFO,EAAkgG,SAAAV,EAAAC,GAA6B,IAAAC,EAAA9H,IAAmB,IAAI,OAAAuI,GAAAX,EAAAC,GAA4B,MAAAzJ,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAA/nGpJ,EAAsvE,SAAAiJ,EAAAC,GAA6B,IAAAC,EAAA9H,IAAmB,IAAIqE,GAAAuD,EAAAvD,CAAAwD,GAA6B,MAAAzJ,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAAp3ES,EAAitF,SAAAZ,EAAAC,EAAAG,GAAiC,IAAAF,EAAA9H,IAAmB,IAAIqE,GAAAuD,EAAAvD,CAAAwD,EAAAG,GAAgC,MAAA5J,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAAt1FxB,EAAo4E,SAAAqB,EAAAC,EAAAG,EAAAC,GAAqC,IAAAH,EAAA9H,IAAmB,IAAIqE,GAAAuD,EAAAvD,CAAAwD,EAAAG,EAAAC,GAAmC,MAAA7J,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAAhhFU,EAAs2F,SAAAb,EAAAC,EAAAG,EAAAC,EAAAE,GAAwC,IAAAL,EAAA9H,IAAmB,IAAI0I,GAAAd,EAAAC,EAAAG,EAAAC,EAAAE,GAAgC,MAAA/J,GAA0B,GAAjByB,EAAAiI,GAAiB1J,MAAA,QAAAA,EAAmB2J,GAAA,OAAl/FY,EAAt1L,SAAAvH,EAAAiB,GAAgCvJ,OAAA8P,WAAA/L,EAAA9B,MAAAqG,IAAAiB,MAAypMwG,GAAj6N,WAAsB,IAAhrB9O,EAAAgF,EAAAC,EAAA8J,EAAgrBC,EAA5C,CAAOpB,EAAAlD,IAA+D,SAAAuE,EAAAC,EAAA5R,GAAplF,IAAAwG,EAA0yF,OAA5KgL,GAAAI,EAAA3R,QAA6BgF,EAAAuM,GAAA,EAA4B7L,IAAoB8G,GAAA+E,GAAA,EAA3sFhL,EAAsuFgL,GAAA,EAA/sFnL,EAAAI,QAAAD,GAAkS,SAAAqL,GAAuI,GAAtGnL,IAAkBvF,EAAA,wBAAAA,EAAA,uBAAAuF,GAAoF,GAAAA,IAAuB,OAAAC,IAAgCmL,cAAAnL,GAAoCA,EAAA,MAA0BC,GAAA,CAA0B,IAAA6K,EAAA7K,EAAmCA,EAAA,KAA2B6K,KAAqnEM,GAAwCP,GAAwI,GAA/tF9K,IAAkBvF,EAAA,wBAAAA,EAAA,uBAAAuF,GAA6sFvF,EAAA,gBAA8B,IAAI,OAAAA,EAAA,gBAAAuQ,EAAAC,GAAuD,MAAA5K,GAAS1D,wDAA0D0D,KAAKhG,EAAAgG,GAAgL,OAAzJG,MAAAE,MAAhuC1E,EAAmxCsC,EAAnxC0C,EAAmxCR,EAAnxCS,EAAmxC+J,EAAnxCD,EAAw9B,SAAAO,GAA4CL,EAAAK,EAAA,WAAt8BtP,GAAA,mBAAAsE,YAAAiL,sBAAA9K,EAAAO,IAAA/E,EAAA+E,IAAA9F,GAAA,mBAAA8C,MAAif+C,EAAAC,EAAAC,EAAA8J,GAAhV/M,MAAAgD,EAAA,CAAyB/C,YAAA,gBAA0BC,KAAAH,GAAkBuC,YAAAiL,qBAAAxN,EAAAkD,GAA8D/C,KAAA6M,EAAA,SAAA1J,GAA8I,OAAjG1E,oCAAsC0E,KAAU1E,EAAA,6CAAiDoE,EAAAC,EAAAC,EAAA8J,OAAmyBS,MAAAnR,GAAsG,GAAksMoR,GAAuvBzB,IAAvpBvP,EAAA,QAAAiR,KAAAjR,EAAA,QAAAqQ,GAAA,GAAAY,IAAmFjR,EAAA,MAAAiR,KAAAjR,EAAA,MAAAqQ,GAAA,GAAAY,IAA2EjR,EAAA,eAAAiR,EAAA5B,KAAArP,EAAA,aAAAqQ,GAAA,GAAAY,EAAA5B,IAA+GrP,EAAA,WAAAiR,EAAA5B,KAAArP,EAAA,SAAAqQ,GAAA,GAAAY,EAAA5B,IAA+FrP,EAAA,YAAAiR,EAAA5B,EAAAG,KAAAxP,EAAA,UAAAqQ,GAAA,GAAAY,EAAA5B,EAAAG,IAAyGxP,EAAA,aAAAiR,EAAA5B,KAAArP,EAAA,WAAAqQ,GAAA,GAAAY,EAAA5B,IAAuGrP,EAAA,UAAAiR,KAAAjR,EAAA,UAAAqQ,GAAA,GAAAY,IAA2F,CAAAA,EAAA5B,KAAAE,GAAAc,GAAA,GAAAY,EAAA5B,IAA2D9H,GAAA0J,IAAA1J,GAAA8I,GAAA,GAAAY,GAAqFxJ,GAAA,KAAAA,GAAA4I,GAAA,KAAyF7G,GAAAyH,IAAAzH,GAAA6G,GAAA,GAAAY,GAA6ElB,GAAA/P,EAAA,aAAAiR,EAAA5B,KAAAU,GAAA/P,EAAA,WAAAqQ,GAAA,GAAAY,EAAA5B,IAAuGa,GAAAlQ,EAAA,eAAAiR,EAAA5B,EAAAG,EAAAC,EAAAE,KAAAO,GAAAlQ,EAAA,aAAAqQ,GAAA,GAAAY,EAAA5B,EAAAG,EAAAC,EAAAE,IAAoxD,SAAAuB,KAAkF,SAAAC,IAAiB5F,KAAoBA,IAAA,EAAevL,EAAA,aAAyBuE,KAA31Z,EAAwB0C,EAAA/B,GAAi2ZvF,EAAAK,GAA4BA,EAAA,sBAAAA,EAAA,uBAA51Z,WAAmB,GAAAA,EAAA,QAAoG,IAA9E,mBAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAA8EA,EAAA,QAAAqC,QAAgC+C,EAAApF,EAAA,QAAAmH,SAAyCF,EAAA9B,GAA+tZiM,KAA7Q7L,EAAA,KAA77Z,WAAkB,GAAAvF,EAAA,OAAgG,IAA3E,mBAAAA,EAAA,SAAAA,EAAA,QAAAA,EAAA,SAA2EA,EAAA,OAAAqC,QAA6ZgD,EAA9XrF,EAAA,OAAAmH,QAAuZlC,EAAAK,QAAAD,GAAzB,IAAAA,EAAvV4B,EAAAhC,GAAkyZoM,GAAS9L,EAAA,IAAiPvF,EAAA,WAAwBA,EAAA,wBAAkCsR,WAAA,WAAsBA,WAAA,WAAsBtR,EAAA,eAAwB,GAAImR,KAAQ,IAASA,MAAS,GAAhjB1L,EAAA,SAAA8L,IAA2ChG,IAAA2F,KAAoB3F,KAAA9F,EAAA8L,IAAifvR,EAAA,QAAoG,IAA9E,mBAAAA,EAAA,UAAAA,EAAA,SAAAA,EAAA,UAA8EA,EAAA,QAAAqC,OAAA,GAAkCrC,EAAA,QAAAwR,KAAAxR,GAGroiB,OAHgqiBkR,KAAMlR,EAAA,UAAAE,QAAA,SAAAC,EAAAC,UAAqDJ,EAAA,KAAsBA,EAAA,iBAAA2F,GAAiCvF,EAAAuF,IAAcP,EAAA,WAAwBjF,EAAAH,OAAoBC,IAP50iB,GAeApB,EAAAC,QAAAM,2DChBAP,EAAAC,QAAA,WACA,WAAA2S,OAAoB1S,EAAAC,EAAuB,udCG3C,MAAM0S,UAAwBC,IAAMC,UA6BlCC,SACE,MAAMC,SACJA,EAAQ5L,KACRA,EAAI6L,MACJA,EAAKC,OACLA,EAAMC,gBACNA,EAAeC,UACfA,EAASC,YACTA,EAAWC,MACXA,EACAC,SAAUC,KACPC,GACDzL,KAAKyL,MAEHC,EAAQb,IAAMc,SAASC,KAAKZ,GAElC,OACEH,IAAAgB,cAACC,IAAK,CACJ1M,KAAMA,EACN6L,MAAOA,EACPC,OAAQA,EACRF,SAAUe,IAAyB,IAAxBnQ,SAAEA,EAAQoQ,MAAEA,GAAOD,EAC5B,MAAMR,KAAcC,EAAcA,EAAYQ,EAAOpQ,GAAYoQ,GAEjE,OAAOnB,IAAMoB,aACXP,EACA,IACKD,EACHL,UAAW,CAACA,EAAWM,EAAMD,MAAML,UAAWG,EAAWJ,EAAkB,MACxEe,KAAK,KAAKC,OACbb,MAAOC,EAAW,IAAKD,KAAUD,GAAgBC,QA3DzDV,EACGwB,aAAe,CACpBC,OAAQC,IAAUC,MAAM,CACtBC,QAASF,IAAUC,MAAM,CACvBtI,KAAMqI,IAAUrH,KAAKwH,WACrBjR,QAAS8Q,IAAUrH,KAAKwH,WACxBC,WAAYJ,IAAUrH,KAAKwH,aAC1BA,aACFA,YARD7B,EAuBG+B,aAAe,CACpB1B,OAAO,EACPC,QAAQ,EACRC,gBAAiB,UC9BrB,SAASyB,IAAgC,QAAAC,EAAAC,UAAAvR,OAAPwR,EAAK,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAALF,EAAKE,GAAAH,UAAAG,GACrC,OAAOF,EAAMG,OAAO7N,GAAU,MAALA,GAAW8N,OAAO,CAACC,EAAK/N,IACnC,OAAR+N,EAAqB/N,EAElB,WAAkC,QAAAgO,EAAAP,UAAAvR,OAAN+R,EAAI,IAAAN,MAAAK,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAAT,UAAAS,GACrCH,EAAII,MAAMxN,KAAMsN,GAChBjO,EAAEmO,MAAMxN,KAAMsN,IAEf,aCcUG,oBCwBAC,4BCvCf,MAAMC,UAAkB9C,IAAMC,UAC5B8C,YAAYnC,EAAOoC,GACjBC,MAAMrC,EAAOoC,GAAS7N,KASxB+N,gBAAmBjP,KACjB,OAAQA,EAAEkP,OACV,KAAKC,IAAQC,MAAM7O,EACbP,EAAEqP,UACJnO,KAAKoO,OACLtP,EAAEuP,kBAEJ,MACF,KAAKJ,IAAQC,MAAMI,GACjBtO,KAAKoO,OACDtP,EAAEyP,SACJvO,KAAKwO,WAELxO,KAAKyO,WAEHzO,KAAK0O,SACP1O,KAAK0O,OAAOC,QACZ3O,KAAK0O,OAAOE,UAEd9P,EAAEuP,oBAILrO,KAQD6O,KAAO,MACL7O,KAAK8O,SAAS,CAACC,QAAS/O,KAAKyL,MAAMuD,SAAS,GAAI,KAChDhP,KAAK8O,SAAS,CAACV,MAAM,MACtBpO,KACDyO,SAAW,MACLzO,KAAK0O,QAAQ1O,KAAK8O,SAAS,CAACC,QAAS/O,KAAKyL,MAAMuD,SAAShP,KAAK0O,OAAOO,MAAO,OACjFjP,KACDwO,SAAW,MACLxO,KAAK0O,QAAQ1O,KAAK8O,SAAS,CAACC,QAAS/O,KAAKyL,MAAMuD,SAAShP,KAAK0O,OAAOO,OAAQ,OAClFjP,KACDkP,UAAapQ,KACX,OAAQA,EAAEkP,OACV,KAAKC,IAAQC,MAAMiB,IACjBnP,KAAK6O,OACL,MACF,KAAKZ,IAAQC,MAAMkB,MACjBpP,KAAKyO,cAIRzO,KAODqP,SAAYvQ,KACVkB,KAAK8O,SAAS,CAACC,QAAS/O,KAAKyL,MAAMuD,SAASlQ,EAAEwQ,OAAOL,MAAO,OAnE5DjP,KAAKuP,MAAQ,CAACR,QAAS,KAAMX,MAAM,GAErCoB,oBACEhX,SAASiX,iBAAiB,UAAWzP,KAAK+N,iBAE5C2B,uBACElX,SAASmX,oBAAoB,UAAW3P,KAAK+N,iBA0B/CK,OACEpO,KAAK8O,SAAS,CAACV,MAAM,IACjBpO,KAAK0O,SACP1O,KAAK0O,OAAOC,QACZ3O,KAAK0O,OAAOE,UAwBhBgB,mBAAmBC,EAAWC,GACxB9P,KAAKuP,MAAMnB,OAAS0B,EAAU1B,MAAQpO,KAAK0O,SAC7C1O,KAAK0O,OAAOE,SACZ5O,KAAK0O,OAAOC,SAMhB5D,SACE,MAAMqD,KAAEA,EAAIW,QAAEA,GAAY/O,KAAKuP,MACzBQ,EAAShB,GAAWA,EAAQiB,MAClC,OACEnF,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,YAAa,CAACC,iBAAkB9B,IAAQc,UAAWlP,KAAKkP,WACjFrE,IAAAgB,cAAA,SAAO3J,KAAK,OAAOiO,IAAKtW,GAAQmG,KAAK0O,OAAS7U,EAAMwV,SAAUrP,KAAKqP,aAChEN,GAAWlE,IAAAgB,cAAA,QAAMT,UAAU,SAAU2D,EAAQqB,IAAM,EAAK,IAAMrB,EAAQiB,OACzEnF,IAAAgB,cAAA,QAAMT,UAAU,cAChBP,IAAAgB,cAAA,UAAQwE,UAAWN,EAAOO,QAAStQ,KAAKwO,SAAU+B,MAAM,YAAW1F,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,gBACpF5F,IAAAgB,cAAA,UAAQwE,UAAWN,EAAOO,QAAStQ,KAAKyO,SAAU8B,MAAM,QAAO1F,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,kBAChF5F,IAAAgB,cAAA,UAAQyE,QAAStQ,KAAK6O,KAAM0B,MAAM,kBAAiB1F,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,cCvFrE,SAASC,EAAUC,EAAU7F,EAAW8F,EAAS9T,GAAO,IAAA+T,EAC7D,MAAMC,EAAe/W,OAAOgX,KAAKJ,GACjC,OAAAE,EAAO,cAAwBhG,IAAMC,UAGnC8C,YAAYnC,EAAOoC,GACjBC,MAAMrC,EAAOoC,GACb,MAAM0B,EAAQ,GACduB,EAAa/J,QAAQ9G,GAAQsP,EAAMtP,GAAQ,IAC3CD,KAAKuP,MAAQA,EAGfyB,kBACOhR,KAAKiR,WACRjR,KAAK8O,YAAShC,WAIlBoE,eAAezF,EAAOoC,GACpBiD,EAAa/J,QAAQ9G,IACnB,MAAMkR,EAAqC,oBAAnBR,EAAS1Q,GAAuB0Q,EAAS1Q,GAAMwL,EAAOoC,GAAW8C,EAAS1Q,GAC9FD,KAAKuP,MAAMtP,GAAMkR,UAAYA,IAC3BA,EAAQxU,KACVqD,KAAK8O,SAAS,CAAC9M,CAAC/B,GAAO,CAACkR,YAAW,KACjCA,EAAQxU,KAAKoN,GAAU/J,KAAKgR,gBAAgBlB,IAC1C,GAAIA,EAAU7P,GAAMkR,UAAYA,EAAS,MAAO,CAACnP,CAAC/B,GAAO,CAACkR,UAASpH,aACjE1M,GAAS2C,KAAKgR,gBAAgBlB,IAChC,GAAIA,EAAU7P,GAAMkR,UAAYA,EAAS,MAAO,CAACnP,CAAC/B,GAAO,CAACkR,UAAS9T,eAIvE2C,KAAK8O,SAAS,CAAC9M,CAAC/B,GAAO,CAACkR,UAASpH,OAAQoH,QAMjD3B,oBACExP,KAAKkR,eAAelR,KAAKyL,MAAOzL,KAAK6N,SAEvC+B,qBACE5P,KAAKkR,eAAelR,KAAKyL,MAAOzL,KAAK6N,SAGvC6B,uBACE1P,KAAKiR,WAAY,EAGnBG,sBAAsBC,EAAWC,GAC/B,OAAOR,EAAaS,KAAKtR,GAAQ,UAAWqR,EAAUrR,KAC/C6Q,EAAaU,MAAMvR,GAAQ,WAAYqR,EAAUrR,IAG1D8K,SACE,MAAM0G,EAAU,GAAIC,EAAU,GAAIjG,EAAQ,IAAIzL,KAAKyL,OACnD,IAAIkG,GAAS,EAAMC,GAAS,EAa5B,OAZAd,EAAa/J,QAAQ9G,WACZwL,EAAMxL,GACb,MAAM5E,EAAO2E,KAAKuP,MAAMtP,GACpB,WAAY5E,EACdoW,EAAQxR,GAAQ5E,EAAK0O,OACZ,UAAW1O,GACpBqW,EAAQzR,GAAQ5E,EAAKgC,MACrBuU,GAAS,GAETD,GAAS,IAGTC,EACK9U,EAAQ+N,IAAAgB,cAAC/O,EAAK/C,OAAAC,OAAA,GAAKyR,EAAWiG,IAAa,KACzCC,EACF9G,IAAAgB,cAACf,EAAS/Q,OAAAC,OAAA,GAAKyR,EAAWgG,IAE1Bb,EAAU/F,IAAAgB,cAAC+E,EAAYnF,GAAW,QAtEtCoG,YAAW,aAAAC,OAAgBhH,EAAU+G,aAAe/G,EAAU7K,MAAQ,YAAW,KAAA4Q,ECL5F,MAAMkB,EACJnE,cACE5N,KAAKgS,MAAQ,GACbhS,KAAKiS,QAAU,EACfjS,KAAKkS,KAAO,GAEdC,UAAUlN,GACRjF,KAAKkS,KAAKjO,KAAKgB,GACfA,EAAKjF,KAAKiS,SAEZG,YAAYnN,GACVjF,KAAKkS,KAAOlS,KAAKkS,KAAKhF,OAAO7N,GAAKA,IAAM4F,GAE1CoN,SACErS,KAAKiS,SAAW,EAChBjS,KAAKkS,KAAKnL,QAAQ9B,GAAQA,EAAKjF,KAAKiS,UAEtCK,QACEtS,KAAKiS,SAAW,EAChBjS,KAAKkS,KAAKnL,QAAQ9B,GAAQA,EAAKjF,KAAKiS,UAEtCxV,MAAMR,EAAKsW,GAET,MAAMrQ,GADNqQ,EAAMA,GAAO,IACKrQ,MAAQ,OAC1B,IAAIsQ,EAAI,GAAAV,OAAM7V,EAAG,KAAA6V,OAAI5P,GAErB,GADIqQ,EAAI9I,OAAM+I,GAAQ,UACjBD,EAAIE,SAAWzS,KAAKgS,MAAMQ,GAAO,OAAOxS,KAAKgS,MAAMQ,GACxD,MAAMtN,EAAMlF,KAAKgS,MAAMQ,GAAQ/V,MAAMR,GAAKU,KAAKH,IAC7C,GAAIA,EAASI,GAAI,CACf,GAAa,WAATsF,EACF,OAAO1F,EAASK,cACX,GAAa,SAATqF,EACT,OAAO1F,EAASkW,OAEhB,IAAKH,EAAI9I,KAAM,CACb,IAAIkJ,EAAMnW,EAASoW,OAInB,OAHIL,EAAIna,UACNua,EAAMA,EAAIhW,KAAK4K,GAAKgL,EAAIna,QAAQmP,KAE3BoL,EAET,OAAOnW,EAASkW,OAAO/V,KAAK+V,IAAI,CAC9BG,WAAYC,SAAStW,EAASuW,QAAQ7N,IAAI,kBAAmB,IAC7D8N,aAAcN,EAAKnX,OACnBqX,KAAMK,KAAKC,MAAMR,MAIrB,OAAOlW,EAASoW,OAAOjW,KAAKvB,GAAOhC,QAAQE,OAAO8B,MAOtD,OAJImX,EAAIY,SACNnT,KAAKqS,SACLnN,EAAIvI,KAAK,IAAMqD,KAAKsS,QAAS,IAAMtS,KAAKsS,UAEnCpN,EAETuN,QAAQxW,EAAKsW,GACX,OAAOvS,KAAKvD,MAAMR,EAAK,IAAIsW,EAAKE,SAAS,KCgC9BW,aCvFf,MAAMC,UAAkBxI,IAAMC,UAC5B0E,oBACExP,KAAKyL,MAAM6H,WAAU,GAEvB5D,uBACE1P,KAAKyL,MAAM6H,WAAU,GAEvBvI,SACE,MAAMuI,UAACA,EAAStI,SAAEA,KAAaS,GAASzL,KAAKyL,MACvCC,EAAQb,IAAMc,SAASC,KAAKZ,GAClC,OAAOH,IAAMoB,aAAaP,EAAOD,IAItB,MAAM8H,UAAmB1I,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KACtDuP,MAAQ,CAACiE,QAAQ,GAAMxT,KAEvBsT,UAAYE,IAAUxT,KAAK8O,SAAS,CAAC0E,YAErCzI,SACE,MAAMC,SAACA,EAAQyI,QAAEA,KAAYhI,GAASzL,KAAKyL,MACrCC,EAAQb,IAAMc,SAASC,KAAKZ,GAClC,OACEH,IAAAgB,cAAC6H,IAAc3Z,OAAAC,OAAA,CAACyZ,QAAS5I,IAAAgB,cAACwH,EAAS,CAACC,UAAWtT,KAAKsT,WAAYG,IAA0BhI,GACvFZ,IAAMoB,aAAaP,EAAO,CAAC8H,OAAQxT,KAAKuP,MAAMiE,WCxBvD,MAAMG,EAAW,WAEjB,MAAMC,UAA6B/I,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KACjD6T,SAAWC,KACL9T,KAAK+T,eACPC,aAAahU,KAAK+T,eAEpB/T,KAAK+T,cAAgBvJ,WAAW,YACvBxK,KAAK+T,cACZ,MAAMvH,EAAUxM,KAAKyL,MAAMkI,GAC3BnH,EAAQhR,QAAQgR,EAAQ5Q,SAASqY,SAAWzH,EAAQ5Q,SAASsY,KAAM,CAACJ,eACnE,OAGLtE,oBACE,MAAMD,EAAQvP,KAAKyL,MAAMkI,GAAU/X,SAAS2T,MACxCA,GAA4B,MAAnBA,EAAMuE,WACjB9T,KAAKyL,MAAMjC,SAAS+F,EAAMuE,WAExB9T,KAAKyL,MAAM0I,OACbnU,KAAKyL,MAAM0I,MAAMnU,MAGrB0P,uBACM1P,KAAKyL,MAAM0I,OACbnU,KAAKyL,MAAM0I,MAAM,MAIrBpJ,SACE,OAAO,MAIJ,MAAMqJ,EAAc3I,GAASZ,IAAAgB,cAACC,IAAK,CAACf,OAAQgB,IAAA,IAACS,QAACA,GAAQT,EAAA,OAAKlB,IAAAgB,cAAC+H,EAAoB7Z,OAAAC,OAAA,GAAKyR,EAAK,CAAOzJ,CAAC2R,GAAWnH,QCrCrG,SAAS6H,EAAaC,EAAMrU,GACzC,MAAMhE,EAAMtB,IAAI4Z,gBAAgBD,GAC1BE,EAAKhc,SAASqT,cAAc,KAClC2I,EAAGC,aAAa,OAAQxY,GACxBuY,EAAGC,aAAa,WAAYxU,GAC5BuU,EAAGlJ,MAAMoJ,QAAU,OACnBlc,SAASmc,KAAKC,YAAYJ,GAC1BA,EAAGK,QACHrK,WAAW,KACThS,SAASmc,KAAKG,YAAYN,GAC1B7Z,IAAIoa,gBAAgB9Y,KCVxB,IAAI+Y,EAAa,KAEV,SAASC,EAAchV,GAAoB,IAAdiV,EAAQpI,UAAAvR,OAAA,QAAA5C,IAAAmU,UAAA,GAAAA,UAAA,GAAG,EAC7C,IAAKkI,EAAY,CACfA,EAAa,IAAIhX,YAAY,MAC7B,IAAImX,EAAO,QACX,IAAK,IAAIlO,EAAI,EAAGA,EAAI,IAAKA,IACvB,IAAK,IAAIe,EAAIf,EAAGe,EAAI,KAAMA,GAAK,IAAK,CAElC,MAAMK,GAAY,OADlB8M,GAAe,IAAPA,EAAa,GAAK,WACG,GAEvBxX,EAAY,OADlBwX,GAAe,IAAPA,EAAa,GAAK,SAE1BH,EAAWhN,GAAKK,EAAI1K,GAI1B,IAAIyX,EAAQ,WACRC,EAAQ,WACZ,IAAK,IAAIpO,EAAI,EAAGA,EAAIhH,EAAK1E,SAAU0L,EAAG,CACpC,IAAIrF,EAAK3B,EAAKiH,WAAWD,GACrBrF,GAAM,IAAQA,GAAM,MACtBA,GAAM,IAEG,KAAPA,IACFA,EAAK,IAGPyT,EAASzT,GADTwT,EAAQJ,EAAsB,IAAXE,EAAiBtT,GAAOwT,EAAQC,GACrB,GAARA,EAAa,EAAK,EAE1C,OAAOD,EAGM,SAASE,EAASrV,EAAMsV,GACrC,IAAIvM,EACAuM,IAAUvM,EAAI/I,EAAK+L,MAAM,gDAC3B/L,EAAO+I,EAAE,IAEX,IAAIwM,EAAQ,GACRxM,EAAI/I,EAAK+L,MAAM,4BACjBwJ,EAAQxM,EAAE,GAAG9B,WAAW,GAAK,GAC7BjH,EAAO+I,EAAE,IAEX,MAAMyM,EAAM,IAAIzX,YAAY,GAG5B,GAFAyX,EAAI,GAAKR,EAAchV,EAAM,GAC7BwV,EAAI,GAAKR,EAAchV,EAAM,GACzBuV,EAAO,CACT,IAAIE,EAAMD,EAAI,GACdA,EAAI,IAAMD,EACNC,EAAI,GAAKC,IACXD,EAAI,IAAM,GAGd,OAAOA,EAGF,SAASE,EAAQ/L,GACtB,OAAOA,EAAG,GAAGgM,SAAS,IAAIC,SAAS,EAAG,KAAOjM,EAAG,GAAGgM,SAAS,IAAIC,SAAS,EAAG,KAGvE,SAASC,EAASlM,GACvB,MAAM6L,EAAM,IAAIzX,YAAY,GAG5B,OAFAyX,EAAI,GAAK3C,SAASlJ,EAAG7N,OAAO,EAAG,GAAI,IACnC0Z,EAAI,GAAK3C,SAASlJ,EAAG7N,OAAO,EAAG,GAAI,IAC/Bga,MAAMN,EAAI,KAAOM,MAAMN,EAAI,IACtB,KAEFA,EAGF,SAASO,EAAS3N,EAAG1K,GAC1B,OAAK0K,KAAO1K,KACP0K,GACEA,EAAE,KAAO1K,EAAE,IAAM0K,EAAE,KAAO1K,EAAE,6DCnErC,MAAMrF,EAGJsV,YAAYqI,GAAMjW,KAFlBkW,QAAU,GAGRlW,KAAKiW,KAAOA,EAGdE,OAAOlW,GACL,MAAoB,kBAATA,EACFqV,EAASrV,GACC,MAARA,GAAmC,kBAAZA,EAAK,GAC9BA,EAEA,KAIXmW,QAAQnW,GACN,MAAM2J,EAAK5J,KAAKmW,OAAOlW,GACvB,OAAU,MAAN2J,GACwC,IAArC5J,KAAKiW,KAAKI,SAASzM,EAAG,GAAIA,EAAG,IAGtC0M,WAAWrW,GACT,MAAM2J,EAAK5J,KAAKmW,OAAOlW,GACvB,GAAU,MAAN2J,EAAY,OAAO,KACvB,IAAIG,EAAS,KACbvQ,OAAO8P,WAAaiN,IAAOxM,EAASwM,GACpC,MAAM5D,EAAM3S,KAAKiW,KAAKO,UAAU5M,EAAG,GAAIA,EAAG,GAAI,GAE9C,cADOpQ,OAAO8P,WACTS,EAGE,CAAC1O,KAAM0O,EAAQ0M,MAAO9D,GAFpB,KAKX+D,SAASzW,GACP,MAAM2J,EAAK5J,KAAKmW,OAAOlW,GACvB,GAAU,MAAN2J,EAAY,OAAO,KACvB,IAAIG,EAAS,KAIb,OAHAvQ,OAAO8P,WAAaiN,IAAOxM,EAASwM,GACpCvW,KAAKiW,KAAKO,UAAU5M,EAAG,GAAIA,EAAG,WACvBpQ,OAAO8P,WACTS,GAGE,IAAI4M,IAAS9V,aAAcO,OAAO2I,GAFhC,KAKX6M,UAAU3W,GACR,MAAM2J,EAAK5J,KAAKmW,OAAOlW,GACvB,GAAU,MAAN2J,EAAY,OAAO,KACvB,MAAMiN,EAAMlB,EAAQ/L,GAEpB,GAAI5J,KAAKkW,QAAQW,GAAM,OAAO7W,KAAKkW,QAAQW,GAE3C,IAAI9M,EAAS,KAIb,GAHAvQ,OAAO8P,WAAaiN,IAAOxM,EAASwM,GACpCvW,KAAKiW,KAAKa,WAAWlN,EAAG,GAAIA,EAAG,WACxBpQ,OAAO8P,YACTS,EACH,OAAO,KAGT,MAAMuK,EAAO,IAAIyC,KAAK,CAAChN,GAAS,CAAC7H,KAAM,cACvC,OAAOlC,KAAKkW,QAAQW,GAAOlc,IAAI4Z,gBAAgBD,GAGjD0C,SAASC,GACPA,EAAUA,GAAW,GACrB,MAAM1E,EAAMvS,KAAKiW,KAAKiB,QAAQ,IACxBC,EAAMnX,KAAKiW,KAAK1Y,OACtB4Z,EAAI5E,EAAM,GAAK0E,EAAQG,QAAU,EACjCD,EAAI5E,EAAM,GAAK0E,EAAQI,YAAc,EACrCF,EAAI5E,EAAM,GAAK0E,EAAQK,WAAa,EACpCH,EAAI5E,EAAM,GAAK0E,EAAQM,aAAe,EACtCJ,EAAI5E,EAAM,GAAK0E,EAAQO,gBAAkB,EACzCL,EAAI5E,EAAM,GAAK0E,EAAQQ,eAAiB,EACxCN,EAAI5E,EAAM,GAAK0E,EAAQS,iBAAmB,EAC1CP,EAAI5E,EAAM,GAAK0E,EAAQU,cAAgB,EACvCR,EAAI5E,EAAM,GAAK0E,EAAQW,iBAAmB,EAC1CT,EAAI5E,EAAM,GAAK0E,EAAQY,eAAiB,EACxC,IAAI9N,EAAS,KAMb,GALAvQ,OAAO8P,WAAaiN,IAAOxM,EAASwM,GACpCvW,KAAKiW,KAAK6B,UAAUvF,UACb/Y,OAAO8P,WACdtJ,KAAKiW,KAAK8B,MAAMxF,IAEXxI,EACH,OAAO,KAGT,MAAMiO,EAAQ,GACRC,EAAM,IAAItB,IAAS9V,YACzB,IAAIqX,EAAO,EACX,IAAK,IAAIjR,EAAI,EAAGA,EAAI8C,EAAOxO,SAAU0L,EACjB,IAAd8C,EAAO9C,KACT+Q,EAAM/T,KAAKgU,EAAI7W,OAAO2I,EAAO1I,SAAS6W,EAAMjR,KAC5CiR,EAAOjR,EAAI,GAGf,OAAO+Q,GAII,SAASG,EAAY9c,GAElC,OAAe,YADH,IAAI2C,YAAY3C,EAAKN,QAAUM,EAAM,EAAG,GAC5C,GACCjC,QAAQE,OAAO,uDAEjB8e,IAAa,CAClBC,WAAWpY,GACI,uBAATA,EACKqY,IAEArY,IAGVtD,KAAKsZ,IACN,MAAMsC,EAAQ,IAAIvd,WAAWK,GACvBmd,EAAOvC,EAAKiB,QAAQqB,EAAMhd,QAKhC,OAJA0a,EAAK1Y,OAAOkb,IAAIF,EAAOC,GACvBvC,EAAKyC,aAAaF,EAAMD,EAAMhd,QAC9B0a,EAAK8B,MAAMS,GAEJ,IAAIlgB,EAAc2d,2BC/H7B,MAAM0C,EAAkBA,CAACC,EAAQC,EAAMC,EAAKC,IAAa,IAAI3f,QAAQ,CAACC,EAASC,KAC7Esf,EAAOnJ,iBAAiB,UAAW3Q,IACjC,GAAIA,EAAEzD,KAAK0d,SACLA,GAAUA,EAASja,EAAEzD,KAAK0d,eACzB,GAAIja,EAAEzD,KAAK0O,OAChB6O,EAAOI,YACP3f,EAAQyF,EAAEzD,KAAK0O,YACV,CACL,IAAI1M,EAAQyB,EAAEzD,KAAKgC,OACfA,aAAiB4b,aAAeA,YAAYC,OAAO7b,MACrDA,GAAQ,IAAIsZ,IAAS9V,aAAcO,OAAO/D,IAE5Cub,EAAOI,YACP1f,EAAO+D,MAGXub,EAAOO,YAAY,CAACN,OAAMC,UAGb,MAAMM,EAAUxL,cAAA5N,KAC7B4Y,OAAS,IAAIjO,IAAQ3K,KAErBqZ,WAAa,UAAM1gB,GAEnBqJ,YAAY6W,EAAMC,GAGhB,OAFAD,QAAaA,EACb7Y,KAAKqZ,WAAW,SACHV,EAAgB3Y,KAAK4Y,OAAQC,EAAMC,EAAK9Y,KAAKqZ,YAG5DL,YACEhZ,KAAK4Y,OAAOI,aClChB,IAAIM,EAAa,KACbC,EAAgB,KAEb,SAASC,EAAmBC,GACjCH,EAAaG,EACTA,GAAQF,IACVE,EAAKC,gBAAgBH,EAAcrZ,QAASqZ,EAAcrX,MAC1DqX,EAAgB,MAGb,SAASI,GAAczZ,GAAsB,IAAbgC,EAAI4K,UAAAvR,OAAA,QAAA5C,IAAAmU,UAAA,GAAAA,UAAA,GAAC,OACtCwM,EACFA,EAAWI,gBAAgBxZ,EAASgC,GAEpCqX,EAAgB,CAACrZ,UAASgC,iCCN9B,MAAM0X,GAAcve,IAClBtB,OAAO8f,OAAOxe,EAAKye,SAAS/S,QAAQgT,IAClC,MAAMC,EAAO,GACbjgB,OAAOgX,KAAKgJ,EAAI1e,MAAM0L,QAAQ8P,GAAOmD,EAAKnD,EAAIoD,eAAiBF,EAAI1e,KAAKwb,IACxEkD,EAAI1e,KAAO2e,IAEN3e,GAGHF,GAAWoE,GAAQ,IAAInG,QAAQ,CAACC,EAASC,KAC7C,MAAM4gB,EAAS,IAAIC,WACnBD,EAAOjf,OAAS,KAAM5B,EAAQ6gB,EAAOnQ,SACrCmQ,EAAOhf,QAAU,KAAM5B,EAAO4gB,EAAO7c,QACrC6c,EAAOE,QAAU,KAAM9gB,KACvB4gB,EAAOG,kBAAkB9a,KAG3B,MAAM+a,GACJ1M,YAAYoE,EAAOuI,EAAOta,GACxBD,KAAKgS,MAAQA,EACbhS,KAAK4J,GAAK2Q,EACVva,KAAKC,KAAOA,EACZD,KAAKwa,MAAO,EAGdV,UACE,OAAO9Z,KAAKgS,MAAMvV,MAAK,QAAAqV,OAAS9R,KAAK4J,GAAE,SAAS,CAACuJ,QAAQ,EAAM/a,QAASwhB,KAG1Ea,WACE,OAAOza,KAAKgS,MAAMvV,MAAK,oBAAsB,CAAC0W,QAAQ,EAAMjR,KAAM,SAGpEkU,UACE,OAAO,EAGT7W,OACE,OAAO,KAET9E,SACE,OAAO,KAETigB,MAAMza,GACJ,OAAOD,KAAKgS,MAAM0I,MAAMza,GAG1B0a,OACE,OAAO,KAGTC,KAAKhR,GACH,OAAO5J,KAAKgS,MAAM4I,KAAKhR,GAEzBiR,WAAW5a,GACT,OAAOD,KAAKgS,MAAM6I,WAAW5a,IAIjC,MAAMkW,GAASA,CAAClW,EAAMsV,IACA,kBAATtV,EACFqV,EAASrV,EAAMsV,GACL,MAARtV,GAAmC,kBAAZA,EAAK,GAC9BA,EAEA,KAIX,MAAM6a,GAIJlN,YAAYoE,EAAO+I,EAASnR,EAAI3J,GAAMD,KAHtCgb,OAAS,GAAEhb,KACXkW,QAAU,GAGRlW,KAAKgS,MAAQA,EACbhS,KAAK+a,QAAUA,EACf/a,KAAK4J,GAAKA,EACV5J,KAAKC,KAAOA,EAAKzE,QAAQ,2BAA4B,IACrDwE,KAAKib,OAAQ,EAGfnB,UACE,GAAI9Z,KAAKkb,SACP,OAAOlb,KAAKkb,SAEd,MAAMxI,EAAO1S,KAAK+a,QAAQrE,SAAS,gBACnC,IAAKhE,EAAM,CACT,MAAMyI,EAAU5U,KAAKG,OAAO3M,OAAOgX,KAAK/Q,KAAKgS,MAAMpY,WAC7CyB,EAAO2E,KAAKgS,MAAM3W,KAAK8f,GAC7B,OAAOnb,KAAKkb,SAAY7f,EAAOA,EAAKsB,KAAK4K,GAAKA,EAAEuS,WAAa1gB,QAAQC,QAAQ,MAE/E,OAAO2G,KAAKkb,SAAW9hB,QAAQC,QAAQqZ,EAAOkH,GAAY3G,KAAKC,MAAMR,IAAS,MAGhF+H,WACE,OAAOza,KAAKT,KAAK,gBAGnB6W,QAAQnW,GACN,OAAOD,KAAK+a,QAAQ3E,QAAQD,GAAOlW,IAGrCV,KAAKU,GACH,OAAID,KAAKgb,OAAOI,eAAenb,GACtBD,KAAKgb,OAAO/a,GAEdD,KAAKgb,OAAO/a,GAAQD,KAAK+a,QAAQrE,SAASzW,GAEnDxF,OAAOwF,GACL,OAAOD,KAAK+a,QAAQzE,WAAWrW,GAGjC0a,KAAK1D,GACH,OAAOjX,KAAK+a,QAAQ/D,SAASC,GAG/ByD,MAAMza,EAAMob,GACV,OAAOrb,KAAK+a,QAAQnE,UAAU3W,IAASD,KAAKgS,MAAM0I,MAAMza,EAAMob,GAGhET,KAAKhR,GACH,MAAM8Q,EAAQ1a,KAAK+a,QAAQnE,UAAUhN,GACrC,OAAI8Q,EACK,CACLY,gBAAe,OAAAxJ,OAAS4I,EAAK,KAC7Ba,eAAgB,QAGXvb,KAAKgS,MAAM4I,KAAKhR,GAI3BiR,WAAW5a,GACT,OAAOD,KAAK4a,KAAKtF,EAASrV,KAIf,MAAMub,WAAiBzJ,EAKpCnE,YAAY6N,GACV3N,QAAQ9N,KA8CV0b,UAAY,GAAE1b,KACd2b,UAAY,GAAE3b,KACd4b,SAAW,GAAE5b,KACb6b,KAAO,GAhDL7b,KAAKyb,KAAOA,EAEZ,IACEzb,KAAK8b,UAAY,IAAIC,KAAW,WAChC/b,KAAKgc,UAAY,IAAID,KAAW,YAChC,MAAOjd,GACPkB,KAAK8b,UAAY,KACjB9b,KAAKgc,UAAY,KAGnB,MAAMC,EAAQ,CACZjc,KAAKvD,MAAM,kBAAmB,CAACyF,KAAM,WACrClC,KAAKvD,MAAM,uBAETuD,KAAKgc,WACPC,EAAMhY,KAAKjE,KAAKgc,UAAUpJ,QAE5B5S,KAAKkc,MAAQ9iB,QAAQ+iB,IAAIF,GAAOtf,KAAKoP,IAA+B,IAA7BqQ,EAAQxiB,EAAUyiB,GAAMtQ,EAC7D/L,KAAKsc,OAAS,IAAIC,IAClB,MAAMC,EAAY,IAAIxe,YAAYoe,GAClC,IAAK,IAAInV,EAAI,EAAGA,EAAIuV,EAAUjhB,OAAQ0L,GAAK,EAAG,CAE5C,MAAMwV,EAAM9G,EAAQ6G,EAAUnb,SAAS4F,EAAGA,EAAI,IAC9CjH,KAAKsc,OAAO7D,IAAIgE,EAAMxV,EAAI,EAAK,OAGjCjH,KAAKpG,SAAWA,EAASA,SAErByiB,IACFrc,KAAK6b,KAAOQ,EACZrc,KAAKyb,KAAKiB,eAGR9iB,EAAS+iB,SACX3c,KAAK2c,OAAS,GACd3c,KAAK4c,WAAa,GAClB7iB,OAAO8iB,QAAQjjB,EAAS+iB,QAAQ5V,QAAQ+V,IAAgB,IAAdlT,EAAIH,GAAKqT,EACjD9c,KAAK6b,KAAKjS,GAAMH,EAAKxJ,KACrBD,KAAK2c,OAAO/S,GAAMH,EAAKpO,KACvB2E,KAAK4c,WAAWhT,GAAMH,EAAKsT,UAWnCC,UACE,OAAOhd,KAAKvD,MAAM,gBAAiB,CAACyF,KAAM,SAAUiR,QAAQ,IAE9D0F,OACE,OAAI7Y,KAAKid,MACAjd,KAAKid,MAEPjd,KAAKid,MAAQjd,KAAKgd,UAAUrgB,KAAKtB,GAAQ8c,EAAY9c,IAG9D6hB,QAAQ3C,GACN,SAAUva,KAAK6b,KAAKtB,IAAWva,KAAK2c,OAAOpC,IAG7Clf,KAAKkf,GACH,OAAIva,KAAK6b,KAAKtB,GACRva,KAAK4b,SAASrB,GACTva,KAAK4b,SAASrB,GAEnBva,KAAK2c,QAAU3c,KAAK2c,OAAOpC,GACtBva,KAAK4b,SAASrB,GAASva,KAAKvD,MAAK,QAAAqV,OAAS9R,KAAK2c,OAAOpC,IAAU,CAACrY,KAAM,SAAUiR,QAAQ,IAC7FxW,KAAKtB,GAAQ8c,EAAY9c,IACzBsB,KAAKwgB,GAAO,IAAIrC,GAAQ9a,KAAMmd,EAAK5C,EAAOva,KAAK6b,KAAKtB,KAEhDva,KAAK4b,SAASrB,GAASva,KAAK8b,UAAU5W,IAAIqV,GAC9C5d,KAAK2X,GAAQnZ,GAASmZ,IACtB3X,KAAKtB,GAAQ8c,EAAY9c,IACzBsB,KAAKwgB,GAAO,IAAIrC,GAAQ9a,KAAMmd,EAAK5C,EAAOva,KAAK6b,KAAKtB,KACpDtQ,MAAM7O,GAAOhC,QAAQE,OAAOqgB,GAAcve,EAAIwa,WAAY,YAEtD5V,KAAKpG,SAAS2gB,GACnBva,KAAK0b,UAAUnB,GACVva,KAAK0b,UAAUnB,GAEjBva,KAAK0b,UAAUnB,GAASnhB,QAAQC,QAAQ,IAAIihB,GAASta,KAAMua,EAAOva,KAAKpG,SAAS2gB,KAElF,KAET6C,QAAQ7C,GACN,SAAUva,KAAK6b,KAAKtB,KAAUva,KAAKpG,SAAS2gB,IAG9CK,KAAKhR,GACH,MAAMtB,EAAQtI,KAAKsc,OAAOpX,IAAIyQ,EAAQ/L,IACtC,GAAItB,EAAO,CACT,MAAM+U,EAAM/U,EAAQ,GACdgV,GAAQhV,EAAQ,GAAM,GAAK,GAEjC,MAAO,CACLgT,gBAAe,iBAAAxJ,OAFFxJ,EAAQ,IAAO,EAEW,SACvCiV,mBAAkB,IAAAzL,OAAY,GAANuL,EAAQ,QAAAvL,OAAa,GAANwL,EAAQ,OAGjD,OAAO,KAGXzC,WAAW5a,GACT,OAAOD,KAAK4a,KAAKtF,EAASrV,IAG5Bya,MAAMza,EAAMob,GAEV,MAAMoB,EAAM9G,EADHQ,GAAOlW,GAAM,IAEtB,IAAIb,EAAI,eAAA0S,OAAkB2K,GAI1B,OAHIpB,IACFjc,GAAI,YAAA0S,OAAgBuJ,IAEfjc,EAGT3E,OAAOwF,EAAMob,GAEX,MAAMoB,EAAM9G,EADHQ,GAAOlW,GAAM,IAEtB,IAAIb,EAAI,cAAA0S,OAAiB2K,GAIzB,OAHIpB,IACFjc,GAAI,YAAA0S,OAAgBuJ,IAEfjc,EAGToe,QAAQje,GACNS,KAAKyd,WACL,MAAM5E,EAAO7Y,KAAKgd,UAClB7hB,GAASoE,GAAM5C,KAAKmc,IAClB9Y,KAAK0d,OAAS,IAAItE,EAClBpZ,KAAK0d,OAAOrE,WAAasE,IAAS3d,KAAKyb,KAAKmC,cAAcD,IAC1D3d,KAAKyb,KAAKoC,aAAate,EAAKU,MAC5BD,KAAK0d,OAAOxK,MAAM2F,EAAMC,GACrBnc,KAAKtB,WACG2E,KAAK0d,OAEZ,IAAI9T,EAAK,EACT,KAAO5J,KAAK6b,KAAKT,eAAc,MAAAtJ,OAAOlI,KACpCA,GAAM,EAERA,EAAE,MAAAkI,OAASlI,GAEP5J,KAAK8b,WACP1iB,QAAQ+iB,IAAI,CACVnc,KAAKgc,UAAUvD,IAAI7O,EAAIrK,EAAKU,MAC5BD,KAAK8b,UAAUrD,IAAI7O,EAAI,IAAImN,KAAK,CAAC1b,GAAO,CAAC6G,KAAM,gCAC9C+H,MAAM,KACPjK,KAAKgc,UAAU8B,OAAOlU,GACtB5J,KAAK8b,UAAUgC,OAAOlU,KAI1B5J,KAAK6b,KAAO,IAAI7b,KAAK6b,KAAM7Z,CAAC4H,GAAKrK,EAAKU,MACtCD,KAAK4b,SAAShS,GAAMuO,EAAY9c,GAAMsB,KAAKwgB,GAAO,IAAIrC,GAAQ9a,KAAMmd,EAAKvT,EAAIrK,EAAKU,OAC/EgK,MAAM7O,GAAOhC,QAAQE,OAAOqgB,GAAcve,EAAIwa,WAAY,YAE7D5V,KAAKyb,KAAKsC,cAAcnU,KAEzBK,MAAM7O,WACE4E,KAAK0d,OAEZ1d,KAAKyb,KAAKuC,YAA2B,kBAAR5iB,GAAmBA,GAChD8B,QAAQG,MAAMjC,OAItBqiB,WACMzd,KAAK0d,SACP1d,KAAK0d,OAAO1E,mBACLhZ,KAAK0d,QAIhBO,UAAUrU,GACJ5J,KAAK6b,KAAKjS,IACRpQ,OAAO0kB,QAAO,mCAAApM,OAAoC9R,KAAK6b,KAAKjS,GAAG,QACjE5J,KAAK6b,KAAO,IAAI7b,KAAK6b,aACd7b,KAAK6b,KAAKjS,UACV5J,KAAK4b,SAAShS,GACjB5J,KAAK8b,YACP9b,KAAK8b,UAAUgC,OAAOlU,GACtB5J,KAAKgc,UAAU8B,OAAOlU,IAExB5J,KAAKyb,KAAKiB,gBAnMGlB,GACZ2C,QAAUtT,IAAMuT,cAAc,MADlB5C,GAEZ6C,YAAcxT,IAAMuT,cAAc,MAFtB5C,GAGZ8C,YAAczT,IAAMuT,cAAc,ICjJ3C,MAAMG,GAAe1T,IAAMuT,cAAc,MAE1B,MAAMI,WAAc3T,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAUrDgL,SAAW,GAEXwE,oBACMxP,KAAK6N,UACP7N,KAAK6N,QAAQ7C,SAAS/G,KAAKjE,MAC3BA,KAAK6N,QAAQ6Q,eAGjB9O,qBACE5P,KAAK0e,cAEPhP,uBACE,GAAI1P,KAAK6N,QAAS,CAChB,IAAIvF,EAAQtI,KAAK6N,QAAQ7C,SAAS2T,QAAQ3e,MACtCsI,GAAS,IACXtI,KAAK6N,QAAQ7C,SAAS4T,OAAOtW,EAAO,GAChCA,GAAStI,KAAK6N,QAAQ7C,SAASzP,QACjCyE,KAAK6N,QAAQ6Q,gBAMrBA,cACE,IAAIjD,EAAOzb,KACX,KAAOyb,EAAK5N,SACV4N,EAAOA,EAAK5N,QAEdrV,SAAS+X,MAAQkL,EAAKoD,WAExBA,SAAS3G,GACP,IAAI3H,MAACA,EAAKuO,SAAEA,GAAY9e,KAAKyL,MAO7B,OANIyM,IACF3H,EAAQuO,EAAS5G,EAAM3H,IAErBvQ,KAAKgL,SAASzP,SAChBgV,EAAQvQ,KAAKgL,SAAShL,KAAKgL,SAASzP,OAAS,GAAGsjB,SAAStO,IAEpDA,EAGTxF,SACE,MAAMC,SAACA,GAAYhL,KAAKyL,MACxB,OAAKT,EAIHH,IAAAgB,cAAC0S,GAAaQ,SAAQ,CAAC9P,MAAOjP,MAC3BgL,GAJI,MAtDQwT,GACZQ,YAAcT,GADFC,GAMZ7R,aAAe,CACpBmS,SAAUA,CAAC5G,EAAM+G,IAAO,GAAAnN,OAAQoG,EAAI,OAAApG,OAAMmN,ICV/B,MAAMC,WAAgBrU,IAAMC,UAGzC8C,YAAYnC,GACVqC,MAAMrC,GAEN,MAAM8D,EAAQ,GACd,GAAI/V,OAAO2lB,aAAc,CACvB,MAAMlQ,EAAQzV,OAAO2lB,aAAaC,QAAQ,WAC1C,GAAInQ,EACF,IACElV,OAAOC,OAAOuV,EAAO0D,KAAKC,MAAMjE,IAChC,MAAOnQ,KAIbyQ,EAAM8P,OAAS,EAACpf,EAAMgP,IAAUjP,KAAK8O,SAAS,CAAC9M,CAAC/B,GAAOgP,KACvDjP,KAAKuP,MAAQA,EAGfK,qBACE,GAAIpW,OAAO2lB,aAAc,CACvB,MAAM5M,EAAM,IAAIvS,KAAKuP,cACdgD,EAAI8M,OACX7lB,OAAO2lB,aAAaG,QAAQ,UAAWrM,KAAKsM,UAAUhN,KAI1DxH,SACE,OACEF,IAAAgB,cAACqT,GAAQf,QAAQY,SAAQ,CAAC9P,MAAOjP,KAAKuP,OACnCvP,KAAKyL,MAAMT,WA/BCkU,GACZf,QAAUtT,IAAMuT,cAAc,uDCHxBoB,WAAA,CACbC,KAAQ,QACRC,KAAQ,QACRC,aAAgB,gBAChBC,OAAU,UACVC,QAAW,YACXC,KAAQ,gBACRC,QAAW,aCEb,MAAMC,GAAkBjU,IAAA,IAAGC,OAASiU,QAAQ1F,MAAEA,EAAKrY,KAAEA,KAAU6J,EAAA,OAC7DlB,IAAAgB,cAACqU,KAAW,CAACC,SAAS,UAAU5P,MAAO6P,GAAYle,IAAS,UAAWsR,OAA6B,MAArB4M,GAAYle,GAAe0H,GAAG,gBAC1G7P,OAAOgX,KAAKqP,IAAatH,IAAI1R,GAC5ByD,IAAAgB,cAACwU,gBAAa,CAACxJ,IAAKzP,EAAGkZ,GAAE,IAAAxO,OAAMyI,EAAK,KAAAzI,OAAI1K,IACtCyD,IAAAgB,cAAC0U,KAAQ,CAACJ,SAAQ,WAAArO,OAAa1K,IAC7ByD,IAAAgB,cAAA,QAAMT,UAAS,cAAA0G,OAAgB1K,KAAQgZ,GAAYhZ,QAOvDoZ,GAAaA,IAAM3V,IAAAgB,cAACC,IAAK,CAAC1M,KAAK,iBAAiBqhB,UAAWT,KAqElDU,OA1CGA,IAChB7V,IAAAgB,cAAC2P,GAAS6C,YAAYsC,SAAQ,KAC3BtlB,GACCwP,IAAAgB,cAAChB,IAAM+V,SAAQ,KAEb/V,IAAAgB,cAAA,MAAIT,UAAU,YACZP,IAAAgB,cAACwU,gBAAa,CAACjV,UAAU,QAAQkV,GAAE,IAAAxO,OAAMzW,EAAKuO,IAAMqB,OAAK,GACvDJ,IAAAgB,cAACgV,KAAO,CAACV,SAAS,SAAS9kB,EAAK4E,OAGlC4K,IAAAgB,cAACwU,gBAAa,CAACC,GAAE,IAAAxO,OAAMzW,EAAKuO,GAAE,WAC5BiB,IAAAgB,cAACgV,KAAO,CAACV,SAAS,SAAQ,YAGzB9kB,EAAK4f,OAAS5f,EAAK+a,QAAQ,kBAC5BvL,IAAAgB,cAAChB,IAAM+V,SAAQ,KACb/V,IAAAgB,cAAA,MAAIT,UAAU,OAAM,OACpBP,IAAAgB,cAAC2U,GAAU,SAGXnlB,EAAK4f,OACPpQ,IAAAgB,cAAChB,IAAM+V,SAAQ,KACb/V,IAAAgB,cAAA,MAAIT,UAAU,OAAM,OACpBP,IAAAgB,cAACwU,gBAAa,CAACC,GAAE,IAAAxO,OAAMzW,EAAKuO,GAAE,SAC5BiB,IAAAgB,cAACgV,KAAO,CAACV,SAAS,OAAM,UAI5B9kB,EAAK+a,QAAQ,cAAgB/a,EAAK+a,QAAQ,wBAC1CvL,IAAAgB,cAAChB,IAAM+V,SAAQ,KACb/V,IAAAgB,cAAA,MAAIT,UAAU,OAAM,OACpBP,IAAAgB,cAACwU,gBAAa,CAACC,GAAE,IAAAxO,OAAMzW,EAAKuO,GAAE,YAC5BiB,IAAAgB,cAACgV,KAAO,CAACV,SAAS,UAAS,eC5EpC,MAAMW,GAAWjW,IAAMuT,eAAc,GAE/B2C,IADYlW,IAAMuT,eAAc,GACrBvT,IAAMuT,cAAc,IAC/B4C,GAAUnW,IAAMuT,cAAc,IAC9B6C,GAAQpW,IAAMuT,cAAc,IAC5B8C,GAAiBrW,IAAMuT,mBAAczlB,GAErCwoB,GAAapV,IAAA,IAACqV,OAACA,GAAOrV,EAAA,OACjClB,IAAAgB,cAAC2P,GAAS6C,YAAYsC,SAAQ,KAC3B3O,IACC,IAAKoP,GAAyB,MAAfA,EAAOxG,KACpB,OAAO,KAET,MAAMA,EAAO5I,EAAM4I,KAAKwG,EAAOxG,MAC/B,OAAO/P,IAAAgB,cAAA,QAAMT,UAAU,OAAOE,MAAOsP,OAKpC,SAASyG,GAAU/f,EAAKwH,GAC7B,GAAIA,GAAKxH,EAAI/F,OAAQ,OAAQ,EAC7B,IAAI+lB,GAAQ,EACZ,MAAOxY,EAAGA,EAAIxH,EAAI/F,SAAUuN,EAI1B,GAHe,MAAXxH,EAAIwH,KACNwY,GAASA,GAEI,MAAXhgB,EAAIwH,KAAewY,EACrB,OAAOxY,EAGX,OAAOA,EAGF,MAAMyY,GAAc,CACzBC,KAAQ,2BACRC,KAAQ,gCACRC,KAAQ,6BACRC,KAAQ,kCACRC,KAAQ,mBACRC,KAAQ,yBACRC,KAAQ,8BACRC,KAAQ,0BACRC,KAAQ,+BACRC,KAAQ,8BACRC,KAAQ,mCACRC,KAAQ,qCACRC,KAAQ,0CACRC,KAAQ,6BACRC,KAAQ,kCACRC,KAAQ,8BACRC,KAAQ,mCACRC,KAAQ,kCACRC,KAAQ,uCACRC,KAAQ,6BACRC,KAAQ,kCACRC,KAAQ,8BACRC,KAAQ,mCACRC,KAAQ,4BACRC,KAAQ,iCACRC,KAAQ,gCACRC,KAAQ,qCACRC,KAAQ,sBACRC,KAAQ,2BACRC,KAAQ,0CACRC,KAAQ,+CACRC,KAAQ,2BACRC,KAAQ,gCACRC,KAAQ,mCACRC,KAAQ,wCACRC,KAAQ,kCACRC,KAAQ,uCACRC,KAAQ,4BACRC,KAAQ,iCACRC,KAAQ,mCACRC,KAAQ,wCACRC,KAAQ,uCACRC,KAAQ,4CACRC,KAAQ,oBACRC,KAAQ,yBACRC,KAAQ,8BACRC,KAAQ,qCACRC,KAAQ,0CACRC,KAAQ,mCACRC,KAAQ,wCACRC,KAAQ,6BACRC,KAAQ,+BACRC,KAAQ,mBACRC,KAAQ,mBACRC,KAAQ,sBAGGC,GAAW,CACtBC,EAAK,YACLC,EAAK,UACLC,EAAK,gBACLC,EAAK,YACLC,EAAK,UACLC,EAAK,gBACLC,EAAK,UACLC,EAAK,UACLC,EAAK,mBACLC,EAAK,iBACLC,EAAK,mBACLC,EAAK,mBACLC,EAAK,YACLC,EAAK,UACLC,EAAK,eACLC,EAAK,cACLC,EAAK,UACLC,EAAK,eACLC,IAAK,OAEMC,GAAuB,CAClCb,EAAK,sBACLc,EAAK,mBACLnB,EAAK,iBAEMoB,GAAiB,CAC5BR,EAAK,QACLS,EAAK,aACLX,EAAK,QACLJ,EAAK,gBACLgB,EAAK,cACLT,EAAK,aAEMU,GAAW,CACtBC,KAAQ,WACRC,KAAQ,YACRC,KAAQ,kBACRC,KAAQ,kBACRC,KAAQ,kBACRC,KAAQ,kBACRC,KAAQ,kBACRC,KAAQ,kBACRC,KAAQ,kBACRC,KAAQ,kBACRC,KAAQ,mBAGH,SAASC,GAAUhG,EAAQ/D,GAAe,IAAV/U,EAAKwE,UAAAvR,OAAA,QAAA5C,IAAAmU,UAAA,GAAAA,UAAA,IAAE,EAC5C,MAAM4F,EAAO0O,EAAO/lB,KAAKgiB,EAAIpD,gBAAkB,GAC/C,GAAI3R,EAAQ,EAAG,CACb,MAAM+e,EAAMhG,GAAU3O,GAAO,GAC7B,OAAI2U,GAAO,GAAKA,GAAO3U,EAAKnX,QAAsB,MAAZmX,EAAK,IAAgC,MAAlBA,EAAK2U,EAAM,GAC3D3U,EAAK3W,OAAO,EAAGsrB,EAAM,GAErB3U,EAEJ,CACL,IAAItC,GAAO,EACPkX,EAAM,EACNpP,EAAO,EACX,MAAQ9H,EAAMiR,GAAU3O,EAAMtC,KAAS,GAAG,CACxC,GAAIkX,IAAQhf,EACV,OAAI8H,EAAM8H,GAAQ,GAAoB,MAAfxF,EAAKwF,IAAmC,MAAlBxF,EAAKtC,EAAM,GAC/CsC,EAAK3W,OAAOmc,EAAO,EAAG9H,EAAM8H,EAAO,GAEnCxF,EAAK3W,OAAOmc,EAAM9H,EAAM8H,GAGnCA,EAAO9H,EAAM,EACbkX,IAEF,MAAO,IAIJ,SAASC,GAAenG,EAAQ/lB,EAAMmsB,EAAUhe,GACrD,MAAMtH,EAAuB,SAAhBkf,EAAOlf,KAAkB,OAASkf,EAAOlf,KAChD2W,EAAOxd,EAAKwd,KAAK3W,IAAS,GAc1BulB,EAASpK,IACbA,EAAMA,EAAIpD,cACHmH,EAAO/lB,KAAKgiB,IAAQvK,SAASsO,EAAO/lB,KAAKgiB,GAAM,KAAO,GAG/D,IAAIqK,EAAM,EACNC,EAAS,EACb,OAAQvG,EAAOlf,MACf,IAAK,OAEDwlB,EADED,EAAO,UACH,EACGrG,EAAOxX,GAAGoC,MAAM,UACnB,EAEA,EAER,MACF,IAAK,OACH0b,EAAM,EACN,MACF,IAAK,UACHC,EAASF,EAAO,UACZrG,EAAO/lB,KAAK8I,MACdqF,EAAS,OAAQge,EAAW,OAAS,eAAgBpG,EAAO/lB,KAAK8I,KAAM,CAACjC,KAAM,aAEhF,MACF,IAAK,SACHylB,EAASF,EAAO,UAChB,MACF,IAAK,UACHE,EAASF,EAAO,YAKlB,MAAMG,EAAY,IAAIrL,IACtB1D,EAAK9R,QAAQuW,GAAOsK,EAAUnP,IAAI6E,EAhDlBzE,KACd,GAAoB,YAAhBuI,EAAOlf,KAAoB,OAAO2W,EAAKnE,QAC3C,MAAM1L,EAAI6P,EAAKgP,MAAM7b,MAAM,yBAC3B,IAAKhD,EAAG,OAAO6P,EAAKnE,QACpB,MACMoT,GADS1G,EAAO/lB,KAAI,SAAAyW,OAAU9I,EAAE,MAAS,IAC7BgD,MAAM,wBACxB,IAAK8b,EAAI,OAAO,KAChB,MAAM7nB,EAAOshB,GAAYuG,EAAG,GAAK9e,EAAE,GAAG,IACtC,OAAK/I,EACE4Y,EAAKnE,QAAQlZ,QAAQ,KAAMyE,GADhB,MAwCmB8nB,CAAQzK,KAC/CzE,EAAK3L,OAAOoQ,GAAOsK,EAAU1iB,IAAIoY,IAAM0K,KAAK,CAAC3f,EAAG1K,KAC/B,GAAV0K,EAAEoO,UAA2B,GAAV9Y,EAAE8Y,QAA+B,GAAVpO,EAAEoO,QAAyB,GAAV9Y,EAAE8Y,OAC9DpO,EAAE4f,WAAatqB,EAAEsqB,SAAiB5sB,EAAK6sB,WAAW7f,EAAE4f,UAAUE,cAAc9sB,EAAK6sB,WAAWvqB,EAAEsqB,WAC3FL,EAAU1iB,IAAImD,GAAG8f,cAAcP,EAAU1iB,IAAIvH,KACnDoJ,QAAQuW,IACT,IAAKA,EAAI7G,MAAQiR,KAASA,EACxB,OAEF,GAAIpK,EAAI8K,UAAY9K,EAAI8K,SAASzJ,QAAwB,YAAhByC,EAAOlf,KAAqBkf,EAAO/lB,KAAK8I,KAAOid,EAAOxX,IAAM,EACnG,OAGF,GAAiB,GAAZ0T,EAAI7G,QAAgBkR,EACvB,OAGF,IAAIE,EAAQvK,EAAIuK,MAIhB,GAHIvK,EAAIjiB,OACNwsB,GAASnmB,OAAOC,aAAa,GAAK2b,EAAIjiB,KAAO,IAE/B,GAAZiiB,EAAI7G,MACN,IAAK,IAAIxP,EAAI,EAAGA,EAAI0gB,IAAU1gB,EAAG,CAC/B,IAAIohB,EAAQR,EACRvK,EAAIhV,MAAQ,IACE,GAAZgV,EAAI7G,MACFxP,EAAI,IAAGohB,GAASphB,GAEpBohB,GAAUphB,EAAI,GAGlB,MAAMgI,EAASqO,EAAIhV,MAAQ,EAAI8e,GAAUhG,EAAQiH,GAAQ,GAAKjB,GAAUhG,EAAQyG,EAAO5gB,GACvFuC,EAAQ,GAAAsI,OAAI+V,GAAK/V,OAAG7K,GAAKugB,EAAWa,EAAK,SAAAvW,OAAY7K,EAAI,EAAC,OAAA6K,OAAMzW,EAAK6sB,WAAW5K,EAAI2K,UAAS,OAAAnW,OAAM8V,EAAU1iB,IAAIoY,IAAQrO,EAAOqO,OAE7H,CACL,MAAMrO,EAAQmY,GAAUhG,EAAQyG,EAAOvK,EAAIhV,OAC3CkB,EAAQ,GAAAsI,OAAI+V,GAAK/V,OAAGwL,EAAIhV,OAASkf,EAAWK,EAAK,GAAA/V,OAAMzW,EAAK6sB,WAAW5K,EAAI2K,UAAS,OAAAnW,OAAM8V,EAAU1iB,IAAIoY,IAAQrO,EAAOqO,MAK7H,MAAMgL,GAAgB,GAEtBA,GAAc7I,KAAO,CACnB,CACExf,KAAM8Z,GAAOA,EAAIwO,KAAO,eAAiB,iBACzCC,MAAO,CAAC,iBAAkB,iBAE5B,CACEvoB,KAAM8Z,IACJ,OAAQA,EAAI1e,KAAKotB,MACjB,IAAK,QAAS,MAAO,QACrB,IAAK,MAAO,MAAO,MACnB,IAAK,SAAU,MAAO,SACtB,IAAK,WAAY,MAAO,YACxB,IAAK,OAAQ,MAAO,iBACpB,QACE,OAAI3V,SAASiH,EAAI1e,KAAKqtB,WAAY,IACzB,kBAEA,oBAIbF,MAAO,CAAC,QAAS,MAAO,SAAU,YAAa,iBAAkB,kBAAmB,oBAEtF,CACEvoB,KAAM8Z,GAAOjH,SAASiH,EAAI1e,KAAKstB,SAAU,IAAM,WAAa,QAC5DH,MAAO,CAAC,QAAS,aAEnB,CACEvoB,KAAM8Z,GACAjH,SAASiH,EAAI1e,KAAKutB,QAAS,IACtB,UACE9V,SAASiH,EAAI1e,KAAKwtB,OAAQ,IAC5B,YACE9O,EAAInQ,GAAGoC,MAAM,UACf,SAEA,QAGXwc,MAAO,CAAC,QAAS,YAAa,SAAU,aAI5CF,GAAc5I,KAAO,CACnB,CACEzf,KAAM8Z,GAAOA,EAAIwO,KAAO,eAAiB,iBACzCC,MAAO,CAAC,iBAAkB,iBAE5B,CACEvoB,KAAM8Z,IACJ,OAAQA,EAAI1e,KAAKytB,OACjB,IAAK,UAAW,MAAO,WACvB,QAAS,OAAO/O,EAAI1e,KAAKytB,QAG3BN,MAAO,CAAC,YAAa,UAAW,WAAY,WAAY,cAAe,WAAY,mBAIvFF,GAAc3I,aAAe,CAC3B,CACE1f,KAAM8Z,GAAOA,EAAIwO,KAAO,uBAAyB,yBACjDC,MAAO,CAAC,yBAA0B,yBAEpC,CACEvoB,KAAM8Z,IACJ,OAAQA,EAAI1e,KAAK4sB,UACjB,IAAK,IAAK,MAAO,sBACjB,IAAK,IAAK,MAAO,mBACjB,IAAK,IAAK,MAAO,gBACjB,QAAS,MAAO,WAGlBO,MAAO,CAAC,sBAAuB,mBAAoB,gBAAiB,YAIxEF,GAAc1I,OAAS,CACrB,CACE3f,KAAM8Z,GAAOA,EAAIwO,KAAO,iBAAmB,mBAC3CC,MAAO,CAAC,mBAAoB,mBAE9B,CACEvoB,KAAM8Z,IACJ,OAAQA,EAAI1e,KAAK4sB,UACjB,IAAK,IAAK,MAAO,QACjB,IAAK,IAAK,MAAO,aACjB,IAAK,IAAK,MAAO,QACjB,IAAK,IAAK,MAAO,gBACjB,IAAK,IAAK,MAAO,cACjB,IAAK,IAAK,MAAO,YACjB,QAAS,MAAO,WAGlBO,MAAO,CAAC,QAAS,aAAc,QAAS,gBAAiB,cAAe,YAAa,YAIzFF,GAAczI,QAAU,CACtB,CACE5f,KAAM8Z,GAAOA,EAAIwO,KAAO,mBAAqB,qBAC7CC,MAAO,CAAC,qBAAsB,qBAEhC,CACEvoB,KAAM8Z,IACJ,OAAQA,EAAI1e,KAAKotB,MACjB,IAAK,QAAS,MAAO,QACrB,IAAK,MAAO,MAAO,MACnB,IAAK,SAAU,MAAO,SACtB,IAAK,WAAY,MAAO,YACxB,IAAK,SAAU,MAAO,kBACtB,IAAK,OACL,IAAK,QAAS,MAAO,kBACrB,QAAS,MAAO,YAGlBD,MAAO,CAAC,QAAS,MAAO,SAAU,YAAa,kBAAmB,kBAAmB,YAEvF,CACEvoB,KAAM8Z,GACAjH,SAASiH,EAAI1e,KAAK0tB,KAAM,IACnB,SACEjW,SAASiH,EAAI1e,KAAKqkB,KAAM,IAC1B,QAEA,QAGX8I,MAAO,CAAC,QAAS,SAAU,WAI/BF,GAAcxI,KAAO,CACnB,CACE7f,KAAM8Z,GAAOA,EAAIwO,KAAO,uBAAyB,yBACjDC,MAAO,CAAC,yBAA0B,yBAEpC,CACEvoB,KAAM8Z,IACJ,OAAQA,EAAI1e,KAAKotB,MACjB,IAAK,QAAS,MAAO,QACrB,IAAK,MAAO,MAAO,MACnB,IAAK,SAAU,MAAO,SACtB,IAAK,WAAY,MAAO,YACxB,QAAS,MAAO,YAGlBD,MAAO,CAAC,QAAS,MAAO,SAAU,YAAa,YAEjD,CACEvoB,KAAM8Z,GACAjH,SAASiH,EAAI1e,KAAK2tB,SAAU,IACvB,SAEA,OAGXR,MAAO,CAAC,OAAQ,YAIpBF,GAAcvI,QAAU,CACtB,CACE9f,KAAM8Z,GAAOA,EAAIwO,KAAO,kBAAoB,oBAC5CC,MAAO,CAAC,oBAAqB,oBAE/B,CACEvoB,KAAM8Z,IACJ,OAAQA,EAAI1e,KAAKotB,MACjB,IAAK,QAAS,MAAO,QACrB,IAAK,MAAO,MAAO,MACnB,IAAK,SAAU,MAAO,SACtB,IAAK,WAAY,MAAO,YACxB,QAAS,MAAO,YAGlBD,MAAO,CAAC,QAAS,MAAO,SAAU,YAAa,sFClbnD,MAAMS,GACJrb,YAAY1L,EAAM0Q,EAAMyJ,GACtBrc,KAAKkC,KAAOA,EACZlC,KAAK4S,KAAOA,EACZ5S,KAAKqc,MAAQA,EAETrc,KAAK4S,KACP5S,KAAKkpB,MAAQ,GAEblpB,KAAKmpB,SAAW,GAIpBC,SAASxf,GACH5J,KAAK4S,MACP5S,KAAKqpB,MAAQ,GACbrpB,KAAKkpB,MAAMtf,GAAM5J,KAAKqpB,OAEtBrpB,KAAKmpB,SAASllB,KAAI,IAAA6N,OAAKlI,EAAE,MAI7B0f,QAAQzS,EAAK5H,GACPjP,KAAK4S,KACP5S,KAAKqpB,MAAMxS,GAAO5H,EAElBjP,KAAKmpB,SAASllB,KAAI,GAAA6N,OAAI+E,EAAG,KAAA/E,OAAI7C,IAIjCsa,aAAata,EAAO4J,EAAMxd,GACxB,IAAI6G,EAAO2W,EAAK3W,KAIhB,GAHa,kBAATA,IACFA,EAAO,mBAEL7G,EAAKmuB,MAAMtnB,GACb,OAAK+M,GAAmB,MAAVA,EACP5T,EAAKmuB,MAAMtnB,GAAM+M,IAAU,QADE,OAGtC,OAAQ/M,GACR,IAAK,OAAQ,OAAO4Q,SAAS7D,EAAO,IAAM,OAAS,QACnD,IAAK,SAAU,MAAiB,MAAVA,EAAgB,GAAKA,EAC3C,IAAK,OAAQ,OAAOA,EACpB,IAAK,MAAO,OAAO6D,SAAS7D,EAAO,KAAO,EAC1C,IAAK,OACL,IAAK,SAAU,OAAQwa,WAAWxa,IAAU,GAAGya,QAAQ7Q,EAAK8Q,WAAa,GACzE,IAAK,uBAAwB,OAAOxD,GAAqBlX,IAAUA,EACnE,IAAK,cAAe,OAAO8V,GAAS9V,IAAUA,EAC9C,IAAK,iBAAkB,OAAOoX,GAAepX,IAAUA,EAEvD,IAAK,WACH,GAAIuX,GAASvX,GAAQ,OAAOuX,GAASvX,GAEvC,IAAK,WAAY,IAAK,WACtB,IAAK,aAAc,IAAK,aACxB,IAAK,WAAY,IAAK,WACtB,IAAK,WAAY,IAAK,cAAe,IAAK,kBAC1C,IAAK,WAAY,IAAK,WACtB,IAAK,cAAe,IAAK,cACvB,GAAc,MAAVA,EAAe,MAAO,GAC1B,MAAM8K,EAAM1e,EAAKye,QAAQ8P,KAAK7P,GAAOA,EAAInQ,KAAOqF,GAChD,OAAO8K,EAAMA,EAAI9Z,KAAOgP,EAC1B,QACE,MAAiB,MAAVA,GAAiBA,GAAS,QAIrC4a,UAAU5a,EAAO4J,EAAMxd,GACrB,GAAIwd,EAAK3W,KAAKyc,QAAQ,SAAW,EAC/B,MAAc,MAAV1P,GAA2B,KAAVA,EACZ,GAEFA,EAAM6a,MAAM,KAAKhR,IAAIiR,GAAQ/pB,KAAKupB,aAAaQ,EAAMlR,EAAMxd,IAAO6Q,KAAK,MACzE,GAAI2M,EAAK3W,KAAKyc,QAAQ,UAAY,EAAG,CAC1C,MAAMqL,EAASlX,SAAS7D,EAAO,IAC/B,MAAO,IAAIjC,MAAM,KAAK8L,IAAI,CAACvR,EAAGN,IAAMA,GAAGiG,OAAOjG,GAA6B,KAAtB,GAAKA,EAAK+iB,IAAelR,IAAImR,GAAQjqB,KAAKupB,aAAaU,EAAMpR,EAAMxd,IAAO6Q,KAAK,MAC/H,MAAkB,WAAd2M,EAAK3W,KACA,MAAV+M,EACK,GAEFA,EAEAjP,KAAKupB,aAAata,EAAO4J,EAAMxd,GAI1C6uB,cAAcnQ,EAAK1e,GACjB2E,KAAKopB,SAASrP,EAAInQ,IACd5J,KAAKqc,MAAQ,EACfkL,GAAexN,EAAK1e,EAAqB,IAAf2E,KAAKqc,MAAa,CAACxF,EAAK5W,EAAMgP,EAAO4J,KAC1C,IAAf7Y,KAAKqc,QACPpN,EAAQjP,KAAK6pB,UAAU5a,EAAO4J,EAAMxd,IAEtC2E,KAAKspB,QAAQrpB,EAAMgP,KAGrBlV,OAAOgX,KAAKgJ,EAAI1e,MAAM2sB,OAAOjhB,QAAQ8P,GAAO7W,KAAKspB,QAAQzS,EAAKkD,EAAI1e,KAAKwb,KAI3Eze,QAAQiD,GACNA,EAAKye,QAAQ/S,QAAQgT,IACD,QAAd/Z,KAAKkC,MAAkBlC,KAAKkC,OAAS6X,EAAI7X,MAG7ClC,KAAKkqB,cAAcnQ,EAAK1e,KAG5B8uB,cAAc9uB,GACZ,MAAM0e,EAAoB,QAAd/Z,KAAKkC,KAAiB7G,EAAKye,QAAQ,GAAKze,EAAKye,QAAQ8P,KAAK7P,GAAOA,EAAI7X,OAASlC,KAAKkC,MAC3F6X,GACF/Z,KAAKkqB,cAAcnQ,EAAK1e,GAI5B+uB,aACE,OAAkB,IAAdpqB,KAAK4S,KACA5S,KAAKmpB,SAASjd,KAAK,QACH,IAAdlM,KAAK4S,KACPK,KAAKsM,UAAUvf,KAAKkpB,OAAO1tB,QAAQ,MAAO,QAE1CyX,KAAKsM,UAAUvf,KAAKkpB,MAAO,KAAM,GAAG1tB,QAAQ,MAAO,QAI9D6uB,cACE,IAAIptB,EAQJ,OAPkB,IAAd+C,KAAK4S,KACP3V,EAAM+C,KAAKmpB,SAASjd,KAAK,MACF,IAAdlM,KAAK4S,KACd3V,EAAMgW,KAAKsM,UAAUvf,KAAKkpB,OACH,IAAdlpB,KAAK4S,OACd3V,EAAMgW,KAAKsM,UAAUvf,KAAKkpB,MAAO,KAAM,IAElCjsB,EAAIxB,MAAM,EAAG,MAIT,MAAM6uB,WAAqBzf,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAG5DuP,MAAQ,GAAEvP,KAKVuqB,UAAY,EAACtqB,EAAMgP,KACjB,MAAMsD,EAAM,IAAIvS,KAAKiX,SACrB1E,EAAItS,GAAQgP,EACZjP,KAAK6N,QAAQwR,OAAO,eAAgB9M,KACrCvS,KAQDwqB,QAAU1rB,IAAKkB,KAAKuqB,UAAU,OAAQzrB,EAAEwQ,OAAOL,QAAMjP,KAErDyqB,WAAa,MACX,MAAMvoB,KAAEA,EAAI0Q,KAAEA,EAAIyJ,MAAEA,GAAUrc,KAAKiX,QAE7BwC,EAAO,IAAIwP,GAAa/mB,EAAM0Q,EAAMyJ,GAC1C5C,EAAKrhB,QAAQ4H,KAAKyL,MAAMpQ,MAExB,MAAMqvB,GAAU,IAAI/T,IAASgU,aAAcC,OAAOnR,EAAK2Q,QAEvD/V,EADa,IAAI0C,KAAK,CAAC2T,GAAU,CAACxoB,KAAM,eACrBA,EAAO,QAE1BlC,KAAKyL,MAAMof,WA3Bb5T,cACE,OAAOjX,KAAK6N,QAAQid,cAAgBR,GAAaS,aAQnDnb,qBACM5P,KAAKyL,MAAM2C,OAASpO,KAAKuP,MAAMnB,MACjCpO,KAAK8O,SAAS,CAACV,KAAMpO,KAAKyL,MAAM2C,MAAO,IAAMpO,KAAKuqB,UAAU,OAAQvqB,KAAKyL,MAAM2C,OAmBnFrD,SACE,MAAMqD,KAAEA,EAAIyc,OAAEA,GAAW7qB,KAAKyL,OACxBvJ,KAAEA,EAAI0Q,KAAEA,EAAIyJ,MAAEA,GAAUrc,KAAKiX,QAE7BwC,EAAO,IAAIwP,GAAa/mB,EAAM0Q,EAAMyJ,GAG1C,OAFA5C,EAAK0Q,cAAcnqB,KAAKyL,MAAMpQ,MAG5BwP,IAAAgB,cAACmf,IAAK,CAAC5c,OAAQA,EAAMyc,OAAQA,GAC3BhgB,IAAAgB,cAACmf,IAAMC,OAAM,CAACC,aAAW,GACvBrgB,IAAAgB,cAACmf,IAAMxM,MAAK,KAAC,kBAEf3T,IAAAgB,cAACmf,IAAMG,KAAI,KACTtgB,IAAAgB,cAAA,YACEhB,IAAAgB,cAACuf,KAAS,CAACC,UAAU,YACnBxgB,IAAAgB,cAACyf,KAAY,KAAC,eACdzgB,IAAAgB,cAAC0f,KAAW,CAACC,eAAe,SAASvc,MAAO/M,EAAMmN,SAAUrP,KAAKwqB,SAC9DzwB,OAAOgX,KAAKqP,IAAatH,IAAI1R,GAAKyD,IAAAgB,cAAA,UAAQgL,IAAKzP,EAAG6H,MAAO7H,GAAIgZ,GAAYhZ,KAC1EyD,IAAAgB,cAAA,UAAQoD,MAAM,OAAM,oBAGxBpE,IAAAgB,cAACuf,KAAS,KACRvgB,IAAAgB,cAAC4f,KAAK,CAACxrB,KAAK,OAAOyrB,QAAM,EAACC,QAAkB,IAAT/Y,EAAYvD,SAAUA,IAAMrP,KAAKuqB,UAAU,OAAQ,IAAI,QAEjF,IACT1f,IAAAgB,cAAC4f,KAAK,CAACxrB,KAAK,OAAOyrB,QAAM,EAACC,QAAkB,IAAT/Y,EAAYvD,SAAUA,IAAMrP,KAAKuqB,UAAU,OAAQ,IAAI,QAG1F1f,IAAAgB,cAAC4f,KAAK,CAACxrB,KAAK,OAAOyrB,QAAM,EAACC,QAAkB,IAAT/Y,EAAYvD,SAAUA,IAAMrP,KAAKuqB,UAAU,OAAQ,IAAI,kBAI5F1f,IAAAgB,cAACuf,KAAS,KACRvgB,IAAAgB,cAAC4f,KAAK,CAACxrB,KAAK,QAAQyrB,QAAM,EAACC,QAAmB,IAAVtP,EAAahN,SAAUA,IAAMrP,KAAKuqB,UAAU,QAAS,IAAI,gBAEpF,IACT1f,IAAAgB,cAAC4f,KAAK,CAACxrB,KAAK,QAAQyrB,QAAM,EAACC,QAAmB,IAAVtP,EAAahN,SAAUA,IAAMrP,KAAKuqB,UAAU,QAAS,IAAI,cAG7F1f,IAAAgB,cAAC4f,KAAK,CAACxrB,KAAK,QAAQyrB,QAAM,EAACC,QAAmB,IAAVtP,EAAahN,SAAUA,IAAMrP,KAAKuqB,UAAU,QAAS,IAAI,cAKjG1f,IAAAgB,cAAA,OAAKT,UAAU,eACZqO,EAAK4Q,UAGVxf,IAAAgB,cAACmf,IAAMY,OAAM,KACX/gB,IAAAgB,cAACggB,IAAM,CAACC,QAAQ,OAAOxb,QAAStQ,KAAKyqB,YAAY,YACjD5f,IAAAgB,cAACggB,IAAM,CAACvb,QAASua,GAAQ,aArFdP,GACZtL,YAAcE,GAAQf,QADVmM,GAEZS,aAAe,CAAC7oB,KAAM,MAAO0Q,KAAM,EAAGyJ,MAAO,UCxItD,MAAM0P,GAAahgB,IAAA,IAACqV,OAAEA,GAAQrV,EAAA,OAC5BlB,IAAAgB,cAACiV,GAASH,SAAQ,KACfqL,GACKA,EACE5K,EAAOmH,KACT,GAAAzW,OAAUsP,EAAOxX,GAAE,KAAAkI,OAAIsP,EAAOmH,KAAI,MAAAzW,OAAKsP,EAAOnhB,KAAI,KAElD,GAAA6R,OAAUsP,EAAOxX,GAAE,MAAAkI,OAAKsP,EAAOnhB,KAAI,KAG9BmhB,EAAOnhB,OAMhBgsB,GAAanP,IAAA,IAACsE,OAAEA,GAAQtE,EAAA,OAC5BjS,IAAAgB,cAACkV,GAASJ,SAAQ,KACfpG,GACC1P,IAAAgB,cAACmV,GAAQL,SAAQ,KACdze,GACC2I,IAAAgB,cAACoV,GAAMN,SAAQ,KACZ/W,GACCiB,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMyI,EAAK,KAAAzI,OAAI5P,EAAI,KAAA4P,OAAIsP,EAAOxX,IACpCwB,UAAW6E,IAAW,aAAc,CAAEkc,SAAUviB,IAAOwX,EAAOxX,GAAIwiB,SAAUhL,EAAOgL,YACnFvhB,IAAAgB,cAACsV,GAAU,CAACC,OAAQA,IACpBvW,IAAAgB,cAAA,QAAMT,UAAU,cAAaP,IAAAgB,cAACkgB,GAAU,CAAC3K,OAAQA,UAUjE,MAAMiL,GACJze,YAAYwT,EAAQkL,GAAQtsB,KAS5BusB,OAAS,EARPvsB,KAAKohB,OAASA,EACdphB,KAAKohB,OAAOkL,OAAStsB,KACrBA,KAAKohB,OAAOoL,QAAWC,KACrBA,EAAGzsB,KAAKohB,QACRphB,KAAKohB,OAAOkL,OAAOE,QAAQC,KAE7BzsB,KAAKssB,OAASA,EAGhBE,QAAQC,GACNA,EAAGzsB,MACHA,KAAKssB,OAAOE,QAAQC,GAEtBC,UAAUD,GACRA,EAAGzsB,MACHysB,EAAGzsB,KAAKohB,QAEVrW,SACE,OAAOF,IAAAgB,cAACogB,GAAU,CAAC7K,OAAQphB,KAAKohB,SAElCuL,WAAWrkB,GACT,OAAOtI,KAAK+K,UAIhB,MAAM6hB,GACJhf,YAAYkM,EAAS+S,EAASP,EAAQ/b,GASpC,GAT2CvQ,KAmG7C8sB,OAAS,MACH9sB,KAAK+sB,SACP/sB,KAAKgtB,WAELhtB,KAAKitB,WAtGPjtB,KAAKssB,OAASA,EACdtsB,KAAKktB,MAASZ,EAASA,EAAOY,MAAQ,EAAI,EAC1CltB,KAAKgQ,MAAQ8J,EAAQve,OACrByE,KAAKmtB,OAAS5c,EACVA,IACFvQ,KAAKuQ,MAAK,GAAAuB,OAAMvB,EAAK,MAAAuB,OAAK9R,KAAKgQ,MAAK,MAGlC6c,GAAWA,EAAQtxB,OAAQ,CAC7ByE,KAAKkN,OAAS2f,EAAQ,GACtB,MAAM3a,EAAO,GACb4H,EAAQ/S,QAAQgT,IACd,MAAMqT,EAAMP,EAAQ,GAAG5sB,KAAK8Z,GAC5B7H,EAAKkb,GAAQlb,EAAKkb,IAAQ,GAC1Blb,EAAKkb,GAAKnpB,KAAK8V,KAEjB,MAAMsT,EAAOR,EAAQpxB,MAAM,GAC3BuE,KAAKstB,eAAiB,GACtBttB,KAAKgL,SAAW6hB,EAAQ,GAAGrE,MAAMtb,OAAOkgB,IAAQd,GAAUpa,EAAKkb,IAAMtU,IAAIsU,GAChEptB,KAAKstB,eAAeF,GAAO,IAAIR,GAAY1a,EAAKkb,IAAQ,GAAIC,EAAMrtB,KAAMotB,SAGjFptB,KAAKgL,SAAW8O,EAAQhB,IAAIiB,GAAO,IAAIsS,GAAWtS,EAAK/Z,OAAOgoB,KAAK,CAAC3f,EAAG1K,IAAM0K,EAAE+Y,OAAOnhB,KAAKkoB,cAAcxqB,EAAEyjB,OAAOnhB,OAEpHD,KAAKutB,WAAajB,EAAS,EAAI,EAC/BtsB,KAAKgL,SAASjE,QAAQ+B,IACpBA,EAAE0kB,IAAMxtB,KAAKutB,WACbvtB,KAAKutB,YAAczkB,EAAEyjB,SAElBD,EAEMtsB,KAAKktB,MAAQ,EACtBltB,KAAK+sB,UAAW,EAEhB/sB,KAAK+sB,SAAW/sB,KAAKgQ,MAAQ,EAJ7BhQ,KAAK+sB,UAAW,EAOpBP,QAAQC,GACNA,EAAGzsB,MACHA,KAAKssB,QAAUtsB,KAAKssB,OAAOE,QAAQC,GAErCC,UAAUD,GACRA,EAAGzsB,MACHA,KAAKgL,SAASjE,QAAQ/C,GAAKA,EAAE0oB,UAAUD,IAGzCgB,UAAUjY,EAAO9J,GACf,IAAIpD,EAAQoD,EAAQ1L,KAAKgL,SAAS2T,QAAQjT,IAAU,EACpD,GAAIpD,GAAS,EACX,OAASA,EAAQtI,KAAKgL,SAASzP,QAC7ByE,KAAKgL,SAAS1C,GAAOklB,KAAOhY,EAGhCxV,KAAKutB,YAAc/X,EACfxV,KAAKssB,QAAUtsB,KAAK+sB,SACtB/sB,KAAKssB,OAAOmB,UAAUjY,EAAOxV,MACpBA,KAAK0tB,UACd1tB,KAAK0tB,SAAS1tB,KAAKusB,QAIvBA,aACE,OAAOvsB,KAAK+sB,SAAW/sB,KAAKutB,WAAa,EAG3CI,WAAWvM,GACT,GAAIphB,KAAKkN,OAAQ,CACf,MAAMjN,EAAOD,KAAKkN,OAAOjN,KAAKmhB,GACxBwM,EAAM5tB,KAAKstB,eAAertB,GAChC,GAAI2tB,EAEF,OADAA,EAAIX,SACGW,EAAID,WAAWvM,GAAUwM,EAAIJ,QAEjC,CACL,MAAMI,EAAM5tB,KAAKgL,SAAS4e,KAAK7P,GAAOA,EAAIqH,SAAWA,GACrD,GAAIwM,EACF,OAAOA,EAAIJ,IAGf,OAAO,EAGTP,UACOjtB,KAAK+sB,UAAY/sB,KAAKgQ,MAAQ,IACjChQ,KAAK+sB,UAAW,EACZ/sB,KAAKssB,QACPtsB,KAAKssB,OAAOmB,UAAUztB,KAAKutB,WAAa,EAAGvtB,OAKjDgtB,WACMhtB,KAAK+sB,UAAY/sB,KAAKssB,SACxBtsB,KAAK+sB,UAAW,EAChB/sB,KAAKssB,OAAOmB,UAAU,EAAIztB,KAAKutB,WAAYvtB,OAY/C+K,SACE,IAAI5B,EAAI,EAKR,OAJAnJ,KAAK0sB,UAAU7yB,GAAQsP,GAA0C,cAAnCtP,EAAKg0B,UAAUjgB,YAAY3N,MAAwBpG,EAAKuyB,SAAY,EAAI,GAClGjjB,IACFnJ,KAAKuQ,MAAK,GAAAuB,OAAM9R,KAAKmtB,OAAM,MAAArb,OAAK3I,EAAC,KAAA2I,OAAI9R,KAAKgQ,MAAK,MAE5ChQ,KAAKssB,OAIRzhB,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,cAAe,CAAE8c,SAAU/sB,KAAK+sB,SAAUX,SAAUpsB,KAAKosB,YAClFvhB,IAAAgB,cAAA,QAAMT,UAAU,SAASkF,QAAStQ,KAAK8sB,SACvCjiB,IAAAgB,cAAA,QAAMiiB,cAAe9tB,KAAK8sB,QAAQjiB,IAAAgB,cAAA,QAAMT,UAAU,SAChDP,IAAAgB,cAAA,QAAMT,UAAU,SAASpL,KAAKuQ,SAN3B,KAWXwd,gBAAgBzlB,GACd,GAAItI,KAAK+sB,SAAU,CACjB,IAAIiB,EAAO,EAAGC,EAAQjuB,KAAKgL,SAASzP,OAAS,EAC7C,KAAOyyB,EAAOC,GAAO,CACnB,MAAMC,EAAOF,EAAOC,EAAQ,GAAM,EAC9BjuB,KAAKgL,SAASkjB,GAAKV,IAAMllB,EAC3B2lB,EAAQC,EAAM,EAEdF,EAAOE,EAGX,OAAOluB,KAAKgL,SAASgjB,GAEvB,OAAO,KAETrB,WAAWrkB,GACT,GAAItI,KAAKssB,SAAWhkB,EAClB,OAAOtI,KAAK+K,SAEd,GAAI/K,KAAK+sB,SAAU,CACjB,IAAIiB,EAAO,EAAGC,EAAQjuB,KAAKgL,SAASzP,OAAS,EAC7C,KAAOyyB,EAAOC,GAAO,CACnB,MAAMC,EAAOF,EAAOC,EAAQ,GAAM,EAC9BjuB,KAAKgL,SAASkjB,GAAKV,IAAMllB,EAC3B2lB,EAAQC,EAAM,EAEdF,EAAOE,EAGX,MAAMC,EAAW7lB,EAAQtI,KAAKgL,SAASgjB,GAAMR,IACvCloB,EAAOtF,KAAKgL,SAASgjB,GAAMrB,WAAWwB,GAC5C,IAAIC,EAAY,KAUhB,OATIJ,EAAOhuB,KAAKgL,SAASzP,OAAS,EAE9B6yB,EADe,IAAbD,EACU,QAEA,OAEQ,IAAbA,IACTC,EAAY,YAEVpuB,KAAKssB,OAELzhB,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,SAAUme,IAClC9oB,GAIEA,IAMR,MAAM+oB,WAAmBxjB,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAClDuP,MAAQ,CAAE+e,OAAQ,GAAIC,cAAe,MAAMvuB,KAI3CwuB,gBAAmB1vB,KACD,KAAZA,EAAEkP,QACJhO,KAAK8O,SAAS,CAAEwf,OAAQ,GAAIC,cAAe,OACvCvuB,KAAKyuB,OACPzuB,KAAKyuB,MAAMC,qBAGhB1uB,KACDgP,SAAYlQ,KACV,MAAMzD,KAAEA,EAAI6G,KAAEA,GAASlC,KAAKyL,MACtB6iB,EAASxvB,EAAEwQ,OAAOL,MAAM9C,OAC9BjP,QAAQC,IAAImxB,GACZ,IAAIve,EAAQ,EAMZ,GAHC/P,KAAK2uB,MAAMjC,UAAW7yB,IACrBA,EAAKuyB,UAAW,IAEdkC,EAAQ,CACV,MAAMM,EAAK,IAAIC,OAAO,MAAQP,EAAO9yB,QAAQ,sBAAuB,QAAS,KACvEszB,EAAU/U,GACVA,EAAI7X,OAASA,OACblC,KAAK6N,UAAWkM,EAAInQ,GAAGoC,MAAM4iB,QAC7B7U,EAAI9Z,KAAK+L,MAAM4iB,QACf7U,EAAI1e,KAAK0zB,cAAehV,EAAI1e,KAAK0zB,YAAY/iB,MAAM4iB,MACtB,GAA7B7U,EAAI9Z,KAAK0e,QAAQ2P,MAOvBjzB,EAAKye,QAAQ/S,QAAQgT,IACnB,MAAMiV,EAAUF,EAAQ/U,GACpBiV,GACFjV,EAAIyS,QAAS3yB,IACXA,EAAKuyB,SAAWvyB,EAAKuyB,SAAW4C,EAC5Bn1B,EAAKuyB,UACPrc,QASN/P,KAAKyuB,OACPzuB,KAAKyuB,MAAMC,kBAEb1uB,KAAK8O,SAAS,CAAEwf,OAAQxvB,EAAEwQ,OAAOL,MAAOsf,cAAexe,MACxD/P,KAGD0tB,SAAW,MACT1tB,KAAK0c,gBACN1c,KAEDivB,YAAcC,KAA2B,IAA1B5mB,MAAEA,KAAU2O,GAASiY,EAClC,MAAMrY,IAAEA,EAAGvL,MAAEA,GAAU2L,EACjBkY,EAASnvB,KAAK2uB,MAAMZ,gBAAgBzlB,GAC1C,OACEuC,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,UAAW,CAAEmc,SAAU+C,GAAUA,EAAO/C,WAAavV,IAAKA,EAAKvL,MAAOA,GAC9FtL,KAAK2uB,MAAMhC,WAAWrkB,MAG5BtI,KAEDyqB,WAAa,MACXzqB,KAAK8O,SAAS,CAAEsgB,aAAcpvB,KAAKyL,MAAMvJ,SAC1ClC,KACDqvB,gBAAkB,MAChBrvB,KAAK8O,SAAS,CAAEsgB,cAAc,MAGhCrkB,SACE,MAAM1P,KAAEA,EAAI6G,KAAEA,EAAI0H,GAAEA,EAAEwB,UAAEA,KAAcK,GAAUzL,KAAKyL,OAC/C6iB,OAAEA,EAAMC,cAAEA,EAAaa,aAAEA,GAAiBpvB,KAAKuP,MACrD,IAAKvP,KAAK2uB,OAAS3uB,KAAK2uB,MAAMW,QAAUj0B,GAAQ2E,KAAK2uB,MAAMY,QAAUrtB,EAAM,CACzE,MAAM2qB,EAAUvE,GAAcpmB,GAC9B,IAAK2qB,EACH,OAAO,KAET7sB,KAAK2uB,MAAQ,IAAI/B,GAAYvxB,EAAKye,QAAQ5M,OAAO6M,GAAOA,EAAI7X,OAASA,GAAO2qB,GAC5E7sB,KAAK2uB,MAAMW,MAAQj0B,EACnB2E,KAAK2uB,MAAMY,MAAQrtB,EACnBlC,KAAK2uB,MAAMjB,SAAW1tB,KAAK0tB,SAC3BljB,WAAW,KACLxK,KAAKyuB,OACPzuB,KAAKyuB,MAAMC,oBAIjB,IAAKH,GAAiBvuB,KAAK2uB,MAAMa,MAAQ5lB,EAAI,CAC3C,MAAMwX,EAAS/lB,EAAKye,QAAQ8P,KAAK7P,GAAOA,EAAI7X,OAASA,GAAQ6X,EAAInQ,KAAOA,GACxE,GAAIwX,EAAQ,CACVphB,KAAK2uB,MAAMjB,SAAW,KACtB,MAAMplB,EAAQtI,KAAK2uB,MAAMhB,WAAWvM,GACpCphB,KAAK2uB,MAAMjB,SAAW1tB,KAAK0tB,SAC3B1tB,KAAK2uB,MAAMa,IAAM5lB,EACjBY,WAAW,KACLxK,KAAKyuB,OACPzuB,KAAKyuB,MAAMgB,YAAYnnB,MAK/B,OACEuC,IAAAgB,cAAC6jB,KAAK31B,OAAAC,OAAA,CAACoR,UAAW6E,IAAW7E,EAAW,eAAmBK,GACzDZ,IAAAgB,cAACye,GAAY,CAACjvB,KAAMA,EAAM+S,KAAMghB,EAAcvE,OAAQ7qB,KAAKqvB,kBAC3DxkB,IAAAgB,cAAA,OAAKT,UAAU,cACbP,IAAAgB,cAAC0f,KAAW,CAACrpB,KAAK,OAAO+M,MAAOqf,EAAQqB,YAAY,SAASzgB,UAAWlP,KAAKwuB,gBAAiBnf,SAAUrP,KAAKgP,WAC7GnE,IAAAgB,cAACggB,IAAM,CAACrY,SAAU4b,EAAc9e,QAAStQ,KAAKyqB,WAAYmF,OAAO,SAAQ/kB,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,kBAC1F5F,IAAAgB,cAACiV,GAASH,SAAQ,KACf6G,GACC3c,IAAAgB,cAACqV,GAAeP,SAAQ,KACrBkP,GAAYhlB,IAAAgB,cAACggB,IAAM,CAACrY,OAAQgU,EAAUlX,QAASuf,EAAUD,OAAO,SAAQ/kB,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,YAKlG5F,IAAAgB,cAAA,OAAKT,UAAU,mBACbP,IAAAgB,cAACikB,KAAS,KACPC,IAAA,IAACC,MAAEA,EAAKzD,OAAEA,GAAQwD,EAAA,OACjBllB,IAAAgB,cAACokB,KAAI,CAAC7kB,UAAU,cACd+E,IAAKtW,GAAQmG,KAAKyuB,MAAQ50B,EAC1Bm2B,MAAOA,EACPzD,OAAQA,EACR2D,SAAUlwB,KAAK2uB,MAAMpC,OACrB4D,UAAW,GACXlB,YAAajvB,KAAKivB,mBAvIrBZ,GAGJrP,YAAc8B,iBChQvB,SAASsP,GAAWC,EAAKC,GACvB,OAAOzZ,GAAOhM,IAAAgB,cAAA,QAAMP,MAAO,CAACglB,SAAQzZ,IAAKA,GAAMwZ,GAGlC,SAASE,GAAUthB,EAAO5T,GACvC,MAAM0O,EAAS,GACf,IAAIumB,EAAQ,KACR9C,EAAMzjB,EACVkF,EAAQA,EAAM6a,MAAM,MAAM5d,KAAK,MAC/B,MAAMskB,EAAQ,kEACd,IAAcxkB,EAAVkM,EAAO,EACX,KAAOlM,EAAQwkB,EAAMC,KAAKxhB,IAAQ,CAIhC,GAHIjD,EAAM1D,MAAQ4P,GAChBsV,EAAIvpB,KAAKgL,EAAMyhB,UAAUxY,EAAMlM,EAAM1D,QAEnC0D,EAAM,GAAI,CACZ,MAAMoV,EAAS/lB,GAAQA,EAAKye,QAAQ8P,KAAK7P,GAAOA,EAAInQ,KAAOoC,EAAM,IAC3D6K,EAAM7K,EAAM,GAAGiO,cACjBmH,GAAUA,EAAO/lB,KAAKwb,GACxB2W,EAAIvpB,KAAKwlB,WAAWrI,EAAO/lB,KAAKwb,KAAS7K,EAAM,GAAK,IAAM,IAE1DwhB,EAAIvpB,KAAK+H,EAAM,QAEK,MAAbA,EAAM,IAA2B,MAAbA,EAAM,GACnCwhB,EAAIvpB,KAAK4G,IAAAgB,cAAA,MAAIgL,IAAK2W,EAAIjyB,WACA,MAAbyQ,EAAM,IAA2B,MAAbA,EAAM,IAAcA,EAAM,MACnDskB,IACFvmB,EAAO9F,KAAKqsB,EAAMvmB,EAAOxO,SACzBiyB,EAAMzjB,EACNumB,EAAQ,MAENtkB,EAAM,KAERskB,EAAQF,GADR5C,EAAM,GACkB,IAAMxhB,EAAM,MAGxCkM,EAAOlM,EAAM1D,MAAQ0D,EAAM,GAAGzQ,OAQhC,OANI2c,EAAOjJ,EAAM1T,QACfiyB,EAAIvpB,KAAKgL,EAAMyhB,UAAUxY,IAEvBoY,GACFvmB,EAAO9F,KAAKqsB,EAAMvmB,EAAOxO,SAEpBwO,ECrCT,MAAM4mB,GAAiB5kB,IAAkB,IAAjB6kB,SAAEA,GAAU7kB,EAClC,MAAOqV,EAAQyP,GAAaC,mBAAS,MAYrC,OAVAC,oBAAU,KAKJH,GAJJI,iBAEEH,EADaD,GAIbK,IAED,CAACL,IAECxP,EAGHvW,IAAAgB,cAAA,WACEhB,IAAAgB,cAACqlB,KAAQ1S,MAAK,KAAE4C,EAAOnhB,MACvB4K,IAAAgB,cAACqlB,KAAQC,QAAO,KACb/P,EAAOgQ,aAAe,4BACtBhQ,EAAOxG,MACN/P,IAAAgB,cAAA,OACEnT,IAAK8iB,GAASd,MAAM0G,EAAOxG,MAC3ByW,IAAG,GAAAvf,OAAKsP,EAAOnhB,KAAI,SACnBmL,UAAU,kBAXAP,IAAAgB,cAACqlB,KAAQ1S,MAAK,KAAC,eAoCtB8S,OAjBCxU,IAA4B,IAA3B8T,SAAEA,EAAQ5lB,SAAEA,GAAU8R,EACrC,OACEjS,IAAAgB,cAAC6H,IAAc,CACbD,QACE5I,IAAAgB,cAACqlB,KAAO,CAACtnB,GAAG,YACViB,IAAAgB,cAAC8kB,GAAc,CAACC,SAAUA,MAGT,kBAAb5lB,EACNH,IAAAgB,cAAA,YAAOb,GAEPA,ICjDO,MAAMumB,GAInB3jB,YAAY7S,GAEViF,KAAKwxB,WAAa,IAAIjV,IAEtBvc,KAAKyxB,SAAW,IAAIlV,IAEhBxhB,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GAGH,IAAI42B,EAAU3xB,KAAKwxB,WACfC,EAAWzxB,KAAKyxB,SAEpB,IAAK,IAAInsB,KAAQvK,EAAO+uB,MAAM,YAK5B,GAAIxkB,EAAK/J,SAAW+J,EAAKxJ,WAAW,QAAUwJ,EAAKxJ,WAAW,KAAM,CAClE,IAAIkQ,EAAQ1G,EAAK0G,MAAM,cAEvB,GAAIA,EAAO,CACT,IAAI/L,EAAO+L,EAAM,GAAGG,OAAO8N,eAE3B0X,EAAUF,EAASvsB,IAAIjF,MAGrB0xB,EAAU,IAAIpV,IAEdkV,EAAShZ,IAAIxY,EAAM0xB,SAGrB3lB,EAAQ1G,EAAK0G,MAAM,mBAGjB2lB,EAAQlZ,IAAIzM,EAAM,GAAGiO,cAAejO,EAAM,KAUpD4lB,OACE,IAAI5Z,EAAQ,GAEZ,IAAK,IAAKnB,EAAK5H,KAAUjP,KAAKwxB,WAC5BxZ,EAAM/T,KAAI,GAAA6N,OAAI+E,EAAG,KAAA/E,OAAI7C,IAGvB,IAAK,IAAKhP,EAAM0xB,KAAY3xB,KAAKyxB,SAAU,CACzCzZ,EAAM/T,KAAI,IAAA6N,OAAK7R,EAAI,MAEnB,IAAK,IAAK4W,EAAK5H,KAAU0iB,EACvB3Z,EAAM/T,KAAI,GAAA6N,OAAI+E,EAAG,KAAA/E,OAAI7C,IAIzB,OAAO+I,EAAM9L,KAAK,QAOpB2lB,WAAW5xB,GACT,OAAOD,KAAKyxB,SAASvsB,IAAIjF,EAAKga,gBChFnB,IAAA6X,GAAA,CACbP,YCAa,MAAMQ,GAInBnkB,YAAY7S,GAEViF,KAAKgyB,KAAO,GAERj3B,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAKA,EAAOe,WAAW,MACrB,MAAM,IAAIgB,MAAM,oBAGlB,IAAIk1B,EAAOhyB,KAAKgyB,KACZhuB,EAAI,EACJiuB,EAAI,EAER,IAAK,IAAI3sB,KAAQvK,EAAO+uB,MAAM,MAG5B,GAAgB,MAAZxkB,EAAK,GACP,IAAK,IAAI4sB,KAAS5sB,EAAKwkB,MAAM,KAAM,CACjC,IAEI7a,EAFAkjB,EAAKD,EAAM,GACXE,EAAcF,EAAMxB,UAAU,GAAGvkB,OAG1B,MAAPgmB,EACFnuB,EAAI8O,SAASsf,EAAa,IAAM,EAChB,MAAPD,EACTF,EAAInf,SAASsf,EAAa,IAAM,EAChB,MAAPD,GACJH,EAAKC,KACRD,EAAKC,GAAK,IAIVhjB,EADqB,MAAnBmjB,EAAY,GACNA,EAAY1B,UAAU,EAAG0B,EAAY72B,OAAS,GAC7B,SAAhB62B,GAEgB,UAAhBA,GAGD3I,WAAW2I,GAGrBJ,EAAKC,GAAGjuB,GAAKiL,GACG,MAAPkjB,IACJnyB,KAAKqyB,WACRryB,KAAKqyB,SAAW,IAEbryB,KAAKqyB,SAASJ,KACjBjyB,KAAKqyB,SAASJ,GAAK,IAErBjyB,KAAKqyB,SAASJ,GAAGjuB,GAAKouB,GAM9BpyB,KAAKsyB,KAAOtyB,KAAKgyB,KAAK7kB,OAAO,CAACnE,EAAGvB,IAAMlB,KAAKG,IAAIsC,EAAGvB,EAAElM,QAAS,ICpEnD,IAAAg3B,GAAA,CACbR,YCHF,IAAIh3B,GAAS,IAAIke,YAAY,GACzBuZ,GAAO,IAAI50B,UAAU7C,IACrB03B,GAAQ,IAAI50B,WAAW9C,IACvB23B,GAAQ,IAAI30B,WAAWhD,IACvB43B,GAAQ,IAAI33B,WAAWD,IACvB63B,GAAS,IAAI90B,YAAY/C,IACzB83B,GAAS,IAAI70B,YAAYjD,IACzB+3B,GAAU,IAAI70B,aAAalD,IAC3Bg4B,GAAU,IAAI70B,aAAanD,IAQxB,SAASi4B,GAAY3qB,GAG1B,OAFAsqB,GAAM,GAAKtqB,EAEJmqB,GAAK,GAUP,SAASS,GAAa5qB,EAAG1K,GAI9B,OAHAg1B,GAAM,GAAKtqB,EACXsqB,GAAM,GAAKh1B,EAEJ80B,GAAM,GA4BR,SAASS,GAAc7qB,EAAG1K,GAI/B,OAHAg1B,GAAM,GAAKtqB,EACXsqB,GAAM,GAAKh1B,EAEJi1B,GAAO,GAWT,SAASO,GAAc9qB,EAAG1K,EAAGmL,GAMlC,OALA6pB,GAAM,GAAKtqB,EACXsqB,GAAM,GAAKh1B,EACXg1B,GAAM,GAAK7pB,EACX6pB,GAAM,GAAK,EAEJE,GAAO,GAYT,SAASO,GAAc/qB,EAAG1K,EAAGmL,EAAG1D,GAMrC,OALAutB,GAAM,GAAKtqB,EACXsqB,GAAM,GAAKh1B,EACXg1B,GAAM,GAAK7pB,EACX6pB,GAAM,GAAKvtB,EAEJytB,GAAO,GAYT,SAASQ,GAAehrB,EAAG1K,EAAGmL,EAAG1D,GAMtC,OALAutB,GAAM,GAAKtqB,EACXsqB,GAAM,GAAKh1B,EACXg1B,GAAM,GAAK7pB,EACX6pB,GAAM,GAAKvtB,EAEJ0tB,GAAQ,GAgBV,SAASQ,GAAejrB,EAAG1K,EAAGmL,EAAG1D,EAAGtG,EAAGO,EAAGuJ,EAAGS,GAUlD,OATAspB,GAAM,GAAKtqB,EACXsqB,GAAM,GAAKh1B,EACXg1B,GAAM,GAAK7pB,EACX6pB,GAAM,GAAKvtB,EACXutB,GAAM,GAAK7zB,EACX6zB,GAAM,GAAKtzB,EACXszB,GAAM,GAAK/pB,EACX+pB,GAAM,GAAKtpB,EAEJ0pB,GAAQ,GASV,SAASQ,GAAYlrB,GAG1B,OAFAsqB,GAAM,GAAKtqB,EAEJmqB,GAAK,GAWP,SAASgB,GAAav2B,EAAKoL,GAMhC,OALAoqB,GAAM,GAAKpqB,EAEXpL,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GAER11B,EA6BF,SAASw2B,GAAax2B,EAAKoL,GAQhC,OAPAqqB,GAAM,GAAKrqB,EAEXpL,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GAER11B,EAWF,SAASy2B,GAAcz2B,EAAKoL,GAMjC,OALAuqB,GAAO,GAAKvqB,EAEZpL,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GAER11B,EA6BF,SAAS02B,GAAc12B,EAAKoL,GAQjC,OAPAwqB,GAAO,GAAKxqB,EAEZpL,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GAER11B,EAWF,SAAS22B,GAAe32B,EAAKoL,GAQlC,OAPAyqB,GAAQ,GAAKzqB,EAEbpL,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GAER11B,EAWF,SAAS42B,GAAe52B,EAAKoL,GAYlC,OAXA0qB,GAAQ,GAAK1qB,EAEbpL,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GACf11B,EAAI,GAAK01B,GAAM,GAER11B,EC/ST,IAAI01B,GAAQ,IAAI33B,WAAW,GAKZ,MAAM84B,GAMnBlmB,YAAY7S,EAAQg5B,EAAY9wB,GAQ9B,GANIgW,YAAYC,OAAOne,KAErBg5B,GADAh5B,EAASA,EAAOA,QACIg5B,WACpB9wB,EAAalI,EAAOkI,cAGhBlI,aAAkBke,aACtB,MAAM,IAAI+a,UAAS,8DAAAliB,OAA+D/W,IAIpFiF,KAAKjF,OAASA,EAEdiF,KAAKi0B,WAAa,IAAIj5B,WAAWD,EAAQg5B,EAAY9wB,GAErDjD,KAAKsI,MAAQ,EAEbtI,KAAKiD,WAAalI,EAAOkI,WAS3BixB,UAAUjxB,GACR,OAAO,IAAI6wB,GAAa9zB,KAAKjF,OAAQiF,KAAKsI,MAAOrF,GAQnDkxB,YACE,OAAOn0B,KAAKiD,WAAajD,KAAKsI,MAQhC8rB,KAAKC,GACHr0B,KAAKsI,OAAS+rB,EAQhBC,KAAKhsB,GACHtI,KAAKsI,MAAQA,EAQfisB,OACE,OAAOv0B,KAAKsI,MAUdksB,KAAKzxB,EAAM0xB,GACT,IAAIR,EAAaj0B,KAAKi0B,WAClB3rB,EAAQtI,KAAKsI,MACb4F,EAAQ,GAEZ,GAAI5F,EAAQvF,EAAOkxB,EAAW14B,OAC5B,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGA,EAAIlE,EAAMkE,IAAK,CAC7B,IAAItJ,EAAIs2B,EAAW3rB,EAAQrB,IAGvBwtB,GAAc92B,EAAI,IACpBuQ,EAAMjK,KAAKtG,GAIf,OAAO+D,OAAOC,gBAAgBuM,GAUhCymB,KAAK5xB,EAAM0xB,GAET1xB,EAAOA,GAAQ/C,KAAKm0B,YAEpB,IAAI94B,EAAO2E,KAAKw0B,KAAKzxB,EAAM0xB,GAI3B,OAFAz0B,KAAKsI,OAASvF,EAEP1H,EAQTu5B,gBACE,IAAIX,EAAaj0B,KAAKi0B,WAClB3rB,EAAQtI,KAAKsI,MACb3K,EAAIs2B,EAAW3rB,GACfrB,EAAI,EAER,KAAa,IAANtJ,GAAW2K,EAAQrB,EAAIgtB,EAAW14B,QAEvCoC,EAAIs2B,EAAW3rB,GADfrB,GAAK,IAIP,OAAOvF,OAAOC,gBAAgBsyB,EAAW5yB,SAASiH,EAAOA,EAAQrB,IASnE4tB,gBACE,IAAIx5B,EAAO2E,KAAK40B,gBAIhB,OAFA50B,KAAKsI,OAASjN,EAAKE,OAAS,EAErBF,EASTy5B,cAAc/xB,GACZ,IAAIkxB,EAAaj0B,KAAKi0B,WAClB3rB,EAAQtI,KAAKsI,MACbjN,EAAO,GAEX,GAAIiN,EAAQvF,EAAOkxB,EAAW14B,OAC5B,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGA,EAAIlE,EAAMkE,IACxB5L,EAAK4L,GAAKvF,OAAOC,aAAasyB,EAAW3rB,EAAQrB,IAGnD,OAAO5L,EAST05B,cAAchyB,GACZ,IAAI1H,EAAO2E,KAAK80B,cAAc/xB,GAI9B,OAFA/C,KAAKsI,OAASvF,EAEP1H,EAQT25B,WACE,IAAI1sB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,GAAI3rB,EAAQ,EAAI2rB,EAAW14B,OACzB,MAAM,IAAIm5B,WAAU,uCAGtB,IAAIr5B,EAAO23B,GAAYiB,EAAW3rB,IAIlC,OAFAtI,KAAKsI,OAAS,EAEPjN,EAQT45B,YACE,IAAI3sB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,GAAI3rB,EAAQ,EAAI2rB,EAAW14B,OACzB,MAAM,IAAIm5B,WAAU,uCAGtB,IAAIr5B,EAAO43B,GAAagB,EAAW3rB,GAAQ2rB,EAAW3rB,EAAQ,IAI9D,OAFAtI,KAAKsI,OAAS,EAEPjN,EAQT65B,YACE,IAAI5sB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,GAAI3rB,EAAQ,EAAI2rB,EAAW14B,OACzB,MAAM,IAAIm5B,WAAU,uCAGtB,IAAIr5B,GD7MqBgN,EC6MD4rB,EAAW3rB,GD7MP3K,EC6Mes2B,EAAW3rB,EAAQ,GD7M/BQ,EC6MmCmrB,EAAW3rB,EAAQ,GD7MnDlD,EC6MuD6uB,EAAW3rB,EAAQ,GD5M9GqqB,GAAM,GAAKtqB,EACXsqB,GAAM,GAAKh1B,EACXg1B,GAAM,GAAK7pB,EACX6pB,GAAM,GAAKvtB,EAEJstB,GAAM,IANR,IAAsBrqB,EAAG1K,EAAGmL,EAAG1D,ECiNlC,OAFApF,KAAKsI,OAAS,EAEPjN,EAQT85B,YACE,GAAIn1B,KAAKsI,MAAQ,EAAItI,KAAKi0B,WAAW14B,OACnC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAIr5B,EAAO2E,KAAKi0B,WAAWj0B,KAAKsI,OAIhC,OAFAtI,KAAKsI,OAAS,EAEPjN,EAQT+5B,aACE,IAAI9sB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQ,EAAI2rB,EAAW14B,OACzB,MAAM,IAAIm5B,WAAU,uCAGtB,IAAIr5B,EAAO63B,GAAce,EAAW3rB,GAAQ2rB,EAAW3rB,EAAQ,IAI/D,OAFAtI,KAAKsI,OAAS,EAEPjN,EAQTg6B,aACE,IAAI/sB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQ,EAAI2rB,EAAW14B,OACzB,MAAM,IAAIm5B,WAAU,uCAGtB,IAAIr5B,EAAO+3B,GAAca,EAAW3rB,GAAQ2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,IAI7G,OAFAtI,KAAKsI,OAAS,EAEPjN,EAQTi6B,cACE,IAAIhtB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQ,EAAI2rB,EAAW14B,OACzB,MAAM,IAAIm5B,WAAU,uCAGtB,IAAIr5B,EAAOg4B,GAAeY,EAAW3rB,GAAQ2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,IAI9G,OAFAtI,KAAKsI,OAAS,EAEPjN,EAQTk6B,cACE,IAAIjtB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQ,EAAI2rB,EAAW14B,OACzB,MAAM,IAAIm5B,WAAU,uCAGtB,IAAIr5B,EAAOi4B,GAAeW,EAAW3rB,GAAQ2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,GAAI2rB,EAAW3rB,EAAQ,IAI1M,OAFAtI,KAAKsI,OAAS,EAEPjN,EASTm6B,cAAcC,GACPxc,YAAYC,OAAOuc,KACtBA,EAAO,IAAI73B,UAAU63B,IAGvB,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQmtB,EAAKxyB,WAAagxB,EAAW14B,OACvC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IACtCwuB,EAAKxuB,GAAK+rB,GAAYiB,EAAW3rB,EAAQrB,IAK3C,OAFAjH,KAAKsI,OAASmtB,EAAKxyB,WAEZwyB,EASTC,eAAeD,GACRxc,YAAYC,OAAOuc,KACtBA,EAAO,IAAI53B,WAAW43B,IAGxB,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQmtB,EAAKxyB,WAAagxB,EAAW14B,OACvC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBwuB,EAAKxuB,GAAKgsB,GAAagB,EAAW0B,GAAS1B,EAAW0B,EAAS,IAKjE,OAFA31B,KAAKsI,OAASmtB,EAAKxyB,WAEZwyB,EASTG,eAAeH,GACRxc,YAAYC,OAAOuc,KACtBA,EAAO,IAAI13B,WAAW03B,IAGxB,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQmtB,EAAKxyB,WAAagxB,EAAW14B,OACvC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBwuB,EAAKxuB,GAAKgsB,GAAagB,EAAW0B,GAAS1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,IAKjH,OAFA31B,KAAKsI,OAASmtB,EAAKxyB,WAEZwyB,EASTI,eAAeJ,GACRxc,YAAYC,OAAOuc,KACtBA,EAAO,IAAIz6B,WAAWy6B,IAGxB,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQmtB,EAAKxyB,WAAagxB,EAAW14B,OACvC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IACtCwuB,EAAKxuB,GAAKgtB,EAAW3rB,EAAQrB,GAK/B,OAFAjH,KAAKsI,OAASmtB,EAAKxyB,WAEZwyB,EASTK,gBAAgBL,GACTxc,YAAYC,OAAOuc,KACtBA,EAAO,IAAI33B,YAAY23B,IAGzB,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQmtB,EAAKxyB,WAAagxB,EAAW14B,OACvC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBwuB,EAAKxuB,GAAKisB,GAAce,EAAW0B,GAAS1B,EAAW0B,EAAS,IAKlE,OAFA31B,KAAKsI,OAASmtB,EAAKxyB,WAEZwyB,EASTM,gBAAgBN,GACTxc,YAAYC,OAAOuc,KACtBA,EAAO,IAAIz3B,YAAYy3B,IAGzB,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQmtB,EAAKxyB,WAAagxB,EAAW14B,OACvC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBwuB,EAAKxuB,GAAKmsB,GAAca,EAAW0B,GAAS1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,IAKlH,OAFA31B,KAAKsI,OAASmtB,EAAKxyB,WAEZwyB,EASTO,iBAAiBP,GACVxc,YAAYC,OAAOuc,KACtBA,EAAO,IAAIx3B,aAAaw3B,IAG1B,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQmtB,EAAKxyB,WAAagxB,EAAW14B,OACvC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBwuB,EAAKxuB,GAAKosB,GAAeY,EAAW0B,GAAS1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,IAKnH,OAFA31B,KAAKsI,OAASmtB,EAAKxyB,WAEZwyB,EASTQ,iBAAiBR,GACVxc,YAAYC,OAAOuc,KACtBA,EAAO,IAAIv3B,aAAau3B,IAG1B,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQmtB,EAAKxyB,WAAagxB,EAAW14B,OACvC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBwuB,EAAKxuB,GAAKqsB,GAAeW,EAAW0B,GAAS1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,GAAI1B,EAAW0B,EAAS,IAKnN,OAFA31B,KAAKsI,OAASmtB,EAAKxyB,WAEZwyB,EAQTS,eAAeT,GACb,IAAI16B,EAAS,IAAIC,WAAWy6B,EAAK16B,OAAQ06B,EAAK1B,WAAY0B,EAAKxyB,YAC3DqF,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WACtB,GAAI3rB,EAAQvN,EAAOQ,OAAS04B,EAAW14B,OACrC,MAAM,IAAIm5B,WAAU,uCAGtB,IAAK,IAAIztB,EAAI,EAAGU,EAAI5M,EAAOQ,OAAQ0L,EAAIU,EAAGV,IACxClM,EAAOkM,GAAKgtB,EAAW3rB,EAAQrB,GAGjCjH,KAAKsI,OAASvN,EAAOQ,OAQvB46B,MAAMlnB,GACJ,IAAI3G,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAClBjkB,EAAQf,EAAM1T,OAElB,IAAK,IAAI0L,EAAI,EAAGA,EAAI+I,EAAO/I,IACzBgtB,EAAW3rB,EAAQrB,GAAKgI,EAAM/H,WAAWD,GAG3CjH,KAAKsI,OAAS0H,EAQhBomB,UAAUnnB,GACRjP,KAAKi0B,WAAWj0B,KAAKsI,OAASirB,GAAYtkB,GAC1CjP,KAAKsI,OAAS,EAQhB+tB,WAAWpnB,GACT,IAAI3G,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtBT,GAAab,GAAO1jB,GAEpBglB,EAAW3rB,GAASqqB,GAAM,GAC1BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAE9B3yB,KAAKsI,OAAS,EAQhBguB,WAAWrnB,GACT,IAAI3G,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtBR,GAAad,GAAO1jB,GAEpBglB,EAAW3rB,GAASqqB,GAAM,GAC1BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAE9B3yB,KAAKsI,OAAS,EAQhBiuB,WAAWtnB,GACTjP,KAAKi0B,WAAWj0B,KAAKsI,OAAS2G,EAC9BjP,KAAKsI,OAAS,EAQhBkuB,YAAYvnB,GACV,IAAI3G,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtBP,GAAcf,GAAO1jB,GAErBglB,EAAW3rB,GAASqqB,GAAM,GAC1BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAE9B3yB,KAAKsI,OAAS,EAQhBmuB,YAAYxnB,GACV,IAAI3G,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtBN,GAAchB,GAAO1jB,GAErBglB,EAAW3rB,GAASqqB,GAAM,GAC1BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAE9B3yB,KAAKsI,OAAS,EAQhBouB,aAAaznB,GACX,IAAI3G,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtBL,GAAejB,GAAO1jB,GAEtBglB,EAAW3rB,GAASqqB,GAAM,GAC1BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAE9B3yB,KAAKsI,OAAS,EAQhBquB,aAAa1nB,GACX,IAAI3G,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtBJ,GAAelB,GAAO1jB,GAEtBglB,EAAW3rB,GAASqqB,GAAM,GAC1BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAC9BsB,EAAW3rB,EAAQ,GAAKqqB,GAAM,GAE9B3yB,KAAKsI,OAAS,EAQhBsuB,eAAenB,GACb,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IACtCgtB,EAAW3rB,EAAQrB,GAAKssB,GAAYkC,EAAKxuB,IAG3CjH,KAAKsI,OAASmtB,EAAKxyB,WAQrB4zB,gBAAgBpB,GACd,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBusB,GAAab,GAAO8C,EAAKxuB,IAEzBgtB,EAAW0B,GAAUhD,GAAM,GAC3BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAGjC3yB,KAAKsI,OAASmtB,EAAKxyB,WAQrB6zB,gBAAgBrB,GACd,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBwsB,GAAad,GAAO8C,EAAKxuB,IAEzBgtB,EAAW0B,GAAUhD,GAAM,GAC3BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAGjC3yB,KAAKsI,OAASmtB,EAAKxyB,WAQrB8zB,gBAAgBtB,GACd,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IACtCgtB,EAAW3rB,EAAQrB,GAAKwuB,EAAKxuB,GAG/BjH,KAAKsI,OAASmtB,EAAKxyB,WAQrB+zB,iBAAiBvB,GACf,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErBysB,GAAcf,GAAO8C,EAAKxuB,IAE1BgtB,EAAW0B,GAAUhD,GAAM,GAC3BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAGjC3yB,KAAKsI,OAASmtB,EAAKxyB,WAQrBg0B,iBAAiBxB,GACf,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErB0sB,GAAchB,GAAO8C,EAAKxuB,IAE1BgtB,EAAW0B,GAAUhD,GAAM,GAC3BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAGjC3yB,KAAKsI,OAASmtB,EAAKxyB,WAQrBi0B,kBAAkBzB,GAChB,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErB2sB,GAAejB,GAAO8C,EAAKxuB,IAE3BgtB,EAAW0B,GAAUhD,GAAM,GAC3BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAGjC3yB,KAAKsI,OAASmtB,EAAKxyB,WAQrBk0B,kBAAkB1B,GAChB,IAAIntB,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI0uB,EAASrtB,EAAY,EAAJrB,EAErB4sB,GAAelB,GAAO8C,EAAKxuB,IAE3BgtB,EAAW0B,GAAUhD,GAAM,GAC3BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAC/BsB,EAAW0B,EAAS,GAAKhD,GAAM,GAGjC3yB,KAAKsI,OAASmtB,EAAKxyB,WAQrBm0B,gBAAgB3B,GACd,IAAI16B,EAAS,IAAIC,WAAWy6B,EAAK16B,QAC7BuN,EAAQtI,KAAKsI,MACb2rB,EAAaj0B,KAAKi0B,WAEtB,IAAK,IAAIhtB,EAAI,EAAGU,EAAI5M,EAAOQ,OAAQ0L,EAAIU,EAAGV,IACxCgtB,EAAW3rB,EAAQrB,GAAKlM,EAAOkM,ICv5BtB,MAAMowB,GAInBzpB,cAEE5N,KAAK4J,GAAK,WAEV5J,KAAKs3B,OAAS,EAMhB5F,KAAK9sB,GACH5E,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAKs3B,OAAS1yB,EAAOswB,YAMvBtD,KAAKhtB,GACHA,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO0xB,WAAWt2B,KAAKs3B,SCtBZ,MAAMC,GAInB3pB,cAEE5N,KAAKw3B,MAAQ,GAMf9F,KAAK9sB,GACH,IAAK,IAAIqC,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIyY,EAAO,IAAI2X,GAEf3X,EAAKgS,KAAK9sB,GAEV5E,KAAKw3B,MAAMvzB,KAAKyb,IAOpBkS,KAAKhtB,GACHA,EAAO6xB,YAAYz2B,KAAKw3B,MAAMj8B,QAE9B,IAAK,IAAImkB,KAAQ1f,KAAKw3B,MACpB9X,EAAKkS,KAAKhtB,GAOd6yB,gBACE,OAAO,EAAwB,EAApBz3B,KAAKw3B,MAAMj8B,QCrCX,MAAMm8B,GAInB9pB,cAEE5N,KAAK4J,GAAK,WAEV5J,KAAK23B,UAAY,EAEjB33B,KAAKpE,SAAW,IAAIqC,aAAa,GAEjC+B,KAAK43B,MAAQ,EAEb53B,KAAK63B,MAAQ,IAAI55B,aAAa,CAAC,EAAG,EAAG,IAErC+B,KAAKyW,MAAQ,EAEbzW,KAAK83B,KAAO,EAEZ93B,KAAK+3B,WAAa,EAElB/3B,KAAKg4B,SAAW,GAEhBh4B,KAAKi4B,SAAW,EAEhBj4B,KAAKwB,GAAK,IAAIxG,WAAW,GAO3B02B,KAAK9sB,EAAQuW,GASX,GARAnb,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAK23B,UAAY/yB,EAAOswB,YACxBl1B,KAAKpE,SAAWgJ,EAAOoxB,iBAAiB,GACxCh2B,KAAK43B,MAAQhzB,EAAO0wB,cACpBt1B,KAAK63B,MAAQjzB,EAAOoxB,iBAAiB,GACrCh2B,KAAKyW,MAAQ7R,EAAOuwB,YACpBn1B,KAAK83B,KAAOlzB,EAAOuwB,YAEfha,EAAU,EAAG,CACfnb,KAAK+3B,UAAYnzB,EAAOywB,aAExB,IAAK,IAAIpuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIixB,EAAU,IAAIX,GAElBW,EAAQxG,KAAK9sB,GAEb5E,KAAKg4B,SAAS/zB,KAAKi0B,IAIvBl4B,KAAKi4B,SAAWrzB,EAAOswB,YAOzBtD,KAAKhtB,EAAQuW,GASX,GARAvW,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO0xB,WAAWt2B,KAAK23B,WACvB/yB,EAAOsyB,kBAAkBl3B,KAAKpE,UAC9BgJ,EAAO8xB,aAAa12B,KAAK43B,OACzBhzB,EAAOsyB,kBAAkBl3B,KAAK63B,OAC9BjzB,EAAO2xB,WAAWv2B,KAAKyW,OACvB7R,EAAO2xB,WAAWv2B,KAAK83B,MAEnB3c,EAAU,EAAG,CACfvW,EAAO6xB,YAAYz2B,KAAK+3B,WACxBnzB,EAAO6xB,YAAYz2B,KAAKg4B,SAASz8B,QAEjC,IAAK,IAAI28B,KAAWl4B,KAAKg4B,SACvBE,EAAQtG,KAAKhtB,GAIjBA,EAAO0xB,WAAWt2B,KAAKi4B,UAOzBR,cAActc,GACZ,IAAIpY,EAAO,GAEX,GAAIoY,EAAU,EAAG,CACfpY,GAAQ,EAER,IAAK,IAAIm1B,KAAWl4B,KAAKg4B,SACvBj1B,GAAQm1B,EAAQT,gBAIpB,OAAO10B,GC9FI,MAAMo1B,GAInBvqB,cAEE5N,KAAK4J,GAAK,WAEV5J,KAAK23B,UAAY,EAEjB33B,KAAKpE,SAAW,IAAIoC,YAAY,GAOlC0zB,KAAK9sB,EAAQuW,GACXnb,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAK23B,UAAY/yB,EAAOywB,aACxBr1B,KAAKpE,SAAWgJ,EAAOmxB,gBAAgB,GAOzCnE,KAAKhtB,EAAQuW,GACXvW,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO6xB,YAAYz2B,KAAK23B,WACxB/yB,EAAOqyB,iBAAiBj3B,KAAKpE,WC/BlB,MAAMw8B,GAInBxqB,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAKwB,GAAK,IAAIxG,WAAW,GAEzBgF,KAAKq4B,QAAU,GAEfr4B,KAAKyB,GAAK,IAAIzG,WAAW,GAEzBgF,KAAKs4B,eAAiB,GAElBv9B,GACFiF,KAAK0xB,KAAK32B,GAQd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9B,GAAuB,SAAnB6J,EAAO+vB,KAAK,GACd,OAAO,EAGT30B,KAAKmb,QAAUvW,EAAOswB,YACtBl1B,KAAKwB,GAAKoD,EAAOixB,eAAe,GAEhC,IAAK,IAAI5uB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAI2Y,EAAS,IAAI8X,GAEjB9X,EAAO8R,KAAK9sB,EAAQ5E,KAAKmb,SAEzBnb,KAAKq4B,QAAQp0B,KAAK2b,GAGpB5f,KAAKyB,GAAKmD,EAAOixB,eAAe,GAEhC,IAAK,IAAI5uB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIsxB,EAAgB,IAAIJ,GAExBI,EAAc7G,KAAK9sB,EAAQ5E,KAAKmb,SAEhCnb,KAAKs4B,eAAer0B,KAAKs0B,GAG3B,OAAO,EAMT3G,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAOuxB,MAAM,QACbvxB,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAOmyB,gBAAgB/2B,KAAKwB,IAC5BoD,EAAO6xB,YAAYz2B,KAAKq4B,QAAQ98B,QAEhC,IAAK,IAAIqkB,KAAU5f,KAAKq4B,QACtBzY,EAAOgS,KAAKhtB,EAAQ5E,KAAKmb,SAG3BvW,EAAOmyB,gBAAgB/2B,KAAKyB,IAC5BmD,EAAO6xB,YAAYz2B,KAAKs4B,eAAe/8B,QAEvC,IAAK,IAAIg9B,KAAiBv4B,KAAKs4B,eAC7BC,EAAc3G,KAAKhtB,EAAQ5E,KAAKmb,SAGlC,OAAOpgB,EAMT08B,gBACE,IAAI10B,EAAO,GAAkC,GAA7B/C,KAAKs4B,eAAe/8B,OAEpC,IAAK,IAAIqkB,KAAU5f,KAAKq4B,QACtBt1B,GAAQ6c,EAAO6X,cAAcz3B,KAAKmb,SAGpC,OAAOpY,GC/FI,MAAMy1B,GAInB5qB,cAEE5N,KAAKy4B,SAAW,EAEhBz4B,KAAKC,KAAO,GAMdyxB,KAAK9sB,GACH5E,KAAKy4B,SAAW7zB,EAAOuwB,YACvBn1B,KAAKC,KAAO2E,EAAOiwB,gBAMrBjD,KAAKhtB,GACHA,EAAO2xB,WAAWv2B,KAAKy4B,UACvB7zB,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OAM3Bw3B,gBACE,OAAO,EAAIz3B,KAAKC,KAAK1E,QC7BV,MAAMm9B,GAInB9qB,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAK6c,QAAU,IAAIN,IACfxhB,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOywB,aAEtB,IAAK,IAAIpuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAI0xB,EAAQ,IAAIH,GAEhBG,EAAMjH,KAAK9sB,GAEP+zB,EAAMF,SACRz4B,KAAK6c,QAAQpE,IAAIkgB,EAAM14B,KAAM04B,GAE7B34B,KAAK6c,QAAQpE,IAAG,oBAAA3G,OAAqB6mB,EAAM14B,MAAQ04B,IAQzD/G,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAO6xB,YAAYz2B,KAAKmb,SACxBvW,EAAO6xB,YAAYz2B,KAAK6c,QAAQ9Z,MAEhC,IAAK,IAAI41B,KAAS34B,KAAK6c,QAAQhD,SAC7B8e,EAAM/G,KAAKhtB,GAGb,OAAO7J,EAMT08B,gBACE,IAAI10B,EAAO,EAEX,IAAK,IAAI41B,KAAS34B,KAAK6c,QAAQhD,SAC7B9W,GAAQ41B,EAAMlB,gBAGhB,OAAO10B,EAOT0V,IAAIxY,GACF,IAAKD,KAAK6c,QAAQ+b,IAAI34B,GAAO,CAC3B,IAAI04B,EAAQ,IAAIH,GAOhB,OALAG,EAAMF,SAAW,GACjBE,EAAMv5B,KAAOa,EAEbD,KAAK6c,QAAQpE,IAAIxY,EAAM04B,IAEhB,EAGT,OAAO,EAOTC,IAAI34B,GACF,OAAOD,KAAK6c,QAAQ+b,IAAI34B,GAO1B44B,OAAO54B,GACL,OAAOD,KAAK6c,QAAQgc,OAAO54B,GAQ7B64B,OAAO74B,EAAM84B,GACX,IAAIJ,EAAQ34B,KAAK6c,QAAQ3X,IAAIjF,GAE7B,QAAI04B,IACFA,EAAMF,SAAW,GACjBE,EAAMv5B,KAAO25B,GAEN,ICnHE,MAAMC,GAInBprB,cAEE5N,KAAK4J,GAAK,WAEV5J,KAAKi5B,aAAe,EAEpBj5B,KAAKk5B,iBAAmB,EAExBl5B,KAAKm5B,YAAc,EAEnBn5B,KAAKiP,MAAQ,EAEbjP,KAAKwB,GAAK,EAOZkwB,KAAK9sB,EAAQw0B,GASX,GARAp5B,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAKi5B,aAAer0B,EAAOswB,YAEvBkE,IACFp5B,KAAKk5B,iBAAmBt0B,EAAOswB,YAC/Bl1B,KAAKm5B,YAAcv0B,EAAOswB,aAGF,IAAtBl1B,KAAKi5B,aACPj5B,KAAKiP,MAAQrK,EAAOswB,iBACf,GAA0B,IAAtBl1B,KAAKi5B,cAA4C,IAAtBj5B,KAAKi5B,aACzCj5B,KAAKiP,MAAQrK,EAAO0wB,kBACf,IAA0B,IAAtBt1B,KAAKi5B,aAGd,MAAM,IAAIn8B,MAAK,uCAAAgV,OAAwC9R,KAAKi5B,eAF5Dj5B,KAAKiP,MAAQrK,EAAOiwB,gBAKtB70B,KAAKwB,GAAKoD,EAAOswB,YAOnBtD,KAAKhtB,EAAQw0B,GASX,GARAx0B,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO0xB,WAAWt2B,KAAKi5B,cAEnBG,IACFx0B,EAAO0xB,WAAWt2B,KAAKk5B,kBACvBt0B,EAAO0xB,WAAWt2B,KAAKm5B,cAGC,IAAtBn5B,KAAKi5B,aACPr0B,EAAO0xB,WAAWt2B,KAAKiP,YAClB,GAA0B,IAAtBjP,KAAKi5B,cAA4C,IAAtBj5B,KAAKi5B,aACzCr0B,EAAO8xB,aAAa12B,KAAKiP,WACpB,IAA0B,IAAtBjP,KAAKi5B,aAGd,MAAM,IAAIn8B,MAAK,uCAAAgV,OAAwC9R,KAAKi5B,eAF5Dr0B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKiP,MAAK,OAK5BrK,EAAO0xB,WAAWt2B,KAAKwB,IAOzBi2B,cAAc2B,GACZ,IAAIr2B,EAAO,GAYX,OAVIq2B,IACFr2B,GAAQ,GAGgB,IAAtB/C,KAAKi5B,aACPl2B,GAAQ,EAAI/C,KAAKiP,MAAM1T,OAEvBwH,GAAQ,EAGHA,GCtFI,MAAMs2B,GAInBzrB,cAEE5N,KAAKs5B,MAAQ,WAEbt5B,KAAKu5B,MAAQ,WAEbv5B,KAAKw5B,cAAgB,GAOvB9H,KAAK9sB,EAAQw0B,GACXp5B,KAAKs5B,MAAQ10B,EAAO+vB,KAAK,GAAG,GAC5B30B,KAAKu5B,MAAQ30B,EAAO+vB,KAAK,GAAG,GAE5B,IAAK,IAAI1tB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIwyB,EAAe,IAAIT,GAEvBS,EAAa/H,KAAK9sB,EAAQw0B,GAE1Bp5B,KAAKw5B,cAAcvyB,GAAKwyB,GAQ5B7H,KAAKhtB,EAAQw0B,GACPp5B,KAAKs5B,MACP10B,EAAOuxB,MAAMn2B,KAAKs5B,OAElB10B,EAAO6xB,YAAY,GAGjBz2B,KAAKu5B,MACP30B,EAAOuxB,MAAMn2B,KAAKu5B,OAElB30B,EAAO6xB,YAAY,GAGrB7xB,EAAO6xB,YAAYz2B,KAAKw5B,cAAcj+B,QAEtC,IAAK,IAAIk+B,KAAgBz5B,KAAKw5B,cAC5BC,EAAa7H,KAAKhtB,EAAQw0B,GAQ9B3B,cAAc2B,GACZ,IAAIr2B,EAAO,GAEX,IAAK,IAAI02B,KAAgBz5B,KAAKw5B,cAC5Bz2B,GAAQ02B,EAAahC,cAAc2B,GAGrC,OAAOr2B,GCjEI,MAAM22B,GAInB9rB,cAEE5N,KAAK8Z,QAAU,GAOjB4X,KAAK9sB,EAAQw0B,GACX,IAAK,IAAInyB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIma,EAAS,IAAIiY,GAEjBjY,EAAOsQ,KAAK9sB,EAAQw0B,GAEpBp5B,KAAK8Z,QAAQ7S,GAAKma,GAQtBwQ,KAAKhtB,EAAQw0B,GACXx0B,EAAO6xB,YAAYz2B,KAAK8Z,QAAQve,QAEhC,IAAK,IAAI6lB,KAAUphB,KAAK8Z,QACtBsH,EAAOwQ,KAAKhtB,EAAQw0B,GAQxB3B,cAAc2B,GACZ,IAAIr2B,EAAO,EAEX,IAAK,IAAIqe,KAAUphB,KAAK8Z,QACtB/W,GAAQqe,EAAOqW,cAAc2B,GAG/B,OAAOr2B,GC3CI,MAAM42B,GAInB/rB,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAK45B,cAAgB,IAAIF,GAEzB15B,KAAK65B,YAAc,IAAIH,GAEnB3+B,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOswB,YACtBl1B,KAAK45B,cAAclI,KAAK9sB,GAAQ,GAChC5E,KAAK65B,YAAYnI,KAAK9sB,GAAQ,GAMhCgtB,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAM9B,OAJA6J,EAAO0xB,WAAWt2B,KAAKmb,SACvBnb,KAAK45B,cAAchI,KAAKhtB,GAAQ,GAChC5E,KAAK65B,YAAYjI,KAAKhtB,GAAQ,GAEvB7J,EAMT08B,gBACE,OAAO,EAAIz3B,KAAK45B,cAAcnC,eAAc,GAAQz3B,KAAK65B,YAAYpC,eAAc,ICnDxE,MAAMqC,GAInBlsB,cAEE5N,KAAK+5B,aAAe,EAEpB/5B,KAAKg6B,YAAc,EAEnBh6B,KAAKi6B,QAAU,EAEfj6B,KAAKk6B,KAAO,EAEZl6B,KAAKm6B,OAAS,EAEdn6B,KAAKo6B,MAAQ,EAEbp6B,KAAKq6B,SAAW,EAEhBr6B,KAAKs6B,cAAgB,EAErBt6B,KAAKu6B,eAAiB,EAEtBv6B,KAAKw6B,gBAAkB,EAEvBx6B,KAAKy6B,aAAe,EAEpBz6B,KAAK06B,YAAc,EAMrBhJ,KAAK9sB,GACH5E,KAAK+5B,cAAgBn1B,EAAOqwB,YAAc,MAAQ,IAElD,IAAI0F,EAAe/1B,EAAOqwB,YAE1Bj1B,KAAKg6B,cAA+B,MAAfW,GAAyB,MAAQ,IACtD36B,KAAKi6B,QAAyB,MAAfU,EAEf,IAAIC,EAAkBh2B,EAAOuwB,YAE7Bn1B,KAAKk6B,KAAyB,GAAlBU,EACZ56B,KAAKm6B,OAA2B,GAAlBS,EACd56B,KAAKo6B,MAA0B,GAAlBQ,EACb56B,KAAKq6B,SAA6B,IAAlBO,EAEhB56B,KAAKs6B,cAAkC,GAAlBM,EAErB,IAAIjD,EAAY/yB,EAAOuwB,YAEvBn1B,KAAKu6B,gBAA8B,IAAZ5C,KAA4B,EACnD33B,KAAKw6B,gBAA8B,GAAZ7C,EAEvB,IAAIkD,EAAuBj2B,EAAOuwB,YAElCn1B,KAAKy6B,cAAuC,IAAvBI,KAAuC,EAC5D76B,KAAK06B,YAAqC,GAAvBG,EAMrBjJ,KAAKhtB,GACHA,EAAOyxB,WAA+B,IAApBr2B,KAAK+5B,aAAqB,MAC5Cn1B,EAAOyxB,WAA8B,IAAnBr2B,KAAKg6B,YAAoB,KAAOh6B,KAAKi6B,SAAW,IAClEr1B,EAAO2xB,WAAYv2B,KAAKk6B,MAAQ,EAAMl6B,KAAKm6B,QAAU,EAAMn6B,KAAKo6B,OAAS,EAAMp6B,KAAKq6B,UAAY,EAAKr6B,KAAKs6B,eAC1G11B,EAAO2xB,WAAYv2B,KAAKu6B,gBAAkB,EAAKv6B,KAAKw6B,iBACpD51B,EAAO2xB,YAAYv2B,KAAKy6B,cAAgB,GAAKz6B,KAAK06B,cCnEvC,MAAMI,GAInBltB,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAKqb,QAAU,IAEfrb,KAAK+6B,kBAAoB,EAEzB/6B,KAAKg7B,eAAiB,GAEtBh7B,KAAKi7B,cAAgB,GAErBj7B,KAAKk7B,QAAU,IAAIn9B,WAAW,GAE9BiC,KAAKm7B,aAAe,IAAIl9B,aAAa,GAErC+B,KAAKo7B,QAAU,GAEXrgC,aAAkBke,aACpBjZ,KAAK0xB,KAAK32B,GAQd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9B,GAAuB,SAAnB6J,EAAO+vB,KAAK,GACd,OAAO,EAGT30B,KAAKmb,QAAUvW,EAAOswB,YACtBl1B,KAAKqb,QAAUzW,EAAO+vB,KAAK,GAC3B30B,KAAK+6B,kBAAoBn2B,EAAOswB,YAEhC,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAC7CjH,KAAKg7B,eAAe/zB,GAAKrC,EAAO+vB,KAAK,GAGvC,IAAK,IAAI1tB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAC7CjH,KAAKi7B,cAAch0B,GAAKrC,EAAO+vB,KAAK,GAGtC30B,KAAKk7B,QAAUt2B,EAAOgxB,eAAe,GACrC51B,KAAKm7B,aAAev2B,EAAOoxB,iBAAiB,GAE5C,IAAKqF,EAASrJ,GAAQhyB,KAAKk7B,QAE3B,IAAK,IAAI5d,EAAM,EAAGA,EAAM0U,EAAM1U,IAAO,CACnCtd,KAAKo7B,QAAQ9d,GAAO,GAEpB,IAAK,IAAIge,EAAS,EAAGA,EAASD,EAASC,IAAU,CAC/C,IAAIC,EAAS,IAAIzB,GAEjByB,EAAO7J,KAAK9sB,GAEZ5E,KAAKo7B,QAAQ9d,GAAKge,GAAUC,GAIhC,OAAO,EAMT3J,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAOuxB,MAAM,QACbvxB,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAOuxB,MAAMn2B,KAAKqb,SAClBzW,EAAO0xB,WAAWt2B,KAAK+6B,mBACvBn2B,EAAO6xB,YAAYz2B,KAAKg7B,eAAez/B,QAEvC,IAAK,IAAIigC,KAAiBx7B,KAAKg7B,eAC7Bp2B,EAAOuxB,MAAMqF,GAGf52B,EAAO6xB,YAAYz2B,KAAKi7B,cAAc1/B,QAEtC,IAAK,IAAIkgC,KAAgBz7B,KAAKi7B,cAC5Br2B,EAAOuxB,MAAMsF,GAGf72B,EAAOkyB,gBAAgB92B,KAAKk7B,SAC5Bt2B,EAAOsyB,kBAAkBl3B,KAAKm7B,cAE9B,IAAK,IAAI7d,KAAOtd,KAAKo7B,QACnB,IAAK,IAAIG,KAAUje,EACjBie,EAAO3J,KAAKhtB,GAIhB,OAAO7J,EAMT08B,gBACE,OAAO,GAAmC,EAA7Bz3B,KAAKg7B,eAAez/B,OAA2C,EAA5ByE,KAAKi7B,cAAc1/B,OAAeyE,KAAKk7B,QAAQ,GAAKl7B,KAAKk7B,QAAQ,GAAK,GChH3G,MAAMQ,GAInB9tB,cAEE5N,KAAK4J,GAAK,EAEV5J,KAAKkC,KAAO,EAEZlC,KAAKyoB,KAAO,EAEZzoB,KAAK27B,qBAAuB,EAE5B37B,KAAKC,KAAO,GAEZD,KAAK47B,cAAgB,IAAI39B,aAAa,GAEtC+B,KAAK67B,kBAAoB,EAEzB77B,KAAK87B,mBAAqB,EAM5BpK,KAAK9sB,GACH5E,KAAK4J,GAAKhF,EAAOswB,YACjBl1B,KAAKkC,KAAO0C,EAAOswB,YACnBl1B,KAAKyoB,KAAO7jB,EAAOswB,YACnBl1B,KAAK27B,qBAAuB/2B,EAAOswB,YACnCl1B,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAK47B,cAAgBh3B,EAAOoxB,iBAAiB,GAC7Ch2B,KAAK67B,kBAAoBj3B,EAAOywB,aAChCr1B,KAAK87B,mBAAqBl3B,EAAOywB,aAMnCzD,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAK4J,IACvBhF,EAAO0xB,WAAWt2B,KAAKkC,MACvB0C,EAAO0xB,WAAWt2B,KAAKyoB,MACvB7jB,EAAO0xB,WAAWt2B,KAAK27B,sBACvB/2B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAOsyB,kBAAkBl3B,KAAK47B,eAC9Bh3B,EAAO6xB,YAAYz2B,KAAK67B,mBACxBj3B,EAAO6xB,YAAYz2B,KAAK87B,oBAM1BrE,gBACE,OAAO,GAAKz3B,KAAKC,KAAK1E,QCvDX,MAAMwgC,GAInBnuB,cAEE5N,KAAKyW,MAAQ,EAEbzW,KAAKg8B,YAAc,EAEnBh8B,KAAKC,KAAO,GAMdyxB,KAAK9sB,GACH5E,KAAKyW,MAAQ7R,EAAOywB,aACpBr1B,KAAKg8B,YAAcp3B,EAAOywB,aAC1Br1B,KAAKC,KAAO2E,EAAOiwB,gBAMrBjD,KAAKhtB,GACHA,EAAO6xB,YAAYz2B,KAAKyW,OACxB7R,EAAO6xB,YAAYz2B,KAAKg8B,aACxBp3B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OAM3Bw3B,gBACE,OAAO,EAAIz3B,KAAKC,KAAK1E,QCnCV,MAAM0gC,GAInBruB,cAEE5N,KAAKk8B,YAAc,EAEnBl8B,KAAK4J,GAAK,WAEV5J,KAAKm8B,cAAgB,EAErBn8B,KAAKo8B,aAAe,EAMtB1K,KAAK9sB,GACH5E,KAAKk8B,YAAct3B,EAAOywB,aAC1Br1B,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAKm8B,cAAgBv3B,EAAOswB,YAC5Bl1B,KAAKo8B,aAAex3B,EAAOswB,YAM7BtD,KAAKhtB,GACHA,EAAO6xB,YAAYz2B,KAAKk8B,aACxBt3B,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO0xB,WAAWt2B,KAAKm8B,eACvBv3B,EAAO0xB,WAAWt2B,KAAKo8B,eChCZ,MAAMC,GAInBzuB,cAEE5N,KAAKk8B,YAAc,EAEnBl8B,KAAK4J,GAAK,WAMZ8nB,KAAK9sB,GACH5E,KAAKk8B,YAAct3B,EAAOywB,aAC1Br1B,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GAM3B/C,KAAKhtB,GACHA,EAAO6xB,YAAYz2B,KAAKk8B,aACxBt3B,EAAOuxB,MAAMn2B,KAAK4J,KCxBP,MAAM0yB,GAInB1uB,cAEE5N,KAAKs3B,OAAS,EAEdt3B,KAAKu8B,IAAM,GAOb7K,KAAK9sB,EAAQ43B,GACXx8B,KAAKs3B,OAAS1yB,EAAOswB,YAErB,IAAK,IAAIjuB,EAAI,EAAGA,EAAIu1B,EAAWv1B,IAC7BjH,KAAKu8B,IAAIt1B,GAAKrC,EAAO+vB,KAAK,GAAG,GAOjC/C,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAKs3B,QAEvB,IAAK,IAAI1tB,KAAM5J,KAAKu8B,IAClB33B,EAAOuxB,MAAMvsB,IC5BJ,MAAM6yB,GAInB7uB,cAEE5N,KAAK4J,GAAK,EAEV5J,KAAKC,KAAO,GAEZD,KAAKw8B,UAAY,EAEjBx8B,KAAK08B,YAAc,IAAI3+B,WAAW,GAElCiC,KAAK28B,MAAQ,GAMfjL,KAAK9sB,GACH5E,KAAK4J,GAAKhF,EAAOswB,YACjBl1B,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAKw8B,UAAY53B,EAAOswB,YACxBl1B,KAAK08B,YAAc93B,EAAOgxB,eAAe51B,KAAKw8B,WAE9C,IAAK,IAAIv1B,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIwY,EAAO,IAAI6c,GAEf7c,EAAKiS,KAAK9sB,EAAQ5E,KAAKw8B,WAEvBx8B,KAAK28B,MAAM11B,GAAKwY,GAOpBmS,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAK4J,IACvBhF,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAO0xB,WAAWt2B,KAAKw8B,WACvB53B,EAAOkyB,gBAAgB92B,KAAK08B,aAC5B93B,EAAO6xB,YAAYz2B,KAAK28B,MAAMphC,QAE9B,IAAK,IAAIkkB,KAAQzf,KAAK28B,MACpBld,EAAKmS,KAAKhtB,GAOd6yB,gBACE,OAAO,GAAKz3B,KAAKC,KAAK1E,OAASyE,KAAK08B,YAAYz5B,WAAcjD,KAAK28B,MAAMphC,QAAU,EAAI,EAAIyE,KAAKw8B,YCxDrF,MAAMnF,GAInBzpB,cAEE5N,KAAKs3B,OAAS,EAEdt3B,KAAK4J,GAAK,WAMZ8nB,KAAK9sB,GACH5E,KAAKs3B,OAAS1yB,EAAOswB,YACrBl1B,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GAM3B/C,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAKs3B,QACvB1yB,EAAOuxB,MAAMn2B,KAAK4J,KCtBP,MAAM2tB,GAInB3pB,cAEE5N,KAAKw3B,MAAQ,GAMf9F,KAAK9sB,GACH,IAAK,IAAIqC,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIyY,EAAO,IAAI2X,GAEf3X,EAAKgS,KAAK9sB,GAEV5E,KAAKw3B,MAAMvwB,GAAKyY,GAOpBkS,KAAKhtB,GACHA,EAAO6xB,YAAYz2B,KAAKw3B,MAAMj8B,QAE9B,IAAK,IAAImkB,KAAQ1f,KAAKw3B,MACpB9X,EAAKkS,KAAKhtB,GAOd6yB,gBACE,OAAO,EAAwB,EAApBz3B,KAAKw3B,MAAMj8B,QCrCX,MAAMqhC,GAInBhvB,cAEE5N,KAAK4J,GAAK,EAEV5J,KAAKC,KAAO,GAEZD,KAAK68B,KAAO,GAMdnL,KAAK9sB,GACH5E,KAAK4J,GAAKhF,EAAOswB,YACjBl1B,KAAKC,KAAO2E,EAAOiwB,gBAEnB,IAAK,IAAI5tB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIwR,EAAM,IAAI8e,GAEd9e,EAAIiZ,KAAK9sB,GAET5E,KAAK68B,KAAK51B,GAAKwR,GAOnBmZ,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAK4J,IACvBhF,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAO6xB,YAAYz2B,KAAK68B,KAAKthC,QAE7B,IAAK,IAAIkd,KAAOzY,KAAK68B,KACnBpkB,EAAImZ,KAAKhtB,GAOb6yB,gBACE,IAAI10B,EAAO,EAAI/C,KAAKC,KAAK1E,OAEzB,IAAK,IAAIkd,KAAOzY,KAAK68B,KACnB95B,GAAQ0V,EAAIgf,gBAGd,OAAO10B,GC9CI,MAAM+5B,GAInBlvB,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAK+8B,MAAQ,EAEb/8B,KAAKg9B,cAAgB,EAErBh9B,KAAKC,KAAO,GAEZD,KAAKi9B,OAAS,GAEdj9B,KAAKoxB,YAAc,GAEnBpxB,KAAKk9B,mBAAqB,GAE1Bl9B,KAAKm9B,aAAe,IAAIl/B,aAAa,GAErC+B,KAAKo9B,wBAA0B,IAAIr/B,WAAW,GAE9CiC,KAAKq9B,aAAe,IAAIt/B,WAAW,GAEnCiC,KAAKyW,MAAQ,EAEbzW,KAAKqb,QAAU,KAEfrb,KAAKs9B,mBAAqB,EAE1Bt9B,KAAKu9B,mBAAqB,GAE1Bv9B,KAAKw9B,kBAAoB,GAEzBx9B,KAAKy9B,mBAAqB,GAE1Bz9B,KAAK09B,sBAAwB,GAE7B19B,KAAK29B,cAAgB,EAErB39B,KAAK49B,oBAAsB,GAE3B59B,KAAK69B,mBAAqB,GAE1B79B,KAAK89B,oBAAsB,GAE3B99B,KAAK+9B,uBAAyB,GAE9B/9B,KAAKg+B,cAAgB,EAErBh+B,KAAKi+B,UAAY,IAAIhgC,aAAa,GAElC+B,KAAKk+B,WAAa,EAElBl+B,KAAKm+B,SAAW,IAAInjC,WAAW,GAE/BgF,KAAKo+B,cAAgB,EAErBp+B,KAAKq+B,iBAAmB,GAExBr+B,KAAKs+B,wBAA0B,KAE/Bt+B,KAAKu+B,iBAAmB,IAAIvjC,WAAW,GAEvCgF,KAAKw+B,QAAU,GAEfx+B,KAAKy+B,OAAS,GAEdz+B,KAAK0+B,2BAA6B,GAElC1+B,KAAK2+B,wBAA0B,GAE/B3+B,KAAK4+B,iBAAmB,GAExB5+B,KAAK6+B,iBAAmB,GAEpB9jC,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOswB,YACtBl1B,KAAK+8B,MAAQn4B,EAAOswB,YACpBl1B,KAAKg9B,cAAgBp4B,EAAOswB,YACxBl1B,KAAKmb,SAAW,KAClBnb,KAAK8+B,iBAAmBl6B,EAAOswB,YAC/Bl1B,KAAK++B,iBAAmBn6B,EAAOswB,YAC/Bl1B,KAAKg/B,iBAAmBp6B,EAAOswB,YAC/Bl1B,KAAKi/B,iBAAmBr6B,EAAOswB,aAEjCl1B,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAKi9B,OAASr4B,EAAOiwB,gBACrB70B,KAAKoxB,YAAcxsB,EAAOiwB,gBAC1B70B,KAAKk9B,mBAAqBt4B,EAAOiwB,gBACjC70B,KAAKm9B,aAAev4B,EAAOoxB,iBAAiB,GAC5Ch2B,KAAKo9B,wBAA0Bx4B,EAAOgxB,eAAe,GACrD51B,KAAKq9B,aAAez4B,EAAOgxB,eAAe,GAC1C51B,KAAKyW,MAAQ7R,EAAOywB,aACpBr1B,KAAKqb,QAAUzW,EAAO+vB,KAAK,GAC3B30B,KAAKs9B,mBAAqB14B,EAAOswB,YAE7Bl1B,KAAKmb,QAAU,KACjBnb,KAAKu9B,mBAAqB34B,EAAOiwB,iBAGnC70B,KAAKw9B,kBAAoB54B,EAAOiwB,gBAChC70B,KAAKy9B,mBAAqB74B,EAAOiwB,gBACjC70B,KAAK09B,sBAAwB94B,EAAOiwB,gBACpC70B,KAAK29B,cAAgB/4B,EAAOswB,YAExBl1B,KAAKmb,QAAU,KACjBnb,KAAK49B,oBAAsBh5B,EAAOiwB,iBAGpC70B,KAAK69B,mBAAqBj5B,EAAOiwB,gBACjC70B,KAAK89B,oBAAsBl5B,EAAOiwB,gBAClC70B,KAAK+9B,uBAAyBn5B,EAAOiwB,gBAEjC70B,KAAKmb,QAAU,KACjBnb,KAAKg+B,cAAgBp5B,EAAOswB,YAC5Bl1B,KAAKi+B,UAAYr5B,EAAOoxB,iBAAiB,GACzCh2B,KAAKk+B,WAAat5B,EAAO0wB,cACzBt1B,KAAKm+B,SAAWv5B,EAAOixB,eAAe,GACtC71B,KAAKo+B,cAAgBx5B,EAAOswB,YAC5Bl1B,KAAKq+B,iBAAmBz5B,EAAOiwB,gBAC/B70B,KAAKs+B,wBAA0B15B,EAAO+vB,KAAK,GAAG,GAC9C30B,KAAKu+B,iBAAmB35B,EAAOixB,eAAe,IAG5C71B,KAAKmb,SAAW,KAClBnb,KAAKk/B,IAAMt6B,EAAOswB,aAGpB,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIk4B,EAAS,IAAIzD,GAEjByD,EAAOzN,KAAK9sB,GAEZ5E,KAAKw+B,QAAQv3B,GAAKk4B,EAGpB,IAAK,IAAIl4B,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIm4B,EAAQ,IAAIrD,GAEhBqD,EAAM1N,KAAK9sB,GAEX5E,KAAKy+B,OAAOx3B,GAAKm4B,EAEnB,GAAIx6B,EAAO0D,OAAS1D,EAAO3B,WAAa,EAAxC,CACA,IAAK,IAAIgE,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIo4B,EAA4B,IAAIpD,GAEpCoD,EAA0B3N,KAAK9sB,GAE/B5E,KAAK0+B,2BAA2Bz3B,GAAKo4B,EAEvC,KAAIz6B,EAAO0D,OAAS1D,EAAO3B,WAAa,GAAxC,CAGA,IAAK,IAAIgE,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIq4B,EAAyB,IAAIjD,GAEjCiD,EAAuB5N,KAAK9sB,GAE5B5E,KAAK2+B,wBAAwB13B,GAAKq4B,EAGpC,IAAK,IAAIr4B,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIs4B,EAAkB,IAAI9C,GAE1B8C,EAAgB7N,KAAK9sB,GAErB5E,KAAK4+B,iBAAiB33B,GAAKs4B,EAG7B,GAAIv/B,KAAKmb,QAAU,GACjB,IAAK,IAAIlU,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIu4B,EAAkB,IAAI5C,GAE1B4C,EAAgB9N,KAAK9sB,GAErB5E,KAAK6+B,iBAAiB53B,GAAKu4B,KAQjC5N,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAO0xB,WAAWt2B,KAAK+8B,OACvBn4B,EAAO0xB,WAAWt2B,KAAKg9B,eACvBp4B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKi9B,OAAM,OAC3Br4B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKoxB,YAAW,OAChCxsB,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKk9B,mBAAkB,OACvCt4B,EAAOsyB,kBAAkBl3B,KAAKm9B,cAC9Bv4B,EAAOkyB,gBAAgB92B,KAAKo9B,yBAC5Bx4B,EAAOkyB,gBAAgB92B,KAAKq9B,cAC5Bz4B,EAAO6xB,YAAYz2B,KAAKyW,OACxB7R,EAAOuxB,MAAMn2B,KAAKqb,SAClBzW,EAAO0xB,WAAWt2B,KAAKs9B,oBAEnBt9B,KAAKmb,QAAU,IACjBvW,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKu9B,mBAAkB,OAGzC34B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKw9B,kBAAiB,OACtC54B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKy9B,mBAAkB,OACvC74B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAK09B,sBAAqB,OAC1C94B,EAAO0xB,WAAWt2B,KAAK29B,eAEnB39B,KAAKmb,QAAU,IACjBvW,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAK49B,oBAAmB,OAG1Ch5B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAK69B,mBAAkB,OACvCj5B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAK89B,oBAAmB,OACxCl5B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAK+9B,uBAAsB,OAEvC/9B,KAAKmb,QAAU,KACjBvW,EAAO0xB,WAAWt2B,KAAKg+B,eACvBp5B,EAAOsyB,kBAAkBl3B,KAAKi+B,WAC9Br5B,EAAO8xB,aAAa12B,KAAKk+B,YACzBt5B,EAAOmyB,gBAAgB/2B,KAAKm+B,UAC5Bv5B,EAAO0xB,WAAWt2B,KAAKo+B,eACvBx5B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKq+B,iBAAgB,OACrCz5B,EAAOuxB,MAAMn2B,KAAKs+B,yBAClB15B,EAAOmyB,gBAAgB/2B,KAAKu+B,mBAG9B35B,EAAO6xB,YAAYz2B,KAAKw+B,QAAQjjC,QAEhC,IAAK,IAAI4jC,KAAUn/B,KAAKw+B,QACtBW,EAAOvN,KAAKhtB,GAGdA,EAAO6xB,YAAYz2B,KAAKy+B,OAAOljC,QAE/B,IAAK,IAAI6jC,KAASp/B,KAAKy+B,OACrBW,EAAMxN,KAAKhtB,GAGbA,EAAO6xB,YAAYz2B,KAAK0+B,2BAA2BnjC,QAEnD,IAAK,IAAIkkC,KAAUz/B,KAAK0+B,2BACtBe,EAAO7N,KAAKhtB,GAGdA,EAAO6xB,YAAYz2B,KAAK2+B,wBAAwBpjC,QAEhD,IAAK,IAAIkkC,KAAUz/B,KAAK2+B,wBACtBc,EAAO7N,KAAKhtB,GAGdA,EAAO6xB,YAAYz2B,KAAK4+B,iBAAiBrjC,QAEzC,IAAK,IAAImkC,KAAS1/B,KAAK4+B,iBACrBc,EAAM9N,KAAKhtB,GAGb,GAAI5E,KAAKmb,QAAU,GAAI,CACrBvW,EAAO6xB,YAAYz2B,KAAK6+B,iBAAiBtjC,QAEzC,IAAK,IAAImkC,KAAS1/B,KAAK6+B,iBACrBa,EAAM9N,KAAKhtB,GAIf,OAAO7J,EAMT08B,gBACE,IAAI10B,EAAO,IAAM/C,KAAKC,KAAK1E,OAASyE,KAAKi9B,OAAO1hC,OAASyE,KAAKoxB,YAAY71B,OAASyE,KAAKk9B,mBAAmB3hC,OAASyE,KAAKw9B,kBAAkBjiC,OAASyE,KAAKy9B,mBAAmBliC,OAASyE,KAAK09B,sBAAsBniC,OAASyE,KAAK69B,mBAAmBtiC,OAASyE,KAAK89B,oBAAoBviC,OAASyE,KAAK+9B,uBAAuBxiC,OAExT,IAAK,IAAI4jC,KAAUn/B,KAAKw+B,QACtBz7B,GAAQo8B,EAAO1H,gBAGjB,IAAK,IAAI2H,KAASp/B,KAAKy+B,OACrB17B,GAAQq8B,EAAM3H,gBAGhB10B,GAAiD,GAAzC/C,KAAK0+B,2BAA2BnjC,OAExCwH,GAA8C,EAAtC/C,KAAK2+B,wBAAwBpjC,OAErC,IAAK,IAAImkC,KAAS1/B,KAAK4+B,iBACrB77B,GAAQ28B,EAAMjI,gBAGhB,GAAIz3B,KAAKmb,QAAU,GAAI,CACrBpY,GAAQ,GAAK/C,KAAKu9B,mBAAmBhiC,OAASyE,KAAK49B,oBAAoBriC,OAASyE,KAAKq+B,iBAAiB9iC,OAEtG,IAAK,IAAImkC,KAAS1/B,KAAK6+B,iBACrB97B,GAAQ28B,EAAMjI,gBAIlB,OAAO10B,GC7TI,MAAM48B,GAInB/xB,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAK45B,cAAgB,IAAIF,GAEzB15B,KAAK65B,YAAc,IAAIH,GAEnB3+B,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOswB,YACtBl1B,KAAK45B,cAAclI,KAAK9sB,GAAQ,GAChC5E,KAAK65B,YAAYnI,KAAK9sB,GAAQ,GAMhCgtB,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAM9B,OAJA6J,EAAO0xB,WAAWt2B,KAAKmb,SACvBnb,KAAK45B,cAAchI,KAAKhtB,GAAQ,GAChC5E,KAAK65B,YAAYjI,KAAKhtB,GAAQ,GAEvB7J,EAMT08B,gBACE,OAAO,EAAIz3B,KAAK45B,cAAcnC,eAAc,GAASz3B,KAAK65B,YAAYpC,eAAc,ICnDzE,MAAMmI,GAInBhyB,cAEE5N,KAAK0S,KAAO,GAMdgf,KAAK9sB,GACH,IAAIi7B,EAAaj7B,EAAOswB,YAEpB2K,IACF7/B,KAAK0S,KAAO9N,EAAO+vB,KAAKkL,EAAa,GACrCj7B,EAAOwvB,KAAK,IAOhBxC,KAAKhtB,GACQ5E,KAAK0S,KAEPnX,QACPqJ,EAAO0xB,WAAWt2B,KAAK0S,KAAKnX,OAAS,GACrCqJ,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAK0S,KAAI,QAEzB9N,EAAO0xB,WAAW,GAOtBmB,gBACE,IAAI10B,EAAO,EAMX,OAJI/C,KAAK0S,KAAKnX,SACZwH,GAAQ/C,KAAK0S,KAAKnX,OAAS,GAGtBwH,GC1CI,MAAM+8B,GAInBlyB,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAK+/B,QAAU,GAEf//B,KAAKggC,QAAU,KAEfhgC,KAAKigC,SAAW,GAEZllC,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAI9B,GAFAiF,KAAKmb,QAAUvW,EAAOswB,YAED,IAAjBl1B,KAAKmb,QAAe,CACtBnb,KAAK+/B,QAAUn7B,EAAOiwB,gBAEtB,IAAImL,EAAU,IAAIJ,GAElBI,EAAQtO,KAAK9sB,GAEb5E,KAAKggC,QAAUA,EAGjB,IAAK,IAAI/4B,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAI+4B,EAAU,IAAIJ,GAElBI,EAAQtO,KAAK9sB,GAEb5E,KAAKigC,SAASh5B,GAAK+4B,GAOvBpO,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAO0xB,WAAWt2B,KAAKmb,SAEF,IAAjBnb,KAAKmb,UACPvW,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAK+/B,QAAO,OAC5B//B,KAAKggC,QAAQpO,KAAKhtB,IAGpBA,EAAO6xB,YAAYz2B,KAAKigC,SAAS1kC,QAEjC,IAAK,IAAIykC,KAAWhgC,KAAKigC,SACvBD,EAAQpO,KAAKhtB,GAGf,OAAO7J,EAMT08B,gBACE,IAAI10B,EAAO,EAEU,IAAjB/C,KAAKmb,UACPpY,GAAQ/C,KAAK+/B,QAAQxkC,OAAS,EAAIyE,KAAKggC,QAAQvI,iBAGjD,IAAK,IAAIuI,KAAWhgC,KAAKigC,SACvBl9B,GAAQi9B,EAAQvI,gBAGlB,OAAO10B,GCrFI,MAAMm9B,GAInBtyB,cACE5N,KAAK4J,GAAK,EACV5J,KAAKC,KAAO,GACZD,KAAKmgC,UAAY,EAOnBzO,KAAK9sB,EAAQuW,GACXnb,KAAK4J,GAAKhF,EAAOswB,YACjBl1B,KAAKC,KAAO2E,EAAOiwB,gBAEH,IAAZ1Z,IACFnb,KAAKmgC,UAAYv7B,EAAOswB,aAQ5BtD,KAAKhtB,EAAQuW,GACXvW,EAAO0xB,WAAWt2B,KAAK4J,IACvBhF,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OAET,IAAZkb,GACFvW,EAAO0xB,WAAWt2B,KAAKmgC,WAQ3B1I,cAActc,GACZ,IAAIpY,EAAO,EAAI/C,KAAKC,KAAK1E,OAMzB,OAJgB,IAAZ4f,IACFpY,GAAQ,GAGHA,GChDI,MAAMq9B,GAInBxyB,cACE5N,KAAKC,KAAO,GACZD,KAAKkC,KAAO,GACZlC,KAAKwB,GAAK,EACVxB,KAAKqgC,QAAU,EACfrgC,KAAKsgC,UAAY,EACjBtgC,KAAKugC,cAAgB,EACrBvgC,KAAKwgC,aAAe,GAOtB9O,KAAK9sB,EAAQuW,GACXnb,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAKkC,KAAO0C,EAAOiwB,gBACnB70B,KAAKwB,GAAKoD,EAAOswB,YACjBl1B,KAAKqgC,QAAUz7B,EAAOswB,YAEN,IAAZ/Z,IACFnb,KAAKsgC,UAAY17B,EAAOswB,aAG1Bl1B,KAAKugC,cAAgB37B,EAAOswB,YAC5Bl1B,KAAKwgC,aAAe57B,EAAOiwB,gBAO7BjD,KAAKhtB,EAAQuW,GACXvW,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKkC,KAAI,OACzB0C,EAAO0xB,WAAWt2B,KAAKwB,IACvBoD,EAAO0xB,WAAWt2B,KAAKqgC,SAEP,IAAZllB,GACFvW,EAAO0xB,WAAWt2B,KAAKsgC,WAGzB17B,EAAO0xB,WAAWt2B,KAAKugC,eACvB37B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKwgC,aAAY,OAOnC/I,cAActc,GACZ,IAAIpY,EAAO,GAAK/C,KAAKC,KAAK1E,OAASyE,KAAKkC,KAAK3G,OAASyE,KAAKwgC,aAAajlC,OAMxE,OAJgB,IAAZ4f,IACFpY,GAAQ,GAGHA,GC3DI,MAAM09B,GAInB7yB,cACE5N,KAAKkC,KAAO,EACZlC,KAAKC,KAAO,GACZD,KAAK0gC,gBAAkB,EACvB1gC,KAAK2gC,WAAa,GAQpBjP,KAAK9sB,EAAQuW,EAASylB,GAKpB,GAJA5gC,KAAKkC,KAAO0C,EAAOswB,YACnBl1B,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAK0gC,gBAAkB97B,EAAOswB,YAE1Bl1B,KAAK0gC,gBAAiB,CAGxB,IAAK,IAAIz5B,EAAI,EAAGU,EAFLi5B,EAAYC,YAAY7gC,KAAKkC,KAAMlC,KAAKC,MAAMqN,KAEhC/R,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI65B,EAAY,IAAIC,GAEpBD,EAAUpP,KAAK9sB,EAAQuW,EAASylB,GAEhC5gC,KAAK2gC,WAAW15B,GAAK65B,IAS3BlP,KAAKhtB,EAAQuW,GACXvW,EAAO0xB,WAAWt2B,KAAKkC,MACvB0C,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAO0xB,WAAWt2B,KAAK0gC,iBAEvB,IAAK,IAAII,KAAa9gC,KAAK2gC,WACzBG,EAAUlP,KAAKhtB,EAAQuW,GAQ3Bsc,cAActc,GACZ,IAAIpY,EAAO,EAAI/C,KAAKC,KAAK1E,OAEzB,GAAIyE,KAAK2gC,WAAWplC,OAClB,IAAK,IAAIulC,KAAa9gC,KAAK2gC,WACzB59B,GAAQ+9B,EAAUrJ,cAActc,GAIpC,OAAOpY,GC7DI,MAAMg+B,GAInBnzB,cACE5N,KAAKkC,KAAO,EACZlC,KAAKiP,MAAQ,GACbjP,KAAKghC,cAAgB,KACrBhhC,KAAKwB,GAAK,EACVxB,KAAKqgC,QAAU,EACfrgC,KAAKihC,WAAa,KAQpBvP,KAAK9sB,EAAQuW,EAASylB,GAIpB,GAHA5gC,KAAKkC,KAAO0C,EAAOswB,YACnBl1B,KAAKiP,MAAQrK,EAAOiwB,gBAEhBjwB,EAAOswB,YAAa,CACtB,IAAI8L,EAAgB,IAAIP,GAExBO,EAActP,KAAK9sB,EAAQuW,EAASylB,GAEpC5gC,KAAKghC,cAAgBA,EAWvB,IARiB,IAAZ7lB,GAA+B,IAAdnb,KAAKkC,MAA4B,IAAZiZ,GAAiBnb,KAAKghC,iBAC/DhhC,KAAKwB,GAAKoD,EAAOswB,cAGF,IAAZ/Z,GAA+B,IAAdnb,KAAKkC,MAA2B,IAAZiZ,KACxCnb,KAAKqgC,QAAUz7B,EAAOswB,aAGpBl1B,KAAKqgC,QAAS,CAChB,IAAIY,EAAa,IAAIF,GAErBE,EAAWvP,KAAK9sB,EAAQuW,EAASylB,GAEjC5gC,KAAKihC,WAAaA,GAQtBrP,KAAKhtB,EAAQuW,GACXvW,EAAO0xB,WAAWt2B,KAAKkC,MACvB0C,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKiP,MAAK,OAEtBjP,KAAKghC,eACPp8B,EAAO0xB,WAAW,GAClBt2B,KAAKghC,cAAcpP,KAAKhtB,EAAQuW,IAEhCvW,EAAO0xB,WAAW,IAGH,IAAZnb,GAA+B,IAAdnb,KAAKkC,MAA4B,IAAZiZ,GAAiBnb,KAAKghC,gBAC/Dp8B,EAAO0xB,WAAWt2B,KAAKwB,KAGR,IAAZ2Z,GAA+B,IAAdnb,KAAKkC,MAA2B,IAAZiZ,IACxCvW,EAAO0xB,WAAWt2B,KAAKqgC,SAGrBrgC,KAAKqgC,SACPrgC,KAAKihC,WAAWrP,KAAKhtB,EAAQuW,GAQjCsc,cAActc,GACZ,IAAIpY,EAAO,EAAI/C,KAAKiP,MAAM1T,OAkB1B,OAhBIyE,KAAKghC,gBACPj+B,GAAQ/C,KAAKghC,cAAcvJ,cAActc,KAG1B,IAAZA,GAA+B,IAAdnb,KAAKkC,MAA4B,IAAZiZ,GAAiBnb,KAAKghC,iBAC/Dj+B,GAAQ,IAGO,IAAZoY,GAA+B,IAAdnb,KAAKkC,MAA2B,IAAZiZ,KACxCpY,GAAQ,GAGN/C,KAAKqgC,UACPt9B,GAAQ/C,KAAKihC,WAAWxJ,cAActc,IAGjCpY,GClGI,MAAMm+B,GAInBtzB,cACE5N,KAAKkC,MAAQ,EACblC,KAAK2uB,OAAS,EACd3uB,KAAKC,KAAO,GACZD,KAAKmhC,UAAY,EACjBnhC,KAAK2gC,WAAa,GAClB3gC,KAAKohC,KAAO,GASd1P,KAAK9sB,EAAQuW,EAASkmB,EAAYT,GAChC5gC,KAAKkC,KAAO0C,EAAOswB,YAEfmM,IACFrhC,KAAK2uB,MAAQ/pB,EAAOywB,cAGtBr1B,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAKmhC,UAAYv8B,EAAOswB,YAIxB,IAAK,IAAIjuB,EAAI,EAAGU,EAFLi5B,EAAYC,YAAY7gC,KAAKkC,KAAMlC,KAAKC,MAAMqN,KAEhC/R,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAI65B,EAAY,IAAIC,GAEpBD,EAAUpP,KAAK9sB,EAAQuW,EAASylB,GAEhC5gC,KAAK2gC,WAAW15B,GAAK65B,EAGvB,GAAgB,IAAZ3lB,EACF,IAAK,IAAIlU,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIq6B,EAAM,IAAIJ,GAEdI,EAAI5P,KAAK9sB,EAAQuW,GAAS,EAAMylB,GAEhC5gC,KAAKohC,KAAKn6B,GAAKq6B,GASrB1P,KAAKhtB,EAAQuW,GACXvW,EAAO0xB,WAAWt2B,KAAKkC,OAEH,IAAhBlC,KAAK2uB,OACP/pB,EAAO0xB,WAAWt2B,KAAK2uB,OAGzB/pB,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAO0xB,WAAWt2B,KAAKmhC,WAEvB,IAAK,IAAIL,KAAa9gC,KAAK2gC,WACzBG,EAAUlP,KAAKhtB,EAAQuW,GAGzB,GAAgB,IAAZA,EAAe,CACjBvW,EAAO6xB,YAAYz2B,KAAKohC,KAAK7lC,QAE7B,IAAK,IAAI+lC,KAAOthC,KAAKohC,KACnBE,EAAI1P,KAAKhtB,EAAQuW,IASvBsc,cAActc,GACZ,IAAIpY,EAAO,EAAI/C,KAAKC,KAAK1E,QAEL,IAAhByE,KAAK2uB,QACP5rB,GAAQ,GAGV,IAAK,IAAI+9B,KAAa9gC,KAAK2gC,WACzB59B,GAAQ+9B,EAAUrJ,cAActc,GAGlC,GAAgB,IAAZA,EAAe,CACjBpY,GAAQ,EAER,IAAK,IAAIu+B,KAAOthC,KAAKohC,KACnBr+B,GAAQu+B,EAAI7J,cAActc,GAI9B,OAAOpY,GCpGI,MAAMw+B,GAInB3zB,cACE5N,KAAKC,KAAO,GACZD,KAAKoxB,YAAc,GACnBpxB,KAAKmgC,UAAY,EACjBngC,KAAKmhC,UAAY,EACjBnhC,KAAKy4B,SAAW,EAChBz4B,KAAKwhC,eAAiB,EACtBxhC,KAAKyhC,oBAAsB,EAC3BzhC,KAAKioB,SAAW,EAChBjoB,KAAKohC,KAAO,GAQd1P,KAAK9sB,EAAQuW,EAASylB,GACpB5gC,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAKoxB,YAAcxsB,EAAOiwB,gBAEV,IAAZ1Z,IACFnb,KAAKmgC,UAAYv7B,EAAOswB,aAG1Bl1B,KAAKmhC,UAAYv8B,EAAOswB,YACxBl1B,KAAK0hC,aAAe98B,EAAOswB,YAC3Bl1B,KAAKwhC,eAAiB58B,EAAOswB,YAC7Bl1B,KAAKyhC,oBAAsB78B,EAAOswB,YAClCl1B,KAAKioB,SAAWrjB,EAAOswB,YAEvB,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIq6B,EAAM,IAAIJ,GAEdI,EAAI5P,KAAK9sB,EAAQuW,GAAS,EAAOylB,GAEjC5gC,KAAKohC,KAAKn6B,GAAKq6B,GAQnB1P,KAAKhtB,EAAQuW,GACXvW,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKoxB,YAAW,OAEhB,IAAZjW,GACFvW,EAAO0xB,WAAWt2B,KAAKmgC,WAGzBv7B,EAAO0xB,WAAWt2B,KAAKmhC,WACvBv8B,EAAO0xB,WAAWt2B,KAAK0hC,cACvB98B,EAAO0xB,WAAWt2B,KAAKwhC,gBACvB58B,EAAO0xB,WAAWt2B,KAAKyhC,qBACvB78B,EAAO0xB,WAAWt2B,KAAKioB,UACvBrjB,EAAO6xB,YAAYz2B,KAAKohC,KAAK7lC,QAE7B,IAAK,IAAI+lC,KAAOthC,KAAKohC,KACnBE,EAAI1P,KAAKhtB,EAAQuW,GAQrBsc,cAActc,GACZ,IAAIpY,EAAO,GAAK/C,KAAKC,KAAK1E,OAASyE,KAAKoxB,YAAY71B,OAEpC,IAAZ4f,IACFpY,GAAQ,GAGV,IAAK,IAAIu+B,KAAOthC,KAAKohC,KACnBr+B,GAAQu+B,EAAI7J,cAActc,GAG5B,OAAOpY,GChFI,MAAM4+B,GAKnB/zB,YAAY7S,EAAQ6lC,GAClB5gC,KAAKmb,QAAU,EACfnb,KAAKkoB,WAAa,GAClBloB,KAAKwB,GAAK,EACVxB,KAAK4hC,UAAY,GACjB5hC,KAAKigC,SAAW,GAEZllC,GACFiF,KAAK0xB,KAAK32B,EAAQ6lC,GAQtBlP,KAAK32B,EAAQ6lC,GACX,IAAIh8B,EAAS,IAAIkvB,GAAa/4B,GAE9B,GAAuB,SAAnB6J,EAAO+vB,KAAK,GACd,MAAM,IAAI73B,MAAM,kBAGlBkD,KAAKmb,QAAUvW,EAAOswB,YAEtB,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIghB,EAAW,IAAIiY,GAEnBjY,EAASyJ,KAAK9sB,EAAQ5E,KAAKmb,SAE3Bnb,KAAKkoB,WAAWjhB,GAAKghB,EAGvBjoB,KAAKwB,GAAKoD,EAAOswB,YAEjB,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAI46B,EAAW,IAAIzB,GAEnByB,EAASnQ,KAAK9sB,EAAQ5E,KAAKmb,SAE3Bnb,KAAK4hC,UAAU36B,GAAK46B,EAGtB,IAAK,IAAI56B,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAI+4B,EAAU,IAAIuB,GAElBvB,EAAQtO,KAAK9sB,EAAQ5E,KAAKmb,QAASylB,GAEnC5gC,KAAKigC,SAASh5B,GAAK+4B,GAOvBpO,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAOuxB,MAAM,QACbvxB,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAO6xB,YAAYz2B,KAAKkoB,WAAW3sB,QAEnC,IAAK,IAAI0sB,KAAYjoB,KAAKkoB,WACxBD,EAAS2J,KAAKhtB,EAAQ5E,KAAKmb,SAG7BvW,EAAO0xB,WAAWt2B,KAAKwB,IACvBoD,EAAO6xB,YAAYz2B,KAAK4hC,UAAUrmC,QAElC,IAAK,IAAIsmC,KAAY7hC,KAAK4hC,UACxBC,EAASjQ,KAAKhtB,EAAQ5E,KAAKmb,SAG7BvW,EAAO6xB,YAAYz2B,KAAKigC,SAAS1kC,QAEjC,IAAK,IAAIykC,KAAWhgC,KAAKigC,SACvBD,EAAQpO,KAAKhtB,EAAQ5E,KAAKmb,SAG5B,OAAOpgB,EAMT08B,gBACE,IAAI10B,EAAO,GAEX,IAAK,IAAIklB,KAAYjoB,KAAKkoB,WACxBnlB,GAAQklB,EAASwP,cAAcz3B,KAAKmb,SAGtC,IAAK,IAAI0mB,KAAY7hC,KAAK4hC,UACxB7+B,GAAQ8+B,EAASpK,cAAcz3B,KAAKmb,SAGtC,IAAK,IAAI6kB,KAAWhgC,KAAKigC,SACvBl9B,GAAQi9B,EAAQvI,cAAcz3B,KAAKmb,SAGrC,OAAOpY,GC/GI,MAAM++B,GAInBl0B,YAAY7S,GAMV,GALAiF,KAAKjF,OAASA,GAAU,GACxBiF,KAAKsI,MAAQ,EACbtI,KAAK+hC,MAAQ,EACb/hC,KAAKgiC,eAAiB,EACtBhiC,KAAKiiC,QAAU,IAAIphC,YAAY,SAC3Bb,KAAKjF,kBAAkBke,YAAa,CACtC,IAAIwc,EAAO,IAAIyM,SAASnnC,GACxBiF,KAAKzE,OAASR,EAAOkI,WAAa,EAClCjD,KAAKmiC,eAAkB75B,IACdmtB,EAAK2M,SAAS95B,SAIvBtI,KAAKzE,OAASR,EAAOQ,OACrByE,KAAKmiC,eAAkB75B,IACdvN,EAAOuN,IAKpB+5B,UAAUzgC,EAAI0gC,GACZtiC,KAAKsI,MAAQg6B,EACb,IAAIpQ,EAAQ,GACR9sB,EAAI,GACR,KAAOpF,KAAKsI,MAAQtI,KAAKzE,QAAQ,CAC/B,IAAIuN,EAAI9I,KAAKmiC,eAAeniC,KAAKsI,SAC7Bi6B,EAAK7gC,OAAOC,aAAamH,GAC7B,GAAGy5B,GAAI3gC,EACL,OAAO5B,KAAKiiC,QAAQ7gC,OAAO,IAAIpG,WAAWoK,IAE5C8sB,GAAOqQ,EACPn9B,EAAEnB,KAAK6E,GAET,OAAO9I,KAAKiiC,QAAQ7gC,OAAO,IAAIpG,WAAWoK,IA6B5CuvB,OACE,IAAIp5B,EAASyE,KAAKzE,OACdinC,GAAY,EACZC,GAAW,EACXvQ,EAAQ,GAGZ,KAAOlyB,KAAKsI,MAAQ/M,GAAQ,CAC1B,IAAIuN,EAAI9I,KAAKmiC,eAAeniC,KAAKsI,SAEjC,GADAQ,EAAIpH,OAAOC,aAAamH,GACpB05B,EACQ,OAAN15B,IACF05B,GAAY,QAET,GAAIC,EAAU,CACnB,GAAU,MAAN35B,EACF,OAAOopB,EAEPA,GAASppB,OAEN,GAAU,MAANA,GAAmB,MAANA,GAAmB,OAANA,GAAoB,OAANA,GAAoB,MAANA,GAAmB,OAANA,GAC5E,GAAIopB,EAAM32B,OACR,OAAO22B,MAEJ,IAAU,MAANppB,GAAmB,MAANA,EACtB,OAAIopB,EAAM32B,QACRyE,KAAKsI,QACE4pB,GAEAppB,EAEJ,GAAU,MAANA,GAAiD,MAApC9I,KAAKmiC,eAAeniC,KAAKsI,OAAgB,CAC/D,GAAI4pB,EAAM32B,OAER,OADAyE,KAAKsI,QACE4pB,EAEPsQ,GAAY,OAET,GAAU,MAAN15B,EAAW,CACpB,GAAIopB,EAAM32B,OAER,OADAyE,KAAKsI,QACE4pB,EAEPuQ,GAAW,OAGbvQ,GAASppB,IAUf0rB,OACE,IAAIlsB,EAAQtI,KAAKsI,MACb2G,EAAQjP,KAAK20B,OAIjB,OAFA30B,KAAKsI,MAAQA,EAEN2G,EAQTyzB,UACE,OAAO5vB,SAAS9S,KAAK20B,QAQvBgO,YACE,OAAOlZ,WAAWzpB,KAAK20B,QASzBiO,aAAa3zB,GACU,IAAjBA,EAAM1T,OACJ0T,aAAiBhR,aACnBgR,EAAM,GAAKjP,KAAK2iC,YAEhB1zB,EAAM,GAAKjP,KAAK0iC,UAGlB1iC,KAAKk2B,eAAejnB,GAWxB4zB,aAAapN,GACXz1B,KAAK20B,OAEL,IAAK,IAAI1tB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IACtCwuB,EAAKxuB,GAAKjH,KAAK0iC,UAKjB,OAFA1iC,KAAK20B,OAEEc,EAUTqN,eAAerN,GACbz1B,KAAK20B,OAEL,IAAK,IAAI1tB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,IACtCwuB,EAAKxuB,GAAKjH,KAAK2iC,YAKjB,OAFA3iC,KAAK20B,OAEEc,EAQTS,eAAeT,GACTA,aAAgBx3B,aAClB+B,KAAK8iC,eAAerN,GAEpBz1B,KAAK6iC,aAAapN,GAatBsN,UAAUtN,GACRz1B,KAAK20B,OAELc,EAAK,GAAKz1B,KAAK2iC,YACflN,EAAK,GAAKz1B,KAAK2iC,YACflN,EAAK,GAAKz1B,KAAK2iC,YAEf3iC,KAAK20B,OAcPqO,gBAAgBvN,EAAM1yB,GACpB/C,KAAK20B,OAEL,IAAK,IAAI1tB,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAASwH,EAAMkE,EAAIU,EAAGV,IAAK,CAClDjH,KAAK20B,OAEL,IAAK,IAAI3sB,EAAI,EAAGA,EAAIjF,EAAMiF,IACxBytB,EAAKxuB,EAAIlE,EAAOiF,GAAKhI,KAAK2iC,YAG5B3iC,KAAK20B,OAKP,OAFA30B,KAAK20B,OAEEc,EAeTzzB,aACEhC,KAAK20B,OAEL,IAAIzC,EAAQlyB,KAAK20B,OAEjB,KAAiB,MAAVzC,SACCA,EAENA,EAAQlyB,KAAK20B,OAcjBsO,WAAWhjC,EAAMw1B,GACfz1B,KAAKkjC,UAAS,GAAApxB,OAAI7R,EAAI,OAAA6R,OAAM2jB,EAAK,GAAE,MAAA3jB,OAAK2jB,EAAK,GAAE,MAAA3jB,OAAK2jB,EAAK,GAAE,QAQ7D0N,UAAUlZ,GACRjqB,KAAKkjC,UAAS,GAAApxB,OAAImY,EAAI,MASxBmZ,YAAYnjC,EAAMgP,GAChBjP,KAAKkjC,UAAS,GAAApxB,OAAI7R,EAAI,KAAA6R,OAAI7C,EAAK,MASjCo0B,iBAAiBpjC,EAAMgP,GACrBjP,KAAKkjC,UAAS,GAAApxB,OAAI7R,EAAI,KAAA6R,OAAI9R,KAAKsjC,YAAYr0B,GAAM,MASnDs0B,kBAAkBtjC,EAAMgP,GACtBjP,KAAKkjC,UAAS,GAAApxB,OAAI7R,EAAI,MAAA6R,OAAK7C,EAAK,OASlCu0B,iBAAiBvjC,EAAMgP,GACrBjP,KAAKkjC,UAAS,GAAApxB,OAAI7R,EAAI,OAAA6R,OAAM7C,EAAM/C,KAAK,MAAK,QAS9Cu3B,sBAAsBxjC,EAAMgP,GAC1BjP,KAAKkjC,UAAS,GAAApxB,OAAI7R,EAAI,OAAA6R,OAAM9R,KAAK0jC,iBAAiBz0B,GAAM,QAO1D00B,sBAAsB1jC,EAAMgP,GACtBA,aAAiBhR,aACnB+B,KAAKyjC,sBAAsBxjC,EAAMgP,GAEjCjP,KAAKwjC,iBAAiBvjC,EAAMgP,GAUhC20B,cAAcC,EAAO50B,GACE,IAAjBA,EAAM1T,OACJ0T,aAAiBhR,aACnB+B,KAAKqjC,iBAAiBQ,EAAO50B,EAAM,IAEnCjP,KAAKojC,YAAYS,EAAO50B,EAAM,IAGhCjP,KAAK2jC,sBAAsBE,EAAO50B,GAUtC60B,WAAW70B,GACTjP,KAAKkjC,UAAS,KAAApxB,OAAM7C,EAAM/C,KAAK,MAAK,QAQtC63B,gBAAgB90B,GACdjP,KAAKkjC,UAAS,KAAApxB,OAAM9R,KAAK0jC,iBAAiBz0B,GAAM,QAclD+0B,iBAAiB/jC,EAAMw1B,EAAM1yB,GAC3B/C,KAAKikC,WAAWhkC,EAAMw1B,EAAKl6B,OAASwH,GAEpC,IAAK,IAAIkE,EAAI,EAAGU,EAAI8tB,EAAKl6B,OAAQ0L,EAAIU,EAAGV,GAAKlE,EAC3C/C,KAAK+jC,gBAAgBtO,EAAKp0B,SAAS4F,EAAGA,EAAIlE,IAG5C/C,KAAKkkC,WAQP/N,MAAMxvB,GACJ3G,KAAKjF,QAAU4L,EASjBu8B,UAAU59B,GACRtF,KAAKjF,QAAM,GAAA+W,OAAO,KAAKqyB,OAAOnkC,KAAK+hC,QAAMjwB,OAAGxM,EAAI,MAYlD2+B,aAAuB,QAAAp3B,EAAAC,UAAAvR,OAATwX,EAAO,IAAA/F,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAP8F,EAAO9F,GAAAH,UAAAG,GACf8F,EAAQxX,OACVyE,KAAKkjC,UAAS,GAAApxB,OAAIiB,EAAQ7G,KAAK,KAAI,OAEnClM,KAAKkjC,UAAU,KAGjBljC,KAAK+hC,OAAS,EAahBqC,iBAAiBC,EAAQpkC,GACvBD,KAAKkjC,UAAS,GAAApxB,OAAIuyB,EAAM,MAAAvyB,OAAK7R,EAAI,QACjCD,KAAK+hC,OAAS,EAMhBmC,WACElkC,KAAK+hC,OAAS,EACd/hC,KAAKkjC,UAAU,KAOjBoB,gBACEtkC,KAAK+hC,OAAS,EACd/hC,KAAKkjC,UAAU,MAMjB9rB,SACEpX,KAAK+hC,OAAS,EAMhBwC,WACEvkC,KAAK+hC,OAAS,EAShBuB,YAAYr0B,GACV,IAAItI,EAAIsI,EAAM2G,WACVvW,EAAI4P,EAAMya,QAAQ1pB,KAAKgiC,gBAE3B,OAAIr7B,EAAEpL,OAAS8D,EAAE9D,OACR8D,EAEAsH,EAUX+8B,iBAAiBz0B,GACf,IAAIlF,EAAS,GAEb,IAAK,IAAI9C,EAAI,EAAGU,EAAIsH,EAAM1T,OAAQ0L,EAAIU,EAAGV,IACvC8C,EAAO9C,GAAKjH,KAAKsjC,YAAYr0B,EAAMhI,IAGrC,OAAO8C,EAAOmC,KAAK,OC5hBR,MAAMs4B,GAInB52B,YAAY7S,GAEViF,KAAKykC,UAAY,IAAIloB,IAEjBxhB,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IACIm3B,EADAttB,EAAS,IAAIk9B,GAAY/mC,GAK7B,IAFA6J,EAAO0D,OAAS,EAER4pB,EAAQttB,EAAO+vB,QACrB,GAAc,WAAVzC,EAAoB,CACtB,IAAI5pB,EAAQ1D,EAAO89B,UAEnB99B,EAAO+vB,OAEP,IAAI+P,EAAU9/B,EAAOy9B,UAAU,IAAIz9B,EAAO0D,OAAO6D,OAEjDnM,KAAKykC,UAAUhsB,IAAInQ,EAAOo8B,IAQhC9S,OACE,IAAI72B,EAAS,eAEb,IAAK,IAAK8b,EAAK5H,KAAUjP,KAAKykC,UAC5B1pC,GAAM,UAAA+W,OAAc+E,EAAG,SAAA/E,OAAQ7C,EAAK,SAGtC,OAAOlU,GCrDI,MAAM4pC,GAInB/2B,cAEE5N,KAAK4J,GAAK,WAEV5J,KAAKs3B,OAAS,EAMhB5F,KAAK9sB,GACH5E,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAKs3B,OAAS1yB,EAAOswB,YAMvBtD,KAAKhtB,GACHA,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO0xB,WAAWt2B,KAAKs3B,SCtBZ,MAAMsN,GAInBh3B,cAEE5N,KAAKw3B,MAAQ,GAMf9F,KAAK9sB,GACH,IAAK,IAAIqC,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIyY,EAAO,IAAIilB,GAEfjlB,EAAKgS,KAAK9sB,GAEV5E,KAAKw3B,MAAMvwB,GAAKyY,GAOpBkS,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAKw3B,MAAMj8B,QAE7B,IAAK,IAAImkB,KAAQ1f,KAAKw3B,MACpB9X,EAAKkS,KAAKhtB,GAOd6yB,gBACE,OAAO,EAAwB,EAApBz3B,KAAKw3B,MAAMj8B,QCvCX,MAAMspC,GAInBj3B,cAEE5N,KAAK8kC,KAAO,EAEZ9kC,KAAK4J,GAAK,WAMZ8nB,KAAK9sB,GACH5E,KAAK8kC,KAAOlgC,EAAOswB,YACnBl1B,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GAM3B/C,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAK8kC,MACvBlgC,EAAOuxB,MAAMn2B,KAAK4J,KCxBP,MAAMm7B,GAInBn3B,cAEE5N,KAAK4J,GAAK,WAEV5J,KAAKglC,kBAAoB,EAEzBhlC,KAAKilC,UAAY,EAMnBvT,KAAK9sB,GACH5E,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAKglC,kBAAoBpgC,EAAOswB,YAChCl1B,KAAKilC,UAAYrgC,EAAOswB,YAM1BtD,KAAKhtB,GACHA,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO0xB,WAAWt2B,KAAKglC,mBACvBpgC,EAAO0xB,WAAWt2B,KAAKilC,YC5BZ,MAAM3I,GAInB1uB,cAEE5N,KAAK4J,GAAK,WAEV5J,KAAKs3B,OAAS,EAMhB5F,KAAK9sB,GACH5E,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAKs3B,OAAS1yB,EAAOswB,YAMvBtD,KAAKhtB,GACHA,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO0xB,WAAWt2B,KAAKs3B,SCnBZ,MAAM4N,GAInBt3B,cAEE5N,KAAK4J,GAAK,WAEV5J,KAAK23B,UAAY,EAEjB33B,KAAKpE,SAAW,IAAIqC,aAAa,GAEjC+B,KAAK43B,MAAQ,EAEb53B,KAAK63B,MAAQ,IAAI55B,aAAa,CAAC,EAAG,EAAG,IAErC+B,KAAKyW,MAAQ,EAEbzW,KAAKm/B,OAAS,EAEdn/B,KAAKmlC,QAAU,EAEfnlC,KAAKolC,WAAa,EAElBplC,KAAKqlC,MAAQ,EAEbrlC,KAAKslC,kBAAoB,EAEzBtlC,KAAKulC,gBAAkB,GAEvBvlC,KAAKwlC,WAAa,EAElBxlC,KAAKylC,kBAAoB,EAEzBzlC,KAAKilC,UAAY,EAEjBjlC,KAAK0lC,aAAe,EAEpB1lC,KAAK2lC,YAAc,EAEnB3lC,KAAK4lC,iBAAmB,EAExB5lC,KAAK6lC,iBAAmB,GAExB7lC,KAAK8lC,kBAAoB,GAEzB9lC,KAAK+lC,WAAa,EAElB/lC,KAAKktB,MAAQ,IAAIlyB,WAAW,GAE5BgF,KAAKgmC,UAAY,EAEjBhmC,KAAKimC,UAAY,EAEjBjmC,KAAKkmC,gBAAkB,EAEvBlmC,KAAK4+B,iBAAmB,GAExB5+B,KAAKmmC,gBAAkB,EAEvBnmC,KAAKomC,QAAU,EAEfpmC,KAAKqmC,eAAiB,EAOxB3U,KAAK9sB,EAAQuW,GACXnb,KAAK4J,GAAKhF,EAAO+vB,KAAK,GAAG,GACzB30B,KAAK23B,UAAY/yB,EAAOswB,YACxBl1B,KAAKpE,SAAWgJ,EAAOoxB,iBAAiB,GACxCh2B,KAAK43B,MAAQhzB,EAAO0wB,cACpBt1B,KAAK63B,MAAQjzB,EAAOoxB,iBAAiB,GACrCh2B,KAAKyW,MAAQ7R,EAAOuwB,YACpBn1B,KAAKm/B,OAASv6B,EAAOswB,YACrBl1B,KAAKmlC,QAAUvgC,EAAOwwB,aACtBp1B,KAAKolC,UAAYxgC,EAAOswB,YACxBl1B,KAAKqlC,KAAOzgC,EAAOswB,YAEf/Z,EAAU,IACZnb,KAAKslC,iBAAmB1gC,EAAOswB,aAGjC,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIwR,EAAM,IAAImsB,GAEdnsB,EAAIiZ,KAAK9sB,GAET5E,KAAKulC,gBAAgBt+B,GAAKwR,EAG5BzY,KAAKwlC,WAAa5gC,EAAOswB,YACzBl1B,KAAKylC,kBAAoB7gC,EAAO0wB,cAChCt1B,KAAKilC,UAAYrgC,EAAOswB,YAEpB/Z,EAAU,IACZnb,KAAK0lC,aAAe9gC,EAAOswB,YAC3Bl1B,KAAK2lC,YAAc/gC,EAAOswB,YAC1Bl1B,KAAK4lC,iBAAmBhhC,EAAOswB,aAGjC,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIyY,EAAO,IAAImlB,GAEfnlB,EAAKgS,KAAK9sB,GAEV5E,KAAK6lC,iBAAiB5+B,GAAKyY,EAG7B,IAAK,IAAIzY,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIq/B,EAAkB,IAAIvB,GAE1BuB,EAAgB5U,KAAK9sB,GAErB5E,KAAK8lC,kBAAkB7+B,GAAKq/B,EAK9B,GAFAtmC,KAAK+lC,WAAanhC,EAAOswB,YAED,IAApBl1B,KAAK+lC,WACP/lC,KAAKktB,MAAQtoB,EAAOixB,eAAe,GACnC71B,KAAKgmC,UAAYphC,EAAOuwB,iBACnB,GAAwB,IAApBn1B,KAAK+lC,WACd/lC,KAAKimC,UAAYrhC,EAAOywB,aACxBr1B,KAAKkmC,gBAAkBthC,EAAOywB,kBACzB,GAAwB,IAApBr1B,KAAK+lC,WACd,IAAK,IAAI9+B,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIs/B,EAAa,IAAIjK,GAErBiK,EAAW7U,KAAK9sB,GAEhB5E,KAAK4+B,iBAAiB33B,GAAKs/B,EAI/BvmC,KAAKmmC,gBAAkBvhC,EAAOswB,YAC9Bl1B,KAAKomC,QAAUxhC,EAAOswB,YACtBl1B,KAAKqmC,eAAiBzhC,EAAOswB,YAO/BtD,KAAKhtB,EAAQuW,GACXvW,EAAOuxB,MAAMn2B,KAAK4J,IAClBhF,EAAO0xB,WAAWt2B,KAAK23B,WACvB/yB,EAAOsyB,kBAAkBl3B,KAAKpE,UAC9BgJ,EAAO8xB,aAAa12B,KAAK43B,OACzBhzB,EAAOsyB,kBAAkBl3B,KAAK63B,OAC9BjzB,EAAO2xB,WAAWv2B,KAAKyW,OACvB7R,EAAO0xB,WAAWt2B,KAAKm/B,QACvBv6B,EAAO4xB,YAAYx2B,KAAKmlC,SACxBvgC,EAAO0xB,WAAWt2B,KAAKolC,WACvBxgC,EAAO0xB,WAAWt2B,KAAKqlC,MAEnBlqB,EAAU,GACZvW,EAAO0xB,WAAWt2B,KAAKslC,kBAGzB1gC,EAAO0xB,WAAWt2B,KAAKulC,gBAAgBhqC,QAEvC,IAAK,IAAIirC,KAAkBxmC,KAAKulC,gBAC9BiB,EAAe5U,KAAKhtB,GAGtBA,EAAO0xB,WAAWt2B,KAAKwlC,YACvB5gC,EAAO8xB,aAAa12B,KAAKylC,mBACzB7gC,EAAO0xB,WAAWt2B,KAAKilC,WAEnB9pB,EAAU,IACZvW,EAAO0xB,WAAWt2B,KAAK0lC,cACvB9gC,EAAO0xB,WAAWt2B,KAAK2lC,aACvB/gC,EAAO0xB,WAAWt2B,KAAK4lC,mBAGzBhhC,EAAO0xB,WAAWt2B,KAAK6lC,iBAAiBtqC,QAExC,IAAK,IAAIkrC,KAAmBzmC,KAAK6lC,iBAC/BY,EAAgB7U,KAAKhtB,GAGvBA,EAAO0xB,WAAWt2B,KAAK8lC,kBAAkBvqC,QAEzC,IAAK,IAAI+qC,KAAmBtmC,KAAK8lC,kBAC/BQ,EAAgB1U,KAAKhtB,GAKvB,GAFAA,EAAO0xB,WAAWt2B,KAAK+lC,YAEC,IAApB/lC,KAAK+lC,WACPnhC,EAAOmyB,gBAAgB/2B,KAAKktB,OAC5BtoB,EAAO2xB,WAAWv2B,KAAKgmC,gBAClB,GAAwB,IAApBhmC,KAAK+lC,WACdnhC,EAAO6xB,YAAYz2B,KAAKimC,WACxBrhC,EAAO6xB,YAAYz2B,KAAKkmC,sBACnB,GAAwB,IAApBlmC,KAAK+lC,WAAkB,CAChCnhC,EAAO0xB,WAAWt2B,KAAK4+B,iBAAiBrjC,QAExC,IAAK,IAAIgkC,KAAmBv/B,KAAK4+B,iBAC/BW,EAAgB3N,KAAKhtB,GAIzBA,EAAO0xB,WAAWt2B,KAAKmmC,iBACvBvhC,EAAO0xB,WAAWt2B,KAAKomC,SACvBxhC,EAAO0xB,WAAWt2B,KAAKqmC,gBAOzB5O,cAActc,GACZ,IAAIpY,EAAO,GAEPoY,EAAU,IACZpY,GAAQ,IAGV,IAAK,IAAIyjC,KAAkBxmC,KAAKulC,gBAC9BxiC,GAAQyjC,EAAe/O,gBAezB,OAZA10B,GAAuC,EAA/B/C,KAAK6lC,iBAAiBtqC,OAE9BwH,GAAwC,GAAhC/C,KAAK8lC,kBAAkBvqC,OAEP,IAApByE,KAAK+lC,WACPhjC,GAAQ,EACqB,IAApB/C,KAAK+lC,WACdhjC,GAAQ,EACqB,IAApB/C,KAAK+lC,aACdhjC,GAAQ,EAAmC,EAA/B/C,KAAK4+B,iBAAiBrjC,QAG7BwH,GChPI,MAAM2jC,GAInB94B,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAKmlC,QAAU,GAEfnlC,KAAK28B,MAAQ,GAET5hC,GACFiF,KAAK0xB,KAAK32B,GAQd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9B,GAAuB,SAAnB6J,EAAO+vB,KAAK,GACd,OAAO,EAGT30B,KAAKmb,QAAUvW,EAAOswB,YACtBl1B,KAAKmlC,QAAUvgC,EAAOywB,aAEtB,IAAK,IAAIpuB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAIwY,EAAO,IAAIylB,GAEfzlB,EAAKiS,KAAK9sB,EAAQ5E,KAAKmb,SAEvBnb,KAAK28B,MAAM11B,GAAKwY,EAElB,IAAI+J,EAAQ,IAAImd,IAMhB,OALA3mC,KAAK28B,MAAM51B,QAAQpB,IACjBA,EAAE4/B,gBAAgBx+B,QAAQJ,GAAKA,EAAE6wB,MAAMzwB,QAAQ6/B,GAAMpd,EAAMqd,IAAID,EAAGh9B,QAEpE1M,QAAQC,IAAIqsB,IAEL,EAMToI,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAOuxB,MAAM,QACbvxB,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAO6xB,YAAYz2B,KAAKmlC,SACxBvgC,EAAO0xB,WAAWt2B,KAAK28B,MAAMphC,QAE7B,IAAK,IAAIkkB,KAAQzf,KAAK28B,MACpBld,EAAKmS,KAAKhtB,EAAQ5E,KAAKmb,SAGzB,OAAOpgB,EAMT08B,gBACE,IAAI10B,EAAO,GAEX,IAAK,IAAI0c,KAAQzf,KAAK28B,MACpB55B,GAAQ0c,EAAKgY,cAAcz3B,KAAKmb,SAGlC,OAAOpY,GC5DI,MAAM+jC,GAKnBl5B,YAAY7S,EAAQgsC,GAElB/mC,KAAKmlC,QAAU,EAEfnlC,KAAKC,KAAO,GAEZD,KAAKyW,MAAQ,EAEbzW,KAAKgnC,WAAa,EAElBhnC,KAAKN,QAAU,IAAIg5B,GAEnB14B,KAAK+mC,WAAaA,EAEdhsC,GACFiF,KAAK0xB,KAAK32B,GAWd22B,KAAK32B,GAmBH,OAlBAiF,KAAKC,KAAOlF,EAAOkF,KACnBD,KAAK+a,QAAU,CACbksB,aAAYA,IACHlsC,EAAO0f,WAAWqP,MAAM,MAAM5c,OAAO/D,GAAKA,EAAE5N,OAAS,GAE9D2J,IAAIjF,GACF,MAAM5E,EAAON,EAAON,OAAOwF,GAC3B,OAAK5E,EAGE,CACL4E,OACApD,YAAWA,IACFxB,EAAKA,KAAKN,QALZM,KAUN,EASTu2B,OACE,GAAI5xB,KAAK+mC,SACP,OAAO,KAIT/mC,KAAKknC,iBAEL,IACIC,EAAgBnnC,KAAK+a,QAAQ6W,OAC7B72B,EAAS,IAAIke,YAFA,IAEyBkuB,EAAclkC,YACpDmkC,EAAa,IAAIpsC,WAAWD,GAC5BssC,EAAS,IAAIvT,GAAa/4B,GAY9B,OATAssC,EAAOlR,MAAM,QACbkR,EAAO5Q,YAAYz2B,KAAKwB,IACxB6lC,EAAOlR,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzBonC,EAAO5Q,YAAYz2B,KAAKyW,OACxB4wB,EAAO5Q,YAAYz2B,KAAKgnC,YAGxBI,EAAW3uB,IAAI,IAAIzd,WAAWmsC,GAdb,KAgBVpsC,EAQTksC,eACE,OAAOjnC,KAAK+a,QAAQksB,eAQtBK,iBACE,IAAIjrB,EAAQ,GAEZ,IAAK,IAAIsc,KAAS34B,KAAKN,QAAQmd,QAAQhD,SAAU,CAC/C,IAAI4e,EAAWE,EAAMF,SAEJ,KAAbA,GAAgC,KAAbA,EACrBpc,EAAMpY,KAAK00B,EAAM14B,MAEjBoc,EAAMpY,KAAI,oBAAA6N,OAAqB6mB,EAAM14B,OAIzC,OAAOoc,EAST6qB,iBACE,OAAIlnC,KAAK+mC,WAIL/mC,KAAKN,QAAQmd,QAAQ9Z,KAAO,GACvB/C,KAAKyY,IAAI,cAAezY,KAAKN,QAAQkyB,SAiBhD2V,OAAOtnC,EAAMlF,GACX,OAAIiF,KAAK+mC,aAIL/mC,KAAK+a,QAAQtC,IAAIxY,EAAMlF,KACzBiF,KAAKN,QAAQ+Y,IAAIxY,IAEV,IAaXwY,IAAIxY,EAAMlF,GACR,OAAIiF,KAAK+mC,UAIF/mC,KAAK+a,QAAQtC,IAAIxY,EAAMlF,GAShCmK,IAAIjF,GACF,OAAOD,KAAK+a,QAAQ7V,IAAIjF,GAQ1BunC,YAGE,OAFWxnC,KAAKkF,IAAI,cAAgBlF,KAAKkF,IAAI,uBAEjCwN,OASdkmB,IAAI34B,GACF,OAAOD,KAAK+a,QAAQ6d,IAAI34B,GAW1B44B,OAAO54B,GACL,OAAID,KAAK+mC,WAKT/mC,KAAKN,QAAQm5B,OAAO54B,GAEbD,KAAK+a,QAAQ8d,OAAO54B,IAU7B64B,OAAO74B,EAAM84B,GACX,OAAI/4B,KAAK+mC,aAIL/mC,KAAK+a,QAAQ+d,OAAO74B,EAAM84B,KAE5B/4B,KAAKN,QAAQo5B,OAAO74B,EAAM84B,IAEnB,IAWX0O,WAAWroC,EAAMsoC,GACf,IAAInoC,EAAOS,KAAK+a,QAAQ7V,IAAI9F,GAE5B,GAAIG,EAAM,CACR,IAAIxE,EAASwE,EAAK1C,cAElB,OAAI9B,EACK,IAAI2sC,EAAY3sC,GAGlB,MASX4sC,cACE,IAAIpoC,EAAOS,KAAK+a,QAAQ7V,IAAI,eAE5B,GAAI3F,EAAM,CACR,IAAIxE,EAASwE,EAAK1C,cAEd9B,GACFiF,KAAKN,QAAQgyB,KAAK32B,IAUxB6sC,qBACE,OAAO5nC,KAAKynC,WAAW,cAAe3K,IAQxC+K,kBACE,OAAO7nC,KAAKynC,WAAW,cAAe3M,IAQxCgN,cACE,IAAIvoC,EAAOS,KAAK+a,QAAQ7V,IAAI,eAE5B,GAAI3F,EACF,OAAO,IAAI64B,GAAW74B,EAAK1C,eAS/BkrC,YACE,IAAIxoC,EAAOS,KAAK+a,QAAQ7V,IAAI,oBAE5B,GAAI3F,EACF,OAAO,IAAImnC,GAAgBnnC,EAAK1C,eAUpCmrC,aAAapH,GACX,IAAIrhC,EAAOS,KAAK+a,QAAQ7V,IAAI,eAE5B,GAAI3F,EACF,OAAO,IAAIoiC,GAAWpiC,EAAK1C,cAAe+jC,GAS9CqH,yBACE,IAAI1oC,EAAOS,KAAK+a,QAAQ7V,IAAI,eAE5B,GAAI3F,EACF,OAAO,IAAIugC,GAAWvgC,EAAK1C,eAS/BqrC,kBACE,IAAI3oC,EAAOS,KAAK+a,QAAQ7V,IAAI,eAE5B,GAAI3F,EACF,OAAO,IAAIilC,GAAWjlC,EAAKmT,QAS/By1B,oBACE,IAAI3O,EAAgB,GAUhB4O,EAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvDhP,EAAkB,EAAC,GAAO,GAAO,GAAO,GAAM,GAAM,GAAO,GAE/D,IAAK,IAAInyB,EAAI,EAAGU,EAAIygC,EAAU7sC,OAAQ0L,EAAIU,EAAGV,IAAK,CAChD,IAAI1H,EAAOS,KAAK+a,QAAQ7V,IAAG,WAAA4M,OAAYs2B,EAAUnhC,KAEjD,GAAI1H,EAAM,CACR,IACIk6B,EADA1+B,EAASwE,EAAK1C,cAIhB48B,EADEL,EAAgBnyB,GACH,IAAI0yB,GAAW5+B,GAEf,IAAI4kC,GAAW5kC,GAGhCy+B,EAAc4O,EAAUnhC,IAAMwyB,GAIlC,OAAOD,GCraI,MAAM6O,GAInBz6B,cAEE5N,KAAKkC,KAAO,EAEZlC,KAAKpE,SAAW,IAAImC,WAAW,GAE/BiC,KAAKswB,MAAQ,IAAIt1B,WAAW,GAM9B02B,KAAK9sB,GACH5E,KAAKkC,KAAO0C,EAAOswB,YACnBl1B,KAAKpE,SAAWgJ,EAAOgxB,eAAe,GACtC51B,KAAKswB,MAAQ1rB,EAAOixB,eAAe,GAMrCjE,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAKkC,MACvB0C,EAAOkyB,gBAAgB92B,KAAKpE,UAC5BgJ,EAAOmyB,gBAAgB/2B,KAAKswB,QC5BjB,MAAMgY,GAInB16B,cAEE5N,KAAKuoC,eAAiB,IAAItqC,aAAa,GAEvC+B,KAAKwoC,SAAW,EAEhBxoC,KAAKyoC,cAAgB,EAErBzoC,KAAK0oC,SAAW,EAEhB1oC,KAAK2oC,KAAO,EAEZ3oC,KAAK4oC,YAAc,EAEnB5oC,KAAK6oC,iBAAmB,EAExB7oC,KAAK8oC,kBAAoB,EAEzB9oC,KAAK+oC,cAAgB,GAMvBrX,KAAK9sB,GACH5E,KAAKuoC,eAAiB3jC,EAAOoxB,iBAAiB,GAC9Ch2B,KAAKwoC,SAAW5jC,EAAO0wB,cACvBt1B,KAAKyoC,cAAgB7jC,EAAO0wB,cAC5Bt1B,KAAK0oC,SAAW9jC,EAAO0wB,cACvBt1B,KAAK2oC,KAAO/jC,EAAO0wB,cACnBt1B,KAAK4oC,YAAchkC,EAAO0wB,cAC1Bt1B,KAAK6oC,iBAAmBjkC,EAAO0wB,cAC/Bt1B,KAAK8oC,kBAAoBlkC,EAAO0wB,cAChCt1B,KAAK+oC,cAAgBnkC,EAAOiwB,gBAM9BjD,KAAKhtB,GACHA,EAAOsyB,kBAAkBl3B,KAAKuoC,gBAC9B3jC,EAAO8xB,aAAa12B,KAAKwoC,UACzB5jC,EAAO8xB,aAAa12B,KAAKyoC,eACzB7jC,EAAO8xB,aAAa12B,KAAK0oC,UACzB9jC,EAAO8xB,aAAa12B,KAAK2oC,MACzB/jC,EAAO8xB,aAAa12B,KAAK4oC,aACzBhkC,EAAO8xB,aAAa12B,KAAK6oC,kBACzBjkC,EAAO8xB,aAAa12B,KAAK8oC,mBACzBlkC,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAK+oC,cAAa,OAMpCtR,gBACE,OAAO,GAAKz3B,KAAK+oC,cAAcxtC,QC3DpB,MAAMytC,GAInBp7B,cAEE5N,KAAKguB,KAAO,EAEZhuB,KAAKiuB,MAAQ,EAEbjuB,KAAKipC,OAAS,EAEdjpC,KAAKwtB,IAAM,EAEXxtB,KAAKC,KAAO,GAEZD,KAAKqmC,eAAiB,EAEtBrmC,KAAKkpC,gBAAkB,WAEvBlpC,KAAKmpC,aAAe,GAEpBnpC,KAAKswB,MAAQ,IAAIt1B,WAAW,GAM9B02B,KAAK9sB,GACH5E,KAAKguB,KAAOppB,EAAO0wB,cACnBt1B,KAAKiuB,MAAQrpB,EAAO0wB,cACpBt1B,KAAKipC,OAASrkC,EAAO0wB,cACrBt1B,KAAKwtB,IAAM5oB,EAAO0wB,cAClBt1B,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAKqmC,eAAiBzhC,EAAOywB,aAC7Br1B,KAAKkpC,gBAAkBtkC,EAAO+vB,KAAK,GAAG,GACtC30B,KAAKmpC,aAAevkC,EAAOiwB,gBAC3B70B,KAAKswB,MAAQ1rB,EAAOixB,eAAe,GAMrCjE,KAAKhtB,GACHA,EAAO8xB,aAAa12B,KAAKguB,MACzBppB,EAAO8xB,aAAa12B,KAAKiuB,OACzBrpB,EAAO8xB,aAAa12B,KAAKipC,QACzBrkC,EAAO8xB,aAAa12B,KAAKwtB,KACzB5oB,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAO6xB,YAAYz2B,KAAKqmC,gBAEpBrmC,KAAKkpC,gBACPtkC,EAAOuxB,MAAMn2B,KAAKkpC,iBAElBtkC,EAAO6xB,YAAY,GAGrB7xB,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKmpC,aAAY,OACjCvkC,EAAOmyB,gBAAgB/2B,KAAKswB,OAM9BmH,gBACE,OAAO,GAAKz3B,KAAKC,KAAK1E,OAASyE,KAAKmpC,aAAa5tC,QCjEtC,MAAM6tC,GAInBx7B,cAEE5N,KAAKC,KAAO,GAEZD,KAAKT,KAAO,GAEZS,KAAKqpC,UAAY,GAEjBrpC,KAAKyW,MAAQ,EAEbzW,KAAKspC,WAAa,EAElBtpC,KAAKupC,YAAc,EAEnBvpC,KAAKwpC,OAAS,EAEdxpC,KAAKypC,MAAQ,EAEbzpC,KAAKwB,GAAK,EAEVxB,KAAKyB,GAAK,EAEVzB,KAAK0pC,QAAU,EAEf1pC,KAAK2pC,YAAc,EAEnB3pC,KAAK4pC,YAAc,EAEnB5pC,KAAK6pC,eAAiB,EAEtB7pC,KAAK8pC,GAAK,EAEV9pC,KAAK+pC,GAAK,EAEV/pC,KAAKgqC,GAAK,EAEVhqC,KAAKiqC,GAAK,EAEVjqC,KAAKkqC,GAAK,EAEVlqC,KAAKmqC,GAAK,EAMZzY,KAAK9sB,GACH5E,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAKT,KAAOqF,EAAOiwB,gBACnB70B,KAAKqpC,UAAYzkC,EAAOiwB,gBACxB70B,KAAKyW,MAAQ7R,EAAOywB,aACpBr1B,KAAKspC,WAAa1kC,EAAOswB,YACzBl1B,KAAKupC,YAAc3kC,EAAOswB,YAC1Bl1B,KAAKwpC,OAAS5kC,EAAOswB,YACrBl1B,KAAKypC,MAAQ7kC,EAAO0wB,cACpBt1B,KAAKwB,GAAKoD,EAAO0wB,cACjBt1B,KAAKyB,GAAKmD,EAAOswB,YACjBl1B,KAAK0pC,QAAU9kC,EAAOswB,YACtBl1B,KAAK2pC,YAAc/kC,EAAO0wB,cAC1Bt1B,KAAK4pC,YAAchlC,EAAO0wB,cAC1Bt1B,KAAK6pC,eAAiBjlC,EAAO0wB,cAC7Bt1B,KAAK8pC,GAAKllC,EAAO0wB,cACjBt1B,KAAK+pC,GAAKnlC,EAAO0wB,cACjBt1B,KAAKgqC,GAAKplC,EAAOswB,YACjBl1B,KAAKiqC,GAAKrlC,EAAO0wB,cACjBt1B,KAAKkqC,GAAKtlC,EAAO0wB,cACjBt1B,KAAKmqC,GAAKvlC,EAAO0wB,cAMnB1D,KAAKhtB,GACHA,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKT,KAAI,OACzBqF,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKqpC,UAAS,OAC9BzkC,EAAO6xB,YAAYz2B,KAAKyW,OACxB7R,EAAO6xB,YAAYz2B,KAAKspC,YACxB1kC,EAAO6xB,YAAYz2B,KAAKupC,aACxB3kC,EAAO6xB,YAAYz2B,KAAKwpC,QACxB5kC,EAAO8xB,aAAa12B,KAAKypC,OACzB7kC,EAAO8xB,aAAa12B,KAAKwB,IACzBoD,EAAO0xB,WAAWt2B,KAAKyB,IACvBmD,EAAO0xB,WAAWt2B,KAAK0pC,SACvB9kC,EAAO8xB,aAAa12B,KAAK2pC,aACzB/kC,EAAO8xB,aAAa12B,KAAK4pC,aACzBhlC,EAAO8xB,aAAa12B,KAAK6pC,gBACzBjlC,EAAO8xB,aAAa12B,KAAK8pC,IACzBllC,EAAO8xB,aAAa12B,KAAK+pC,IACzBnlC,EAAO0xB,WAAWt2B,KAAKgqC,IACvBplC,EAAO8xB,aAAa12B,KAAKiqC,IACzBrlC,EAAO8xB,aAAa12B,KAAKkqC,IACzBtlC,EAAO8xB,aAAa12B,KAAKmqC,IAM3B1S,gBACE,OAAO,GAAKz3B,KAAKC,KAAK1E,OAASyE,KAAKT,KAAKhE,OAASyE,KAAKqpC,UAAU9tC,QCtGtD,MAAM6uC,GAInBx8B,cAEE5N,KAAKqqC,QAAU,EAEfrqC,KAAKsqC,aAAe,GAEpBtqC,KAAKuqC,SAAW,GAEhBvqC,KAAKZ,KAAO,GAMdsyB,KAAK9sB,GACH5E,KAAKqqC,QAAUzlC,EAAOswB,YACtBl1B,KAAKsqC,aAAe1lC,EAAOiwB,gBAC3B70B,KAAKuqC,SAAW3lC,EAAOiwB,gBACvB70B,KAAKZ,KAAOwF,EAAOiwB,gBAMrBjD,KAAKhtB,GACHA,EAAO0xB,WAAWt2B,KAAKqqC,SACvBzlC,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKsqC,aAAY,OACjC1lC,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKuqC,SAAQ,OAC7B3lC,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKZ,KAAI,OAM3Bq4B,gBACE,OAAO,EAAIz3B,KAAKsqC,aAAa/uC,OAASyE,KAAKuqC,SAAShvC,OAASyE,KAAKZ,KAAK7D,QCvC5D,MAAMivC,GAInB58B,cAEE5N,KAAKwB,GAAK,EAEVxB,KAAKZ,KAAO,GAMdsyB,KAAK9sB,GACH5E,KAAKwB,GAAKoD,EAAOowB,WACjBh1B,KAAKZ,KAAOwF,EAAOiwB,gBAMrBjD,KAAKhtB,GACHA,EAAOwxB,UAAUp2B,KAAKwB,IACtBoD,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKZ,KAAI,OAM3Bq4B,gBACE,OAAO,EAAIz3B,KAAKZ,KAAK7D,QCjCV,ICkBAkvC,GAAA,CACbluB,OACAmuB,IClBa,CACbhT,UACAS,iBACAwS,SDgBAC,IEpBa,CACbpS,UACAmS,SFmBAE,IGrBa,CACbxC,eACAsC,KCCa,MAIb/8B,YAAY7S,GAEViF,KAAKwB,GAAK,EAEVxB,KAAK8qC,MAAQ,GAET/vC,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKwB,GAAKoD,EAAOswB,YAEjB,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOswB,YAAajuB,EAAIU,EAAGV,IAAK,CAClD,IAAI2T,EAAO,IAAIytB,GAEfztB,EAAK8W,KAAK9sB,GAEV5E,KAAK8qC,MAAM7jC,GAAK2T,GAOpBgX,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAO0xB,WAAWt2B,KAAKwB,IACvBoD,EAAO6xB,YAAYz2B,KAAK8qC,MAAMvvC,QAE9B,IAAK,IAAIqf,KAAQ5a,KAAK8qC,MACpBlwB,EAAKgX,KAAKhtB,GAGZ,OAAO7J,EAMT08B,gBACE,OAAO,EAAwB,GAApBz3B,KAAK8qC,MAAMvvC,UJlCxBwvC,IKvBa,CACbJ,KCAa,MAMb/8B,YAAY7S,EAAQi1B,EAAOzD,GAEzBvsB,KAAKgrC,QAAU,IAAIhwC,WAAW,GAE1BD,GACFiF,KAAK0xB,KAAK32B,EAAQi1B,EAAOzD,GAS7BmF,KAAK32B,EAAQi1B,EAAOzD,GAClBvsB,KAAKgrC,QAAU,IAAIhwC,WAAWD,EAAOU,MAAM,EAAGu0B,EAAQzD,EAAS,KAMjEqF,OACE,OAAO5xB,KAAKgrC,QAAQvvC,QAAQV,OAM9B08B,gBACE,OAAOz3B,KAAKgrC,QAAQzvC,UNZtB0vC,IOvBa,CACb3C,UACAqC,KCCa,MAIb/8B,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAKkrC,QAAU,GAEXnwC,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOswB,YAEtB,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIkkC,EAAS,IAAI7C,GAEjB6C,EAAOzZ,KAAK9sB,GAEZ5E,KAAKkrC,QAAQjkC,GAAKkkC,GAOtBvZ,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAO6xB,YAAYz2B,KAAKkrC,QAAQ3vC,QAEhC,IAAK,IAAI4vC,KAAUnrC,KAAKkrC,QACtBC,EAAOvZ,KAAKhtB,GAGd,OAAO7J,EAMT08B,gBACE,IAAI10B,EAAO,EAEX,IAAK,IAAIooC,KAAUnrC,KAAKkrC,QACtBnoC,GAAQooC,EAAO1T,gBAGjB,OAAO10B,KRtCTqoC,ISzBa,CACbT,STyBAU,IUzBa,CACbvR,UACA6Q,SVwBAW,IWlBa,CACb5P,UACAK,SACAE,6BACAI,0BACAI,mBACAH,cACAM,mBACArF,iBACAF,cACAsT,SXSAY,IY5Ba,CACbZ,KCOa,MAIb/8B,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAK28B,MAAQ,KAEb38B,KAAKw3B,MAAQ,KAEbx3B,KAAKwrC,cAAgB,KAErBxrC,KAAKq4B,QAAU,KAEfr4B,KAAKyrC,UAAY,KAEjBzrC,KAAK0rC,MAAQ,KAEb1rC,KAAK2rC,SAAW,KAEZ5wC,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOswB,YAElBtwB,EAAOswB,cACTl1B,KAAK28B,MAAQ,IAAIgD,GAAW/6B,IAG1BA,EAAOswB,cACTl1B,KAAKw3B,MAAQ,IAAImI,GAAW/6B,IAG1BA,EAAOswB,cACTl1B,KAAKwrC,cAAgB,IAAI7L,GAAW/6B,IAGlCA,EAAOswB,cACTl1B,KAAKq4B,QAAU,IAAIsB,GAAW/0B,IAG5BA,EAAOswB,cACTl1B,KAAKyrC,UAAY,IAAI9R,GAAW/0B,IAG9BA,EAAOswB,cACTl1B,KAAK0rC,MAAQ,IAAI/L,GAAW/6B,IAG1BA,EAAOswB,cACTl1B,KAAK2rC,SAAW,IAAIhS,GAAW/0B,IAOnCgtB,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAqD9B,OAnDA6J,EAAO0xB,WAAWt2B,KAAKmb,SAEnBnb,KAAK28B,OACP/3B,EAAO0xB,WAAW,GAClBt2B,KAAK28B,MAAM/K,KAAKhtB,IAEhBA,EAAO0xB,WAAW,GAGhBt2B,KAAKw3B,OACP5yB,EAAO0xB,WAAW,GAClBt2B,KAAKw3B,MAAM5F,KAAKhtB,IAEhBA,EAAO0xB,WAAW,GAGhBt2B,KAAKwrC,eACP5mC,EAAO0xB,WAAW,GAClBt2B,KAAKwrC,cAAc5Z,KAAKhtB,IAExBA,EAAO0xB,WAAW,GAGhBt2B,KAAKq4B,SACPzzB,EAAO0xB,WAAW,GAClBt2B,KAAKq4B,QAAQzG,KAAKhtB,IAElBA,EAAO0xB,WAAW,GAGhBt2B,KAAKyrC,WACP7mC,EAAO0xB,WAAW,GAClBt2B,KAAKyrC,UAAU7Z,KAAKhtB,IAEpBA,EAAO0xB,WAAW,GAGhBt2B,KAAK0rC,OACP9mC,EAAO0xB,WAAW,GAClBt2B,KAAK0rC,MAAM9Z,KAAKhtB,IAEhBA,EAAO0xB,WAAW,GAGhBt2B,KAAK2rC,UACP/mC,EAAO0xB,WAAW,GAClBt2B,KAAK2rC,SAAS/Z,KAAKhtB,IAEnBA,EAAO0xB,WAAW,GAGbv7B,EAMT08B,gBACE,IAAI10B,EAAO,GA8BX,OA5BI/C,KAAK28B,QACP55B,GAAQ/C,KAAK28B,MAAMlF,iBAGjBz3B,KAAKw3B,QACPz0B,GAAQ/C,KAAKw3B,MAAMC,iBAGjBz3B,KAAKwrC,gBACPzoC,GAAQ/C,KAAKwrC,cAAc/T,iBAGzBz3B,KAAKq4B,UACPt1B,GAAQ/C,KAAKq4B,QAAQZ,iBAGnBz3B,KAAKyrC,YACP1oC,GAAQ/C,KAAKyrC,UAAUhU,iBAGrBz3B,KAAK0rC,QACP3oC,GAAQ/C,KAAK0rC,MAAMjU,iBAGjBz3B,KAAK2rC,WACP5oC,GAAQ/C,KAAK2rC,SAASlU,iBAGjB10B,Kb1IT6oC,Ic5Ba,CACb5C,UACA2B,KCCa,MAIb/8B,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAK6rC,QAAU,GAEX9wC,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOswB,YAEtB,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAC9CjH,KAAK6rC,QAAQ5kC,GAAK,IAAI+hC,GAAOpkC,GAOjCgtB,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAO6xB,YAAYz2B,KAAK6rC,QAAQtwC,QAEhC,IAAK,IAAIuwC,KAAU9rC,KAAK6rC,QACtBC,EAAOla,KAAKhtB,GAGd,OAAO7J,EAMT08B,gBACE,IAAI10B,EAAO,EAEX,IAAK,IAAI8oC,KAAW7rC,KAAK6rC,QACvB9oC,GAAQ8oC,EAAQE,WAGlB,OAAOhpC,Kf7BTipC,IgB7Ba,CACb5C,SACAuB,KCCa,MAIb/8B,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAKisC,OAAS,GAEVlxC,GACFiF,KAAK0xB,KAAK32B,GAOd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOswB,YAEtB,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIilC,EAAQ,IAAI9C,GAEhB8C,EAAMxa,KAAK9sB,GAEX5E,KAAKisC,OAAOhlC,GAAKilC,GAOrBta,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAK+rC,YAC9BnnC,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAO6xB,YAAYz2B,KAAKisC,OAAO1wC,QAE/B,IAAK,IAAI2wC,KAASlsC,KAAKisC,OACrBC,EAAMta,KAAKhtB,GAGb,OAAO7J,EAMT08B,gBACE,IAAI10B,EAAO,EAEX,IAAK,IAAImpC,KAASlsC,KAAKisC,OACrBlpC,GAAQmpC,EAAMzU,gBAGhB,OAAO10B,KjBhCTopC,IkB5Ba,CACbnT,gBACAK,kBACAK,qBACAiR,SlByBAyB,ImB/Ba,CACbxM,qBACA+K,SnB8BA0B,IoBjCa,CACb1B,KCEa,MAIb/8B,YAAY7S,GAEViF,KAAKmb,QAAU,EAEfnb,KAAK+C,KAAO,IAAIhF,WAAW,GAE3BiC,KAAKssC,QAAU,IAAItxC,WAAW,GAE1BD,GACFiF,KAAK0xB,KAAK32B,GAQd22B,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9B,MAAuB,SAAnB6J,EAAO+vB,KAAK,KAIhB30B,KAAKmb,QAAUvW,EAAOswB,YACtBl1B,KAAK+C,KAAO6B,EAAOgxB,eAAe,GAClC51B,KAAKssC,QAAU1nC,EAAOixB,eAAe71B,KAAK+C,KAAK,GAAK/C,KAAK+C,KAAK,KAEvD,GAMT6uB,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAO9B,OALA6J,EAAOuxB,MAAM,QACbvxB,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAOkyB,gBAAgB92B,KAAK+C,MAC5B6B,EAAOmyB,gBAAgB/2B,KAAKssC,SAErBvxC,EAMT08B,gBACE,OAAO,GAAMz3B,KAAK+C,KAAK,GAAK/C,KAAK+C,KAAK,MrBvBxCwpC,IsB3Ba,CACbrL,OACAH,aACAN,iBACAc,WACArB,mBACAE,YACAuK,QACA6B,YCZa,MAIb5+B,cAEE5N,KAAKwpB,MAAQ,GAEbxpB,KAAKysC,UAAY,CAAC,GAAI,GAAI,GAAI,IAE9BzsC,KAAK0sC,QAAU,GAEf1sC,KAAK2sC,cAAgB,GAErB3sC,KAAK4sC,kBAAoB,CAAC,GAAI,GAAI,GAAI,IAEtC5sC,KAAK6sC,gBAAkB,GAOzBC,eAAe/xC,EAAQgyC,GACrB,IAAIvjB,EAAQxpB,KAAKwpB,MACbijB,EAAYzsC,KAAKysC,UACjBC,EAAU1sC,KAAK0sC,QAEfK,IACFvjB,EAAQxpB,KAAK2sC,cACbF,EAAYzsC,KAAK4sC,kBACjBF,EAAU1sC,KAAK6sC,iBAGjB,IAAIjM,EAAc,IAAIrP,GAEtBqP,EAAYlP,KAAK32B,GAEjBiF,KAAKgtC,gBAAgBxjB,EAAOoX,EAAY/O,WAAW,iBACnD7xB,KAAKitC,wBAAwBR,EAAU,GAAI7L,EAAY/O,WAAW,iBAAkB,GACpF7xB,KAAKitC,wBAAwBR,EAAU,GAAI7L,EAAY/O,WAAW,qBAAsB,GACxF7xB,KAAKitC,wBAAwBR,EAAU,GAAI7L,EAAY/O,WAAW,kBAAmB,GACrF7xB,KAAKitC,wBAAwBR,EAAU,GAAI7L,EAAY/O,WAAW,gBAAiB,GACnF7xB,KAAKktC,sBAAsBR,EAAS9L,EAAY/O,WAAW,kBAO7Dmb,gBAAgBxjB,EAAOmI,GACrB,IAAK,IAAK9a,EAAK5H,KAAU0iB,EAAS,CAChC,IAAIwb,EAASl+B,EAAM6a,MAAM,KAEzBN,EAAM3S,GAAOs2B,EAAO,IAAM,IAS9BF,wBAAwBR,EAAW9a,EAASyb,GAC1C,IAAK,IAAKv2B,EAAK5H,KAAU0iB,EAEvB,GAAe,MAAX9a,EAAI,GAAY,CAClB,IAAIs2B,EAASl+B,EAAM6a,MAAM,KAAKruB,MAAM2xC,GAChC9/B,EAAO,GAGP+/B,EAAa1b,EAAQzsB,IAAG,IAAA4M,OAAK+E,EAAG,iBAAkB,KAEtD,IAAK,IAAIy2B,KAAYH,EAEfp3B,MAAMu3B,IAA0B,YAAbA,GAAuC,KAAbA,GAC/ChgC,EAAKrJ,KAAKqpC,GAIdb,EAAU51B,GAAO,CAACvJ,OAAM+/B,eAS9BH,sBAAsBR,EAAS/a,GAC7B,IAAK,IAAK9a,EAAK5H,KAAU0iB,EAAS,CAChC,IAAIwb,EAASl+B,EAAM6a,MAAM,KAIzB4iB,EAAQ71B,GAAOs2B,EAAO,GAAG3xC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,MAW7D+xC,YAAYrrC,GACVA,EAAOA,EAAK+X,cAEZ,IAAIsO,EAAOvoB,KAAKwpB,MAAMtnB,GAOtB,YALavJ,IAAT4vB,IACFA,EAAOvoB,KAAK2sC,cAAczqC,IAIf,KAATqmB,QAAwB5vB,IAAT4vB,EACVrmB,EAGFqmB,EAQTilB,eAAetrC,EAAMjC,GAGnB,OAFAA,EAAOA,EAAKga,gBAERja,KAAKysC,UAAUvqC,GAAMjC,GAc3B4gC,YAAY3+B,EAAMjC,GAChBA,EAAOA,EAAKga,cAEZ,IAAI3M,EAAOtN,KAAKysC,UAAUvqC,GAAMjC,GAEhC,IAAKqN,KACHA,EAAOtN,KAAK4sC,kBAAkB1qC,GAAMjC,IAGlC,MAAM,IAAInD,MAAK,gDAAAgV,OAAiD7R,EAAI,MAIxE,OAAOqN,EASTmgC,UAAUxtC,GACRA,EAAOA,EAAKga,cAEZ,IAAIyzB,EAAS1tC,KAAK0sC,QAAQzsC,GAE1B,QAAetH,IAAX+0C,QAGa/0C,KAFf+0C,EAAS1tC,KAAK6sC,gBAAgB5sC,IAG5B,MAAM,IAAInD,MAAK,4BAAAgV,OAA6B7R,IAIhD,OAAOytC,EASTC,eAAe1tC,GAGb,GAFAA,EAAOA,EAAKga,mBAEethB,IAAvBqH,KAAK0sC,QAAQzsC,GACf,OAAO,EAGT,QAAmCtH,IAA/BqH,KAAK6sC,gBAAgB5sC,GACvB,OAAO,EAGT,MAAM,IAAInD,MAAK,4BAAAgV,OAA6B7R,OvBxK9C2tC,IwBnCa,CACbjD,SxBmCAkD,SyB9Ba,CACblJ,eACAC,kBACAC,iBACAE,mBACAzI,cACA4I,QACAyF,SzBwBAmD,IDrCa,CACbnD,K2BIa,MAIb/8B,cACE5N,KAAKmb,QAAU,EACfnb,KAAK+tC,gBAAkB,EACvB/tC,KAAKg9B,cAAgB,EACrBh9B,KAAKC,KAAO,GACZD,KAAKguC,WAAa,GAClBhuC,KAAKi9B,OAAS,GACdj9B,KAAKoxB,YAAc,GACnBpxB,KAAKiuC,MAAQ,EACbjuC,KAAKkuC,kBAAoB,EACzBluC,KAAKmuC,qBAAuB,GAC5BnuC,KAAKouC,iBAAmB,GACxBpuC,KAAKmpC,aAAe,EACpBnpC,KAAKquC,iBAAmB,GACxBruC,KAAKsuC,WAAa,EAClBtuC,KAAKuuC,UAAY,EACjBvuC,KAAKwuC,QAAU,EACfxuC,KAAKk+B,WAAa,EAClBl+B,KAAKm+B,SAAW,IAAInjC,WAAW,GAC/BgF,KAAKyuC,eAAiB,EACtBzuC,KAAK0uC,UAAY,GACjB1uC,KAAK2uC,UAAY,GAMnBjd,KAAK32B,GACH,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9BiF,KAAKmb,QAAUvW,EAAOswB,YACtBl1B,KAAK+tC,gBAAkBnpC,EAAOswB,YAC9Bl1B,KAAKg9B,cAAgBp4B,EAAOswB,YAC5Bl1B,KAAKC,KAAO2E,EAAOiwB,gBACnB70B,KAAKguC,WAAappC,EAAOiwB,gBACzB70B,KAAKi9B,OAASr4B,EAAOiwB,gBACrB70B,KAAKoxB,YAAcxsB,EAAOiwB,gBAC1B70B,KAAKiuC,KAAOrpC,EAAOswB,YACnBl1B,KAAKkuC,iBAAmBtpC,EAAOswB,YAC/Bl1B,KAAKmuC,qBAAuBvpC,EAAOiwB,gBACnC70B,KAAKouC,iBAAmBxpC,EAAOiwB,gBAC/B70B,KAAKmpC,aAAevkC,EAAOswB,YAC3Bl1B,KAAKquC,iBAAmBzpC,EAAOiwB,gBAC/B70B,KAAKsuC,WAAa1pC,EAAOswB,YACzBl1B,KAAKuuC,UAAY3pC,EAAO0wB,cACxBt1B,KAAKwuC,QAAU5pC,EAAO0wB,cACtBt1B,KAAKk+B,WAAat5B,EAAO0wB,cACzB1wB,EAAOixB,eAAe71B,KAAKm+B,UAC3Bn+B,KAAKyuC,cAAgB7pC,EAAOswB,YAE5B,IAAK,IAAIjuB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIsjC,EAAW,IAAIH,GAEnBG,EAAS7Y,KAAK9sB,GAEd5E,KAAK0uC,UAAUznC,GAAKsjC,EAGtB,IAAK,IAAItjC,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAI2nC,EAAW,IAAIpE,GAEnBoE,EAASld,KAAK9sB,GAEd5E,KAAK2uC,UAAU1nC,GAAK2nC,GAOxBhd,OACE,IAAI72B,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAE9B6J,EAAO0xB,WAAWt2B,KAAKmb,SACvBvW,EAAO0xB,WAAWt2B,KAAK+tC,iBACvBnpC,EAAO0xB,WAAWt2B,KAAKg9B,eACvBp4B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKC,KAAI,OACzB2E,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKguC,WAAU,OAC/BppC,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKi9B,OAAM,OAC3Br4B,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKoxB,YAAW,OAChCxsB,EAAO0xB,WAAWt2B,KAAKiuC,MACvBrpC,EAAO0xB,WAAWt2B,KAAKkuC,kBACvBtpC,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKmuC,qBAAoB,OACzCvpC,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKouC,iBAAgB,OACrCxpC,EAAO0xB,WAAWt2B,KAAKmpC,cACvBvkC,EAAOuxB,MAAK,GAAArkB,OAAI9R,KAAKquC,iBAAgB,OACrCzpC,EAAO0xB,WAAWt2B,KAAKsuC,YACvB1pC,EAAO8xB,aAAa12B,KAAKuuC,WACzB3pC,EAAO8xB,aAAa12B,KAAKwuC,SACzB5pC,EAAO8xB,aAAa12B,KAAKk+B,YACzBt5B,EAAOmyB,gBAAgB/2B,KAAKm+B,UAC5Bv5B,EAAO0xB,WAAWt2B,KAAKyuC,eACvB7pC,EAAO6xB,YAAYz2B,KAAK0uC,UAAUnzC,QAElC,IAAK,IAAIgV,KAASvQ,KAAK0uC,UACrBn+B,EAAMqhB,KAAKhtB,GAGbA,EAAO6xB,YAAYz2B,KAAK2uC,UAAUpzC,QAElC,IAAK,IAAIitB,KAASxoB,KAAK2uC,UACrBnmB,EAAMoJ,KAAKhtB,GAGb,OAAO7J,EAMT08B,gBACE,IAAI10B,EAAO,GAAK/C,KAAKC,KAAK1E,OAASyE,KAAKguC,WAAWzyC,OAASyE,KAAKi9B,OAAO1hC,OAASyE,KAAKoxB,YAAY71B,OAASyE,KAAKmuC,qBAAqB5yC,OAASyE,KAAKouC,iBAAiB7yC,OAASyE,KAAKquC,iBAAiB9yC,OAEnM,IAAK,IAAIgV,KAASvQ,KAAK0uC,UACrB3rC,GAAQwN,EAAMknB,gBAGhB,IAAK,IAAIjP,KAASxoB,KAAK2uC,UACrB5rC,GAAQylB,EAAMiP,gBAGhB,OAAO10B,MClII,MAAM8rC,GAInBjhC,cAEE5N,KAAK8uC,aAAe,EAEpB9uC,KAAKwG,IAAM,IAAIvI,aAAa,GAE5B+B,KAAK0G,IAAM,IAAIzI,aAAa,GAM9B8wC,QAAQnqC,GACN5E,KAAK8uC,aAAelqC,EAAO0wB,cAC3B1wB,EAAOoxB,iBAAiBh2B,KAAKwG,KAC7B5B,EAAOoxB,iBAAiBh2B,KAAK0G,KAM/BsoC,SAASpqC,GACPA,EAAO8xB,aAAa12B,KAAK8uC,cACzBlqC,EAAOsyB,kBAAkBl3B,KAAKwG,KAC9B5B,EAAOsyB,kBAAkBl3B,KAAK0G,KAMhCuoC,SAASrqC,GACa,IAAhB5E,KAAKwG,IAAI,IAA4B,IAAhBxG,KAAKwG,IAAI,IAA4B,IAAhBxG,KAAKwG,IAAI,IACrD5B,EAAO6+B,sBAAsB,gBAAiBzjC,KAAKwG,KAGjC,IAAhBxG,KAAK0G,IAAI,IAA4B,IAAhB1G,KAAK0G,IAAI,IAA4B,IAAhB1G,KAAK0G,IAAI,IACrD9B,EAAO6+B,sBAAsB,gBAAiBzjC,KAAK0G,KAG3B,IAAtB1G,KAAK8uC,cACPlqC,EAAOy+B,iBAAiB,eAAgBrjC,KAAK8uC,eC1CpC,MAAMI,GAInBthC,cAEE5N,KAAKC,KAAO,GAEZD,KAAKmvC,SAAW,IAAInxC,YAAY,GAEhCgC,KAAKovC,UAAY,EAEjBpvC,KAAKyW,MAAQ,EAEbzW,KAAKqvC,OAAS,EAEdrvC,KAAKsvC,UAAY,EAEjBtvC,KAAKuvC,OAAS,IAAIV,GAMpBE,QAAQnqC,GACN5E,KAAKC,KAAO2E,EAAO+vB,KAAK,IACxB/vB,EAAOmxB,gBAAgB/1B,KAAKmvC,UAC5BnvC,KAAKovC,UAAYxqC,EAAO0wB,cACxBt1B,KAAKyW,MAAQ7R,EAAOywB,aACpBr1B,KAAKqvC,OAASzqC,EAAO0wB,cACrBt1B,KAAKsvC,UAAY1qC,EAAOywB,aACxBr1B,KAAKuvC,OAAOR,QAAQnqC,GAMtBoqC,SAASpqC,GACPA,EAAOuxB,MAAMn2B,KAAKC,MAClB2E,EAAOwvB,KAAK,GAAKp0B,KAAKC,KAAK1E,QAC3BqJ,EAAOqyB,iBAAiBj3B,KAAKmvC,UAC7BvqC,EAAO8xB,aAAa12B,KAAKovC,WACzBxqC,EAAO6xB,YAAYz2B,KAAKyW,OACxB7R,EAAO8xB,aAAa12B,KAAKqvC,QACzBzqC,EAAO6xB,YAAYz2B,KAAKsvC,WACxBtvC,KAAKuvC,OAAOP,SAASpqC,GAMvB4qC,QAAQ5qC,GACN5E,KAAKC,KAAO2E,EAAO+vB,OAEnB,IAAK,IAAIzC,KAASttB,EAAO6qC,YACvB,GAAc,aAAVvd,EACFttB,EAAOi+B,aAAa7iC,KAAKmvC,eACpB,GAAc,eAAVjd,EACTlyB,KAAKyW,MAAQ,OACR,GAAc,cAAVyb,EACTlyB,KAAKovC,UAAYxqC,EAAO+9B,iBACnB,GAAc,WAAVzQ,EACTlyB,KAAKqvC,OAASzqC,EAAO+9B,iBAChB,GAAc,kBAAVzQ,EACTttB,EAAOk+B,eAAe9iC,KAAKuvC,OAAO/oC,UAC7B,GAAc,kBAAV0rB,EACTttB,EAAOk+B,eAAe9iC,KAAKuvC,OAAO7oC,SAC7B,IAAc,iBAAVwrB,EAGT,MAAM,IAAIp1B,MAAK,+BAAAgV,OAAgCogB,EAAK,MAFpDlyB,KAAKuvC,OAAOT,aAAelqC,EAAO+9B,aAUxCsM,SAASrqC,GACPA,EAAOw/B,iBAAiB,OAAQpkC,KAAKC,MACrC2E,EAAO4+B,iBAAiB,WAAYxjC,KAAKmvC,UAEtB,IAAfnvC,KAAKyW,OACP7R,EAAOu+B,UAAU,cAGI,IAAnBnjC,KAAKovC,WACPxqC,EAAOy+B,iBAAiB,YAAarjC,KAAKovC,WAGxB,IAAhBpvC,KAAKqvC,QACPzqC,EAAOy+B,iBAAiB,SAAUrjC,KAAKqvC,QAGzCrvC,KAAKuvC,OAAON,SAASrqC,GACrBA,EAAOs/B,YC7FX,MAAMwL,GAAiBA,CAACC,EAAU5sC,KAAS,MAIzC6K,cAEE5N,KAAK4vC,MAAQ,EAEb5vC,KAAKiP,MAAQ,IAAI0gC,EAAS5sC,GAE1B/C,KAAK6vC,MAAQ,IAAIF,EAAS5sC,GAE1B/C,KAAK8vC,OAAS,IAAIH,EAAS5sC,GAO7BgsC,QAAQnqC,EAAQmrC,GACd/vC,KAAK4vC,MAAQhrC,EAAOywB,aACpBzwB,EAAOsxB,eAAel2B,KAAKiP,OAEvB8gC,EAAoB,IACtBnrC,EAAOsxB,eAAel2B,KAAK6vC,OAC3BjrC,EAAOsxB,eAAel2B,KAAK8vC,SAQ/Bd,SAASpqC,EAAQmrC,GACfnrC,EAAO6xB,YAAYz2B,KAAK4vC,OACxBhrC,EAAOwyB,gBAAgBp3B,KAAKiP,OAExB8gC,EAAoB,IACtBnrC,EAAOwyB,gBAAgBp3B,KAAK6vC,OAC5BjrC,EAAOwyB,gBAAgBp3B,KAAK8vC,SAQhCN,QAAQ5qC,EAAQmrC,GACd/vC,KAAK4vC,MAAQhrC,EAAO89B,UACpB99B,EAAOg+B,aAAa5iC,KAAKiP,OAErB8gC,EAAoB,IACtBnrC,EAAO+vB,OACP/vB,EAAOg+B,aAAa5iC,KAAK6vC,OACzBjrC,EAAO+vB,OACP/vB,EAAOg+B,aAAa5iC,KAAK8vC,SAQ7Bb,SAASrqC,EAAQmrC,GACfnrC,EAAOg/B,cAAa,GAAA9xB,OAAI9R,KAAK4vC,MAAK,KAAK5vC,KAAKiP,OAExC8gC,EAAoB,IACtBnrC,EAAOwS,SACPxS,EAAOg/B,cAAc,QAAS5jC,KAAK6vC,OACnCjrC,EAAOg/B,cAAc,SAAU5jC,KAAK8vC,QACpClrC,EAAO2/B,YAQX9M,cAAcsY,GACZ,IAAIC,EAAYhwC,KAAKiP,MAAMhM,WACvBF,EAAO,EAAIitC,EAMf,OAJID,EAAoB,IACtBhtC,GAAoB,EAAZitC,GAGHjtC,KAOEktC,GAAYP,GAAe1xC,YAAa,GAKxCkyC,GAAaR,GAAezxC,aAAc,GAK1CkyC,GAAeT,GAAezxC,aAAc,GAK5CmyC,GAAeV,GAAezxC,aAAc,GC3GnDoyC,GAAsBC,IAAc,MAIxC1iC,cAEE5N,KAAKC,KAAO,GAEZD,KAAK+vC,kBAAoB,EAEzB/vC,KAAKuwC,kBAAoB,EAEzBvwC,KAAKwwC,OAAS,GAOhBzB,QAAQnqC,EAAQ3E,GACdD,KAAKC,KAAOA,EAEZ,MAAMwwC,EAAc7rC,EAAOywB,aAE3Br1B,KAAK+vC,kBAAoBnrC,EAAOywB,aAChCr1B,KAAKuwC,iBAAmB3rC,EAAOswB,YAE/B,IAAK,IAAIjuB,EAAI,EAAGA,EAAIwpC,EAAaxpC,IAAK,CACpC,MAAMypC,EAAQ,IAAIJ,EAElBI,EAAM3B,QAAQnqC,EAAQ5E,KAAK+vC,mBAE3B/vC,KAAKwwC,OAAOvsC,KAAKysC,IAOrB1B,SAASpqC,GACPA,EAAOuxB,MAAMn2B,KAAKC,MAClB2E,EAAO6xB,YAAYz2B,KAAKwwC,OAAOj1C,QAC/BqJ,EAAO6xB,YAAYz2B,KAAK+vC,mBACxBnrC,EAAO0xB,WAAWt2B,KAAKuwC,kBAEvB,IAAK,MAAMG,KAAS1wC,KAAKwwC,OACvBE,EAAM1B,SAASpqC,EAAQ5E,KAAK+vC,mBAQhCP,QAAQ5qC,EAAQ3E,GACdD,KAAKC,KAAOA,EAEZ,MAAM0wC,EAAiB/rC,EAAO89B,UAE9B99B,EAAO+vB,OAEP,MAAMzC,EAAQttB,EAAO+vB,OAEP,eAAVzC,EACFlyB,KAAK+vC,kBAAoB,EACN,WAAV7d,EACTlyB,KAAK+vC,kBAAoB,EACN,YAAV7d,EACTlyB,KAAK+vC,kBAAoB,EACN,WAAV7d,IACTlyB,KAAK+vC,kBAAoB,GAIL,gBAAlBnrC,EAAO4vB,SACT5vB,EAAO+vB,OAEP30B,KAAKuwC,iBAAmB3rC,EAAO89B,WAGjC,IAAK,IAAIz7B,EAAI,EAAGA,EAAI0pC,EAAgB1pC,IAAK,CACvC,MAAMypC,EAAQ,IAAIJ,EAElBI,EAAMlB,QAAQ5qC,EAAQ5E,KAAK+vC,mBAE3B/vC,KAAKwwC,OAAOvpC,GAAKypC,EAGnB9rC,EAAO+vB,OAOTsa,SAASrqC,EAAQ3E,GAGf,IAAIiyB,EAFJttB,EAAOq/B,WAAWhkC,EAAMD,KAAKwwC,OAAOj1C,QAIL,IAA3ByE,KAAK+vC,kBACP7d,EAAQ,aAC4B,IAA3BlyB,KAAK+vC,kBACd7d,EAAQ,SAC4B,IAA3BlyB,KAAK+vC,kBACd7d,EAAQ,UAC4B,IAA3BlyB,KAAK+vC,oBACd7d,EAAQ,UAGVttB,EAAOu+B,UAAUjR,IAEc,IAA3BlyB,KAAKuwC,kBACP3rC,EAAOw+B,YAAY,cAAepjC,KAAKuwC,kBAGzC,IAAK,MAAMG,KAAS1wC,KAAKwwC,OACvBE,EAAMzB,SAASrqC,EAAQ5E,KAAK+vC,mBAG9BnrC,EAAOs/B,WAMTzM,gBACE,IAAI+Y,EAASxwC,KAAKwwC,OACdztC,EAAO,GAMX,OAJIytC,EAAOj1C,SACTwH,GAAQytC,EAAO,GAAG/Y,cAAcz3B,KAAK+vC,mBAAqBS,EAAOj1C,QAG5DwH,KAOE6tC,GAAgBP,GAAmBJ,IAKnCY,GAAiBR,GAAmBH,IAKpCY,GAAmBT,GAAmBF,IAKtCY,GAAmBV,GAAmBD,ICjKpC,IAAAY,GAAA,CAEbC,KAAM,CAAC,YAAaL,IACpBM,KAAM,CAAC,QAASL,IAEhBM,KAAM,CAAC,cAAeL,IACtBM,KAAM,CAAC,WAAYL,IACnBM,KAAM,CAAC,UAAWP,IAElBQ,KAAM,CAAC,QAAST,IAChBU,KAAM,CAAC,QAAST,IAEhBU,KAAM,CAAC,mBAAoBX,IAC3BY,KAAM,CAAC,iBAAkBZ,IACzBa,KAAM,CAAC,QAASZ,IAChBa,KAAM,CAAC,YAAad,IACpBe,KAAM,CAAC,mBAAoBf,IAC3BgB,KAAM,CAAC,eAAgBf,IACvBgB,KAAM,CAAC,aAAcjB,IAErBkB,KAAM,CAAC,aAAclB,IAErBmB,KAAM,CAAC,eAAgBnB,IACvBoB,KAAM,CAAC,UAAWpB,IAClBqB,KAAM,CAAC,YAAarB,IACpBsB,KAAM,CAAC,WAAYtB,IACnBuB,KAAM,CAAC,WAAYvB,IACnBwB,KAAM,CAAC,QAASxB,IAChByB,KAAM,CAAC,aAAczB,IAErB0B,KAAM,CAAC,QAAS1B,IAChB2B,KAAM,CAAC,YAAa3B,IACpB4B,KAAM,CAAC,WAAY5B,IACnB6B,KAAM,CAAC,UAAW7B,IAClB8B,KAAM,CAAC,eAAgB9B,IACvB+B,KAAM,CAAC,SAAU/B,IACjBgC,KAAM,CAAC,QAAShC,IAChBiC,KAAM,CAAC,aAAcjC,IAErBkC,KAAM,CAAC,cAAelC,IACtBmC,KAAM,CAAC,cAAenC,IACtBoC,KAAM,CAAC,QAASpC,IAChBqC,KAAM,CAAC,QAASpC,IAChBqC,KAAM,CAAC,cAAevC,IACtBwC,KAAM,CAAC,aAAcvC,IAErBwC,KAAM,CAAC,cAAevC,IACtBwC,KAAM,CAAC,cAAexC,IACtByC,KAAM,CAAC,WAAY3C,IAEnB4C,KAAM,CAAC,cAAe1C,IACtB2C,KAAM,CAAC,WAAY1C,IACnB2C,KAAM,CAAC,UAAW5C,KClDL,MAAM6C,GAInB/lC,cAEE5N,KAAK4zC,WAAa,GAOpBC,eAAejvC,EAAQ7B,GACrB,KAAOA,EAAO,GAAG,CACf,IAAI9C,EAAO2E,EAAO+vB,KAAK,GAAG,GACtBmf,EAAY,IAAIC,GAAa9zC,GAAM,GAEvC6zC,EAAU/E,QAAQnqC,EAAQ3E,GAE1B8C,GAAQ+wC,EAAUrc,gBAElBz3B,KAAK4zC,WAAW3vC,KAAK6vC,IAOzBE,gBAAgBpvC,GACd,IAAK,IAAIkvC,KAAa9zC,KAAK4zC,WACzBE,EAAU9E,SAASpqC,GAWvB5C,mBAAoB4C,GAClB,IAAK,IAAIstB,KAASttB,EAAO6qC,YACT,WAAVvd,OACF,UAAApgB,OAAgBlN,EAAO+vB,cAEjBzC,EASZ+hB,cAAcrvC,EAAQ3E,GACpB,IAAI6zC,EAAY,IAAIC,GAAa9zC,GAAM,GAEvC6zC,EAAUtE,QAAQ5qC,EAAQ3E,GAE1BD,KAAK4zC,WAAW3vC,KAAK6vC,GAQvBI,eAAetvC,EAAQ3E,GACrB,IAAK,IAAI6zC,KAAa9zC,KAAK4zC,WACzB,GAAIE,EAAU7zC,OAASA,EAErB,OADA6zC,EAAU7E,SAASrqC,EAAQmvC,GAAa9zC,GAAM,KACvC,EAIX,OAAO,EAMTw3B,gBACE,IAAI10B,EAAO,EAEX,IAAK,IAAI+wC,KAAa9zC,KAAK4zC,WACzB7wC,GAAQ+wC,EAAUrc,gBAGpB,OAAO10B,GC7FX,IAAIoxC,GAAkB,CACpBC,KAAM,EACNC,YAAa,EACbC,MAAO,EACPC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,WAAY,GAGVC,GAAkB,CACpBC,EAAG,OACHC,EAAG,cACHC,EAAG,QACHC,EAAG,WACHC,EAAG,WACHC,EAAG,WACHC,EAAG,cAMU,MAAMC,WAAcxB,GAIjC/lC,cACEE,QAGA9N,KAAKo1C,WAAa,EAElBp1C,KAAKyW,MAAQ,EAEbzW,KAAKq1C,WAAa,EAElBr1C,KAAKs1C,oBAAsB,EAE3Bt1C,KAAKu1C,QAAU,EAEfv1C,KAAKw1C,MAAQ,EAMfzG,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBr1B,KAAKo1C,WAAaxwC,EAAOywB,aACzBr1B,KAAKyW,MAAQ7R,EAAOywB,aACpBr1B,KAAKq1C,UAAYzwC,EAAOswB,YACxBl1B,KAAKs1C,mBAAqB1wC,EAAOswB,YACjCl1B,KAAKu1C,QAAU3wC,EAAOywB,aACtBr1B,KAAKw1C,MAAQ5wC,EAAO0wB,cAEpBt1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO,IAMrCisC,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBACxB7yB,EAAO6xB,YAAYz2B,KAAKo1C,YACxBxwC,EAAO6xB,YAAYz2B,KAAKyW,OACxB7R,EAAO0xB,WAAWt2B,KAAKq1C,WACvBzwC,EAAO0xB,WAAWt2B,KAAKs1C,oBACvB1wC,EAAO6xB,YAAYz2B,KAAKu1C,SACxB3wC,EAAO8xB,aAAa12B,KAAKw1C,OAEzBx1C,KAAKg0C,gBAAgBpvC,GAMvB4qC,QAAQ5qC,GACN,IAAK,IAAIstB,KAASlyB,KAAKy1C,kBAAkB7wC,GACvC,GAAc,eAAVstB,EACFlyB,KAAKo1C,WAAajB,GAAgBvvC,EAAO+vB,aACpC,GAAc,aAAVzC,EACTlyB,KAAKyW,OAAS,OACT,GAAc,iBAAVyb,EACTlyB,KAAKyW,OAAS,OACT,GAAc,aAAVyb,EACTlyB,KAAKyW,OAAS,QACT,GAAc,aAAVyb,EACTlyB,KAAKyW,OAAS,QACT,GAAc,gBAAVyb,EACTlyB,KAAKyW,OAAS,QACT,GAAc,eAAVyb,EACTlyB,KAAKyW,OAAS,SACT,GAAc,qBAAVyb,EACTlyB,KAAKq1C,UAAYzwC,EAAO89B,eACnB,GAAc,cAAVxQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,kBAAVstB,EACTlyB,KAAKs1C,mBAAqB1wC,EAAO89B,eAC5B,GAAc,YAAVxQ,EACTlyB,KAAKu1C,QAAU3wC,EAAO89B,eACjB,GAAc,iBAAVxQ,EACTlyB,KAAKw1C,MAAQ5wC,EAAO+9B,gBACf,IAAc,UAAVzQ,EAGT,MAAM,IAAIp1B,MAAK,4BAAAgV,OAA6BogB,EAAK,MAFjDlyB,KAAKi0C,cAAcrvC,EAAQ,SAUjCqqC,SAASrqC,GACPA,EAAOq/B,WAAW,SAElBr/B,EAAOw+B,YAAY,aAAcuR,GAAgB30C,KAAKo1C,aAErC,EAAbp1C,KAAKyW,OACP7R,EAAOu+B,UAAU,YAGF,EAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,gBAGF,GAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,YAGF,GAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,YAGF,GAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,eAGF,IAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,cAGdnjC,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOw+B,YAAY,mBAAoBpjC,KAAKq1C,YAGb,IAA7Br1C,KAAKs1C,oBACP1wC,EAAOw+B,YAAY,gBAAiBpjC,KAAKs1C,oBAGtB,IAAjBt1C,KAAKu1C,SACP3wC,EAAOw+B,YAAY,UAAWpjC,KAAKu1C,SAGhCv1C,KAAKk0C,eAAetvC,EAAQ,SAA0B,IAAf5E,KAAKw1C,OAC/C5wC,EAAOy+B,iBAAiB,eAAgBrjC,KAAKw1C,OAG/C5wC,EAAOs/B,WAMTzM,gBACE,OAAO,GAAK3pB,MAAM2pB,iBCpKP,MAAMie,GAInB9nC,cAEE5N,KAAK21C,cAAgB,EAErB31C,KAAKyW,MAAQ,EAEbzW,KAAK41C,OAAS,GAMhB7G,QAAQnqC,GACNA,EAAOywB,aAEPr1B,KAAK21C,cAAgB/wC,EAAOywB,aAC5Br1B,KAAKyW,MAAQ7R,EAAOywB,aAEpBzwB,EAAOwvB,KAAK,GAEZ,IAAK,IAAIntB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAI4uC,EAAQ,IAAIV,GAEhBU,EAAM9G,QAAQnqC,GAEd5E,KAAK41C,OAAO3xC,KAAK4xC,IAOrB7G,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBACxB7yB,EAAO6xB,YAAYz2B,KAAK21C,eACxB/wC,EAAO6xB,YAAYz2B,KAAKyW,OACxB7R,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAK41C,OAAOr6C,QAE/B,IAAK,IAAIs6C,KAAS71C,KAAK41C,OACrBC,EAAM7G,SAASpqC,GAOnB4qC,QAAQ5qC,GACN,IAAK,IAAIstB,KAASttB,EAAO6qC,YACvB,GAAc,kBAAVvd,EACFlyB,KAAKyW,OAAS,OACT,GAAc,mBAAVyb,EACTlyB,KAAKyW,OAAS,OACT,GAAc,kBAAVyb,EACTlyB,KAAKyW,OAAS,QACT,GAAc,mBAAVyb,EACTlyB,KAAKyW,OAAS,QACT,GAAc,kBAAVyb,EACTlyB,KAAK21C,cAAgB/wC,EAAO89B,cACvB,IAAc,UAAVxQ,EAOT,MAAM,IAAIp1B,MAAK,+BAAAgV,OAAgCogB,EAAK,MAPxB,CAC5B,IAAI2jB,EAAQ,IAAIV,GAEhBU,EAAMrG,QAAQ5qC,GAEd5E,KAAK41C,OAAO3xC,KAAK4xC,KAUvB5G,SAASrqC,GACPA,EAAOq/B,WAAW,YAED,EAAbjkC,KAAKyW,OACP7R,EAAOu+B,UAAU,iBAGF,EAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,kBAGF,GAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,iBAGF,GAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,kBAGQ,IAAvBnjC,KAAK21C,eACP/wC,EAAOw+B,YAAY,gBAAiBpjC,KAAK21C,eAG3C,IAAK,IAAIE,KAAS71C,KAAK41C,OACrBC,EAAM5G,SAASrqC,GAGjBA,EAAOs/B,WAMTzM,gBACE,IAAI10B,EAAO,GAEX,IAAK,IAAI8yC,KAAS71C,KAAK41C,OACrB7yC,GAAQ8yC,EAAMpe,gBAGhB,OAAO10B,GCxHI,MAAM+yC,GAInBloC,cAEE5N,KAAK+1C,cAAgB,EAErB/1C,KAAKZ,KAAO,GAEZY,KAAKyW,MAAQ,EAMfs4B,QAAQnqC,GACN5E,KAAK+1C,cAAgBnxC,EAAOywB,aAC5Br1B,KAAKZ,KAAOwF,EAAO+vB,KAAK,KACxB30B,KAAKyW,MAAQ7R,EAAOywB,aAMtB2Z,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAK+1C,eACxBnxC,EAAOuxB,MAAMn2B,KAAKZ,MAClBwF,EAAOwvB,KAAK,IAAMp0B,KAAKZ,KAAK7D,QAC5BqJ,EAAO6xB,YAAYz2B,KAAKyW,OAM1B+4B,QAAQ5qC,GACN,IAAK,IAAIstB,KAASttB,EAAO6qC,YACvB,GAAc,UAAVvd,EACFlyB,KAAKZ,KAAOwF,EAAO+vB,YACd,GAAc,kBAAVzC,EACTlyB,KAAK+1C,cAAgBnxC,EAAO89B,eACvB,GAAc,cAAVxQ,EACTlyB,KAAKyW,OAAS,MACT,IAAc,eAAVyb,EAGT,MAAM,IAAIp1B,MAAK,8BAAAgV,OAA+BogB,EAAK,MAFnDlyB,KAAKyW,OAAS,GAUpBw4B,SAASrqC,GACPA,EAAOq/B,WAAW,UAClBr/B,EAAO2+B,kBAAkB,QAASvjC,KAAKZ,MAEZ,IAAvBY,KAAK+1C,eACPnxC,EAAOw+B,YAAY,gBAAiBpjC,KAAK+1C,eAG1B,EAAb/1C,KAAKyW,OACP7R,EAAOu+B,UAAS,aAGD,EAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAS,cAGlBv+B,EAAOs/B,YCpEI,MAAM8R,WAAyBrC,GAI5C5E,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBr1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO,GAMrCisC,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBACxBz3B,KAAKg0C,gBAAgBpvC,GAMvB4qC,QAAQ5qC,GACN,IAAK,IAAIstB,KAASttB,EAAO6qC,YACvB,GAAc,gBAAVvd,EACFlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,aAAVstB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,YACtB,IAAc,YAAVstB,EAGT,MAAM,IAAIp1B,MAAK,uCAAAgV,OAAwCogB,EAAK,MAF5DlyB,KAAKi0C,cAAcrvC,EAAQ,SAUjCqqC,SAASrqC,GACPA,EAAOq/B,WAAW,gBAClBjkC,KAAKk0C,eAAetvC,EAAQ,QAC5B5E,KAAKk0C,eAAetvC,EAAQ,QAC5B5E,KAAKk0C,eAAetvC,EAAQ,QAC5BA,EAAOs/B,WAMTzM,gBACE,OAAO,EAAI3pB,MAAM2pB,iBClDN,MAAMwe,GAInBroC,cAEE5N,KAAKk2C,SAAW,IAAIj4C,aAAa,GAEjC+B,KAAKm2C,QAAU,IAAIl4C,aAAa,GAEhC+B,KAAKo2C,eAAiB,IAAIp4C,YAAY,GAEtCgC,KAAKq2C,WAAa,IAAIr4C,YAAY,GAElCgC,KAAKs2C,MAAQ,IAAIx4C,YAAY,GAE7BkC,KAAKu2C,aAAe,IAAIv7C,WAAW,GAEnCgF,KAAKw2C,aAAe,IAAIx4C,YAAY,GAEpCgC,KAAKy2C,cAAgB,IAAIz4C,YAAY,GAErCgC,KAAK02C,WAAa,EAElB12C,KAAK22C,eAAiB,EAEtB32C,KAAK42C,eAAiB,EAEtB52C,KAAKuvC,OAAS,IAAIV,GAElB7uC,KAAK62C,gBAAkB,GAEvB72C,KAAK82C,OAAS,GAMhB/H,QAAQnqC,GACNA,EAAOywB,aACPzwB,EAAOwvB,KAAK,GACZp0B,KAAKk2C,SAAWtxC,EAAOoxB,iBAAuC,EAAtBpxB,EAAOywB,cAC/CzwB,EAAOwvB,KAAK,GACZp0B,KAAKm2C,QAAUvxC,EAAOoxB,iBAAuC,EAAtBpxB,EAAOywB,cAC9CzwB,EAAOwvB,KAAK,GACZp0B,KAAKo2C,eAAiBxxC,EAAOmxB,gBAAgBnxB,EAAOywB,cACpDzwB,EAAOwvB,KAAK,GACZp0B,KAAKq2C,WAAazxC,EAAOmxB,gBAAgBnxB,EAAOywB,cAChDzwB,EAAOwvB,KAAK,GACZp0B,KAAKs2C,MAAQ1xC,EAAOkxB,gBAAgBlxB,EAAOywB,cAC3CzwB,EAAOwvB,KAAK,GACZp0B,KAAKu2C,aAAe3xC,EAAOixB,eAAejxB,EAAOywB,cACjDzwB,EAAOwvB,KAAK,GACZp0B,KAAKw2C,aAAe5xC,EAAOmxB,gBAAgBnxB,EAAOywB,cAClDzwB,EAAOwvB,KAAK,GACZp0B,KAAKy2C,cAAgB7xC,EAAOmxB,gBAAgBnxB,EAAOywB,cACnDr1B,KAAK02C,WAAa9xC,EAAOywB,aACzBr1B,KAAK22C,eAAiB/xC,EAAOywB,aAC7Br1B,KAAK42C,eAAiBhyC,EAAOywB,aAC7Br1B,KAAKuvC,OAAOR,QAAQnqC,GAEpB,IAAK,IAAIqC,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAAK,CACnD,IAAIsoC,EAAS,IAAIV,GAEjBU,EAAOR,QAAQnqC,GAEf5E,KAAK62C,gBAAgB5yC,KAAKsrC,GAG5B3qC,EAAOwvB,KAAK,GAEZ,IAAK,IAAIntB,EAAI,EAAGU,EAAI/C,EAAOywB,aAAcpuB,EAAIU,EAAGV,IAC9CrC,EAAOwvB,KAAK,GACZp0B,KAAK82C,OAAO7yC,KAAKW,EAAOoxB,iBAAuC,EAAtBpxB,EAAOywB,eAOpD2Z,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBACxB7yB,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKk2C,SAAS36C,OAAS,GAC1CqJ,EAAOsyB,kBAAkBl3B,KAAKk2C,UAC9BtxC,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKm2C,QAAQ56C,OAAS,GACzCqJ,EAAOsyB,kBAAkBl3B,KAAKm2C,SAC9BvxC,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKo2C,eAAe76C,QACvCqJ,EAAOqyB,iBAAiBj3B,KAAKo2C,gBAC7BxxC,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKq2C,WAAW96C,QACnCqJ,EAAOqyB,iBAAiBj3B,KAAKq2C,YAC7BzxC,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKs2C,MAAM/6C,QAC9BqJ,EAAOoyB,iBAAiBh3B,KAAKs2C,OAC7B1xC,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKu2C,aAAah7C,QACrCqJ,EAAOmyB,gBAAgB/2B,KAAKu2C,cAC5B3xC,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKw2C,aAAaj7C,QACrCqJ,EAAOqyB,iBAAiBj3B,KAAKw2C,cAC7B5xC,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKy2C,cAAcl7C,QACtCqJ,EAAOqyB,iBAAiBj3B,KAAKy2C,eAC7B7xC,EAAO6xB,YAAYz2B,KAAK02C,YACxB9xC,EAAO6xB,YAAYz2B,KAAK22C,gBACxB/xC,EAAO6xB,YAAYz2B,KAAK42C,gBACxB52C,KAAKuvC,OAAOP,SAASpqC,GACrBA,EAAO6xB,YAAYz2B,KAAK62C,gBAAgBt7C,QAExC,IAAK,IAAIw7C,KAAkB/2C,KAAK62C,gBAC9BE,EAAe/H,SAASpqC,GAG1BA,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAK82C,OAAOv7C,QAE/B,IAAK,IAAIy7C,KAASh3C,KAAK82C,OACrBlyC,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYugB,EAAMz7C,OAAS,GAClCqJ,EAAOsyB,kBAAkB8f,GAO7BxH,QAAQ5qC,GACN,IAAK,IAAIstB,KAASttB,EAAO6qC,YACvB,GAAc,aAAVvd,EACFlyB,KAAKk2C,SAAWtxC,EAAOo+B,gBAAgB,IAAI/kC,aAAgC,EAAnB2G,EAAO89B,WAAgB,QAC1E,GAAc,YAAVxQ,EACTlyB,KAAKm2C,QAAUvxC,EAAOo+B,gBAAgB,IAAI/kC,aAAgC,EAAnB2G,EAAO89B,WAAgB,QACzE,GAAc,cAAVxQ,EACTlyB,KAAK82C,OAAO7yC,KAAKW,EAAOo+B,gBAAgB,IAAI/kC,aAAgC,EAAnB2G,EAAO89B,WAAgB,SAC3E,GAAc,gBAAVxQ,EAAyB,CAElC,IAAIqkB,EAAe,GAEnB,IAAK,IAAIU,KAAeryC,EAAO6qC,YAC7B8G,EAAatyC,KAAK6O,SAASmkC,IAG7Bj3C,KAAKu2C,aAAe,IAAIv7C,WAAWu7C,QAC9B,GAAc,UAAVrkB,EAAmB,CAE5BlyB,KAAKo2C,eAAiB,IAAIp4C,YAAY,CAAC,IAEvC4G,EAAO89B,UAEP,IAAI1yB,EAAQpL,EAAO89B,UAEnB99B,EAAO+vB,OACP/vB,EAAO+vB,OACP/vB,EAAO+vB,OAEP30B,KAAKs2C,MAAQ1xC,EAAOi+B,aAAa,IAAI/kC,YAAYkS,IAEjDpL,EAAO+vB,OACP/vB,EAAO+vB,YACF,GAAc,WAAVzC,EAAoB,CAC7B,IAAIglB,EAAU,GACVC,EAAS,GAEbvyC,EAAO89B,UACP99B,EAAO89B,UAGP,IAAK,IAAI0U,KAAUxyC,EAAO6qC,YAAa,CACrC,IAAI1sC,EAAO,EAEX,IAAK,IAAIuF,KAAS1D,EAAO6qC,YACvByH,EAAQjzC,KAAK6O,SAASxK,IACtBvF,GAAQ,EAGVo0C,EAAOlzC,KAAKlB,GAGd/C,KAAKy2C,cAAgB,IAAIz4C,YAAYk5C,GACrCl3C,KAAKw2C,aAAe,IAAIx4C,YAAYm5C,QAC/B,GAAc,kBAAVjlB,EACTttB,EAAOk+B,eAAe9iC,KAAKuvC,OAAO/oC,UAC7B,GAAc,kBAAV0rB,EACTttB,EAAOk+B,eAAe9iC,KAAKuvC,OAAO7oC,UAC7B,GAAc,iBAAVwrB,EACTlyB,KAAKuvC,OAAOT,aAAelqC,EAAO+9B,iBAC7B,GAAc,SAAVzQ,EAAkB,CAC3B,IAAIqd,EAAS,IAAIV,GAEjB,IAAK3c,KAASttB,EAAO6qC,YACL,kBAAVvd,EACFttB,EAAOk+B,eAAeyM,EAAO/oC,KACV,kBAAV0rB,EACTttB,EAAOk+B,eAAeyM,EAAO7oC,KACV,iBAAVwrB,IACTqd,EAAOT,aAAelqC,EAAO+9B,aAIjC3iC,KAAK62C,gBAAgB5yC,KAAKsrC,QACrB,GAAc,eAAVrd,EACTlyB,KAAK02C,WAAa9xC,EAAO89B,eACpB,GAAc,mBAAVxQ,EACTlyB,KAAK22C,eAAiB/xC,EAAO89B,cACxB,IAAc,iBAAVxQ,EAGT,MAAM,IAAIp1B,MAAK,6BAAAgV,OAA8BogB,EAAK,MAFlDlyB,KAAK42C,eAAiB,GAU5B3H,SAASrqC,GACPA,EAAOq/B,WAAW,UAElBr/B,EAAOo/B,iBAAiB,WAAYhkC,KAAKk2C,SAAU,GACnDtxC,EAAOo/B,iBAAiB,UAAWhkC,KAAKm2C,QAAS,GAEjD,IAAK,IAAIa,KAASh3C,KAAK82C,OACrBlyC,EAAOo/B,iBAAiB,YAAagT,EAAO,GAG9CpyC,EAAOq/B,WAAW,eAClB,IAAK,IAAIh9B,EAAI,EAAGU,EAAI3H,KAAKu2C,aAAah7C,OAAQ0L,EAAIU,EAAGV,IACnDrC,EAAOs+B,UAAS,GAAApxB,OAAI9R,KAAKu2C,aAAatvC,GAAE,MAE1CrC,EAAOs/B,WAGPt/B,EAAOq/B,WAAW,QAAS,EAAGjkC,KAAKs2C,MAAM/6C,QACzCqJ,EAAOq/B,WAAW,aAClBr/B,EAAOs+B,UAAS,KAAApxB,OAAM9R,KAAKs2C,MAAMpqC,KAAK,MAAK,QAC3CtH,EAAOs/B,WACPt/B,EAAOs/B,WAEPt/B,EAAOq/B,WAAW,SAAUjkC,KAAKw2C,aAAaj7C,OAAQyE,KAAKy2C,cAAcl7C,QACzE,IAAI+M,EAAQ,EACZ,IAAK,IAAI+uC,KAAar3C,KAAKw2C,aACzB5xC,EAAO4+B,iBAAiB,WAAYxjC,KAAKy2C,cAAcp1C,SAASiH,EAAOA,EAAQ+uC,IAC/E/uC,GAAS+uC,EAEXzyC,EAAOs/B,WAEPlkC,KAAKuvC,OAAON,SAASrqC,GAErB,IAAK,IAAImyC,KAAkB/2C,KAAK62C,gBAC9BjyC,EAAOq/B,WAAW,QAClB8S,EAAe9H,SAASrqC,GACxBA,EAAOs/B,WAGTt/B,EAAOw+B,YAAY,aAAcpjC,KAAK02C,YACtC9xC,EAAOw+B,YAAY,iBAAkBpjC,KAAK22C,gBAEd,IAAxB32C,KAAK42C,gBACPhyC,EAAOu+B,UAAU,gBAGnBv+B,EAAOs/B,WAMTzM,gBACE,IAAI10B,EAAO,IAAM/C,KAAKk2C,SAASjzC,WAAajD,KAAKm2C,QAAQlzC,WAAajD,KAAKo2C,eAAenzC,WAAajD,KAAKq2C,WAAWpzC,WAAajD,KAAKs2C,MAAMrzC,WAAajD,KAAKu2C,aAAatzC,WAAajD,KAAKw2C,aAAavzC,WAAajD,KAAKy2C,cAAcxzC,WAA2C,GAA9BjD,KAAK62C,gBAAgBt7C,OAE/Q,IAAK,IAAIy7C,KAASh3C,KAAK82C,OACrB/zC,GAAQ,EAAIi0C,EAAM/zC,WAGpB,OAAOF,GCrRI,MAAMu0C,WAAwB3D,GAI3C/lC,cACEE,QAGA9N,KAAKw1C,MAAQ,EAEbx1C,KAAKyW,MAAQ,EAEbzW,KAAKswB,MAAQ,IAAIryB,aAAa,CAAC,EAAG,EAAG,IAErC+B,KAAKu3C,UAAY,EAEjBv3C,KAAK4zC,WAAa,GAMpB7E,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBr1B,KAAKw1C,MAAQ5wC,EAAO0wB,cACpBt1B,KAAKyW,MAAQ7R,EAAOywB,aACpBzwB,EAAOoxB,iBAAiBh2B,KAAKswB,OAC7BtwB,KAAKu3C,SAAW3yC,EAAOswB,YAEvBl1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO,IAMrCisC,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBACxB7yB,EAAO8xB,aAAa12B,KAAKw1C,OACzB5wC,EAAO6xB,YAAYz2B,KAAKyW,OACxB7R,EAAOsyB,kBAAkBl3B,KAAKswB,OAC9B1rB,EAAO0xB,WAAWt2B,KAAKu3C,UAEvBv3C,KAAKg0C,gBAAgBpvC,GAMvB4qC,QAAQ5qC,GACN,IAAK,IAAIstB,KAASlyB,KAAKy1C,kBAAkB7wC,GACvC,GAAc,eAAVstB,EACFlyB,KAAKyW,OAAS,OACT,GAAc,iBAAVyb,EACTlyB,KAAKw1C,MAAQ5wC,EAAO+9B,iBACf,GAAc,UAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,iBAAVstB,EACTlyB,KAAKyW,OAAS,EACd7R,EAAOm+B,UAAU/iC,KAAKswB,YACjB,GAAc,UAAV4B,EACTlyB,KAAKyW,OAAS,EACdzW,KAAKi0C,cAAcrvC,EAAQ,YACtB,IAAc,aAAVstB,EAGT,MAAM,IAAIp1B,MAAK,sCAAAgV,OAAuCogB,EAAK,MAF3DlyB,KAAKu3C,SAAW3yC,EAAO89B,WAU7BuM,SAASrqC,GACPA,EAAOq/B,WAAW,cAED,EAAbjkC,KAAKyW,OACP7R,EAAOu+B,UAAU,cAGdnjC,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,eAAgBrjC,KAAKw1C,OAG9B,EAAbx1C,KAAKyW,QACFzW,KAAKk0C,eAAetvC,EAAQ,SAA8B,IAAlB5E,KAAKswB,MAAM,IAA8B,IAAlBtwB,KAAKswB,MAAM,IAA8B,IAAlBtwB,KAAKswB,MAAM,IACpG1rB,EAAOq+B,WAAW,gBAAiBjjC,KAAKswB,QAI5C1rB,EAAOw+B,YAAY,WAAYpjC,KAAKu3C,UAEpC3yC,EAAOs/B,WAMTzM,gBACE,OAAO,GAAK3pB,MAAM2pB,iBCjGP,MAAM+f,WAAsB7D,GAIzC/lC,YAAY6I,GACV3I,QAGA9N,KAAKC,KAAO,GAEZD,KAAK4wB,UAAY,EAEjB5wB,KAAKy3C,UAAY,EAEjBz3C,KAAKyW,MAAQA,GAAS,EAMxBs4B,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBr1B,KAAKC,KAAO2E,EAAO+vB,KAAK,IACxB30B,KAAK4wB,SAAWhsB,EAAOswB,YACvBl1B,KAAKy3C,SAAW7yC,EAAOswB,YACvBl1B,KAAKyW,MAAQ7R,EAAOywB,aAEpBr1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO,IAMrCisC,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAK03C,wBACxB9yC,EAAOuxB,MAAMn2B,KAAKC,MAClB2E,EAAOwvB,KAAK,GAAKp0B,KAAKC,KAAK1E,QAC3BqJ,EAAO0xB,WAAWt2B,KAAK4wB,UACvBhsB,EAAO0xB,WAAWt2B,KAAKy3C,UACvB7yC,EAAO6xB,YAAYz2B,KAAKyW,OAExB,IAAK,IAAIq9B,KAAa9zC,KAAK23C,eAAc,GACvC7D,EAAU9E,SAASpqC,GAOvBgzC,+BAA+BhzC,GAC7B,IAAK,IAAIkvC,KAAa9zC,KAAK23C,eAAc,GACvC7D,EAAU9E,SAASpqC,GAOvB5C,SAAU4C,GACR5E,KAAKC,KAAO2E,EAAO+vB,OAEnB,IAAK,IAAIzC,KAASlyB,KAAKy1C,kBAAkB7wC,GACvC,GAAc,aAAVstB,EACFlyB,KAAK4wB,SAAWhsB,EAAO89B,eAClB,GAAc,WAAVxQ,EACTlyB,KAAKy3C,SAAW7yC,EAAO89B,eAClB,GAAc,qBAAVxQ,EACTlyB,KAAKyW,OAAS,QACT,GAAc,qBAAVyb,EACTlyB,KAAKyW,OAAS,QACT,GAAc,qBAAVyb,EACTlyB,KAAKyW,OAAS,QACT,GAAc,gBAAVyb,EACTlyB,KAAKyW,OAAS,OACT,GAAc,mBAAVyb,EACTlyB,KAAKyW,OAAS,SACT,GAAc,gBAAVyb,EACT,IAAKA,KAASttB,EAAO6qC,YACL,aAAVvd,EACFlyB,KAAKyW,OAAS,EACK,gBAAVyb,EACTlyB,KAAKyW,OAAS,EACK,YAAVyb,IACTlyB,KAAKyW,OAAS,OAGC,gBAAVyb,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,QACR,aAAVstB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,QACR,YAAVstB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,cAErBstB,EAQZ2lB,mBAAmBjzC,GACjBA,EAAOw+B,YAAY,WAAYpjC,KAAK4wB,WAEb,IAAnB5wB,KAAKy3C,UACP7yC,EAAOw+B,YAAY,SAAUpjC,KAAKy3C,UAGnB,GAAbz3C,KAAKyW,OACP7R,EAAOu+B,UAAU,oBAGF,GAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,oBAGF,GAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,oBAGF,EAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,eAGF,IAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,kBAGF,EAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAS,4BAGD,EAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAS,+BAGD,EAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAS,2BAOpB2U,uBAAuBlzC,GACrB5E,KAAKk0C,eAAetvC,EAAQ,QAC5B5E,KAAKk0C,eAAetvC,EAAQ,QAC5B5E,KAAKk0C,eAAetvC,EAAQ,QAQ9B5C,eAAgB+1C,GACd,IAAK,IAAIjE,KAAa9zC,KAAK4zC,WAAY,CACrC,IAAI3zC,EAAO6zC,EAAU7zC,KACjB+3C,EAAsB,SAAT/3C,GAA4B,SAATA,GAA4B,SAATA,GAElD83C,GAAeC,IAAgBD,IAAgBC,WAC5ClE,IAWZ4D,uBACE,IAAI30C,EAAO,GAEX,IAAK,IAAI+wC,KAAa9zC,KAAK23C,eAAc,GACvC50C,GAAQ+wC,EAAUrc,gBAGpB,OAAO10B,EAMT00B,gBACE,OAAO,GAAK3pB,MAAM2pB,iBC9LP,MAAMwgB,WAAaT,GAIhC5pC,cACEE,MAAM,KAGN9N,KAAKu3C,UAAY,EAEjBv3C,KAAKk4C,mBAAqB,EAM5BnJ,QAAQnqC,GACNkJ,MAAMihC,QAAQnqC,GAEd5E,KAAKu3C,SAAW3yC,EAAOswB,YACvBl1B,KAAKk4C,kBAAoBtzC,EAAOswB,YAMlC8Z,SAASpqC,GACPkJ,MAAMkhC,SAASpqC,GAEfA,EAAO0xB,WAAWt2B,KAAKu3C,UACvB3yC,EAAO0xB,WAAWt2B,KAAKk4C,mBAMzB1I,QAAQ5qC,GACN,IAAK,IAAIstB,KAASpkB,MAAM0hC,QAAQ5qC,GAC9B,GAAc,aAAVstB,EACFA,EAAQttB,EAAO+vB,OAGb30B,KAAKu3C,SADO,aAAVrlB,GACe,EAEDpf,SAASof,OAEtB,IAAc,iBAAVA,EAST,MAAM,IAAIp1B,MAAK,yBAAAgV,OAA0B9R,KAAKC,KAAI,OAAA6R,OAAMogB,EAAK,MAR7DA,EAAQttB,EAAO+vB,OAGb30B,KAAKk4C,kBADO,SAAVhmB,GACwB,EAEDpf,SAASof,IAW1C+c,SAASrqC,GACPA,EAAOw/B,iBAAiB,OAAQpkC,KAAKC,MACrCD,KAAK63C,mBAAmBjzC,GAExB,IAAI2yC,EAAWv3C,KAAKu3C,SAChBW,EAAoBl4C,KAAKk4C,mBAEX,IAAdX,IACFA,EAAW,aAGc,IAAvBW,IACFA,EAAoB,QAGtBtzC,EAAOw+B,YAAY,WAAYmU,GAC/B3yC,EAAOw+B,YAAY,eAAgB8U,GAEnCl4C,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,WAMTzM,gBACE,OAAO,EAAI3pB,MAAM2pB,iBCzFN,MAAM0gB,WAAcX,GAIjC5pC,cACEE,MAAM,KAGN9N,KAAKkC,MAAQ,EAEblC,KAAKo4C,YAAc,IAAIn6C,aAAa,GAEpC+B,KAAKswB,MAAQ,IAAIryB,aAAa,GAE9B+B,KAAKq4C,UAAY,EAEjBr4C,KAAKs4C,aAAe,IAAIr6C,aAAa,GAErC+B,KAAKu4C,iBAAmB,EAM1BxJ,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBvnB,MAAMihC,QAAQnqC,GAEd5E,KAAKkC,KAAO0C,EAAOywB,aACnBzwB,EAAOoxB,iBAAiBh2B,KAAKo4C,aAC7BxzC,EAAOoxB,iBAAiBh2B,KAAKswB,OAC7BtwB,KAAKq4C,UAAYzzC,EAAO0wB,cACxB1wB,EAAOoxB,iBAAiBh2B,KAAKs4C,cAC7Bt4C,KAAKu4C,iBAAmB3zC,EAAO0wB,cAE/Bt1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO/C,KAAKy3B,iBAM1CuX,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBAExB3pB,MAAMkhC,SAASpqC,GAEfA,EAAO6xB,YAAYz2B,KAAKkC,MACxB0C,EAAOsyB,kBAAkBl3B,KAAKo4C,aAC9BxzC,EAAOsyB,kBAAkBl3B,KAAKswB,OAC9B1rB,EAAO8xB,aAAa12B,KAAKq4C,WACzBzzC,EAAOsyB,kBAAkBl3B,KAAKs4C,cAC9B1zC,EAAO8xB,aAAa12B,KAAKu4C,kBAEzBv4C,KAAK43C,+BAA+BhzC,GAMtC4qC,QAAQ5qC,GACN,IAAK,IAAIstB,KAASpkB,MAAM0hC,QAAQ5qC,GAC9B,GAAc,oBAAVstB,EACFlyB,KAAKkC,KAAO,OACP,GAAc,gBAAVgwB,EACTlyB,KAAKkC,KAAO,OACP,GAAc,YAAVgwB,EACTlyB,KAAKkC,KAAO,OACP,GAAc,4BAAVgwB,EACTlyB,KAAKo4C,YAAY,GAAKxzC,EAAO+9B,iBACxB,GAAc,qBAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,0BAAVstB,EACTlyB,KAAKo4C,YAAY,GAAKxzC,EAAO+9B,iBACxB,GAAc,mBAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,qBAAVstB,EACTlyB,KAAKq4C,UAAYzzC,EAAO+9B,iBACnB,GAAc,cAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,iBAAVstB,EACTttB,EAAOm+B,UAAU/iC,KAAKswB,YACjB,GAAc,UAAV4B,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,wBAAVstB,EACTlyB,KAAKu4C,iBAAmB3zC,EAAO+9B,iBAC1B,GAAc,iBAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,oBAAVstB,EACTttB,EAAOm+B,UAAU/iC,KAAKs4C,mBACjB,GAAc,aAAVpmB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,YACtB,IAAc,eAAVstB,EAGT,MAAM,IAAIp1B,MAAK,4BAAAgV,OAA6BogB,EAAK,MAFjDlyB,KAAKi0C,cAAcrvC,EAAQ,SAUjCqqC,SAASrqC,GACPA,EAAOw/B,iBAAiB,QAASpkC,KAAKC,MACtCD,KAAK63C,mBAAmBjzC,GAEN,IAAd5E,KAAKkC,KACP0C,EAAOu+B,UAAU,mBACM,IAAdnjC,KAAKkC,KACd0C,EAAOu+B,UAAU,eACM,IAAdnjC,KAAKkC,MACd0C,EAAOu+B,UAAU,WAGdnjC,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,0BAA2BrjC,KAAKo4C,YAAY,IAGjEp4C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,wBAAyBrjC,KAAKo4C,YAAY,IAG/Dp4C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,mBAAoBrjC,KAAKq4C,WAG9Cr4C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOq+B,WAAW,eAAgBjjC,KAAKswB,OAGpCtwB,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,sBAAuBrjC,KAAKu4C,kBAGjDv4C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOq+B,WAAW,kBAAmBjjC,KAAKs4C,cAG5Ct4C,KAAKk0C,eAAetvC,EAAQ,QAE5B5E,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,WAMTzM,gBACE,OAAO,GAAK3pB,MAAM2pB,iBCrJP,MAAM+gB,WAAehB,GAIlChI,QAAQ5qC,GACN,IAAK,IAAIstB,KAASpkB,MAAM0hC,QAAQ5qC,GAC9B,MAAM,IAAI9H,MAAK,6BAAAgV,OAA8BogB,EAAK,MAOtD+c,SAASrqC,GACPA,EAAOw/B,iBAAiB,SAAUpkC,KAAKC,MACvCD,KAAK63C,mBAAmBjzC,GACxB5E,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,YCjBI,MAAMuU,WAAmBjB,GAItC5pC,cACEE,MAAM,MAGN9N,KAAKZ,KAAO,GAEZY,KAAK04C,aAAe,EAMtB3J,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBvnB,MAAMihC,QAAQnqC,GAEd5E,KAAKZ,KAAOwF,EAAO+vB,KAAK,KACxB30B,KAAK04C,aAAe9zC,EAAOswB,YAE3Bl1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO/C,KAAKy3B,iBAM1CuX,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBAExB3pB,MAAMkhC,SAASpqC,GAEfA,EAAOuxB,MAAMn2B,KAAKZ,MAClBwF,EAAOwvB,KAAK,IAAMp0B,KAAKZ,KAAK7D,QAC5BqJ,EAAO0xB,WAAWt2B,KAAK04C,cAEvB14C,KAAK43C,+BAA+BhzC,GAMtC4qC,QAAQ5qC,GACN,IAAK,IAAIstB,KAASpkB,MAAM0hC,QAAQ5qC,GAC9B,GAAc,iBAAVstB,EACFlyB,KAAK04C,aAAe9zC,EAAO89B,eACtB,GAAc,SAAVxQ,EACTlyB,KAAKZ,KAAOwF,EAAO+vB,WACd,IAAc,eAAVzC,EAGT,MAAM,IAAIp1B,MAAK,+BAAAgV,OAAgC9R,KAAKC,KAAI,OAAA6R,OAAMogB,EAAK,MAFnElyB,KAAKi0C,cAAcrvC,EAAQ,SAUjCqqC,SAASrqC,GACPA,EAAOw/B,iBAAiB,aAAcpkC,KAAKC,MAC3CD,KAAK63C,mBAAmBjzC,GAExBA,EAAOw+B,YAAY,eAAgBpjC,KAAK04C,cAEpC14C,KAAKZ,KAAK7D,QACZqJ,EAAO2+B,kBAAkB,OAAQvjC,KAAKZ,MAGxCY,KAAKk0C,eAAetvC,EAAQ,QAE5B5E,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,WAMTzM,gBACE,OAAO,IAAM3pB,MAAM2pB,iBClFR,MAAMkhB,WAAwBnB,GAI3C5pC,cACEE,MAAM,MAGN9N,KAAK44C,aAAe,EAEpB54C,KAAK64C,QAAU,EAEf74C,KAAK84C,UAAY,EAEjB94C,KAAK+4C,SAAW,EAEhB/4C,KAAKZ,KAAO,GAEZY,KAAKg5C,SAAW,EAEhBh5C,KAAKi5C,MAAQ,EAMflK,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBvnB,MAAMihC,QAAQnqC,GAEd5E,KAAK44C,aAAeh0C,EAAO0wB,cAC3Bt1B,KAAK64C,QAAUj0C,EAAO0wB,cACtBt1B,KAAK84C,UAAYl0C,EAAO0wB,cACxBt1B,KAAK+4C,SAAWn0C,EAAO0wB,cACvBt1B,KAAKZ,KAAOwF,EAAO+vB,KAAK,KACxB30B,KAAKg5C,SAAWp0C,EAAO0wB,cACvBt1B,KAAKi5C,MAAQr0C,EAAO0wB,cAEpBt1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO/C,KAAKy3B,iBAM1CuX,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBAExB3pB,MAAMkhC,SAASpqC,GAEfA,EAAO8xB,aAAa12B,KAAK44C,cACzBh0C,EAAO8xB,aAAa12B,KAAK64C,SACzBj0C,EAAO8xB,aAAa12B,KAAK84C,WACzBl0C,EAAO8xB,aAAa12B,KAAK+4C,UACzBn0C,EAAOuxB,MAAMn2B,KAAKZ,MAClBwF,EAAOwvB,KAAK,IAAMp0B,KAAKZ,KAAK7D,QAC5BqJ,EAAO8xB,aAAa12B,KAAKg5C,UACzBp0C,EAAO8xB,aAAa12B,KAAKi5C,OAEzBj5C,KAAK43C,+BAA+BhzC,GAMtC4qC,QAAQ5qC,GACN,IAAK,IAAIstB,KAASpkB,MAAM0hC,QAAQ5qC,GAC9B,GAAc,mBAAVstB,EACFlyB,KAAKyW,OAAS,WACT,GAAc,mBAAVyb,EACTlyB,KAAKyW,OAAS,WACT,GAAc,wBAAVyb,EACTlyB,KAAK44C,aAAeh0C,EAAO+9B,iBACtB,GAAc,iBAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,mBAAVstB,EACTlyB,KAAK64C,QAAUj0C,EAAO+9B,iBACjB,GAAc,YAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,qBAAVstB,EACTlyB,KAAK84C,UAAYl0C,EAAO+9B,iBACnB,GAAc,cAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,oBAAVstB,EACTlyB,KAAK+4C,SAAWn0C,EAAO+9B,iBAClB,GAAc,aAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,eAAVstB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,YACtB,IAAc,aAAVstB,EAeT,MAAM,IAAIp1B,MAAK,sCAAAgV,OAAuCogB,EAAK,MAd3D,IAAKA,KAASlyB,KAAKy1C,kBAAkB7wC,GACrB,oBAAVstB,EACFlyB,KAAKg5C,SAAWp0C,EAAO+9B,YACJ,aAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,QACR,wBAAVstB,EACTlyB,KAAKi5C,MAAQr0C,EAAO+9B,YACD,iBAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,QACR,SAAVstB,IACTlyB,KAAKZ,KAAOwF,EAAO+vB,SAY7Bsa,SAASrqC,GACPA,EAAOw/B,iBAAiB,kBAAmBpkC,KAAKC,MAChDD,KAAK63C,mBAAmBjzC,GAEP,MAAb5E,KAAKyW,OACP7R,EAAOu+B,UAAU,kBAGF,MAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,kBAGdnjC,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,sBAAuBrjC,KAAK44C,cAGjD54C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,iBAAkBrjC,KAAK64C,SAG5C74C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,mBAAoBrjC,KAAK84C,WAG9C94C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,kBAAmBrjC,KAAK+4C,UAGlD/4C,KAAKk0C,eAAetvC,EAAQ,QAE5BA,EAAOq/B,WAAW,YAEbjkC,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,kBAAmBrjC,KAAKg5C,UAG7Ch5C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,sBAAuBrjC,KAAKi5C,QAGpC,MAAbj5C,KAAKyW,OAAiC,MAAbzW,KAAKyW,QACjC7R,EAAOw+B,YAAY,OAAQpjC,KAAKZ,MAGlCwF,EAAOs/B,WAEPlkC,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,WAMTzM,gBACE,OAAO,IAAM3pB,MAAM2pB,iBCtKR,MAAMyhB,WAAyB1B,GAI5C5pC,cACEE,QAGA9N,KAAKi5C,MAAQ,EAEbj5C,KAAK23B,UAAY,EAEjB33B,KAAK+4C,SAAW,EAEhB/4C,KAAK64C,QAAU,EAEf74C,KAAKg5C,SAAW,EAEhBh5C,KAAK44C,aAAe,EAEpB54C,KAAKzE,OAAS,EAEdyE,KAAKgwB,MAAQ,EAEbhwB,KAAKo1C,WAAa,EAElBp1C,KAAKgyB,KAAO,EAEZhyB,KAAKq7B,QAAU,EAEfr7B,KAAKm5C,WAAa,EAElBn5C,KAAKo5C,WAAa,EAElBp5C,KAAKq5C,WAAa,EAElBr5C,KAAKs5C,cAAgB,CAAC,IAAIr7C,aAAa,GAAI,IAAIA,aAAa,GAAI,IAAIA,aAAa,IAEjF+B,KAAKu5C,cAAgB,IAAIv+C,WAAW,GAEpCgF,KAAKw5C,eAAiB,IAAIv7C,aAAa,GAEvC+B,KAAKy5C,cAAgB,CAAC,IAAIz7C,YAAY,GAAI,IAAIA,YAAY,IAE1DgC,KAAK05C,cAAgB,CAAC,IAAI17C,YAAY,GAAI,IAAIA,YAAY,IAE1DgC,KAAKq1C,WAAa,EAElBr1C,KAAK25C,OAAS,EAEd35C,KAAK21C,cAAgB,EAErB31C,KAAK+1C,cAAgB,EAMvBhH,QAAQnqC,GACN,MAAM7B,EAAO6B,EAAOywB,aAEpBvnB,MAAMihC,QAAQnqC,GAEd5E,KAAKi5C,MAAQr0C,EAAO0wB,cACpBt1B,KAAK23B,UAAY/yB,EAAO0wB,cACxBt1B,KAAK+4C,SAAWn0C,EAAO0wB,cACvBt1B,KAAK64C,QAAUj0C,EAAO0wB,cACtBt1B,KAAKg5C,SAAWp0C,EAAO0wB,cACvBt1B,KAAK44C,aAAeh0C,EAAO0wB,cAC3Bt1B,KAAKzE,OAASqJ,EAAO0wB,cACrBt1B,KAAKgwB,MAAQprB,EAAO0wB,cACpBt1B,KAAKo1C,WAAaxwC,EAAOywB,aACzBr1B,KAAKgyB,KAAOptB,EAAOywB,aACnBr1B,KAAKq7B,QAAUz2B,EAAOywB,aACtBr1B,KAAKm5C,WAAav0C,EAAOywB,aACzBr1B,KAAKo5C,WAAax0C,EAAO0wB,cACzBt1B,KAAKq5C,WAAaz0C,EAAO0wB,cACzB1wB,EAAOoxB,iBAAiBh2B,KAAKs5C,cAAc,IAC3C10C,EAAOoxB,iBAAiBh2B,KAAKs5C,cAAc,IAC3C10C,EAAOoxB,iBAAiBh2B,KAAKs5C,cAAc,IAC3C10C,EAAOixB,eAAe71B,KAAKu5C,eAC3B30C,EAAOoxB,iBAAiBh2B,KAAKw5C,gBAC7B50C,EAAOmxB,gBAAgB/1B,KAAKy5C,cAAc,IAC1C70C,EAAOmxB,gBAAgB/1B,KAAKy5C,cAAc,IAC1C70C,EAAOmxB,gBAAgB/1B,KAAK05C,cAAc,IAC1C90C,EAAOmxB,gBAAgB/1B,KAAK05C,cAAc,IAC1C15C,KAAKq1C,UAAYzwC,EAAOswB,YACxBl1B,KAAK25C,OAAS/0C,EAAOywB,aACrBr1B,KAAK21C,cAAgB/wC,EAAOswB,YAC5Bl1B,KAAK+1C,cAAgBnxC,EAAOywB,aAE5Br1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO/C,KAAKy3B,iBAM1CuX,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBAExB3pB,MAAMkhC,SAASpqC,GAEfA,EAAO8xB,aAAa12B,KAAKi5C,OACzBr0C,EAAO8xB,aAAa12B,KAAK23B,WACzB/yB,EAAO8xB,aAAa12B,KAAK+4C,UACzBn0C,EAAO8xB,aAAa12B,KAAK64C,SACzBj0C,EAAO8xB,aAAa12B,KAAKg5C,UACzBp0C,EAAO8xB,aAAa12B,KAAK44C,cACzBh0C,EAAO8xB,aAAa12B,KAAKzE,QACzBqJ,EAAO8xB,aAAa12B,KAAKgwB,OACzBprB,EAAO6xB,YAAYz2B,KAAKo1C,YACxBxwC,EAAO6xB,YAAYz2B,KAAKgyB,MACxBptB,EAAO6xB,YAAYz2B,KAAKq7B,SACxBz2B,EAAO6xB,YAAYz2B,KAAKm5C,YACxBv0C,EAAO8xB,aAAa12B,KAAKo5C,YACzBx0C,EAAO8xB,aAAa12B,KAAKq5C,YACzBz0C,EAAOsyB,kBAAkBl3B,KAAKs5C,cAAc,IAC5C10C,EAAOsyB,kBAAkBl3B,KAAKs5C,cAAc,IAC5C10C,EAAOsyB,kBAAkBl3B,KAAKs5C,cAAc,IAC5C10C,EAAOmyB,gBAAgB/2B,KAAKu5C,eAC5B30C,EAAOsyB,kBAAkBl3B,KAAKw5C,gBAC9B50C,EAAOqyB,iBAAiBj3B,KAAKy5C,cAAc,IAC3C70C,EAAOqyB,iBAAiBj3B,KAAKy5C,cAAc,IAC3C70C,EAAOqyB,iBAAiBj3B,KAAK05C,cAAc,IAC3C90C,EAAOqyB,iBAAiBj3B,KAAK05C,cAAc,IAC3C90C,EAAO0xB,WAAWt2B,KAAKq1C,WACvBzwC,EAAO6xB,YAAYz2B,KAAK25C,QACxB/0C,EAAO0xB,WAAWt2B,KAAK21C,eACvB/wC,EAAO6xB,YAAYz2B,KAAK+1C,eAExB/1C,KAAK43C,+BAA+BhzC,GAMtC4qC,QAAQ5qC,GACN,IAAK,MAAMstB,KAASpkB,MAAM0hC,QAAQ5qC,GAChC,GAAc,kBAAVstB,EACFlyB,KAAKyW,OAAS,WACT,GAAc,aAAVyb,EACTlyB,KAAKyW,OAAS,WACT,GAAc,gBAAVyb,EACTlyB,KAAKyW,OAAS,YACT,GAAc,aAAVyb,EACTlyB,KAAKyW,OAAS,YACT,GAAc,eAAVyb,EACTlyB,KAAKyW,OAAS,YACT,GAAc,WAAVyb,EACTlyB,KAAKyW,OAAS,aACT,GAAc,iBAAVyb,EACTlyB,KAAKi5C,MAAQr0C,EAAO+9B,iBACf,GAAc,UAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,qBAAVstB,EACTlyB,KAAK23B,UAAY/yB,EAAO+9B,iBACnB,GAAc,cAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,oBAAVstB,EACTlyB,KAAK+4C,SAAWn0C,EAAO+9B,iBAClB,GAAc,aAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,mBAAVstB,EACTlyB,KAAK64C,QAAUj0C,EAAO+9B,iBACjB,GAAc,YAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,eAAVstB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,WAAVstB,EACTlyB,KAAK25C,OAAS,OACT,GAAc,aAAVznB,EACTlyB,KAAKg5C,SAAWp0C,EAAO+9B,iBAClB,GAAc,wBAAVzQ,EACTlyB,KAAK44C,aAAeh0C,EAAO+9B,iBACtB,GAAc,iBAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,iBAAVstB,EACTlyB,KAAKgwB,MAAQprB,EAAO+9B,iBACf,GAAc,UAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,kBAAVstB,EACTlyB,KAAKzE,OAASqJ,EAAO+9B,iBAChB,GAAc,WAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,UAAVstB,EACTlyB,KAAKo1C,WAAa,OACb,GAAc,aAAVljB,EACTlyB,KAAKo1C,WAAa,OACb,GAAc,aAAVljB,EACTlyB,KAAKo1C,WAAa,OACb,GAAc,eAAVljB,EACTlyB,KAAKo1C,WAAa,OACb,GAAc,aAAVljB,EACTlyB,KAAKo1C,WAAa,OACb,GAAc,SAAVljB,EACTlyB,KAAKgyB,KAAOptB,EAAO89B,eACd,GAAc,YAAVxQ,EACTlyB,KAAKq7B,QAAUz2B,EAAO89B,eACjB,GAAc,SAAVxQ,EACTlyB,KAAKm5C,WAAa,OACb,GAAc,SAAVjnB,EACTlyB,KAAKm5C,WAAa,OACb,GAAc,SAAVjnB,EACTlyB,KAAKm5C,WAAa,OACb,GAAc,eAAVjnB,EACTlyB,KAAKo5C,WAAax0C,EAAO+9B,iBACpB,GAAc,SAAVzQ,EACTlyB,KAAKq5C,WAAaz0C,EAAO+9B,iBACpB,GAAc,iBAAVzQ,EAA0B,CACnCttB,EAAO+vB,OAEP,IAAK,IAAI1tB,EAAI,EAAGA,EAAI,EAAGA,IACrBrC,EAAO+vB,OACP/vB,EAAOm+B,UAAU/iC,KAAKs5C,cAAcryC,IAGtCrC,EAAO+vB,YACF,GAAc,UAAVzC,EACTttB,EAAOi+B,aAAa7iC,KAAKu5C,oBACpB,GAAc,oBAAVrnB,EACTttB,EAAOk+B,eAAe9iC,KAAKw5C,qBACtB,GAAc,mBAAVtnB,EACTttB,EAAOi+B,aAAa7iC,KAAKy5C,cAAc,SAClC,GAAc,gBAAVvnB,EACTttB,EAAOi+B,aAAa7iC,KAAKy5C,cAAc,SAClC,GAAc,eAAVvnB,EACTttB,EAAOi+B,aAAa7iC,KAAK05C,cAAc,SAClC,GAAc,oBAAVxnB,EACTttB,EAAOi+B,aAAa7iC,KAAK05C,cAAc,SAClC,GAAc,cAAVxnB,EACTlyB,KAAKq1C,UAAYzwC,EAAO89B,eACnB,GAAc,kBAAVxQ,EACTlyB,KAAK+1C,cAAgBnxC,EAAO89B,cACvB,IAAc,kBAAVxQ,EAGT,MAAM,IAAIp1B,MAAK,uCAAAgV,OAAwCogB,EAAK,MAF5DlyB,KAAK21C,cAAgB/wC,EAAO89B,WAUlCuM,SAASrqC,GACPA,EAAOw/B,iBAAiB,mBAAoBpkC,KAAKC,MACjDD,KAAK63C,mBAAmBjzC,GAEP,MAAb5E,KAAKyW,OACP7R,EAAOu+B,UAAU,iBAGF,MAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,YAGF,OAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,eAGF,OAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,YAGF,OAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,cAGF,QAAbnjC,KAAKyW,OACP7R,EAAOu+B,UAAU,UAGdnjC,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,eAAgBrjC,KAAKi5C,OAG1Cj5C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,mBAAoBrjC,KAAK23B,WAG9C33B,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,kBAAmBrjC,KAAK+4C,UAG7C/4C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,iBAAkBrjC,KAAK64C,SAGjD74C,KAAKk0C,eAAetvC,EAAQ,QAExB5E,KAAK25C,QACP/0C,EAAOu+B,UAAU,UAGnBv+B,EAAOy+B,iBAAiB,WAAYrjC,KAAKg5C,UAEpCh5C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,sBAAuBrjC,KAAK44C,cAGjD54C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,eAAgBrjC,KAAKgwB,OAG1ChwB,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,gBAAiBrjC,KAAKzE,QAGxB,IAApByE,KAAKo1C,WACPxwC,EAAOu+B,UAAU,SACY,IAApBnjC,KAAKo1C,WACdxwC,EAAOu+B,UAAU,YACY,IAApBnjC,KAAKo1C,WACdxwC,EAAOu+B,UAAU,YACY,IAApBnjC,KAAKo1C,WACdxwC,EAAOu+B,UAAU,cACY,IAApBnjC,KAAKo1C,YACdxwC,EAAOu+B,UAAU,YAGnBv+B,EAAOw+B,YAAY,OAAQpjC,KAAKgyB,MAChCptB,EAAOw+B,YAAY,UAAWpjC,KAAKq7B,SAEX,IAApBr7B,KAAKm5C,WACPv0C,EAAOu+B,UAAU,QACY,IAApBnjC,KAAKm5C,WACdv0C,EAAOu+B,UAAU,QACY,IAApBnjC,KAAKm5C,YACdv0C,EAAOu+B,UAAU,QAGnBv+B,EAAOy+B,iBAAiB,aAAcrjC,KAAKo5C,YAC3Cx0C,EAAOy+B,iBAAiB,OAAQrjC,KAAKq5C,YAErCz0C,EAAOq/B,WAAW,gBAClBr/B,EAAOq+B,WAAW,QAASjjC,KAAKs5C,cAAc,IAC9C10C,EAAOq+B,WAAW,QAASjjC,KAAKs5C,cAAc,IAC9C10C,EAAOq+B,WAAW,QAASjjC,KAAKs5C,cAAc,IAC9C10C,EAAO0/B,gBAEP1/B,EAAO4+B,iBAAiB,QAASxjC,KAAKu5C,eACtC30C,EAAO6+B,sBAAsB,kBAAmBzjC,KAAKw5C,gBACrD50C,EAAO4+B,iBAAiB,iBAAkBxjC,KAAKy5C,cAAc,IAC7D70C,EAAO4+B,iBAAiB,cAAexjC,KAAKy5C,cAAc,IAC1D70C,EAAO4+B,iBAAiB,aAAcxjC,KAAK05C,cAAc,IACzD90C,EAAO4+B,iBAAiB,kBAAmBxjC,KAAK05C,cAAc,IAC9D90C,EAAOw+B,YAAY,YAAapjC,KAAKq1C,WAEV,IAAvBr1C,KAAK+1C,eACPnxC,EAAOw+B,YAAY,gBAAiBpjC,KAAK+1C,eAGhB,IAAvB/1C,KAAK21C,eACP/wC,EAAOw+B,YAAY,gBAAiBpjC,KAAK21C,eAG3C31C,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,WAMTzM,gBACE,OAAO,IAAM3pB,MAAM2pB,iBC5WR,MAAMmiB,WAAsBpC,GAIzC5pC,cACEE,MAAM,OAGN9N,KAAK65C,YAAc,EAEnB75C,KAAK85C,YAAc,EAEnB95C,KAAKw1C,MAAQ,EAEbx1C,KAAKswB,MAAQ,IAAIryB,aAAa,GAE9B+B,KAAKg5C,SAAW,EAEhBh5C,KAAK+5C,YAAc,EAEnB/5C,KAAK44C,aAAe,EAEpB54C,KAAKgyB,KAAO,EAEZhyB,KAAKq7B,QAAU,EAEfr7B,KAAK02C,WAAa,EAElB12C,KAAK64C,QAAU,EAMjB9J,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBvnB,MAAMihC,QAAQnqC,GAEd5E,KAAK65C,YAAcj1C,EAAO0wB,cAC1Bt1B,KAAK85C,YAAcl1C,EAAO0wB,cAC1Bt1B,KAAKw1C,MAAQ5wC,EAAO0wB,cACpB1wB,EAAOoxB,iBAAiBh2B,KAAKswB,OAC7BtwB,KAAKg5C,SAAWp0C,EAAO0wB,cACvBt1B,KAAK+5C,YAAcn1C,EAAOywB,aAC1Br1B,KAAK44C,aAAeh0C,EAAOywB,aAC3Br1B,KAAKgyB,KAAOptB,EAAOywB,aACnBr1B,KAAKq7B,QAAUz2B,EAAOywB,aACtBr1B,KAAK02C,WAAa9xC,EAAOswB,YACzBl1B,KAAK64C,QAAUj0C,EAAO0wB,cAEtBt1B,KAAK6zC,eAAejvC,EAAQ7B,EAAO/C,KAAKy3B,iBAM1CuX,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBAExB3pB,MAAMkhC,SAASpqC,GAEfA,EAAO8xB,aAAa12B,KAAK65C,aACzBj1C,EAAO8xB,aAAa12B,KAAK85C,aACzBl1C,EAAO8xB,aAAa12B,KAAKw1C,OACzB5wC,EAAOsyB,kBAAkBl3B,KAAKswB,OAC9B1rB,EAAO8xB,aAAa12B,KAAKg5C,UACzBp0C,EAAO6xB,YAAYz2B,KAAK+5C,aACxBn1C,EAAO6xB,YAAYz2B,KAAK44C,cACxBh0C,EAAO6xB,YAAYz2B,KAAKgyB,MACxBptB,EAAO6xB,YAAYz2B,KAAKq7B,SACxBz2B,EAAO0xB,WAAWt2B,KAAK02C,YACvB9xC,EAAO8xB,aAAa12B,KAAK64C,SAEzB74C,KAAK43C,+BAA+BhzC,GAMtC4qC,QAAQ5qC,GACN,IAAK,IAAIstB,KAASpkB,MAAM0hC,QAAQ5qC,GAC9B,GAAc,uBAAVstB,EACFlyB,KAAK65C,YAAcj1C,EAAO+9B,iBACrB,GAAc,gBAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,uBAAVstB,EACTlyB,KAAK85C,YAAcl1C,EAAO+9B,iBACrB,GAAc,gBAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,iBAAVstB,EACTlyB,KAAKw1C,MAAQ5wC,EAAO+9B,iBACf,GAAc,UAAVzQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,iBAAVstB,EACTttB,EAAOm+B,UAAU/iC,KAAKswB,YACjB,GAAc,UAAV4B,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,uBAAVstB,EACTlyB,KAAK+5C,YAAcn1C,EAAO89B,eACrB,GAAc,gBAAVxQ,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,eAAVstB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,iBAAVstB,EACTlyB,KAAK44C,aAAeh0C,EAAO89B,eACtB,GAAc,aAAVxQ,EACTlyB,KAAKg5C,SAAWp0C,EAAO+9B,iBAClB,GAAc,YAAVzQ,EACTlyB,KAAK64C,QAAUj0C,EAAO+9B,iBACjB,GAAc,SAAVzQ,EACTlyB,KAAKgyB,KAAOptB,EAAO89B,eACd,GAAc,YAAVxQ,EACTlyB,KAAKq7B,QAAUz2B,EAAO89B,cACjB,IAAc,eAAVxQ,EAGT,MAAM,IAAIp1B,MAAK,oCAAAgV,OAAqCogB,EAAK,MAFzDlyB,KAAK02C,WAAa9xC,EAAO89B,WAU/BuM,SAASrqC,GACPA,EAAOw/B,iBAAiB,gBAAiBpkC,KAAKC,MAC9CD,KAAK63C,mBAAmBjzC,GAEnB5E,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,qBAAsBrjC,KAAK65C,aAGhD75C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,qBAAsBrjC,KAAK85C,aAGhD95C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOy+B,iBAAiB,eAAgBrjC,KAAKw1C,OAG1Cx1C,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOq+B,WAAW,eAAgBjjC,KAAKswB,OAGpCtwB,KAAKk0C,eAAetvC,EAAQ,SAC/BA,EAAOw+B,YAAY,qBAAsBpjC,KAAK+5C,aAGhD/5C,KAAKk0C,eAAetvC,EAAQ,QAE5BA,EAAOw+B,YAAY,eAAgBpjC,KAAK44C,cACxCh0C,EAAOy+B,iBAAiB,WAAYrjC,KAAKg5C,UAEpB,IAAjBh5C,KAAK64C,SACPj0C,EAAOy+B,iBAAiB,UAAWrjC,KAAK64C,SAG1Cj0C,EAAOw+B,YAAY,OAAQpjC,KAAKgyB,MAChCptB,EAAOw+B,YAAY,UAAWpjC,KAAKq7B,SACnCz2B,EAAOw+B,YAAY,aAAcpjC,KAAK02C,YAEtC12C,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,WAMTzM,gBACE,OAAO,GAAK3pB,MAAM2pB,iBC1KP,MAAM6Q,WAAeqL,GAIlC/lC,cACEE,QAGA9N,KAAKC,KAAO,GAEZD,KAAKg6C,SAAW,IAAI/7C,aAAa,GAEjC+B,KAAK4oC,YAAc,EAEnB5oC,KAAK6oC,iBAAmB,EAExB7oC,KAAK8oC,kBAAoB,EAEzB9oC,KAAKi6C,eAAiB,IAAIh8C,aAAa,GAMzC8wC,QAAQnqC,GACN,IAAI7B,EAAO6B,EAAOywB,aAElBr1B,KAAKC,KAAO2E,EAAO+vB,KAAK,IACxB/vB,EAAOoxB,iBAAiBh2B,KAAKg6C,UAC7Bh6C,KAAK4oC,YAAchkC,EAAO0wB,cAC1Bt1B,KAAK6oC,iBAAmBjkC,EAAO0wB,cAC/Bt1B,KAAK8oC,kBAAoBlkC,EAAO0wB,cAChC1wB,EAAOoxB,iBAAiBh2B,KAAKi6C,gBAE7Bj6C,KAAK6zC,eAAejvC,EAAQ7B,EAAO,KAMrCisC,SAASpqC,GACPA,EAAO6xB,YAAYz2B,KAAKy3B,iBACxB7yB,EAAOuxB,MAAMn2B,KAAKC,MAClB2E,EAAOwvB,KAAK,GAAKp0B,KAAKC,KAAK1E,QAC3BqJ,EAAOsyB,kBAAkBl3B,KAAKg6C,UAC9Bp1C,EAAO8xB,aAAa12B,KAAK4oC,aACzBhkC,EAAO8xB,aAAa12B,KAAK6oC,kBACzBjkC,EAAO8xB,aAAa12B,KAAK8oC,mBACzBlkC,EAAOsyB,kBAAkBl3B,KAAKi6C,gBAE9Bj6C,KAAKg0C,gBAAgBpvC,GAMvB4qC,QAAQ5qC,GACN5E,KAAKC,KAAO2E,EAAO+vB,OAEnB,IAAK,IAAIzC,KAASttB,EAAO6qC,YACvB,GAAc,aAAVvd,EACFttB,EAAOk+B,eAAe9iC,KAAKg6C,eACtB,GAAc,gBAAV9nB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,aAAVstB,EACTlyB,KAAKi0C,cAAcrvC,EAAQ,aACtB,GAAc,gBAAVstB,EACTlyB,KAAK4oC,YAAchkC,EAAO+9B,iBACrB,GAAc,YAAVzQ,EACTlyB,KAAK6oC,iBAAmBjkC,EAAO+9B,iBAC1B,GAAc,aAAVzQ,EACTlyB,KAAK8oC,kBAAoBlkC,EAAO+9B,gBAC3B,IAAc,WAAVzQ,EAWT,MAAM,IAAIp1B,MAAK,2BAAAgV,OAA4B9R,KAAKC,KAAI,OAAA6R,OAAMogB,EAAK,MAV/D,IAAKA,KAASttB,EAAO6qC,YACnB,GAAc,aAAVvd,EACFttB,EAAOk+B,eAAe9iC,KAAKi6C,oBACtB,IAAc,gBAAV/nB,EAGT,MAAM,IAAIp1B,MAAK,2BAAAgV,OAA4B9R,KAAKC,KAAI,iBAAA6R,OAAeogB,EAAK,MAFxElyB,KAAKi0C,cAAcrvC,EAAQ,UAcrCqqC,SAASrqC,GACPA,EAAOw/B,iBAAiB,SAAUpkC,KAAKC,MAEvC2E,EAAO6+B,sBAAsB,WAAYzjC,KAAKg6C,UAC9Ch6C,KAAKk0C,eAAetvC,EAAQ,QAC5B5E,KAAKk0C,eAAetvC,EAAQ,QAC5BA,EAAOy+B,iBAAiB,cAAerjC,KAAK4oC,aAC5ChkC,EAAOy+B,iBAAiB,UAAWrjC,KAAK6oC,kBACxCjkC,EAAOy+B,iBAAiB,WAAYrjC,KAAK8oC,mBAEzClkC,EAAOq/B,WAAW,UAClBr/B,EAAO6+B,sBAAsB,WAAYzjC,KAAKi6C,gBAC9Cj6C,KAAKk0C,eAAetvC,EAAQ,QAC5BA,EAAOs/B,WAEPt/B,EAAOs/B,WAMTzM,gBACE,OAAO,IAAM3pB,MAAM2pB,iBCjHR,MAAMyiB,WAAoB1C,GAIvC5pC,cACEE,MAAM,MAGN9N,KAAKuwC,kBAAoB,EAEzBvwC,KAAKwwC,OAAS,IAAIxyC,YAAY,GAMhC+wC,QAAQnqC,GACNkJ,MAAMihC,QAAQnqC,GAEdA,EAAOwvB,KAAK,GAEZ,IAAIpkB,EAAQpL,EAAOywB,aAEnBr1B,KAAKuwC,iBAAmB3rC,EAAOswB,YAC/Bl1B,KAAKwwC,OAAS5rC,EAAOmxB,gBAAgB/lB,GAMvCg/B,SAASpqC,GACPkJ,MAAMkhC,SAASpqC,GACfA,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAYz2B,KAAKwwC,OAAOj1C,QAC/BqJ,EAAO0xB,WAAWt2B,KAAKuwC,kBACvB3rC,EAAOqyB,iBAAiBj3B,KAAKwwC,QAM/BhB,QAAQ5qC,GACN,IAAK,IAAIstB,KAASpkB,MAAM0hC,QAAQ5qC,GAAS,CACvC,GAAc,eAAVstB,EAGF,MAAM,IAAIp1B,MAAK,kCAAAgV,OAAmCogB,EAAK,MAFvDlyB,KAAKwwC,OAAS5rC,EAAOi+B,aAAa,IAAI7kC,YAAY4G,EAAO89B,aAU/DuM,SAASrqC,GACPA,EAAOw/B,iBAAiB,cAAepkC,KAAKC,MAC5CD,KAAK63C,mBAAmBjzC,GAExBA,EAAOq/B,WAAW,aAAcjkC,KAAKwwC,OAAOj1C,QAE5C,IAAK,IAAIm1C,KAAS1wC,KAAKwwC,OACrB5rC,EAAOu+B,UAAUuN,GAGnB9rC,EAAOs/B,WAEPlkC,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,WAMTzM,gBACE,OAAO,GAAKz3B,KAAKwwC,OAAOvtC,WAAa6K,MAAM2pB,iBC1EhC,MAAM0iB,WAAuB3C,GAI1C5pC,cACEE,MAAM,MAGN9N,KAAKkC,MAAQ,EAEblC,KAAKk2C,SAAW,CAAC,IAAIj4C,aAAa,GAAI,IAAIA,aAAa,IAEvD+B,KAAK8uC,aAAe,EAMtBC,QAAQnqC,GACNkJ,MAAMihC,QAAQnqC,GAEd5E,KAAKkC,KAAO0C,EAAOywB,aAEnBzwB,EAAOoxB,iBAAiBh2B,KAAKk2C,SAAS,IAEpB,IAAdl2C,KAAKkC,MACP0C,EAAOoxB,iBAAiBh2B,KAAKk2C,SAAS,IAGtB,IAAdl2C,KAAKkC,MAA4B,IAAdlC,KAAKkC,OAC1BlC,KAAK8uC,aAAelqC,EAAO0wB,eAO/B0Z,SAASpqC,GACPkJ,MAAMkhC,SAASpqC,GAEfA,EAAO6xB,YAAYz2B,KAAKkC,MACxB0C,EAAOsyB,kBAAkBl3B,KAAKk2C,SAAS,IAErB,IAAdl2C,KAAKkC,MACP0C,EAAOsyB,kBAAkBl3B,KAAKk2C,SAAS,IAGvB,IAAdl2C,KAAKkC,MAA4B,IAAdlC,KAAKkC,MAC1B0C,EAAO8xB,aAAa12B,KAAK8uC,cAO7BU,QAAQ5qC,GACN,IAAK,IAAIstB,KAASpkB,MAAM0hC,QAAQ5qC,GAC9B,GAAc,UAAVstB,EACFlyB,KAAKkC,KAAO,OACP,GAAc,QAAVgwB,EACTlyB,KAAKkC,KAAO,OACP,GAAc,WAAVgwB,EACTlyB,KAAKkC,KAAO,OACP,GAAc,aAAVgwB,EACTlyB,KAAKkC,KAAO,OACP,GAAc,aAAVgwB,EAAsB,CAC/B,IAAIliB,EAAQpL,EAAO89B,UAEnB99B,EAAO+vB,OAEP/vB,EAAOk+B,eAAe9iC,KAAKk2C,SAAS,IAEtB,IAAVlmC,GACFpL,EAAOk+B,eAAe9iC,KAAKk2C,SAAS,IAGtCtxC,EAAO+vB,WACF,IAAc,iBAAVzC,EAGT,MAAM,IAAIp1B,MAAK,qCAAAgV,OAAsCogB,EAAK,MAF1DlyB,KAAK8uC,aAAelqC,EAAO+9B,aAUjCsM,SAASrqC,GAIP,IAAI1C,EAHJ0C,EAAOw/B,iBAAiB,iBAAkBpkC,KAAKC,MAC/CD,KAAK63C,mBAAmBjzC,GAGxB,IAAIsxC,EAAW,EACXpH,GAAe,EAED,IAAd9uC,KAAKkC,KACPA,EAAO,QACgB,IAAdlC,KAAKkC,KACdA,EAAO,MACgB,IAAdlC,KAAKkC,MACdA,EAAO,SACPg0C,EAAW,EACXpH,GAAe,GACQ,IAAd9uC,KAAKkC,OACdA,EAAO,WACP4sC,GAAe,GAGjBlqC,EAAOu+B,UAAUjhC,GACjB0C,EAAOq/B,WAAW,WAAYiS,GAC9BtxC,EAAOm/B,gBAAgB/jC,KAAKk2C,SAAS,IAEpB,IAAbA,GACFtxC,EAAOm/B,gBAAgB/jC,KAAKk2C,SAAS,IAGvCtxC,EAAOs/B,WAEH4K,GACFlqC,EAAOy+B,iBAAiB,eAAgBrjC,KAAK8uC,cAG/C9uC,KAAK83C,uBAAuBlzC,GAC5BA,EAAOs/B,WAMTzM,gBACE,IAAI10B,EAAO,GAAK+K,MAAM2pB,gBAUtB,OARkB,IAAdz3B,KAAKkC,OACPa,GAAQ,IAGQ,IAAd/C,KAAKkC,MAA4B,IAAdlC,KAAKkC,OAC1Ba,GAAQ,GAGHA,GC/II,MAAMq3C,GAMnBxsC,YAAYhJ,EAAQ7B,EAAMs3C,GAExBr6C,KAAKs6C,MAAQ11C,EAAOixB,eAAe,IAAI76B,WAAW+H,IAElD/C,KAAKq6C,IAAMA,EAMb5iB,gBACE,OAAOz3B,KAAKs6C,MAAMr3C,YCKP,MAAMs3C,GAInB3sC,YAAY7S,GAMViF,KAAKmb,QAAU,IAEfnb,KAAKC,KAAO,GAOZD,KAAKw6C,cAAgB,GAErBx6C,KAAKuvC,OAAS,IAAIV,GAElB7uC,KAAKy6C,UAAY,EAEjBz6C,KAAK06C,UAAY,GAEjB16C,KAAK26C,gBAAkB,GAEvB36C,KAAK46C,UAAY,GAEjB56C,KAAK66C,SAAW,GAEhB76C,KAAK86C,kBAAoB,GAEzB96C,KAAK+6C,QAAU,GAEf/6C,KAAKg7C,iBAAmB,GAExBh7C,KAAKi7C,MAAQ,GAEbj7C,KAAKk7C,OAAS,GAEdl7C,KAAKm7C,QAAU,GAEfn7C,KAAKo7C,YAAc,GAEnBp7C,KAAKq7C,YAAc,GAEnBr7C,KAAKs7C,iBAAmB,GAExBt7C,KAAKu7C,kBAAoB,GAEzBv7C,KAAKw7C,eAAiB,GAEtBx7C,KAAKkrC,QAAU,GAEflrC,KAAKy7C,aAAe,GAEpBz7C,KAAK07C,gBAAkB,GASvB17C,KAAK27C,cAAgB,GAEjB5gD,GACFiF,KAAK0xB,KAAK32B,GAUd22B,KAAK32B,GACCA,aAAkBke,YACpBjZ,KAAK47C,QAAQ7gD,GAEbiF,KAAK67C,QAAQ9gD,GASjB6gD,QAAQ7gD,GACN,IAAI6J,EAAS,IAAIkvB,GAAa/4B,GAE9B,GAAuB,SAAnB6J,EAAO+vB,KAAK,GACd,MAAM,IAAI73B,MAAM,oBAGlB,KAAO8H,EAAOuvB,YAAc,GAAG,CAC7B,IAAIkmB,EAAMz1C,EAAO+vB,KAAK,GAClB5xB,EAAO6B,EAAOywB,aAEN,SAARglB,EACFr6C,KAAK87C,iBAAiBl3C,GACL,SAARy1C,EACTr6C,KAAK+7C,eAAen3C,GACH,SAARy1C,EACTr6C,KAAKg8C,kBAAkBh8C,KAAK06C,UAAWxL,GAAUtqC,EAAQ7B,EAAO,KAC/C,SAARs3C,EACTr6C,KAAKi8C,wBAAwBr3C,EAAQ7B,GACpB,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAK46C,UAAWlF,GAAU9wC,EAAQ7B,GACzC,SAARs3C,EACTr6C,KAAKg8C,kBAAkBh8C,KAAK66C,SAAU/E,GAASlxC,EAAQ7B,EAAO,KAC7C,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAK86C,kBAAmB9E,GAAkBpxC,EAAQ7B,GACzD,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAK+6C,QAAS9E,GAAQrxC,EAAQ7B,GACrC,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKg7C,iBAAkB1D,GAAiB1yC,EAAQ7B,GACvD,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKi7C,MAAOhD,GAAMrzC,EAAQ7B,GACjC,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKk7C,OAAQ/C,GAAOvzC,EAAQ7B,GACnC,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKm7C,QAAS3C,GAAQ5zC,EAAQ7B,GACrC,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKo7C,YAAa3C,GAAY7zC,EAAQ7B,GAC7C,SAARs3C,EACTr6C,KAAKm8C,oBAAoBv3C,EAAQ7B,GAChB,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKs7C,iBAAkB3C,GAAiB/zC,EAAQ7B,GACvD,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKu7C,kBAAmBrC,GAAkBt0C,EAAQ7B,GACzD,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKw7C,eAAgB5B,GAAeh1C,EAAQ7B,GACnD,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKkrC,QAAS5C,GAAQ1jC,EAAQ7B,GACrC,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAKy7C,aAAcvB,GAAat1C,EAAQ7B,GAC/C,SAARs3C,EACTr6C,KAAKk8C,mBAAmBl8C,KAAK07C,gBAAiBvB,GAAgBv1C,EAAQ7B,GAEtE/C,KAAK27C,cAAc13C,KAAK,IAAIm2C,GAAax1C,EAAQ7B,EAAMs3C,KAQ7DyB,iBAAiBl3C,GACf5E,KAAKmb,QAAUvW,EAAOywB,aAMxB0mB,eAAen3C,GACb5E,KAAKC,KAAO2E,EAAO+vB,KAAK,IACxB30B,KAAKw6C,cAAgB51C,EAAO+vB,KAAK,KACjC30B,KAAKuvC,OAAOR,QAAQnqC,GACpB5E,KAAKy6C,UAAY71C,EAAOywB,aAS1B2mB,kBAAkB/+C,EAAK2Q,EAAahJ,EAAQoL,GAC1C,IAAK,IAAI/I,EAAI,EAAGA,EAAI+I,EAAO/I,IAAK,CAC9B,IAAIma,EAAS,IAAIxT,EAEjBwT,EAAO2tB,QAAQnqC,GAEf3H,EAAIgH,KAAKmd,IAQb66B,wBAAwBr3C,EAAQ7B,GAC9B,IAAK,IAAIkE,EAAI,EAAGU,EAAI5E,EAAO,EAAGkE,EAAIU,EAAGV,IACnCjH,KAAK26C,gBAAgB12C,KAAKW,EAAOywB,cAUrC6mB,mBAAmBj/C,EAAK2Q,EAAahJ,EAAQ7B,GAC3C,IAAIq5C,EAAY,EAEhB,KAAOA,EAAYr5C,GAAM,CACvB,IAAIqe,EAAS,IAAIxT,EAEjBwT,EAAO2tB,QAAQnqC,GAEfw3C,GAAah7B,EAAOqW,gBAEpBx6B,EAAIgH,KAAKmd,IAQb+6B,oBAAoBv3C,EAAQ7B,GAC1B,IAAK,IAAIkE,EAAI,EAAGU,EAAI5E,EAAO,GAAIkE,EAAIU,EAAGV,IACpCjH,KAAKq7C,YAAYp3C,KAAKW,EAAOoxB,iBAAiB,IAAI/3B,aAAa,KASnEo+C,UACE,IAAIthD,EAAS,IAAIke,YAAYjZ,KAAKy3B,iBAC9B7yB,EAAS,IAAIkvB,GAAa/4B,GAwB9B,OAtBA6J,EAAOuxB,MAAM,QACbn2B,KAAKs8C,iBAAiB13C,GACtB5E,KAAKu8C,eAAe33C,GACpB5E,KAAKw8C,sBAAsB53C,EAAQ,OAAQ5E,KAAK06C,UAAW,KAC3D16C,KAAKy8C,wBAAwB73C,GAC7B5E,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAK46C,WACjD56C,KAAKw8C,sBAAsB53C,EAAQ,OAAQ5E,KAAK66C,SAAU,KAC1D76C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAK86C,mBACjD96C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAK+6C,SACjD/6C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKg7C,kBACjDh7C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKi7C,OACjDj7C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKk7C,QACjDl7C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKm7C,SACjDn7C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKo7C,aACjDp7C,KAAK28C,oBAAoB/3C,GACzB5E,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKs7C,kBACjDt7C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKu7C,mBACjDv7C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKw7C,gBACjDx7C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKkrC,SACjDlrC,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAKy7C,cACjDz7C,KAAK08C,uBAAuB93C,EAAQ,OAAQ5E,KAAK07C,iBAE1C3gD,EAMTuhD,iBAAiB13C,GACfA,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAY,GACnB7xB,EAAO6xB,YAAYz2B,KAAKmb,SAM1BohC,eAAe33C,GACbA,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAY,KACnB7xB,EAAOuxB,MAAMn2B,KAAKC,MAClB2E,EAAOwvB,KAAK,GAAKp0B,KAAKC,KAAK1E,QAC3BqJ,EAAOuxB,MAAMn2B,KAAKw6C,eAClB51C,EAAOwvB,KAAK,IAAMp0B,KAAKw6C,cAAcj/C,QACrCyE,KAAKuvC,OAAOP,SAASpqC,GACrBA,EAAO6xB,YAAYz2B,KAAKy6C,WAS1B+B,sBAAsB53C,EAAQ3E,EAAM6Z,EAAS/W,GAC3C,GAAI+W,EAAQve,OAAQ,CAClBqJ,EAAOuxB,MAAMl2B,GACb2E,EAAO6xB,YAAY3c,EAAQve,OAASwH,GAEpC,IAAK,IAAIqe,KAAUtH,EACjBsH,EAAO4tB,SAASpqC,IAQtB63C,wBAAwB73C,GACtB,GAAI5E,KAAK26C,gBAAgBp/C,OAAQ,CAC/BqJ,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAA0C,EAA9Bz2B,KAAK26C,gBAAgBp/C,QAExC,IAAK,IAAIqhD,KAAkB58C,KAAK26C,gBAC9B/1C,EAAO6xB,YAAYmmB,IAUzBF,uBAAuB93C,EAAQ3E,EAAM6Z,GACnC,GAAIA,EAAQve,OAAQ,CAClBqJ,EAAOuxB,MAAMl2B,GACb2E,EAAO6xB,YAAYz2B,KAAK68C,qBAAqB/iC,IAE7C,IAAK,IAAIsH,KAAUtH,EACjBsH,EAAO4tB,SAASpqC,IAQtB+3C,oBAAoB/3C,GAClB,GAAI5E,KAAKq7C,YAAY9/C,OAAQ,CAC3BqJ,EAAOuxB,MAAM,QACbvxB,EAAO6xB,YAAsC,GAA1Bz2B,KAAKq7C,YAAY9/C,QAEpC,IAAK,IAAIuhD,KAAc98C,KAAKq7C,YAC1Bz2C,EAAOsyB,kBAAkB4lB,IAU/BjB,QAAQ9gD,GACN,IAAIm3B,EACAttB,EAAS,IAAIk9B,GAAY/mC,GAE7B,KAAOm3B,EAAQttB,EAAO+vB,QACpB,GAAc,YAAVzC,EACFlyB,KAAK+8C,iBAAiBn4C,QACjB,GAAc,UAAVstB,EACTlyB,KAAKg9C,eAAep4C,QACf,GAAc,cAAVstB,EACTlyB,KAAKi9C,wBAAwBj9C,KAAK06C,UAAWxL,GAAU,OAAQtqC,QAC1D,GAAc,oBAAVstB,EACTlyB,KAAKk9C,wBAAwBt4C,QACxB,GAAc,aAAVstB,EACTlyB,KAAKi9C,wBAAwBj9C,KAAK66C,SAAU/E,GAAS,SAAUlxC,QAC1D,GAAc,cAAVstB,EACTlyB,KAAKi9C,wBAAwBj9C,KAAK46C,UAAWlF,GAAU,WAAY9wC,QAC9D,GAAc,iBAAVstB,EACTlyB,KAAKi9C,wBAAwBj9C,KAAK86C,kBAAmB9E,GAAkB,cAAepxC,QACjF,GAAc,WAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAK+6C,QAAS9E,GAAQrxC,QACjC,GAAc,eAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKg7C,iBAAkB1D,GAAiB1yC,QACnD,GAAc,SAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKi7C,MAAOhD,GAAMrzC,QAC7B,GAAc,UAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKk7C,OAAQ/C,GAAOvzC,QAC/B,GAAc,WAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKm7C,QAAS3C,GAAQ5zC,QACjC,GAAc,eAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKo7C,YAAa3C,GAAY7zC,QACzC,GAAc,gBAAVstB,EACTlyB,KAAKo9C,oBAAoBx4C,QACpB,GAAc,oBAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKs7C,iBAAkB3C,GAAiB/zC,QACnD,GAAc,qBAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKu7C,kBAAmBrC,GAAkBt0C,QACrD,GAAc,kBAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKw7C,eAAgB5B,GAAeh1C,QAC/C,GAAc,WAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKkrC,QAAS5C,GAAQ1jC,QACjC,GAAc,gBAAVstB,EACTlyB,KAAKm9C,WAAWn9C,KAAKy7C,aAAcvB,GAAat1C,OAC3C,IAAc,mBAAVstB,EAGT,MAAM,IAAIp1B,MAAK,sBAAAgV,OAAuBogB,IAFtClyB,KAAKm9C,WAAWn9C,KAAK07C,gBAAiBvB,GAAgBv1C,IAU5Dm4C,iBAAiBn4C,GACf,IAAK,IAAIstB,KAASttB,EAAO6qC,YAAa,CACpC,GAAc,kBAAVvd,EAGF,MAAM,IAAIp1B,MAAK,8BAAAgV,OAA+BogB,EAAK,MAFnDlyB,KAAKmb,QAAUvW,EAAO89B,WAU5Bsa,eAAep4C,GACb5E,KAAKC,KAAO2E,EAAO+vB,OAEnB,IAAK,IAAIzC,KAASttB,EAAO6qC,YACvB,GAAIvd,EAAMp2B,WAAW,OAanB8I,EAAO+vB,YACF,GAAc,cAAVzC,EACTlyB,KAAKy6C,UAAY71C,EAAO89B,eACnB,GAAc,kBAAVxQ,EACTttB,EAAOk+B,eAAe9iC,KAAKuvC,OAAO/oC,UAC7B,GAAc,kBAAV0rB,EACTttB,EAAOk+B,eAAe9iC,KAAKuvC,OAAO7oC,SAC7B,IAAc,iBAAVwrB,EAGT,MAAM,IAAIp1B,MAAK,4BAAAgV,OAA6BogB,EAAK,MAFjDlyB,KAAKuvC,OAAOT,aAAelqC,EAAO+9B,aAaxCsa,wBAAwBhgD,EAAK2Q,EAAa3N,EAAM2E,GAC9CA,EAAO+vB,OAEP,IAAK,IAAIzC,KAASttB,EAAO6qC,YAAa,CACpC,GAAIvd,IAAUjyB,EAOZ,MAAM,IAAInD,MAAK,oBAAAgV,OAAqB7R,EAAI,OAAA6R,OAAMogB,EAAK,MAPjC,CAClB,IAAI9Q,EAAS,IAAIxT,EAEjBwT,EAAOouB,QAAQ5qC,GAEf3H,EAAIgH,KAAKmd,KAUf87B,wBAAwBt4C,GACtBA,EAAO+vB,OAEP,IAAK,IAAIzC,KAASttB,EAAO6qC,YAAa,CACpC,GAAc,aAAVvd,EAGF,MAAM,IAAIp1B,MAAK,sCAAAgV,OAAuCogB,EAAK,MAF3DlyB,KAAK26C,gBAAgB12C,KAAKW,EAAO89B,YAYvCya,WAAWlgD,EAAK2Q,EAAahJ,GAC3B,IAAIwc,EAAS,IAAIxT,EAEjBwT,EAAOouB,QAAQ5qC,GAEf3H,EAAIgH,KAAKmd,GAMXg8B,oBAAoBx4C,GAClB,IAAIoL,EAAQpL,EAAO89B,UAEnB99B,EAAO+vB,OAEP,IAAK,IAAI1tB,EAAI,EAAGA,EAAI+I,EAAO/I,IACzBjH,KAAKq7C,YAAYp3C,KAAKW,EAAOk+B,eAAe,IAAI7kC,aAAa,KAG/D2G,EAAO+vB,OAQT0oB,UACE,IAAIz4C,EAAS,IAAIk9B,GAuBjB,OArBA9hC,KAAKs9C,iBAAiB14C,GACtB5E,KAAKu9C,eAAe34C,GACpB5E,KAAKw9C,uBAAuB54C,EAAQ,YAAa5E,KAAK06C,WACtD16C,KAAKy9C,wBAAwB74C,GAC7B5E,KAAKw9C,uBAAuB54C,EAAQ,WAAY5E,KAAK66C,UACrD76C,KAAKw9C,uBAAuB54C,EAAQ,YAAa5E,KAAK46C,WACtD56C,KAAKw9C,uBAAuB54C,EAAQ,eAAgB5E,KAAK86C,mBACzD96C,KAAK09C,YAAY94C,EAAQ5E,KAAK+6C,SAC9B/6C,KAAK09C,YAAY94C,EAAQ5E,KAAKg7C,kBAC9Bh7C,KAAK09C,YAAY94C,EAAQ5E,KAAKi7C,OAC9Bj7C,KAAK09C,YAAY94C,EAAQ5E,KAAKk7C,QAC9Bl7C,KAAK09C,YAAY94C,EAAQ5E,KAAKm7C,SAC9Bn7C,KAAK09C,YAAY94C,EAAQ5E,KAAKo7C,aAC9Bp7C,KAAK29C,oBAAoB/4C,GACzB5E,KAAK09C,YAAY94C,EAAQ5E,KAAKs7C,kBAC9Bt7C,KAAK09C,YAAY94C,EAAQ5E,KAAKu7C,mBAC9Bv7C,KAAK09C,YAAY94C,EAAQ5E,KAAKw7C,gBAC9Bx7C,KAAK09C,YAAY94C,EAAQ5E,KAAKkrC,SAC9BlrC,KAAK09C,YAAY94C,EAAQ5E,KAAKy7C,cAC9Bz7C,KAAK09C,YAAY94C,EAAQ5E,KAAK07C,iBAEvB92C,EAAO7J,OAMhBuiD,iBAAiB14C,GACfA,EAAOq/B,WAAW,WAClBr/B,EAAOw+B,YAAY,gBAAiBpjC,KAAKmb,SACzCvW,EAAOs/B,WAMTqZ,eAAe34C,GACbA,EAAOw/B,iBAAiB,QAASpkC,KAAKC,MACtC2E,EAAOw+B,YAAY,YAAapjC,KAAKy6C,WACrCz6C,KAAKuvC,OAAON,SAASrqC,GACrBA,EAAOs/B,WAQTsZ,uBAAuB54C,EAAQ3E,EAAM6Z,GACnC,GAAIA,EAAQve,OAAQ,CAClBqJ,EAAOq/B,WAAWhkC,EAAM6Z,EAAQve,QAEhC,IAAK,IAAI6lB,KAAUtH,EACjBsH,EAAO6tB,SAASrqC,GAGlBA,EAAOs/B,YAOXuZ,wBAAwB74C,GACtB,GAAI5E,KAAK26C,gBAAgBp/C,OAAQ,CAC/BqJ,EAAOq/B,WAAW,kBAAmBjkC,KAAK26C,gBAAgBp/C,QAE1D,IAAK,IAAIqhD,KAAkB58C,KAAK26C,gBAC9B/1C,EAAOw+B,YAAY,WAAYwZ,GAGjCh4C,EAAOs/B,YAQXwZ,YAAY94C,EAAQkV,GAClB,IAAK,IAAIsH,KAAUtH,EACjBsH,EAAO6tB,SAASrqC,GAOpB+4C,oBAAoB/4C,GAClB,GAAI5E,KAAKq7C,YAAY9/C,OAAQ,CAC3BqJ,EAAOq/B,WAAW,cAAejkC,KAAKq7C,YAAY9/C,QAElD,IAAK,IAAIuhD,KAAc98C,KAAKq7C,YAC1Bz2C,EAAOm/B,gBAAgB+Y,GAGzBl4C,EAAOs/B,YASXzM,gBACE,IAAI10B,EAAO,IAsBX,OApBAA,GAAQ/C,KAAK49C,gCAAgC59C,KAAK06C,UAAW,KAC7D33C,GAAQ/C,KAAK49C,gCAAgC59C,KAAK26C,gBAAiB,GACnE53C,GAAQ/C,KAAK69C,iCAAiC79C,KAAK46C,WACnD73C,GAAQ/C,KAAK49C,gCAAgC59C,KAAK66C,SAAU,KAC5D93C,GAAQ/C,KAAK69C,iCAAiC79C,KAAK86C,mBACnD/3C,GAAQ/C,KAAK69C,iCAAiC79C,KAAK+6C,SACnDh4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKg7C,kBACnDj4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKi7C,OACnDl4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKk7C,QACnDn4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKm7C,SACnDp4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKo7C,aACnDr4C,GAAQ/C,KAAK49C,gCAAgC59C,KAAKq7C,YAAa,IAC/Dt4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKs7C,kBACnDv4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKu7C,mBACnDx4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKw7C,gBACnDz4C,GAAQ/C,KAAK69C,iCAAiC79C,KAAKkrC,SACnDnoC,GAAQ/C,KAAK69C,iCAAiC79C,KAAKy7C,cACnD14C,GAAQ/C,KAAK69C,iCAAiC79C,KAAK07C,iBACnD34C,GAAQ,EAAI/C,KAAK27C,cAAcpgD,OAASyE,KAAK69C,iCAAiC79C,KAAK27C,eASrFkB,qBAAqB/iC,GACnB,IAAI/W,EAAO,EAEX,IAAK,IAAIqe,KAAUtH,EACjB/W,GAAQqe,EAAOqW,gBAGjB,OAAO10B,EAOT86C,iCAAiC/jC,GAC/B,OAAIA,EAAQve,OACH,EAAIyE,KAAK68C,qBAAqB/iC,GAGhC,EAQT8jC,gCAAgC9jC,EAAS/W,GACvC,OAAI+W,EAAQve,OACH,EAAIue,EAAQve,OAASwH,EAGvB,GCrsBI,ICGA+6C,GAAA,CACbC,KDJa,CACbxD,UCIAhoB,OACAkY,OACA3Y,oCCkBK,SAASksB,GAAc31C,EAAG1K,GAC/B,OAAO0K,EAAI9B,KAAK03C,UAAYtgD,EAAI0K,GAuB3B,SAAS61C,GAAK71C,EAAG1K,EAAGyJ,GACzB,OAAOiB,EAAIjB,GAAKzJ,EAAI0K,GA0Ef,SAAS81C,GAAWn6C,GASzB,OARAA,IACAA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,EACVA,GAAKA,GAAK,KACVA,ECnIF,IAAIo6C,GAAS5lD,SAASqT,cAAc,UAChCwyC,GAAMD,GAAOE,WAAW,MAExBC,GAAU/lD,SAASqT,cAAc,UACjC2yC,GAAOD,GAAQD,WAAW,MA0GvB,SAASG,GAAUC,GACxB,IAAI1uB,EAAQ0uB,EAAU1uB,MAClBzD,EAASmyB,EAAUnyB,OACnBoyB,EAAWR,GAAWnuB,GACtB4uB,EAAYT,GAAW5xB,GAE3B,OAAIyD,IAAU2uB,GAAYpyB,IAAWqyB,EAahC,SAAyBvjD,EAAM20B,EAAOzD,GAC3C,IAAIsyB,EAAWxjD,EAAK20B,MAChB8uB,EAAYzjD,EAAKkxB,OAGrB,OAAIlxB,aAAgB0jD,WAClBX,GAAOpuB,MAAQ6uB,EACfT,GAAO7xB,OAASuyB,EAEhBT,GAAIW,aAAa3jD,EAAM,EAAG,GAE1BkjD,GAAQvuB,MAAQA,EAChBuuB,GAAQhyB,OAASA,EAEjBiyB,GAAKS,UAAUb,GAAQ,EAAG,EAAGpuB,EAAOzD,GAE7BiyB,GAAKU,aAAa,EAAG,EAAGlvB,EAAOzD,KAGtC6xB,GAAOpuB,MAAQA,EACfouB,GAAO7xB,OAASA,EAEhB8xB,GAAIY,UAAU5jD,EAAM,EAAG,EAAG20B,EAAOzD,GAE1B8xB,GAAIa,aAAa,EAAG,EAAGlvB,EAAOzD,IApC9B4yB,CAAgBT,EAAWC,EAAUC,GAGvCF,EC7GM1tB,eAAeouB,GAAchgD,EAAMigD,GAChD,GAAiB,UAAbA,EAEF,OAAO,IAAIjmD,QAASC,IAClB,IAAIqhB,EAAQ,IAAI4kC,MAEhB5kC,EAAMzf,OAAS,MACb5B,EAAQ,CAACuD,IAAI,EAAMvB,KAAMqf,MAG3BA,EAAMxf,QAAW4D,KACfzF,EAAQ,CAACuD,IAAI,EAAOS,MAAO,aAAchC,KAAMyD,MAGjD4b,EAAMhiB,IAAM0G,IAET,CACL,IAAI5C,EAcAnB,EAXJ,IACEmB,QAAiBC,MAAM2C,GACvB,MAAON,GACP,MAAO,CAAClC,IAAI,EAAOS,MAAO,eAAgBhC,KAAMyD,GAIlD,IAAKtC,EAASI,GACZ,MAAO,CAACA,IAAI,EAAOS,MAAO,YAAahC,KAAMmB,GAM/C,IACmB,SAAb6iD,EACFhkD,QAAamB,EAASkW,OACA,gBAAb2sC,EACThkD,QAAamB,EAASK,cACA,SAAbwiD,IACThkD,QAAamB,EAAS8X,QAExB,MAAOxV,GACP,MAAO,CAAClC,IAAI,EAAOS,MAAO,YAAahC,KAAMyD,GAG/C,MAAO,CAAClC,IAAI,EAAMvB,SCrDP,SAASkkD,GAAW54C,GACjC,IAAIuN,EAAO,EAEX,IAAK,IAAIjN,EAAI,EAAGU,EAAIhB,EAAEpL,OAAQ0L,EAAIU,EAAGV,IACnCiN,EAAc,GAAPA,EAAYvN,EAAEO,WAAWD,GAChCiN,GAAcA,EAGhB,OAAOA,ECdT,IAAIsrC,GAAgB,WAKL,MAAMC,GAMnB7xC,YAAY8xC,EAAIhnD,EAAKwJ,GACnB,IAAI0H,EAAK81C,EAAGC,aAAaz9C,GAczB,GAXAlC,KAAKpD,IAAK,EAEVoD,KAAK4/C,cAAgBh2C,EAErB5J,KAAKtH,IAAMA,EAEXsH,KAAK6/C,WAAa39C,EAElBw9C,EAAGI,aAAal2C,EAAIlR,GACpBgnD,EAAGK,cAAcn2C,GAEb81C,EAAGM,mBAAmBp2C,EAAI81C,EAAGO,gBAC/BjgD,KAAKpD,IAAK,MACL,CACL,IAAIS,EAAQqiD,EAAGQ,iBAAiBt2C,GAC5BoO,EAAQtf,EAAIoxB,MAAM,MAEtB5sB,QAAQG,MAAM,kCACdH,QAAQG,MAAMA,GAEd,IAAI8iD,EAAaX,GAAc/uB,KAAKpzB,GAEpC,KAAO8iD,GAAY,CACjB,IAAIC,EAAUttC,SAASqtC,EAAW,IAElCjjD,QAAQG,MAAM+iD,EAAU,KAAOpoC,EAAMooC,EAAU,IAE/CD,EAAaX,GAAc/uB,KAAKpzB,MCvCzB,MAAMgjD,GAMnBzyC,YAAY8xC,EAAIY,EAAcC,GAC5B,IAAI32C,EAAK81C,EAAGc,gBACRC,EAAW,GACXC,EAAU,GAmBd,GAhBA1gD,KAAKpD,IAAK,EAEVoD,KAAK4/C,cAAgBh2C,EAErB5J,KAAK2gD,QAAU,CAACL,EAAcC,GAE9BvgD,KAAKygD,SAAWA,EAEhBzgD,KAAK0gD,QAAUA,EAEf1gD,KAAK4gD,aAAe,EAEpBlB,EAAGmB,aAAaj3C,EAAI02C,EAAaV,eACjCF,EAAGmB,aAAaj3C,EAAI22C,EAAeX,eACnCF,EAAGoB,YAAYl3C,GAEX81C,EAAGqB,oBAAoBn3C,EAAI81C,EAAGsB,aAAc,CAC9C,IAAK,IAAI/5C,EAAI,EAAGU,EAAI+3C,EAAGqB,oBAAoBn3C,EAAI81C,EAAGuB,iBAAkBh6C,EAAIU,EAAGV,IAAK,CAC9E,IAAIma,EAASs+B,EAAGwB,iBAAiBt3C,EAAI3C,GAErC,GAAoB,IAAhBma,EAAOre,KACT09C,EAASr/B,EAAOnhB,MAAQy/C,EAAGyB,mBAAmBv3C,EAAIwX,EAAOnhB,UACpD,CACL,IAAIsoB,EAAOnH,EAAOnhB,KAAKlE,OAAO,EAAGqlB,EAAOnhB,KAAK1E,OAAS,GAEtD,IAAK,IAAI+M,EAAQ,EAAGA,EAAQ8Y,EAAOre,KAAMuF,IAAS,CAChD,IAAIrI,EAAOsoB,EAAO,IAAMjgB,EAAQ,IAEhCm4C,EAASxgD,GAAQy/C,EAAGyB,mBAAmBv3C,EAAI3J,KAKjD,IAAK,IAAIgH,EAAI,EAAGU,EAAI+3C,EAAGqB,oBAAoBn3C,EAAI81C,EAAG0B,mBAAoBn6C,EAAIU,EAAGV,IAAK,CAChF,IAAIma,EAASs+B,EAAG2B,gBAAgBz3C,EAAI3C,GAIpC,GAFAjH,KAAK4gD,cAAgBx/B,EAAOre,KAER,IAAhBqe,EAAOre,KACT29C,EAAQt/B,EAAOnhB,MAAQy/C,EAAG4B,kBAAkB13C,EAAIwX,EAAOnhB,UAClD,CACL,IAAIsoB,EAAOnH,EAAOnhB,KAAKlE,OAAO,EAAGqlB,EAAOnhB,KAAK1E,OAAS,GAEtD,IAAK,IAAI+M,EAAQ,EAAGA,EAAQ8Y,EAAOre,KAAMuF,IAAS,CAChD,IAAIrI,EAAOsoB,EAAO,IAAMjgB,EAAQ,IAEhCo4C,EAAQzgD,GAAQy/C,EAAG4B,kBAAkB13C,EAAI3J,KAK/CD,KAAKpD,IAAK,OAEVM,QAAQG,MAAM,kCACdH,QAAQG,MAAMqiD,EAAG6B,kBAAkB33C,KC3DzC,SAAS43C,GAAqBC,GAC5B,IAAItU,EAASsU,EAAI33B,MAAM,KACnB/f,EAASojC,EAAO,GAEpB,IAAK,IAAIlmC,EAAI,EAAGU,EAAIwlC,EAAO5xC,OAAQ0L,EAAIU,EAAGV,IACxC8C,GAAUojC,EAAOlmC,GAAG,GAAGy6C,cAAgBvU,EAAOlmC,GAAGlL,OAAO,GAG1D,OAAOgO,EAOM,MAAM43C,GAKnB/zC,YAAYwwC,EAAQnnC,GAClB,IAAIyoC,EAAKtB,EAAOE,WAAW,SAAUrnC,GAAW,CAACu+B,OAAO,EAAOoM,WAAW,IAY1E,GAXA5hD,KAAK6hD,QAAS,EAETnC,IACHA,EAAKtB,EAAOE,WAAW,QAASrnC,GAAW,CAACu+B,OAAO,EAAOoM,WAAW,IACrE5hD,KAAK6hD,QAAS,GAGXnC,IACHA,EAAKtB,EAAOE,WAAW,qBAAsBrnC,GAAW,CAACu+B,OAAO,EAAOoM,WAAW,MAG/ElC,EACH,MAAM,IAAI5iD,MAAM,4CAGlB,IAAIglD,EAAa,GACjB,IAAK,IAAIC,KAAarC,EAAGsC,yBAElBD,EAAUjmD,WAAW,UACxBgmD,EAAWN,GAAqBO,IAAcrC,EAAGuC,aAAaF,IAIlE,IAAKrC,EAAGwC,aAAaxC,EAAGyC,gCACtB,MAAM,IAAIrlD,MAAM,4CAGlB,IAAKkD,KAAK6hD,SAAWC,EAAWM,aAC9B,MAAM,IAAItlD,MAAM,6CAGlB,IAAKkD,KAAK6hD,SAAWC,EAAWO,gBAC9B,MAAM,IAAIvlD,MAAM,0CAUlB,GATWkD,KAAK6hD,SACdC,EAAWO,gBAAkB,CAC3BC,kCAAmC5C,EAAG6C,4BACtCC,yBAA0B9C,EAAG+C,oBAAoBrlD,KAAKsiD,GACtDgD,2BAA4BhD,EAAGiD,sBAAsBvlD,KAAKsiD,GAC1DkD,yBAA0BlD,EAAGmD,oBAAoBzlD,KAAKsiD,MAIrD1/C,KAAK6hD,OAAQ,CAChB,MAAMiB,EAAapD,EAAGoD,WACtBpD,EAAGqD,IAAMrD,EAAGsD,MACZtD,EAAGuD,GAAKvD,EAAGwD,gBACXxD,EAAGoD,WAAa,SAASxzC,EAAQ4d,EAAOi2B,GAAyB,QAAAt2C,EAAAC,UAAAvR,OAAN+R,EAAI,IAAAN,MAAAH,EAAA,EAAAA,EAAA,KAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJK,EAAIL,EAAA,GAAAH,UAAAG,GAM7D,OAJEk2C,EADE71C,EAAK/R,OAAS,EACC+R,EAAK,GAELA,EAAK,GAEjBw1C,EAAWM,KAAK1D,EAAIpwC,EAAQ4d,EAAOi2B,KAAmB71C,IAQjEoyC,EAAGoC,WAAaA,EAGhBpC,EAAG2D,UAAU3D,EAAG4D,QAChB5D,EAAG6D,OAAO7D,EAAG8D,YAGbxjD,KAAK0/C,GAAKA,EAEV1/C,KAAK8hD,WAAaA,EAElB9hD,KAAKyjD,YAAc,IAAIlnC,IAEvBvc,KAAK0jD,eAAiB,IAAInnC,IAE1Bvc,KAAK2jD,qBAAuB,KAE5B3jD,KAAK4jD,eAAiB,6BACtB5jD,KAAK6jD,cAAgB,GACjB7jD,KAAK6hD,OACP7hD,KAAK6jD,eAAa,qBAGlB7jD,KAAK6jD,eAAa,qBAKpB,IAAInF,EAAY,IAAIK,UAAU,EAAG,GAGjC,IAAK,IAAI93C,EAAI,EAAGA,EAAI,EAAGA,IACrBy3C,EAAUrjD,KAAS,EAAJ4L,EAAQ,GAAK,IAG9B,IAAI68C,EAAepE,EAAGqE,gBACtBrE,EAAGsE,YAAYtE,EAAGuE,WAAYH,GAC9BpE,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG0E,QACtD1E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG0E,QACtD1E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAC1D7E,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAG+E,KAAM/E,EAAG+E,KAAM/E,EAAGgF,cAAehG,GAGpE1+C,KAAK8jD,aAAeA,EAUtBa,iBAAiBjsD,EAAKwJ,GACpB,IAAIgS,EAAOqrC,GAAW7mD,GAClB+qD,EAAczjD,KAAKyjD,YAMvB,OAJKA,EAAY7qB,IAAI1kB,IACnBuvC,EAAYhrC,IAAIvE,EAAM,IAAIurC,GAAWz/C,KAAK0/C,GAAIhnD,EAAKwJ,IAG9CuhD,EAAYv+C,IAAIgP,GAUzB0wC,oBAAoBC,EAAWC,GAC7B,IAAIpF,EAAK1/C,KAAK0/C,GACVY,EAAetgD,KAAK2kD,iBAAiB3kD,KAAK6jD,cAAgBgB,EAAWnF,EAAGqF,eACxExE,EAAiBvgD,KAAK2kD,iBAAiB3kD,KAAK4jD,eAAiB5jD,KAAK6jD,cAAgBiB,EAAapF,EAAGsF,iBAClGtB,EAAiB1jD,KAAK0jD,eAE1B,GAAIpD,EAAa1jD,IAAM2jD,EAAe3jD,GAAI,CACxC,IAAIsX,EAAOqrC,GAAWsF,EAAYC,GAE7BpB,EAAe9qB,IAAI1kB,IACtBwvC,EAAejrC,IAAIvE,EAAM,IAAImsC,GAAcX,EAAIY,EAAcC,IAG/D,IAAI0E,EAAgBvB,EAAex+C,IAAIgP,GAEvC,GAAI+wC,EAAcroD,GAChB,OAAOqoD,GAWbC,oBAAoBrhB,EAAOshB,GACzB,IAAIzF,EAAK1/C,KAAK0/C,GAEd,IAAK,IAAIz4C,EAAI48B,EAAO58B,EAAIk+C,EAAKl+C,IAC3By4C,EAAG0F,wBAAwBn+C,GAU/Bo+C,qBAAqBxhB,EAAOshB,GAC1B,IAAIzF,EAAK1/C,KAAK0/C,GAEd,IAAK,IAAIz4C,EAAI48B,EAAO58B,EAAIk+C,EAAKl+C,IAC3By4C,EAAG4F,yBAAyBr+C,GAShCs+C,iBAAiBN,GACf,IAAItB,EAAuB3jD,KAAK2jD,qBAEhC,GAAIsB,GAAiBA,EAAcroD,IAAMqoD,IAAkBtB,EAAsB,CAC/E,IAAI6B,EAAa,EACbC,EAAaR,EAAcrE,aAE3B+C,IACF6B,EAAa7B,EAAqB/C,cAGpC5gD,KAAK0/C,GAAGgG,WAAWT,EAAcrF,eAE7B6F,EAAaD,EACfxlD,KAAKklD,oBAAoBM,EAAYC,GAC5BA,EAAaD,GACtBxlD,KAAKqlD,qBAAqBI,EAAYD,GAGxCxlD,KAAK2jD,qBAAuBsB,GAWhCjB,YAAY2B,EAASlmC,GACnB,IAAIigC,EAAK1/C,KAAK0/C,GAEdA,EAAGkG,cAAclG,EAAGmG,SAAWpmC,GAE3BkmC,GAAWA,EAAQ/oD,GACrB8iD,EAAGsE,YAAYtE,EAAGuE,WAAY0B,EAAQ/F,eAGtCF,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAK8jD,eCpP1B,MAAMgC,WAAwBC,KAI3CC,UACEhmD,KAAKimD,KAAK,YAAajmD,MAMzB3G,UACE2G,KAAKimD,KAAK,UAAWjmD,OCvBzB,IAAIkmD,GAAcC,QAAKC,WAAW,EAAG,EAAG,GACpCC,GAAcF,QAAKC,WAAW,EAAG,EAAG,GACpCE,GAAcH,QAAKC,WAAW,EAAG,EAAG,GACpCG,GAAYJ,QAAKK,SACjBC,GAAWN,QAAKC,WAAW,EAAG,EAAG,GAEjCM,IADYC,QAAKP,WAAW,EAAG,EAAG,EAAG,GACtBO,QAAKH,UAEpBI,GAAOC,QAAKL,SAShB,SAASM,GAAU7pD,EAAKsK,EAAGw/C,EAAeC,GACxC,IAAIhjD,EAAI,GAAKuD,EAAE,GAAKy/C,EAAS,IAAMA,EAAS,GAAK,EAC7C/0B,EAAI,EAAI,GAAK1qB,EAAE,GAAKy/C,EAAS,IAAMA,EAAS,GAC5CC,EAAI,EAAI1/C,EAAE,GAAK,EAMnB,OAJAs/C,QAAKpuC,IAAImuC,GAAM5iD,EAAGiuB,EAAGg1B,EAAG,GACxBJ,QAAKK,cAAcN,GAAMA,GAAMG,GAC/BZ,QAAK1tC,IAAIxb,EAAK2pD,GAAK,GAAKA,GAAK,GAAIA,GAAK,GAAKA,GAAK,GAAIA,GAAK,GAAKA,GAAK,IAE5D3pD,EAWT,SAASkqD,GAAgBC,EAAOC,GAC9B,OAAOD,EAAM,GAAKC,EAAM,GAAKD,EAAM,GAAKC,EAAM,GAAKD,EAAM,GAAKC,EAAM,GAAKD,EAAM,GASjF,SAASE,GAAerqD,EAAKmqD,GAC3B,IAAIh/C,EAAM+9C,QAAK/9C,IAAIg/C,GAEnBnqD,EAAI,GAAKmqD,EAAM,GAAKh/C,EACpBnL,EAAI,GAAKmqD,EAAM,GAAKh/C,EACpBnL,EAAI,GAAKmqD,EAAM,GAAKh/C,EACpBnL,EAAI,GAAKmqD,EAAM,GAAKh/C,EAmEP+9C,QAAKK,SCvHpB,IAAIe,GAAapB,QAAKK,SAClBgB,GAAcrB,QAAKK,SACnBiB,GAActB,QAAKK,SACnBkB,GAAWf,QAAKH,SAChBmB,GAAUC,QAAKpB,SAKJ,MAAMle,GAInB16B,cAEE5N,KAAK6nD,KAAOhB,QAAKL,SAGjBxmD,KAAK8nD,eAAgB,EACrB9nD,KAAK+nD,IAAM,EACX/nD,KAAKgoD,OAAS,EAGdhoD,KAAKioD,SAAU,EACfjoD,KAAKkoD,cAAgB,EACrBloD,KAAKmoD,eAAiB,EACtBnoD,KAAKooD,gBAAkB,EACvBpoD,KAAKqoD,aAAe,EAGpBroD,KAAKsoD,cAAgB,EACrBtoD,KAAKuoD,aAAe,EAGpBvoD,KAAKpE,SAAWuqD,QAAKK,SACrBxmD,KAAKwoC,SAAWme,QAAKH,SAGrBxmD,KAAKwoD,gBAAkB7B,QAAKH,SAC5BxmD,KAAKyoD,YAAcb,QAAKpB,SACxBxmD,KAAK0oD,iBAAmBd,QAAKpB,SAC7BxmD,KAAK2oD,sBAAwBf,QAAKpB,SAClCxmD,KAAK4oD,mBAAqBhB,QAAKpB,SAC/BxmD,KAAK6oD,sBAAwBjB,QAAKpB,SAClCxmD,KAAK8oD,6BAA+BlB,QAAKpB,SACzCxmD,KAAK+oD,WAAa5C,QAAKK,SACvBxmD,KAAKgpD,WAAa7C,QAAKK,SACvBxmD,KAAKipD,WAAa9C,QAAKK,SAGvBxmD,KAAKkpD,QAAU,CAAC/C,QAAKC,YAAY,GAAI,EAAG,GAAID,QAAKC,YAAY,EAAG,EAAG,GAAID,QAAKC,WAAW,EAAG,EAAG,GAAID,QAAKC,WAAW,GAAI,EAAG,GAAID,QAAKC,WAAW,EAAG,EAAG,GAAID,QAAKC,WAAW,EAAG,EAAG,GAAID,QAAKC,WAAW,EAAG,EAAG,IAGtMpmD,KAAKmpD,mBAAqB,CAAChD,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,UAG1HxmD,KAAKopD,OAAS,CAACvC,QAAKL,SAAUK,QAAKL,SAAUK,QAAKL,SAAUK,QAAKL,SAAUK,QAAKL,SAAUK,QAAKL,UAE/FxmD,KAAKqpD,OAAQ,EAWfC,YAAYvB,EAAKC,EAAQuB,EAAMC,GAC7BxpD,KAAK8nD,eAAgB,EACrB9nD,KAAKioD,SAAU,EACfjoD,KAAK+nD,IAAMA,EACX/nD,KAAKgoD,OAASA,EACdhoD,KAAKsoD,cAAgBiB,EACrBvpD,KAAKuoD,aAAeiB,EAEpBxpD,KAAKqpD,OAAQ,EAafI,MAAMz7B,EAAMC,EAAOgb,EAAQzb,EAAK+7B,EAAMC,GACpCxpD,KAAK8nD,eAAgB,EACrB9nD,KAAKioD,SAAU,EACfjoD,KAAKkoD,cAAgBl6B,EACrBhuB,KAAKmoD,eAAiBl6B,EACtBjuB,KAAKooD,gBAAkBnf,EACvBjpC,KAAKqoD,aAAe76B,EACpBxtB,KAAKsoD,cAAgBiB,EACrBvpD,KAAKuoD,aAAeiB,EAEpBxpD,KAAKqpD,OAAQ,EAQfrC,SAASA,GACPH,QAAK6C,KAAK1pD,KAAK6nD,KAAMb,GAErBhnD,KAAKgoD,OAAShB,EAAS,GAAKA,EAAS,GAErChnD,KAAKqpD,OAAQ,EAQfM,YAAY/tD,GACVuqD,QAAKuD,KAAK1pD,KAAKpE,SAAUA,GAEzBoE,KAAKqpD,OAAQ,EAQfO,KAAKj0B,GACHwwB,QAAKtf,IAAI7mC,KAAKpE,SAAUoE,KAAKpE,SAAU+5B,GAEvC31B,KAAKqpD,OAAQ,EAQfQ,YAAYrhB,GACVme,QAAK+C,KAAK1pD,KAAKwoC,SAAUA,GAEzBxoC,KAAKqpD,OAAQ,EAQfS,OAAOthB,GACLme,QAAKoD,IAAI/pD,KAAKwoC,SAAUxoC,KAAKwoC,SAAUA,GAEvCxoC,KAAKqpD,OAAQ,EASfW,kBAAkBC,EAAiBC,GACjCvD,QAAKwD,SAASnqD,KAAKwoC,UAEnBxoC,KAAKoqD,aAAaH,EAAiBC,GAUrCG,aAAa7hB,EAAU6e,GACrBrnD,KAAK8pD,OAAOthB,GAEZme,QAAK2D,UAAU5C,GAAUA,IACzBvB,QAAKv4B,IAAI25B,GAAYvnD,KAAKpE,SAAUyrD,GACpClB,QAAKoE,cAAchD,GAAYA,GAAY/e,GAC3C2d,QAAKtf,IAAI7mC,KAAKpE,SAAU2rD,GAAYF,GAUtCmD,kBAAkBhiB,EAAU6e,EAAO9rD,GACjCyE,KAAK6pD,YAAYrhB,GAEH,MAAVjtC,IACFA,EAAS4qD,QAAK/9C,IAAI+9C,QAAKv4B,IAAI25B,GAAYvnD,KAAKpE,SAAUyrD,KAGxDV,QAAK2D,UAAU5C,GAAUA,IACzBvB,QAAKuD,KAAKnC,GAAYjB,IACtBH,QAAKoE,cAAchD,GAAYA,GAAYG,IAC3CvB,QAAKtuB,MAAM0vB,GAAYA,GAAYhsD,GACnC4qD,QAAKtf,IAAI7mC,KAAKpE,SAAU2rD,GAAYF,GAWtCoD,wBAAwBR,EAAiBC,EAAe7C,EAAO9rD,GAC7DorD,QAAKwD,SAASzC,IACdf,QAAK+D,QAAQhD,GAAUA,GAAUwC,GACjCvD,QAAKgE,QAAQjD,GAAUA,GAAUuC,GAEjCjqD,KAAKwqD,kBAAkB9C,GAAUL,EAAO9rD,GAS1CqvD,KAAKvD,EAAOwD,GACVjD,QAAKkD,OAAOnD,GAAS3nD,KAAKpE,SAAUyrD,EAAOwD,GAC3CjD,QAAKmD,YAAY/qD,KAAKwoC,SAAUmf,IAEhC3nD,KAAKqpD,OAAQ,EAUf2B,cAAcpvD,EAAU0T,EAAQu7C,GAC9B1E,QAAKuD,KAAK1pD,KAAKpE,SAAUA,GACzBoE,KAAK4qD,KAAKt7C,EAAQu7C,GAMpBI,QACE9E,QAAK1tC,IAAIzY,KAAKpE,SAAU,EAAG,EAAG,GAC9B+qD,QAAKwD,SAASnqD,KAAKwoC,UAEnBxoC,KAAKqpD,OAAQ,EAMfhqC,SACE,GAAIrf,KAAKqpD,MAAO,CACdrpD,KAAKqpD,OAAQ,EAEb,IAAIztD,EAAWoE,KAAKpE,SAChB4sC,EAAWxoC,KAAKwoC,SAChBggB,EAAkBxoD,KAAKwoD,gBACvBC,EAAczoD,KAAKyoD,YACnBC,EAAmB1oD,KAAK0oD,iBACxBC,EAAwB3oD,KAAK2oD,sBAC7BO,EAAUlpD,KAAKkpD,QACfC,EAAqBnpD,KAAKmpD,mBAI1BnpD,KAAK8nD,cACPF,QAAK0B,YAAYZ,EAAkB1oD,KAAK+nD,IAAK/nD,KAAKgoD,OAAQhoD,KAAKsoD,cAAetoD,KAAKuoD,cAEnFX,QAAK6B,MAAMf,EAAkB1oD,KAAKkoD,cAAeloD,KAAKmoD,eAAgBnoD,KAAKooD,gBAAiBpoD,KAAKqoD,aAAcroD,KAAKsoD,cAAetoD,KAAKuoD,cAG1IX,QAAKsD,SAASzC,EAAajgB,GAC3Bof,QAAK/9B,UAAU4+B,EAAaA,EAAatC,QAAKgF,OAAO5D,GAAY3rD,IAEjE+qD,QAAK2D,UAAU9B,EAAiBhgB,GAIhCof,QAAKmC,IAAIpB,EAAuBD,EAAkBD,GDtOxD,SAAsBW,EAAQpgD,GAE5B,IAIIo+C,EAJAgE,EAAMpiD,EAAE,GAAIqiD,EAAMriD,EAAE,GAAIsiD,EAAMtiD,EAAE,GAAIuiD,EAAMviD,EAAE,IAC9CwiD,EAAMxiD,EAAE,GAAIyiD,EAAMziD,EAAE,GAAI0iD,EAAM1iD,EAAE,GAAI2iD,EAAM3iD,EAAE,IAC5C4iD,EAAM5iD,EAAE,GAAI6iD,EAAM7iD,EAAE,GAAI8iD,EAAM9iD,EAAE,IAAK+iD,EAAM/iD,EAAE,IAC7CgjD,EAAMhjD,EAAE,GAAIijD,EAAMjjD,EAAE,GAAIkjD,EAAMljD,EAAE,IAAKmjD,EAAMnjD,EAAE,KAI/Co+C,EAAQgC,EAAO,IACT,GAAK4C,EAAMZ,EACjBhE,EAAM,GAAK6E,EAAMZ,EACjBjE,EAAM,GAAK8E,EAAMZ,EACjBlE,EAAM,GAAK+E,EAAMZ,GAGjBnE,EAAQgC,EAAO,IACT,GAAK4C,EAAMZ,EACjBhE,EAAM,GAAK6E,EAAMZ,EACjBjE,EAAM,GAAK8E,EAAMZ,EACjBlE,EAAM,GAAK+E,EAAMZ,GAGjBnE,EAAQgC,EAAO,IACT,GAAK4C,EAAMR,EACjBpE,EAAM,GAAK6E,EAAMR,EACjBrE,EAAM,GAAK8E,EAAMR,EACjBtE,EAAM,GAAK+E,EAAMR,GAGjBvE,EAAQgC,EAAO,IACT,GAAK4C,EAAMR,EACjBpE,EAAM,GAAK6E,EAAMR,EACjBrE,EAAM,GAAK8E,EAAMR,EACjBtE,EAAM,GAAK+E,EAAMR,GAGjBvE,EAAQgC,EAAO,IACT,GAAK4C,EAAMJ,EACjBxE,EAAM,GAAK6E,EAAMJ,EACjBzE,EAAM,GAAK8E,EAAMJ,EACjB1E,EAAM,GAAK+E,EAAMJ,GAGjB3E,EAAQgC,EAAO,IACT,GAAK4C,EAAMJ,EACjBxE,EAAM,GAAK6E,EAAMJ,EACjBzE,EAAM,GAAK8E,EAAMJ,EACjB1E,EAAM,GAAK+E,EAAMJ,EAEjBzE,GAAe8B,EAAO,GAAIA,EAAO,IACjC9B,GAAe8B,EAAO,GAAIA,EAAO,IACjC9B,GAAe8B,EAAO,GAAIA,EAAO,IACjC9B,GAAe8B,EAAO,GAAIA,EAAO,IACjC9B,GAAe8B,EAAO,GAAIA,EAAO,IACjC9B,GAAe8B,EAAO,GAAIA,EAAO,ICkL7BgD,CAAapsD,KAAKopD,OAAQT,GAI1Bf,QAAKyE,OAAOrsD,KAAK4oD,mBAAoBH,GAErCtC,QAAKoE,cAAcvqD,KAAK+oD,WAAY7C,GAAasC,GACjDrC,QAAKoE,cAAcvqD,KAAKgpD,WAAY3C,GAAamC,GACjDrC,QAAKoE,cAAcvqD,KAAKipD,WAAY3C,GAAakC,GAIjDZ,QAAKyE,OAAOrsD,KAAK8oD,6BAA8BH,GAG/C,IAAK,IAAI1hD,EAAI,EAAGA,EAAI,EAAGA,IACrBk/C,QAAKoE,cAAcpB,EAAmBliD,GAAIiiD,EAAQjiD,GAAIuhD,IAY5D8D,WAAWC,EAAQC,GACjB,IAAK,IAAIpF,KAASpnD,KAAKopD,OACrB,GAAIjC,GAAgBC,EAAOmF,KAAYC,EACrC,OAAO,EAIX,OAAO,EAUTC,cAAcxvD,EAAKsK,GACjB,OAAO4+C,QAAKe,cAAcjqD,EAAKsK,EAAGvH,KAAK4oD,oBAUzC8D,cAAczvD,EAAKsK,GAEjB,OAAO4+C,QAAKe,cAAcjqD,EAAKsK,EAAGvH,KAAKyoD,aAUzCkE,cAAc1vD,EAAKsK,GACjB,IAAIy/C,EAAWhnD,KAAK6nD,KAOpB,OALA1B,QAAKe,cAAcK,GAAYhgD,EAAGvH,KAAK2oD,uBAEvC1rD,EAAI,GAAKsJ,KAAKqmD,OAAQrF,GAAW,GAAK,GAAK,EAAKP,EAAS,IACzD/pD,EAAI,GAAKsJ,KAAKqmD,OAAQ,EAAIrF,GAAW,IAAM,EAAKP,EAAS,IAElD/pD,EAUT4vD,iBAAiB5vD,EAAKsK,GACpB,IAAIc,EAAIk/C,GACJ5pD,EAAI6pD,GACJ1+C,EAAI2+C,GACJzjD,EAAIuD,EAAE,GACN0qB,EAAI1qB,EAAE,GACNuhD,EAA+B9oD,KAAK8oD,6BACpC9B,EAAWhnD,KAAK6nD,KAWpB,OARAf,GAAUz+C,EAAG89C,QAAK1tC,IAAI3P,EAAG9E,EAAGiuB,EAAG,GAAI62B,EAA8B9B,GAGjEF,GAAUnpD,EAAGwoD,QAAK1tC,IAAI3P,EAAG9E,EAAGiuB,EAAG,GAAI62B,EAA8B9B,GAEjE/pD,EAAIwb,IAAIpQ,EAAG,GACXpL,EAAIwb,IAAI9a,EAAG,GAEJV,GC5YX,IAAI6vD,GAAe3G,QAAKK,SACpBuG,GAAepG,QAAKH,SACpBwG,GAAc7G,QAAKK,SASnByG,GAAaC,IAAe,cAAcA,EAI5Ct/C,cACEE,QAGA9N,KAAKmtD,MAAQhH,QAAKK,SAElBxmD,KAAKotD,cAAgBjH,QAAKK,SAE1BxmD,KAAKqtD,cAAgB1G,QAAKH,SAE1BxmD,KAAKstD,WAAanH,QAAKC,WAAW,EAAG,EAAG,GAExCpmD,KAAKutD,cAAgBpH,QAAKK,SAE1BxmD,KAAKwtD,cAAgB7G,QAAKH,SAE1BxmD,KAAKytD,WAAatH,QAAKK,SAEvBxmD,KAAK0tD,qBAAuBvH,QAAKK,SAEjCxmD,KAAK2tD,qBAAuBhH,QAAKH,SAEjCxmD,KAAK4tD,kBAAoBzH,QAAKK,SAE9BxmD,KAAK6tD,YAAcjG,QAAKpB,SAExBxmD,KAAKyoD,YAAcb,QAAKpB,SAExBxmD,KAAKssB,OAAS,KAEdtsB,KAAKgL,SAAW,GAEhBhL,KAAK8tD,wBAAyB,EAE9B9tD,KAAK+tD,qBAAsB,EAE3B/tD,KAAKguD,oBAAqB,EAE1BhuD,KAAKqqC,SAAU,EACfrqC,KAAKiuD,UAAW,EAChBjuD,KAAKqpD,OAAQ,EASf6E,SAASf,GAKP,OAJAhH,QAAKuD,KAAK1pD,KAAKmtD,MAAOA,GAEtBntD,KAAKqpD,OAAQ,EAENrpD,KAST2pD,YAAY/tD,GAKV,OAJAuqD,QAAKuD,KAAK1pD,KAAKotD,cAAexxD,GAE9BoE,KAAKqpD,OAAQ,EAENrpD,KAST6pD,YAAYrhB,GAKV,OAJAme,QAAK+C,KAAK1pD,KAAKqtD,cAAe7kB,GAE9BxoC,KAAKqpD,OAAQ,EAENrpD,KASTmuD,SAASC,GAKP,OAJAjI,QAAKuD,KAAK1pD,KAAKstD,WAAYc,GAE3BpuD,KAAKqpD,OAAQ,EAENrpD,KASTquD,gBAAgBC,GAKd,OAJAnI,QAAK1tC,IAAIzY,KAAKstD,WAAYgB,EAASA,EAASA,GAE5CtuD,KAAKqpD,OAAQ,EAENrpD,KAWTuuD,kBAAkB3yD,EAAU4sC,EAAU3Q,GACpC,IAAIu1B,EAAgBptD,KAAKotD,cACrBC,EAAgBrtD,KAAKqtD,cACrBC,EAAattD,KAAKstD,WAoBtB,OAlBAF,EAAc,GAAKxxD,EAAS,GAC5BwxD,EAAc,GAAKxxD,EAAS,GAC5BwxD,EAAc,GAAKxxD,EAAS,GAG5ByxD,EAAc,GAAK7kB,EAAS,GAC5B6kB,EAAc,GAAK7kB,EAAS,GAC5B6kB,EAAc,GAAK7kB,EAAS,GAC5B6kB,EAAc,GAAK7kB,EAAS,GAG5B8kB,EAAW,GAAKz1B,EAAM,GACtBy1B,EAAW,GAAKz1B,EAAM,GACtBy1B,EAAW,GAAKz1B,EAAM,GAGtB73B,KAAKqpD,OAAQ,EAENrpD,KAQTwuD,sBAQE,OAPArI,QAAKuD,KAAK1pD,KAAKmtD,MAAO5G,IACtBJ,QAAKuD,KAAK1pD,KAAKotD,cAAe7G,IAC9BI,QAAK+C,KAAK1pD,KAAKqtD,cAAe3G,IAC9BP,QAAKuD,KAAK1pD,KAAKstD,WAAY7G,IAE3BzmD,KAAKqpD,OAAQ,EAENrpD,KASTyuD,UAAU94B,GAKR,OAJAwwB,QAAKtf,IAAI7mC,KAAKmtD,MAAOntD,KAAKmtD,MAAOx3B,GAEjC31B,KAAKqpD,OAAQ,EAENrpD,KAST4pD,KAAKj0B,GAKH,OAJAwwB,QAAKtf,IAAI7mC,KAAKotD,cAAeptD,KAAKotD,cAAez3B,GAEjD31B,KAAKqpD,OAAQ,EAENrpD,KAST8pD,OAAOthB,GAKL,OAJAme,QAAKoD,IAAI/pD,KAAKqtD,cAAertD,KAAKqtD,cAAe7kB,GAEjDxoC,KAAKqpD,OAAQ,EAENrpD,KAST0uD,YAAYlmB,GAKV,OAJAme,QAAKoD,IAAI/pD,KAAKqtD,cAAe7kB,EAAUxoC,KAAKqtD,eAE5CrtD,KAAKqpD,OAAQ,EAENrpD,KAST63B,MAAMA,GAKJ,OAJAsuB,QAAK4D,IAAI/pD,KAAKstD,WAAYttD,KAAKstD,WAAYz1B,GAE3C73B,KAAKqpD,OAAQ,EAENrpD,KAST2uD,aAAa92B,GAKX,OAJAsuB,QAAKtuB,MAAM73B,KAAKstD,WAAYttD,KAAKstD,WAAYz1B,GAE7C73B,KAAKqpD,OAAQ,EAENrpD,KAkET4uD,UAAUtiC,GAER,GAAItsB,KAAKssB,OAAQ,CACf,IAAIthB,EAAWhL,KAAKssB,OAAOthB,SACvB1C,EAAQ0C,EAAS2T,QAAQ3e,OAEd,IAAXsI,GACF0C,EAAS4T,OAAOtW,EAAO,GAc3B,OAVAtI,KAAKssB,OAASA,EAGVA,GACFA,EAAOthB,SAAS/G,KAAKjE,MAIvBA,KAAKqpD,OAAQ,EAENrpD,KAMT6uD,4BACE,IAAIxF,EAAQrpD,KAAKqpD,MACb/8B,EAAStsB,KAAKssB,OAWlB,GARAtsB,KAAKiuD,SAAWjuD,KAAKqpD,MAEjB/8B,IACF+8B,EAAQA,GAAS/8B,EAAO2hC,UAG1BjuD,KAAKiuD,SAAW5E,EAEZA,EAAO,CACTrpD,KAAKqpD,OAAQ,EAEb,IAAIwE,EAAc7tD,KAAK6tD,YACnBT,EAAgBptD,KAAKotD,cACrBC,EAAgBrtD,KAAKqtD,cACrBC,EAAattD,KAAKstD,WAClB7E,EAAczoD,KAAKyoD,YACnB8E,EAAgBvtD,KAAKutD,cACrBC,EAAgBxtD,KAAKwtD,cACrBC,EAAaztD,KAAKytD,WAClBC,EAAuB1tD,KAAK0tD,qBAC5BC,EAAuB3tD,KAAK2tD,qBAC5BC,EAAoB5tD,KAAK4tD,kBAE7B,GAAIthC,EAAQ,CACV,IAAIwiC,EACAC,EAEAC,EAAc1iC,EAAO6gC,MAmBzB,IAjBA2B,EAAmBhC,IAEF,GAAKM,EAAc,GAAK4B,EAAY,GACrDF,EAAiB,GAAK1B,EAAc,GAAK4B,EAAY,GACrDF,EAAiB,GAAK1B,EAAc,GAAK4B,EAAY,GAajDhvD,KAAKguD,mBAAoB,CAC3Be,EAAkB/B,GAElB,IAAIiC,EAAqB3iC,EAAOshC,kBAChCmB,EAAgB,GAAKE,EAAmB,GAAK3B,EAAW,GACxDyB,EAAgB,GAAKE,EAAmB,GAAK3B,EAAW,GACxDyB,EAAgB,GAAKE,EAAmB,GAAK3B,EAAW,GAGxDG,EAAW,GAAKH,EAAW,GAC3BG,EAAW,GAAKH,EAAW,GAC3BG,EAAW,GAAKH,EAAW,OAEtB,CACLyB,EAAkBzB,EAElB,IAAI4B,EAAc5iC,EAAOmhC,WACzBA,EAAW,GAAKyB,EAAY,GAAK5B,EAAW,GAC5CG,EAAW,GAAKyB,EAAY,GAAK5B,EAAW,GAC5CG,EAAW,GAAKyB,EAAY,GAAK5B,EAAW,GAI9C1F,QAAKuH,6BAA6BtB,EAAaR,EAAeyB,EAAkBC,GAEhFnH,QAAKmC,IAAItB,EAAan8B,EAAOm8B,YAAaoF,GAE1ClH,QAAKoD,IAAIyD,EAAelhC,EAAOkhC,cAAeH,QAG9CzF,QAAKuH,6BAA6BtB,EAAaR,EAAeD,EAAeE,GAG7E7E,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,GAAKoF,EAAY,GAC7BpF,EAAY,IAAMoF,EAAY,IAC9BpF,EAAY,IAAMoF,EAAY,IAC9BpF,EAAY,IAAMoF,EAAY,IAC9BpF,EAAY,IAAMoF,EAAY,IAC9BpF,EAAY,IAAMoF,EAAY,IAC9BpF,EAAY,IAAMoF,EAAY,IAI9BL,EAAc,GAAKH,EAAc,GACjCG,EAAc,GAAKH,EAAc,GACjCG,EAAc,GAAKH,EAAc,GACjCG,EAAc,GAAKH,EAAc,GAIjCI,EAAW,GAAKH,EAAW,GAC3BG,EAAW,GAAKH,EAAW,GAC3BG,EAAW,GAAKH,EAAW,GAK7BK,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,GAAKH,EAAc,GAIxCI,EAAkB,GAAK,EAAIH,EAAW,GACtCG,EAAkB,GAAK,EAAIH,EAAW,GACtCG,EAAkB,GAAK,EAAIH,EAAW,GAItCF,EAAc,GAAK9E,EAAY,IAC/B8E,EAAc,GAAK9E,EAAY,IAC/B8E,EAAc,GAAK9E,EAAY,IAG/BiF,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,IAAMH,EAAc,IAY7CluC,OAAO+vC,GACDpvD,KAAKqpD,OAAUrpD,KAAKssB,QAAUtsB,KAAKssB,OAAO2hC,UAC5CjuD,KAAKqpD,OAAQ,EACbrpD,KAAKiuD,UAAW,EAChBjuD,KAAK6uD,6BAEL7uD,KAAKiuD,UAAW,EAGlBjuD,KAAKqvD,aAAaD,GAElBpvD,KAAKsvD,eAAeF,GAStBC,aAAaD,IASbE,eAAeF,GACb,IAAIpkD,EAAWhL,KAAKgL,SAEpB,IAAK,IAAI/D,EAAI,EAAGU,EAAIqD,EAASzP,OAAQ0L,EAAIU,EAAGV,IAC1C+D,EAAS/D,GAAGoY,OAAO+vC,MAQlB,MAAMG,WAAkBtC,GAAU,WAKlC,MAAMuC,WAAkBvC,GAAUlH,QAMlC,MAAM0J,GAIX7hD,YAAY8hD,GAEV1vD,KAAKmtD,MAAQuC,EAAO,GAEpB1vD,KAAKotD,cAAgBsC,EAAO,GAE5B1vD,KAAKqtD,cAAgBqC,EAAO,GAE5B1vD,KAAKstD,WAAaoC,EAAO,GAEzB1vD,KAAKutD,cAAgBmC,EAAO,GAE5B1vD,KAAKwtD,cAAgBkC,EAAO,GAE5B1vD,KAAKytD,WAAaiC,EAAO,GAEzB1vD,KAAK0tD,qBAAuBgC,EAAO,GAEnC1vD,KAAK2tD,qBAAuB+B,EAAO,GAEnC1vD,KAAK4tD,kBAAoB8B,EAAO,GAEhC1vD,KAAK6tD,YAAc6B,EAAO,IAE1B1vD,KAAKyoD,YAAciH,EAAO,IAE1B1vD,KAAK8tD,wBAAyB,EAE9B9tD,KAAK+tD,qBAAsB,EAE3B/tD,KAAKguD,oBAAqB,EAE1BhuD,KAAKgL,SAAW,GAEhBhL,KAAKqqC,SAAU,EACfrqC,KAAKiuD,UAAW,EAOhBjuD,KAAKohB,OAAS,KAEdphB,KAAKqtD,cAAc,GAAK,EAExBrtD,KAAKstD,WAAWqC,KAAK,GAErB3vD,KAAK6tD,YAAY,GAAK,EACtB7tD,KAAK6tD,YAAY,GAAK,EACtB7tD,KAAK6tD,YAAY,IAAM,EACvB7tD,KAAK6tD,YAAY,IAAM,EAEvB7tD,KAAKqpD,OAAQ,EAEbrpD,KAAK4vD,aAAc,EACnB5vD,KAAK6vD,cAAe,EACpB7vD,KAAK8vD,cAAe,EACpB9vD,KAAK+vD,cAAe,EAQtBlB,0BAA0BO,GACxB,IAYIY,EACAjB,EAbAlB,EAAc7tD,KAAK6tD,YACnBR,EAAgBrtD,KAAKqtD,cACrBC,EAAattD,KAAKstD,WAClB7E,EAAczoD,KAAKyoD,YACnB8E,EAAgBvtD,KAAKutD,cACrBC,EAAgBxtD,KAAKwtD,cACrBC,EAAaztD,KAAKytD,WAClBN,EAAQntD,KAAKmtD,MACbO,EAAuB1tD,KAAK0tD,qBAC5BC,EAAuB3tD,KAAK2tD,qBAC5BC,EAAoB5tD,KAAK4tD,kBACzBthC,EAAStsB,KAAKssB,OAIlB,GAAItsB,KAAKguD,mBAAoB,CAC3Be,EAAkB/B,GAElB,IAAIiC,EAAqB3iC,EAAOshC,kBAChCmB,EAAgB,GAAKE,EAAmB,GAAK3B,EAAW,GACxDyB,EAAgB,GAAKE,EAAmB,GAAK3B,EAAW,GACxDyB,EAAgB,GAAKE,EAAmB,GAAK3B,EAAW,GAExDG,EAAW,GAAKH,EAAW,GAC3BG,EAAW,GAAKH,EAAW,GAC3BG,EAAW,GAAKH,EAAW,OACtB,CACLyB,EAAkBzB,EAElB,IAAI4B,EAAc5iC,EAAOmhC,WACzBA,EAAW,GAAKyB,EAAY,GAAK5B,EAAW,GAC5CG,EAAW,GAAKyB,EAAY,GAAK5B,EAAW,GAC5CG,EAAW,GAAKyB,EAAY,GAAK5B,EAAW,GAG1CttD,KAAK4vD,aACPI,EAAmBjD,GAEnBpG,QAAK+C,KAAKsG,EAAkB1jC,EAAOqhC,sBACnChH,QAAKoD,IAAIiG,EAAkBA,EAAkBZ,EAAMjkB,OAAOqd,iBAE1DxoD,KAAKiwD,aAAaD,IAElBA,EAAmB3C,EAGrBzF,QAAKsI,mCAAmCrC,EAAamC,EAAkBhwD,KAAKotD,cAAe2B,EAAiB5B,GAE5GvF,QAAKmC,IAAItB,EAAan8B,EAAOm8B,YAAaoF,GAE1ClH,QAAKoD,IAAIyD,EAAelhC,EAAOkhC,cAAewC,GAG9CrC,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,GAAKH,EAAc,GAGxCI,EAAkB,GAAK,EAAIH,EAAW,GACtCG,EAAkB,GAAK,EAAIH,EAAW,GACtCG,EAAkB,GAAK,EAAIH,EAAW,GAItC,IAAIzpD,EAAImpD,EAAM,GACVl7B,EAAIk7B,EAAM,GACVlG,EAAIkG,EAAM,GACdI,EAAc,GAAK9E,EAAY,GAAKzkD,EAAIykD,EAAY,GAAKx2B,EAAIw2B,EAAY,GAAKxB,EAAIwB,EAAY,IAC9F8E,EAAc,GAAK9E,EAAY,GAAKzkD,EAAIykD,EAAY,GAAKx2B,EAAIw2B,EAAY,GAAKxB,EAAIwB,EAAY,IAC9F8E,EAAc,GAAK9E,EAAY,GAAKzkD,EAAIykD,EAAY,GAAKx2B,EAAIw2B,EAAY,IAAMxB,EAAIwB,EAAY,IAG/FiF,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,IAAMH,EAAc,GACzCG,EAAqB,IAAMH,EAAc,GAU3C+B,eAAeF,GACb,IAAIpkD,EAAWhL,KAAKgL,SAEpB,IAAK,IAAI/D,EAAI,EAAGU,EAAIqD,EAASzP,OAAQ0L,EAAIU,EAAGV,IAC1C+D,EAAS/D,GAAGoY,OAAO+vC,GAUvBa,aAAaznB,KAKf,MAAM2nB,GAAmB,GCxtBzB,IAAIC,GAAU,IAAInyD,aAAa,GAWhB,MAAMoyD,GAInBziD,YAAY0iD,GACV,IAAIlS,EAASkS,EAAOlS,OAGpBp+C,KAAKswD,OAASA,EAEdtwD,KAAKmrC,OAAS,IAAI7C,GAElBtoC,KAAKuwD,UAAY,GAEjBvwD,KAAKwwD,YAAc,IAAI7pB,IAEvB3mC,KAAKywD,WAAa,GAElBzwD,KAAK0wD,aAAe,IAAI/pB,IAExB3mC,KAAKnG,KAAO,IAAI01D,GAEhBvvD,KAAK2wD,UAAW,EAGhB3wD,KAAK4wD,kBAAoB,EAEzB5wD,KAAK6wD,kBAAoB,EAEzB7wD,KAAK8wD,gBAAkB,EAEvB9wD,KAAK+wD,YAAc,EAGnB/wD,KAAKgxD,cAAe,EAEpBhxD,KAAKixD,aAAe,KAEpBjxD,KAAKnG,KAAKg1D,0BAA0B7uD,MACpCA,KAAKnG,KAAKo0D,UAAW,EAGrBjuD,KAAKmrC,OAAO6b,SAAS,CAAC,EAAG,EAAG5I,EAAOpuB,MAAOouB,EAAO7xB,SACjDvsB,KAAKmrC,OAAOme,YAAY/iD,KAAK2qD,GAAK,EAAG9S,EAAOpuB,MAAQouB,EAAO7xB,OAAQ,EAAG,KAUxEvqB,oBAWE,OAVKhC,KAAKixD,eACRjxD,KAAKixD,aAAe,IAAIE,cAGM,cAA5BnxD,KAAKixD,aAAa1hD,aACdvP,KAAKixD,aAAaG,SAG1BpxD,KAAKgxD,aAA2C,YAA5BhxD,KAAKixD,aAAa1hD,MAE/BvP,KAAKgxD,aAMdK,eACMrxD,KAAKixD,cACPjxD,KAAKixD,aAAaK,UAGpBtxD,KAAKgxD,cAAe,EAUtBO,YAAY5nD,GACV,IAAI6mD,EAAcxwD,KAAKwwD,YAEvB,OAAKA,EAAY53B,IAAIjvB,KACnB6mD,EAAY3pB,IAAIl9B,GAChB3J,KAAKuwD,UAAUtsD,KAAK0F,GAEhBA,EAASylD,OACXzlD,EAASylD,MAAMoC,eAAe7nD,GAGhCA,EAAS8nD,UAAUC,aAAa/nD,EAAU3J,MAC1C2J,EAASylD,MAAQpvD,KAEZ2J,EAAS2iB,QACZ3iB,EAASilD,UAAU5uD,KAAKnG,MAG1BmG,KAAK2xD,QAAQhoD,EAAS8nD,YAEf,GAWXE,QAAQF,GACN,IAAIf,EAAe1wD,KAAK0wD,aAEnBA,EAAa93B,IAAI64B,KACpBf,EAAa7pB,IAAI4qB,GACjBzxD,KAAKywD,WAAWxsD,KAAKwtD,IAUzBD,eAAe7nD,GACb,GAAI3J,KAAKwwD,YAAY33B,OAAOlvB,GAAW,CACrC,IAAI4mD,EAAYvwD,KAAKuwD,UAYrB,OAXAA,EAAU3xC,OAAO2xC,EAAU5xC,QAAQhV,GAAW,GAE9CA,EAAS8nD,UAAUC,aAAa/nD,EAAU,MAC1CA,EAASylD,MAAQ,KAEbzlD,EAAS2iB,SAAWtsB,KAAKnG,MAC3B8P,EAASilD,UAAU,MAGrB5uD,KAAK4xD,WAAWjoD,EAAS8nD,YAElB,EAGT,OAAO,EAQTG,WAAWH,GACT,GAAIzxD,KAAK0wD,aAAa73B,OAAO44B,GAAY,CACvC,IAAIhB,EAAazwD,KAAKywD,WACtBA,EAAW7xC,OAAO6xC,EAAW9xC,QAAQ8yC,GAAY,IAOrDI,QACE7xD,KAAKuwD,UAAUh1D,OAAS,EACxByE,KAAKwwD,YAAYqB,QACjB7xD,KAAKywD,WAAWl1D,OAAS,EACzByE,KAAK0wD,aAAamB,QASpBC,SACE,QAAI9xD,KAAKswD,QACAtwD,KAAKswD,OAAOyB,YAAY/xD,MAUnCqf,SACE,GAAIrf,KAAK2wD,SAAU,CAEjB3wD,KAAKnG,KAAKy1D,eAAetvD,MAEzBA,KAAK4wD,kBAAoB,EACzB5wD,KAAK6wD,kBAAoB,EACzB7wD,KAAK8wD,gBAAkB,EACvB9wD,KAAK+wD,YAAc,EAGnB,IAAK,IAAIU,KAAazxD,KAAKywD,WACzBgB,EAAUpyC,OAAOrf,MAEjBA,KAAK4wD,mBAAqBa,EAAUb,kBACpC5wD,KAAK6wD,mBAAqBY,EAAUZ,kBACpC7wD,KAAK8wD,iBAAmBW,EAAUX,gBAClC9wD,KAAK+wD,aAAeU,EAAUV,YAGhC,GAAI/wD,KAAKixD,aAAc,CACrB,IAAKjtD,EAAGiuB,EAAGg1B,GAAKjnD,KAAKmrC,OAAOvvC,SAE5BoE,KAAKixD,aAAae,SAASC,aAAajuD,GAAIiuB,GAAIg1B,GAGlDjnD,KAAKmrC,OAAO9rB,UAWhB6yC,UAAUvoD,GACR,IACIwoD,EADQxoD,EAASyoD,MACFD,OAInB,GAAIA,EAAQ,CACV,IAAI5F,EAAS4F,EAAO5F,OAChB3wD,EAAW+N,EAAS4jD,cAMxB,OAJA6C,GAAQ,GAAKx0D,EAAS,GAAK2wD,EAAO,GAClC6D,GAAQ,GAAKx0D,EAAS,GAAK2wD,EAAO,GAClC6D,GAAQ,GAAKx0D,EAAS,GAAK2wD,EAAO,GAE3BvsD,KAAKmrC,OAAOmhB,WAAW8D,GAAS+B,EAAO3F,QACzC,CACL,IAAI7D,EAAwB3oD,KAAKmrC,OAAOwd,sBAIxC,OADAxC,QAAKe,cAAckJ,GAASzmD,EAAS4jD,cAAe5E,GAChDyH,GAAQ,KAAO,GAAKA,GAAQ,IAAM,GAAKA,GAAQ,KAAO,GAAKA,GAAQ,IAAM,GAAKA,GAAQ,KAAO,GAAKA,GAAQ,IAAM,GAYxHiC,eACE,GAAIryD,KAAK2wD,SAAU,CACjB3wD,KAAKgnD,WAEL,IAAK,IAAIyK,KAAazxD,KAAKywD,WACzBgB,EAAUY,aAAaryD,OAS7BsyD,oBACE,GAAItyD,KAAK2wD,SAAU,CACjB3wD,KAAKgnD,WAEL,IAAK,IAAIyK,KAAazxD,KAAKywD,WACzBgB,EAAUa,kBAAkBtyD,OAQlCgnD,WACE,IAAIA,EAAWhnD,KAAKmrC,OAAO0c,KAE3B7nD,KAAKswD,OAAO5Q,GAAGsH,SAASA,EAAS,GAAIA,EAAS,GAAIA,EAAS,GAAIA,EAAS,IAM1EuL,sBACE,IAAK,IAAI5oD,KAAY3J,KAAKuwD,UACxB5mD,EAAS4oD,uBCnTA,MAAMC,WAAiBzM,KAIpCn4C,YAAW7B,GAAkE,IAAjEukD,OAAEA,EAAMmC,QAAEA,EAAO1Q,UAAEA,EAAS2Q,WAAEA,EAAUC,SAAEA,EAAW,GAAEvzD,KAAEA,GAAM2M,EACzE+B,QAGA9N,KAAKswD,OAASA,EAEdtwD,KAAKyyD,QAAUA,GAAW,KAE1BzyD,KAAK+hD,UAAYA,GAAa,GAE9B/hD,KAAK0yD,WAAaA,GAAc,KAEhC1yD,KAAK2yD,SAAWA,EAEhB3yD,KAAKpD,IAAK,EAEVoD,KAAK2R,QAAS,EAEd3R,KAAKZ,KAAOA,EAIZY,KAAK4yD,gBAAgB,GAUvBC,SAASn6D,GACPsH,KAAK2R,QAAS,EAGd,IACE3R,KAAK0xB,KAAKh5B,GAEVsH,KAAKpD,IAAK,EAEVoD,KAAK8yD,WAEL9yD,KAAKimD,KAAK,OAAQjmD,MAClBA,KAAKimD,KAAK,UAAWjmD,MACrB,MAAOlB,GACPkB,KAAK3C,MAAM,cAAeyB,IAO9B4yB,KAAKh5B,IAULo5D,SACE,OAAO9xD,KAAKswD,OAAOyC,OAAO/yD,MAM5B8yD,YAWAz1D,MAAMA,EAAOyC,GACXE,KAAK2R,QAAS,EAEdzU,QAAQuM,KAAK,uBAAwBzJ,KAAKZ,KAAMY,KAAK2yD,UAErD3yD,KAAKimD,KAAK,UAAWjmD,MAQvBgzD,aACE,OAAO,IAAI55D,QAAQ,CAACC,EAASC,KACvB0G,KAAK2R,OACPtY,EAAQ2G,MAERA,KAAKizD,KAAK,UAAW,IAAM55D,EAAQ2G,UCzG5B,MAAM81C,WAAgB0c,GAInC5kD,YAAYslD,GACVplD,MAAMolD,GAGNlzD,KAAKgwB,MAAQ,EAEbhwB,KAAKusB,OAAS,EAEdvsB,KAAKmzD,OAAQ,EAEbnzD,KAAKozD,OAAQ,EAWfC,cAAcF,EAAOC,EAAOE,EAAWC,GACrC,MAAM7T,EAAK1/C,KAAKswD,OAAO5Q,GAEvBA,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBgP,GACnDzT,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB+O,GACnD1T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoBgP,GACvD5T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB+O,GAMzDn2D,KAAKqiB,GACH,IAAI6wC,EAAStwD,KAAKswD,OACd5Q,EAAK1/C,KAAKswD,OAAO5Q,GAErB4Q,EAAOkD,MAAMxP,YAAYhkD,KAAMyf,GAE3Bzf,KAAKmzD,MACPzT,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG0E,QAEtD1E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eAGpDzzD,KAAKozD,MACP1T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG0E,QAEtD1E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,gBCnD7C,MAAMC,WAAqB5d,GAIxCpkB,KAAKh5B,GAEH,GAAIA,aAAei7D,kBAAoBj7D,aAAek7D,kBAAoBl7D,aAAem7D,mBAAqBn7D,aAAeqmD,UAAW,CACtI,IAAIW,EAAK1/C,KAAKswD,OAAO5Q,GAEfhnD,aAAeqmD,YACnBrmD,EbgFD,SAA0BgiB,GAC/B,IAAIsV,EAAQtV,EAAMsV,MACdzD,EAAS7R,EAAM6R,OAOnB,OALA6xB,GAAOpuB,MAAQA,EACfouB,GAAO7xB,OAASA,EAEhB8xB,GAAIY,UAAUvkC,EAAO,EAAG,GAEjB2jC,GAAIa,aAAa,EAAG,EAAGlvB,EAAOzD,GazFzBunC,CAAiBp7D,IAIzBsH,KAAK+zD,aAAer7D,EACpBA,EAAM+lD,GAAU/lD,GAEhB,IAAIkR,EAAK81C,EAAGqE,gBACZrE,EAAGsE,YAAYtE,EAAGuE,WAAYr6C,GAC9B5J,KAAKqzD,cAAc3T,EAAG0E,OAAQ1E,EAAG0E,OAAQ1E,EAAG6E,OAAQ7E,EAAGsU,sBACvDtU,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAG+E,KAAM/E,EAAG+E,KAAM/E,EAAGgF,cAAehsD,GACpEgnD,EAAGuU,eAAevU,EAAGuE,YAErBjkD,KAAK0+C,UAAYhmD,EACjBsH,KAAKgwB,MAAQt3B,EAAIs3B,MACjBhwB,KAAKusB,OAAS7zB,EAAI6zB,OAClBvsB,KAAK4/C,cAAgBh2C,OACZlR,aAAew7D,eACxBl0D,KAAK4/C,cAAgBlnD,IChCZ,IAAAy7D,GAAA,CACbrS,WAAY,CAAC,CAAC,OAAQ,SAAU,CAAC,OAAQ,SAAU,CAAC,OAAQ,UAC5Dpa,YAAagsB,ICCA,MAAMU,WAAwB5B,GAI3C5kD,YAAYslD,GACVplD,MAAMolD,GAGNlzD,KAAK3E,KAAO,KAMdq2B,KAAKr2B,GACH2E,KAAK3E,KAAOA,GCPD,MAAMg5D,WAAoBtO,KAKvCn4C,YAAYwwC,EAAQnnC,GAClBnJ,QAEA9N,KAgLFs0D,YAAc,EAACr4D,EAAKgkB,KAClB,IAAKhkB,EAAIH,WAAW,UAAUmkB,EAC5B,IAAK,MAAMpJ,KAAOoJ,EACZA,EAAOpJ,KACT5a,IAA6B,GAArBA,EAAI0iB,QAAQ,KAAa,IAAM,IACvC1iB,GAAO4a,EACP5a,GAAO,IACPA,GAAOgkB,EAAOpJ,IAIpB,OAAO5a,IA1LP+D,KAAKu0D,aAAe,IAAIh4C,IAGxBvc,KAAKw0D,UAAY,GAOjBx0D,KAAKy0D,UAAY,IAAO,GAGxBz0D,KAAKo+C,OAASA,EAGdp+C,KAAKwzD,MAAQ,IAAI7R,GAAMvD,EAAQnnC,GAG/BjX,KAAK0/C,GAAK1/C,KAAKwzD,MAAM9T,GAGrB1/C,KAAK00D,UAAY,IAAIn4C,IAGrBvc,KAAK20D,SAAW,IAAIhuB,IAGpB3mC,KAAK40D,OAAS,GAGd50D,KAAK60D,iBAAmB,IAAIluB,IAG5B3mC,KAAK80D,GAAG,YAAcxlD,IACpBtP,KAAK60D,iBAAiBhuB,IAAIv3B,KAI5BtP,KAAK80D,GAAG,UAAYxlD,IAClBtP,KAAK60D,iBAAiBh8B,OAAOvpB,GAGM,IAA/BtP,KAAK60D,iBAAiB9xD,MAGxByH,WAAW,IAAMxK,KAAKimD,KAAK,QAAS,KAIxCjmD,KAAK+0D,WAAY,EACjB/0D,KAAKg1D,YAAa,EAElBh1D,KAAKi1D,eAAiB,GAOtBj1D,KAAKk1D,UAAY,EAGjBl1D,KAAK4wD,kBAAoB,EAEzB5wD,KAAK6wD,kBAAoB,EAEzB7wD,KAAK8wD,gBAAkB,EAEvB9wD,KAAKm1D,eAAiB,EAEtBn1D,KAAK+wD,YAAc,EASnB/wD,KAAKo1D,aAAc,EAEnBp1D,KAAKq1D,WAAWC,IASlBD,WAAW5C,GACT,GAAIA,EAAS,CACX,IAAIkC,EAAW30D,KAAK20D,SAQpB,GALIlC,EAAQA,UACVA,EAAUA,EAAQA,UAIfkC,EAAS/7B,IAAI65B,GAEhB,OAAIA,EAAQ/gC,OAAS+gC,EAAQ/gC,KAAK1xB,OAChCA,KAAKimD,KAAK,QAASjmD,KAAM,iBAAkB,iBACpC,IAGT20D,EAAS9tB,IAAI4rB,IAEN,GAIX,OAAO,EAQT8C,WACE,IAAInG,EAAQ,IAAIiB,GAAMrwD,MAItB,OAFAA,KAAK40D,OAAO3wD,KAAKmrD,GAEVA,EAST2C,YAAY3C,GACV,IAAIwF,EAAS50D,KAAK40D,OACdtsD,EAAQssD,EAAOj2C,QAAQywC,GAE3B,OAAe,IAAX9mD,IACFssD,EAAOh2C,OAAOtW,EAAO,IAEd,GASXupD,QACE,IAAI+C,EAAS50D,KAAK40D,OAElB,IAAK,IAAI3tD,EAAI2tD,EAAOr5D,OAAQ0L,KAC1BjH,KAAK+xD,YAAY6C,EAAO3tD,IAU5BuuD,YAAY/T,GACV,IAAK,IAAIgR,KAAWzyD,KAAK20D,SACvB,IAAK,IAAIc,KAAahD,EAAQ3Q,WAC5B,GAAIL,IAAQgU,EAAU,GACpB,MAAO,CAAChD,EAASgD,EAAU,IA0BnC/jC,KAAKh5B,EAAKg6D,GACR,GAAIh6D,EAAK,CACP,IAAIqpD,EACA2T,EAEAC,EAA6B,kBAARj9D,EAAmBA,EAAM,KAG7CA,aAAei7D,kBAAsBj7D,aAAek7D,kBAAsBl7D,aAAem7D,mBAAuBn7D,aAAeqmD,WAAermD,aAAew7D,cAChKnS,EAAY,OACZ2T,GAAc,EACdhD,EAAa,OAEZh6D,EAAKqpD,EAAW2T,GAAehD,EAAWh6D,GAG7C,IAAIk9D,EAAqB51D,KAAKw1D,YAAYzT,EAAU9nC,eAGpD,GAAI27C,EAAoB,CACtB,IAAIC,EAAW71D,KAAKu0D,aAAarvD,IAAIxM,GAErC,GAAIm9D,EACF,OAAOA,EAGT,IAAIpD,EAAUmD,EAAmB,GAWjC,GATAC,EAAW,IAAIpD,EAAQ/qB,YAAY,CAAE4oB,OAAQtwD,KAAMyyD,UAAS1Q,YAAW2Q,aAAYC,SAAU+C,EAAch9D,EAAM,GAAI0G,KAAMu2D,IAE3H31D,KAAKw0D,UAAUvwD,KAAK4xD,GACpB71D,KAAKu0D,aAAa97C,IAAI/f,EAAKm9D,GAE3B71D,KAAK81D,eAAeD,GAEpBA,EAAS5P,KAAK,YAAa4P,GAEvBH,EAAa,CACf,IAAIrW,EAAWuW,EAAmB,GAGlCxW,GADA1mD,EAAMsH,KAAKs0D,YAAY57D,EAAK,CAAEA,IAAKi9D,IAChBtW,GAChB1iD,KAAMH,IACL,IAAInB,EAAOmB,EAASnB,KAEhBmB,EAASI,GACXi5D,EAAShD,SAASx3D,GAElBw6D,EAASx4D,MAAM,wBAKrBw4D,EAAShD,SAASn6D,GAGpB,OAAOm9D,EAIP,OAFA71D,KAAKimD,KAAK,QAASjmD,KAAM,iBAAkB,CAACtH,EAAKqpD,EAAW2T,IAErD,MAWbK,OAAOl/C,GACL,OAAO7W,KAAKu0D,aAAa37B,IAAI/hB,GAe/Bm/C,YAAY52D,EAAMigD,EAAU71C,EAAUysD,GACpC,IAAIJ,EAAW71D,KAAKu0D,aAAarvD,IAAI9F,GAErC,GAAIy2D,EACF,OAAOA,EAYT,SAASK,EAAa76D,GAChBmO,IACFnO,EAAOmO,EAASnO,cAEIjC,QAClBiC,EAAKsB,KAAMtB,GAASw6D,EAAShD,SAASx3D,IAKxCw6D,EAAShD,SAASx3D,GAqBtB,OAxCAw6D,EAAW,IAAIzB,GAAgB,CAAE9D,OAAQtwD,KAAMyyD,QAASjpD,EAAUmpD,SAAUvzD,EAAMA,KAAM62D,IAExFj2D,KAAKw0D,UAAUvwD,KAAK4xD,GACpB71D,KAAKu0D,aAAa97C,IAAIrZ,EAAMy2D,GAE5B71D,KAAK81D,eAAeD,GAEpBA,EAAS5P,KAAK,YAAa4P,GAevBz2D,aAAgB6Z,YAClBi9C,EAAa92D,GAIbggD,GADAhgD,EAAOY,KAAKs0D,YAAYl1D,EAAM,CAAEigD,SAAUA,EAAU3mD,IAAKu9D,IACrC5W,GACjB1iD,KAAMH,IACL,IAAInB,EAAOmB,EAASnB,KAEhBmB,EAASI,GACXs5D,EAAa76D,GAEbw6D,EAASx4D,MAAM,mBAMhBw4D,EAWT9C,OAAO8C,GAGL,IAAK,IAAKh/C,EAAK5H,KAAUjP,KAAKu0D,aAC5B,GAAItlD,IAAU4mD,EAIZ,OAHA71D,KAAKu0D,aAAa17B,OAAOhiB,GACzB7W,KAAKw0D,UAAU51C,OAAO5e,KAAKw0D,UAAU71C,QAAQk3C,GAAW,IAEjD,EAIX,OAAO,EAWTM,WAAWl2D,EAAMm2D,EAAQC,GACvB,IAAIv9C,EAAM9Y,KAAK00D,UAMf,OAJK57C,EAAI8f,IAAI34B,IACX6Y,EAAIL,IAAIxY,EAAMD,KAAKwzD,MAAM5O,oBAAoBwR,EAAQC,IAGhDv9C,EAAI5T,IAAIjF,GAWjBq2D,iBAAiBr2D,EAAM46C,GACrB,IAAIoa,EAAiBj1D,KAAKi1D,eAE1B,IAAKA,EAAeh1D,GAAO,CACzB,IAAIs2D,EAAe,CAAE5Q,QAAS,IAAI+N,GAAa,CAAEpD,OAAQtwD,OAASq7B,QAAS,EAAGrJ,KAAM,GAGhFg0B,EAAUhmD,KAAKgmD,UAGnBhmD,KAAKgzD,WAAWnY,GACbl+C,KAAMk+C,IACL,IAAK,IAAI8K,KAAW9K,EAElB,IAAK8K,EAAQ/oD,GAIX,YAFAopD,EAAQ3sD,UAMZ,IAAIm9D,EhBnQP,SAA4B99D,GACjC,IAAIs3B,EAAQt3B,EAAI,GAAGs3B,MACfzD,EAAS7zB,EAAI,GAAG6zB,OAChBkqC,EAAiBtY,GAAW53C,KAAKmwD,KAAKnwD,KAAKowD,KAAKj+D,EAAI6C,UACpDy2B,EAAOmsB,GAAW53C,KAAKmwD,KAAKh+D,EAAI6C,OAASk7D,IAG7CrY,GAAOpuB,MAAQA,EAAQymC,EACvBrY,GAAO7xB,OAASA,EAASyF,EAGzB,IAAK,IAAI/qB,EAAI,EAAGU,EAAIjP,EAAI6C,OAAQ0L,EAAIU,EAAGV,IACrCo3C,GAAIW,aAAatmD,EAAIuO,GAAKA,EAAIwvD,EAAkBzmC,EAAOzpB,KAAKqwD,MAAM3vD,EAAIwvD,GAAkBlqC,GAG1F,MAAO,CAACmyB,UAAWL,GAAIa,aAAa,EAAG,EAAGd,GAAOpuB,MAAOouB,GAAO7xB,QAAS8O,QAASo7B,EAAgBzkC,KAAMA,GgBoP/E6kC,CAAmBhc,EAAS/hC,IAAK6sC,GAAYA,EAAQjH,YAErE6X,EAAa5Q,QAAQkN,SAAS2D,EAAU9X,WACxC6X,EAAal7B,QAAUm7B,EAAUn7B,QACjCk7B,EAAavkC,KAAOwkC,EAAUxkC,KAG9Bg0B,EAAQ3sD,YAGZ47D,EAAeh1D,GAAQs2D,EAGzB,OAAOtB,EAAeh1D,GASxB62D,gBAAgB72D,GACd,IAAI82D,EAAQ/2D,KAAKi1D,eAAeh1D,GAEhC,OAAI82D,EACKA,EAAMpR,QAGR,KAUTK,UACE,IAAI6P,EAAW,IAAI/P,GAMnB,OAJA9lD,KAAK81D,eAAeD,GAEpBA,EAAS7P,UAEF6P,EAUT7C,WAAWwB,GACT,IAAIwC,EAAW,GAEf,IAAK,IAAInB,KAAYrB,EAEfqB,GAAYA,EAAS7C,YACvBgE,EAAS/yD,KAAK4xD,EAAS7C,cAI3B,OAAO55D,QAAQ+iB,IAAI66C,GASrBC,gBACE,OAAO,IAAI79D,QAAQ,CAACC,EAASC,KACQ,IAA/B0G,KAAK60D,iBAAiB9xD,KACxB1J,EAAQ2G,MAERA,KAAKizD,KAAK,OAAQ,IAAM55D,EAAQ2G,SAUtCk3D,SACE,OAAO,IAAI99D,QAASC,GAAY2G,KAAKo+C,OAAO8Y,OAAQ5iD,GAASjb,EAAQib,KAMvE6iD,kBACEn3D,KAAKqf,SACLrf,KAAKo3D,aACLp3D,KAAK+K,SAMPsU,SACE,IAAIu1C,EAAS50D,KAAK40D,OAElB50D,KAAK4wD,kBAAoB,EACzB5wD,KAAK6wD,kBAAoB,EACzB7wD,KAAK8wD,gBAAkB,EACvB9wD,KAAKm1D,eAAiB,EACtBn1D,KAAK+wD,YAAc,EAGnB,IAAK,IAAI9pD,EAAI,EAAGU,EAAIitD,EAAOr5D,OAAQ0L,EAAIU,EAAGV,IAAK,CAC7C,IAAImoD,EAAQwF,EAAO3tD,GAEfmoD,EAAMuB,WACRvB,EAAM/vC,SAENrf,KAAK4wD,mBAAqBxB,EAAMwB,kBAChC5wD,KAAK6wD,mBAAqBzB,EAAMyB,kBAChC7wD,KAAK8wD,iBAAmB1B,EAAM0B,gBAC9B9wD,KAAKm1D,gBAAkB,EACvBn1D,KAAK+wD,aAAe3B,EAAM2B,cAUhCqG,aACE,IAAI1X,EAAK1/C,KAAK0/C,GAGdA,EAAG2X,UAAU,GACb3X,EAAGmS,MAAMnS,EAAG4X,iBAAmB5X,EAAG6X,kBAMpCxsD,SACE/K,KAAKqyD,eACLryD,KAAKsyD,oBAMPD,eACE,IAAK,IAAIjD,KAASpvD,KAAK40D,OACrBxF,EAAMiD,eAOVC,oBACE,IAAK,IAAIlD,KAASpvD,KAAK40D,OACrBxF,EAAMkD,oBASVwD,eAAeD,GAAU,IAAA2B,EAAAx3D,KACvB,CAAC,YAAa,OAAQ,QAAS,WAAW8Y,IAAKha,GAAM+2D,EAASf,GAAGh2D,EAAG,mBAAA+N,EAAAC,UAAAvR,OAAIF,EAAI,IAAA2R,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJ5R,EAAI4R,GAAAH,UAAAG,GAAA,OAAKuqD,EAAKvR,KAAKnnD,KAAMzD,MAMnGk3D,sBACE,IAAK,IAAInD,KAASpvD,KAAK40D,OACrBxF,EAAMmD,uBC5lBG,MAAMkF,GAInB7pD,YAAYwkD,GAEVpyD,KAAKoyD,MAAQA,EAEbpyD,KAAKwwD,YAAc,IAAI7pB,IACvB3mC,KAAK03D,UAAY,IAAIn7C,IAErBvc,KAAK4wD,kBAAoB,EACzB5wD,KAAK6wD,kBAAoB,EACzB7wD,KAAK8wD,gBAAkB,EACvB9wD,KAAK+wD,YAAc,EAWrB4G,iBACE,OAAO,KAQTC,iBAAiBniC,IAUjBoiC,OAAOpiC,GACL,OAAO,EAMTq9B,WACE,IAAK,IAAInpD,KAAY3J,KAAKwwD,YACxBxwD,KAAK83D,aAAanuD,EAAUA,EAASylD,OAUzC0I,aAAanuD,EAAUylD,GACrB,GAAIpvD,KAAKoyD,MAAMx1D,IAAMwyD,EAAO,CAC1B,IAAIsI,EAAY13D,KAAK03D,UACjBr8D,EAAOq8D,EAAUxyD,IAAIkqD,GAEpB/zD,IACHA,EAAO2E,KAAK+3D,gBAAgB3I,GAE5BsI,EAAUj/C,IAAI22C,EAAO/zD,IAGvBA,EAAKk1D,UAAUtsD,KAAK0F,IAWxB4nD,YAAY5nD,GACV,IAAI6mD,EAAcxwD,KAAKwwD,YAEvB,IAAKA,EAAY53B,IAAIjvB,GAAW,CAG9B,IAAI8nD,EAAY9nD,EAAS8nD,UAWzB,OAVIA,GACFA,EAAUD,eAAe7nD,GAI3B6mD,EAAY3pB,IAAIl9B,GAChBA,EAAS8nD,UAAYzxD,KAErBA,KAAK83D,aAAanuD,EAAUA,EAASylD,QAE9B,EAGT,OAAO,EAST2I,gBAAgB3I,GACd,MAAO,CACLA,QACAqC,UAAWzxD,KACXg4D,UAAW,EACXzH,UAAW,GACX0H,QAAS,GACTC,YAAa,GAWjB1G,eAAe7nD,GACb,IAAI6mD,EAAcxwD,KAAKwwD,YAEvB,GAAIA,EAAY33B,OAAOlvB,GAAW,CAChC,IAAI+tD,EAAY13D,KAAK03D,UACjBtI,EAAQzlD,EAASylD,MAErB,GAAIA,EAAO,CACT,IAAI/zD,EAAOq8D,EAAUxyD,IAAIkqD,GACrBmB,EAAYl1D,EAAKk1D,UACjB0H,EAAU58D,EAAK48D,QAGnB1H,EAAU3xC,OAAO2xC,EAAU5xC,QAAQhV,GAAW,GAG9C,IAAIwuD,EAAgB5xD,KAAKmwD,KAAKnG,EAAUh1D,OAASyE,KAAKoyD,MAAM8C,WAGxDiD,EAAgBF,EAAQ18D,SAC1B08D,EAAQ18D,OAAS48D,GAYrB,OARAxuD,EAAS8nD,UAAY,KAGI,IAArBjB,EAAYztD,MAEd/C,KAAKoyD,MAAMR,WAAW5xD,OAGjB,EAGT,OAAO,EAST0xD,aAAa/nD,EAAUylD,GACrB,GAAIpvD,KAAKoyD,MAAMx1D,GAAI,CACjB,IAAI86D,EAAY13D,KAAK03D,UACjBU,EAAWzuD,EAASylD,MAExB,GAAIgJ,EAAU,CACZ,IAAI/8D,EAAOq8D,EAAUxyD,IAAIkzD,GACrB7H,EAAYl1D,EAAKk1D,UACjB0H,EAAU58D,EAAK48D,QAGnB1H,EAAU3xC,OAAO2xC,EAAU5xC,QAAQhV,GAAW,GAG9C,IAAIwuD,EAAgB5xD,KAAKmwD,KAAKnG,EAAUh1D,OAASyE,KAAKoyD,MAAM8C,WAGxDiD,EAAgBF,EAAQ18D,SAC1B08D,EAAQ18D,OAAS48D,GAIjB/I,GACFpvD,KAAK83D,aAAanuD,EAAUylD,IAUlCyC,SASAC,UAaAzyC,OAAO+vC,GACL,GAAIpvD,KAAKoyD,MAAMx1D,GAAI,CACjB,IAAIvB,EAAO2E,KAAK03D,UAAUxyD,IAAIkqD,GAE9B,GAAI/zD,EAAM,CACR,IAAIg9D,EAAiBh9D,EAAKk1D,UAAUh1D,OAChC08D,EAAU58D,EAAK48D,QAKnB,IAHA58D,EAAK28D,UAAY,EACjB38D,EAAK68D,YAAc,EAEZ78D,EAAK28D,UAAYK,GAClBh9D,EAAK68D,cAAgBD,EAAQ18D,SAC/B08D,EAAQ58D,EAAK68D,aAAe,IAAIl4D,KAAKoyD,MAAMK,QAAQ6F,OAAOt4D,OAG5D3E,EAAK28D,UAAYC,EAAQ58D,EAAK68D,aAAavI,KAAKt0D,GAChDA,EAAK68D,aAAe,EAGtB,OAAO78D,GAIX,OAAO,KAQTg3D,aAAajD,GACX,IAAI/zD,EAAO2E,KAAK03D,UAAUxyD,IAAIkqD,GAE1B/zD,GAAQA,EAAK28D,WACfh4D,KAAKoyD,MAAMC,aAAah3D,GAS5Bi3D,kBAAkBlD,GAChB,IAAI/zD,EAAO2E,KAAK03D,UAAUxyD,IAAIkqD,GAE1B/zD,GAAQA,EAAK28D,WACfh4D,KAAKoyD,MAAME,kBAAkBj3D,ICxRpB,MAAMk9D,WAA0Bd,GAI7C7pD,YAAYwkD,GACVtkD,MAAMskD,GAGNpyD,KAAK66C,SAAW,IAAIt+B,IAQtBo7C,iBACE,MAAO,CAAC9c,SAAU,IAAIt+B,IAAIvc,KAAK66C,WAQjC+c,iBAAiBniC,GACf,IAAIolB,EAAW76C,KAAK66C,SAEpB,IAAK,IAAKniD,EAAK8/D,KAAQ/iC,EAAKolB,SAC1BA,EAASpiC,IAAI/f,EAAK8/D,GAUtBX,OAAOpiC,GACL,IAAIolB,EAAW76C,KAAK66C,SAChB4d,EAAchjC,EAAKolB,SAEvB,GAAIA,EAASt/C,SAAWk9D,EAAYl9D,OAClC,OAAO,EAGT,IAAK,IAAK7C,EAAK8/D,KAAQC,EACrB,GAAI5d,EAAS31C,IAAIxM,KAAS8/D,EACxB,OAAO,EAIX,OAAO,GCtDI,MAAMje,WAAciY,GAIjC5kD,YAAYslD,GACVplD,MAAMolD,GAGNlzD,KAAKk1D,UAAYhC,EAAa5C,OAAO4E,UAGrCl1D,KAAKuwD,UAAY,GAGjBvwD,KAAK04D,MAAQ,GAQfnH,cACE,IAAImH,EAAQ14D,KAAK04D,MACb/uD,EAAW,IAAI3J,KAAKyyD,QAAQkG,SAAS34D,MAczC,OAZAA,KAAKuwD,UAAUtsD,KAAK0F,GAEC,IAAjB+uD,EAAMn9D,QACRyE,KAAK2xD,UAGP+G,EAAM,GAAGnH,YAAY5nD,GAEjB3J,KAAKpD,IACP+M,EAAS+nB,OAGJ/nB,EAUT0oD,aAAah3D,EAAM+zD,EAAOqC,IAW1Ba,kBAAkBj3D,EAAM+zD,EAAOqC,IAS/BE,UACE,IAAIl8B,EAAO,IAAIz1B,KAAKyyD,QAAQmG,KAAK54D,MAIjC,OAFAA,KAAK04D,MAAMz0D,KAAKwxB,GAETA,EAQTm8B,WAAWH,GACT,IAAIiH,EAAQ14D,KAAK04D,MAEjBA,EAAM95C,OAAO85C,EAAM/5C,QAAQ8yC,GAAY,GAUzCoH,YAAYlvD,EAAUmvD,GAEpB,IAAK,IAAIrjC,KAAQz1B,KAAK04D,MACpB,GAAIjjC,EAAKoiC,OAAOiB,GAEd,YADArjC,EAAK87B,YAAY5nD,GAMrB,IAAI8rB,EAAOz1B,KAAK2xD,UAEhBl8B,EAAKmiC,iBAAiBkB,GACtBrjC,EAAK87B,YAAY5nD,GAGbA,EAASylD,OACXzlD,EAASylD,MAAMuC,QAAQl8B,GAQ3Bq9B,WACE,IAAK,IAAInpD,KAAY3J,KAAKuwD,UACxB5mD,EAAS+nB,OAGX,IAAK,IAAI+D,KAAQz1B,KAAK04D,MACpBjjC,EAAKq9B,YC5HI,MAAMiG,WAAsBxe,GASzCyJ,YAAY2B,EAASlmC,EAAMgyC,GACzB,IAAInB,EAAStwD,KAAKswD,OACdzV,EAAW4W,EAAU5W,SAErBA,EAASjiB,IAAI+sB,KACfA,EAAU9K,EAAS31C,IAAIygD,IAKrBA,EACFA,EAAQvoD,KAAKqiB,GAEb6wC,EAAOkD,MAAMxP,YAAY,KAAMvkC,ICrBtB,MAAMu5C,WAAsBD,GAMzCrnC,KAAKh5B,GACH,MAAMgnD,EAAK1/C,KAAKswD,OAAO5Q,GAEvB,IAAIuZ,EAAWvgE,EAAIugE,SACfC,EAAWxgE,EAAIwgE,SAEfC,EAAezZ,EAAG0Z,eACtB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcH,GAC/BzZ,EAAG6Z,WAAW7Z,EAAG4Z,aAAcL,EAAS/iB,SAAUwJ,EAAG8Z,aAErD,IAAIC,EAAW/Z,EAAG0Z,eAClB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcG,GAC/B/Z,EAAG6Z,WAAW7Z,EAAG4Z,aAAcL,EAASS,IAAKha,EAAG8Z,aAEhD,IAAIG,EAAaja,EAAG0Z,eACpB1Z,EAAG2Z,WAAW3Z,EAAGka,qBAAsBD,GACvCja,EAAG6Z,WAAW7Z,EAAGka,qBAAsBX,EAAS3iB,MAAOoJ,EAAG8Z,aAE1D,IAAIK,EAAana,EAAG0Z,eACpB1Z,EAAG2Z,WAAW3Z,EAAGka,qBAAsBC,GACvCna,EAAG6Z,WAAW7Z,EAAGka,qBAAsBX,EAASa,MAAOpa,EAAG8Z,aAE1Dx5D,KAAK+5D,eAAiBd,EAASc,eAE/B/5D,KAAKg6D,YAAcf,EAAS/iB,SAC5Bl2C,KAAKi6D,QAAUhB,EAASS,IACxB15D,KAAKk6D,UAAYjB,EAAS3iB,MAC1Bt2C,KAAKm6D,UAAYlB,EAASa,MAC1B95D,KAAKm5D,aAAeA,EACpBn5D,KAAKy5D,SAAWA,EAChBz5D,KAAK25D,WAAaA,EAClB35D,KAAK65D,WAAaA,EAElB,IAAIO,EAAkBnB,EAAS3iB,MAAM+jB,kBAGnCr6D,KAAKs6D,cADiB,IAApBF,EACmB1a,EAAGgF,cACK,IAApB0V,EACY1a,EAAG6a,eAEH7a,EAAG8a,aAG1BJ,EAAkBnB,EAASa,MAAMO,kBAG/Br6D,KAAKy6D,cADiB,IAApBL,EACmB1a,EAAGgF,cACK,IAApB0V,EACY1a,EAAG6a,eAEH7a,EAAG8a,aAG1Bx6D,KAAK2lD,QAAUuT,EAASvT,QAExB3lD,KAAK06D,SAAWxB,EAASwB,WAAY,EACrC16D,KAAK26D,YAAczB,EAAS0B,aAAc,EAC1C56D,KAAK46D,WAAa1B,EAAS0B,aAAc,EAEzC56D,KAAK66D,QAAU3B,EAAS2B,SAAW,IAAI58D,aAAa,CAAC,EAAG,IACxD+B,KAAK86D,SAAW5B,EAAS4B,UAAY,IAAI78D,aAAa,GAEtD+B,KAAK+6D,YAAc7B,EAAS6B,aAAe,IAAI98D,aAAa,CAAC,IAAK,IAAK,IAAK,MAC5E+B,KAAKg7D,UAAY9B,EAAS8B,WAAa,IAAI/8D,aAAa,CAAC,IAAK,IAAK,IAAK,MAExE+B,KAAKi7D,WAAa,EAEd/B,EAAS+B,WAAa,IACxBj7D,KAAKi7D,WAAa/B,EAAS+B,YAG7Bj7D,KAAKk7D,MAAQhC,EAASgC,QAAS,EAC/Bl7D,KAAKm7D,UAAYjC,EAASiC,YAAa,EAEnCn7D,KAAKm7D,UACPn7D,KAAKo7D,aAAc,EAEnBp7D,KAAKq7D,QAAS,EAUlBtwD,OAAOuwD,EAAQlM,EAAOqC,GACpB,IAAI+B,EAAQxzD,KAAKswD,OAAOkD,MACpB9T,EAAK1/C,KAAKswD,OAAO5Q,GACjB2C,EAAkBmR,EAAM1R,WAAWO,gBACnCkZ,EAASv7D,KAAKswD,OAAOoE,UAAUxvD,IAAI,qBACnCu7C,EAAW8a,EAAO9a,SAClBC,EAAU6a,EAAO7a,QAErB8S,EAAMjO,iBAAiBgW,GAEvB7b,EAAG8b,iBAAiB/a,EAASgb,OAAO,EAAOrM,EAAMjkB,OAAOwd,uBAGxDjJ,EAAGkG,cAAclG,EAAGgc,WACpBhc,EAAGsE,YAAYtE,EAAGuE,WAAYqX,EAAOK,aACrCjc,EAAGkc,UAAUnb,EAASob,UAAW,IACjCnc,EAAGoc,UAAUrb,EAASsb,aAAcT,EAAOU,YAC3Ctc,EAAGoc,UAAUrb,EAASwb,UAAWX,EAAOY,SAGxC,IAAIC,EAAmBzb,EAAQ0b,aAC/B1c,EAAG2Z,WAAW3Z,EAAG4Z,aAAcgC,EAAOe,kBACtC3c,EAAG4c,oBAAoBH,EAAkB,EAAGzc,EAAG6a,gBAAgB,EAAO,EAAG,GACzElY,EAAgBO,yBAAyBuZ,EAAkB,GAG3Dzc,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKm5D,cACpCzZ,EAAG4c,oBAAoB5b,EAAQ6b,WAAY,EAAG7c,EAAG8c,OAAO,EAAO,GAAI,GAGnE9c,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKy5D,UACpC/Z,EAAG4c,oBAAoB5b,EAAQ+b,KAAM,EAAG/c,EAAG8c,OAAO,EAAO,EAAG,GAExDx8D,KAAK06D,SACPhb,EAAGgd,QAAQhd,EAAGid,WAEdjd,EAAG6D,OAAO7D,EAAGid,WAGX38D,KAAK26D,YACPjb,EAAGgd,QAAQhd,EAAG8D,YAEd9D,EAAG6D,OAAO7D,EAAG8D,YAGXxjD,KAAK46D,WACPlb,EAAG2X,UAAU,GAEb3X,EAAG2X,UAAU,GAGXr3D,KAAKm7D,WACPzb,EAAG6D,OAAO7D,EAAGkd,OACbld,EAAGmd,UAAUnd,EAAGod,UAAWpd,EAAGqd,sBAE9Brd,EAAGgd,QAAQhd,EAAGkd,OAGhBld,EAAGkc,UAAUnb,EAASuc,UAAW,GAEjC,IAAIC,EAAcvc,EAAQwc,QAG1B,GAFA7a,EAAgBO,yBAAyBqa,EAAa,GAE9B,IAApBj9D,KAAKi7D,YAAwC,IAApBj7D,KAAKi7D,WAAkB,CAClD,IAAItV,EAAU8L,EAAU5W,SAAS31C,IAAI,OAASlF,KAAK2lD,QAEnD6N,EAAMxP,YAAY2B,EAAS,GAE3B,IAAIwX,EAAa1c,EAAS2c,aACtBzX,EACFjG,EAAGoc,UAAUqB,EAAY,GAEzBzd,EAAGoc,UAAUqB,EAAY,GAG3Bzd,EAAGoc,UAAUrb,EAAS4c,SAAU,GAChC3d,EAAG4d,WAAW7c,EAAS8c,UAAWv9D,KAAK66D,SACvCnb,EAAG4d,WAAW7c,EAAS+c,WAAYx9D,KAAK86D,UACxCpb,EAAGoc,UAAUrb,EAASgd,QAASz9D,KAAKk7D,OACpCxb,EAAGoc,UAAUrb,EAASid,WAAY19D,KAAKw1C,OAGvCkK,EAAG2Z,WAAW3Z,EAAG4Z,aAAcgC,EAAOqC,mBACtCje,EAAG4c,oBAAoBW,EAAa,EAAGvd,EAAGgF,eAAe,EAAM,EAAG,GAElEhF,EAAG2Z,WAAW3Z,EAAGka,qBAAsB55D,KAAK25D,YAC5CtX,EAAgBK,2BAA2BhD,EAAGke,UAAW59D,KAAKk6D,UAAU3+D,OAAQyE,KAAKs6D,cAAe,EAAGgB,EAAOtrD,OAGxF,IAApBhQ,KAAKi7D,YAAwC,IAApBj7D,KAAKi7D,aAChCvb,EAAGoc,UAAUrb,EAAS4c,SAAU,GAGhC3d,EAAG2Z,WAAW3Z,EAAG4Z,aAAcgC,EAAOuC,iBACtCne,EAAG4c,oBAAoBW,EAAa,EAAGvd,EAAGgF,eAAe,EAAM,EAAG,GAElEhF,EAAG2Z,WAAW3Z,EAAGka,qBAAsB55D,KAAK65D,YAC5CxX,EAAgBK,2BAA2BhD,EAAGoe,MAAO99D,KAAKm6D,UAAU5+D,OAAQyE,KAAKy6D,cAAe,EAAGa,EAAOtrD,QAI5GqyC,EAAgBO,yBAAyBuZ,EAAkB,GAC3D9Z,EAAgBO,yBAAyBqa,EAAa,GAMxDc,cAAc1iE,GACZ,IAAI+zD,EAAQ/zD,EAAK+zD,MACb6I,EAAU58D,EAAK48D,QACfxG,EAAYp2D,EAAKo2D,UAErB,IAAK,IAAIxqD,EAAI,EAAGU,EAAItM,EAAK68D,YAAajxD,EAAIU,EAAGV,IAC3CjH,KAAK+K,OAAOktD,EAAQhxD,GAAImoD,EAAOqC,GASnCY,aAAah3D,GACP2E,KAAKq7D,QACPr7D,KAAK+9D,cAAc1iE,GASvBi3D,kBAAkBj3D,GACZ2E,KAAKo7D,aACPp7D,KAAK+9D,cAAc1iE,ICzOV,MAAMi9D,GAInB1qD,YAAY6jD,GACV,IAAIW,EAAQX,EAAUW,MAClB1S,EAAK0S,EAAM9B,OAAO5Q,GAGtB1/C,KAAKyxD,UAAYA,EAEjBzxD,KAAKoyD,MAAQA,EAEbpyD,KAAKgQ,MAAQ,EAMbhQ,KAAKq8D,iBAAmB3c,EAAG0Z,eAC3B1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKq8D,kBACpC3c,EAAG6Z,WAAW7Z,EAAG4Z,aAAc,IAAIx7D,YAAYs0D,EAAM8C,WAAWp8C,IAAI,CAACklD,EAAc11D,EAAOiQ,IAAUjQ,GAAQo3C,EAAG8Z,aAWjH7J,KAAKt0D,EAAM4iE,EAAc7O,GAGvB,OAAO/zD,EAAKk1D,UAAUh1D,QCjCX,MAAM2iE,WAAuB5F,GAI1C1qD,YAAY6jD,GACV3jD,MAAM2jD,GAEN,MAAM/R,EAAK1/C,KAAKoyD,MAAM9B,OAAO5Q,GAG7B1/C,KAAK0/C,GAAKA,EAEV,IACIwV,EADQl1D,KAAKoyD,MACK8C,UAEtBl1D,KAAKm+D,sBAAwBC,GAC7Bp+D,KAAKq+D,UAAY,IAAIpgE,aAAa+B,KAAKm+D,sBAAwBjJ,GAE/Dl1D,KAAK27D,YAAcjc,EAAGqE,gBACtB/jD,KAAKs+D,iBAAmBF,EACxBp+D,KAAKu+D,kBAAoBrJ,EACzBl1D,KAAKg8D,WAAa,EAAIh8D,KAAKs+D,iBAC3Bt+D,KAAKk8D,QAAU,EAAIl8D,KAAKu+D,kBAExB7e,EAAGkG,cAAclG,EAAGgc,WACpBhc,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAK27D,aACnCjc,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG8e,SAC1D9e,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG8e,SAC1D9e,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAG+e,QAASz+D,KAAKs+D,iBAAkBt+D,KAAKu+D,kBAAmB,EAAG7e,EAAG+E,KAAM/E,EAAG8c,MAAOx8D,KAAKq+D,WAGtHr+D,KAAK0+D,iBAAmB,IAAI1jE,WAAW,EAAIk6D,GAC3Cl1D,KAAK29D,kBAAoBje,EAAG0Z,eAC5B1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAK29D,mBACpCje,EAAG6Z,WAAW7Z,EAAG4Z,aAAct5D,KAAK0+D,iBAAkBhf,EAAGif,cAGzD3+D,KAAK4+D,eAAiB,IAAI5jE,WAAW,EAAIk6D,GACzCl1D,KAAK69D,gBAAkBne,EAAG0Z,eAC1B1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAK69D,iBACpCne,EAAG6Z,WAAW7Z,EAAG4Z,aAAct5D,KAAK4+D,eAAgBlf,EAAGif,cASzDhP,KAAKt0D,GACH,IAAI28D,EAAY38D,EAAK28D,UACjB5F,EAAQpyD,KAAKoyD,MACb1S,EAAK0S,EAAM9B,OAAO5Q,GAClBwV,EAAY9C,EAAM8C,UAClBmJ,EAAYr+D,KAAKq+D,UACjBK,EAAmB1+D,KAAK0+D,iBACxBE,EAAiB5+D,KAAK4+D,eACtBC,EAAiB,EACjBtO,EAAYl1D,EAAKk1D,UAErB,IAAK,IAAI5oD,EAAI4oD,EAAUh1D,OAAQy8D,EAAYrwD,GAAKk3D,EAAiB3J,EAAW8C,IAAa,CACvF,IAAIruD,EAAW4mD,EAAUyH,GAEzB,GAAIruD,EAASgnD,WAAahnD,EAASm1D,OAAQ,CACzC,IAAIrW,EAAc9+C,EAAS8+C,YACvBsS,EAAcpxD,EAASoxD,YACvBC,EAAYrxD,EAASqxD,UACrBrlC,EAA0B,GAAjBkpC,EAEbR,EAAU1oC,GAAU8yB,EAAY,GAChC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,GAAK8yB,EAAY,GACpC4V,EAAU1oC,EAAS,IAAM8yB,EAAY,IACrC4V,EAAU1oC,EAAS,IAAM8yB,EAAY,IACrC4V,EAAU1oC,EAAS,IAAM8yB,EAAY,IACrC4V,EAAU1oC,EAAS,IAAM8yB,EAAY,IACrC4V,EAAU1oC,EAAS,IAAM8yB,EAAY,IACrC4V,EAAU1oC,EAAS,IAAM8yB,EAAY,IAGrCiW,EAAkC,EAAjBG,GAAsB9D,EAAY,GACnD2D,EAAkC,EAAjBG,EAAqB,GAAK9D,EAAY,GACvD2D,EAAkC,EAAjBG,EAAqB,GAAK9D,EAAY,GACvD2D,EAAkC,EAAjBG,EAAqB,GAAK9D,EAAY,GAGvD6D,EAAgC,EAAjBC,GAAsB7D,EAAU,GAC/C4D,EAAgC,EAAjBC,EAAqB,GAAK7D,EAAU,GACnD4D,EAAgC,EAAjBC,EAAqB,GAAK7D,EAAU,GACnD4D,EAAgC,EAAjBC,EAAqB,GAAK7D,EAAU,GAEnD6D,GAAkB,GAkBtB,OAdA7+D,KAAKgQ,MAAQ6uD,EAETA,IACFnf,EAAGkG,cAAclG,EAAGgc,WACpBhc,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAK27D,aACnCjc,EAAGqf,cAAcrf,EAAGuE,WAAY,EAAG,EAAG,EAAGjkD,KAAKs+D,iBAAkBO,EAAgBnf,EAAG+E,KAAM/E,EAAG8c,MAAO6B,GAEnG3e,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAK29D,mBACpCje,EAAGsf,cAActf,EAAG4Z,aAAc,EAAGt5D,KAAK0+D,kBAE1Chf,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAK69D,iBACpCne,EAAGsf,cAActf,EAAG4Z,aAAc,EAAGt5D,KAAK4+D,iBAGrC5G,GCtHI,MAAMiH,WAAsBzP,GAIzC5hD,YAAYwkD,GACVtkD,QAGA9N,KAAKyxD,UAAY,KAEjBzxD,KAAKoyD,MAAQA,EAEbpyD,KAAKk/D,QAAS,EAEdl/D,KAAK2wD,UAAW,EAEhB3wD,KAAK8+D,QAAS,EAMd9+D,KAAK+0D,WAAY,EAEjB/0D,KAAKmyD,OAAS,KAOhB/jD,OACEpO,KAAK2wD,UAAW,EAMlB9hD,OACE7O,KAAK2wD,UAAW,EAQlBwO,QACE,OAAOn/D,KAAK2wD,SAQdyO,SACE,OAAQp/D,KAAK2wD,SASfmB,SACE,QAAI9xD,KAAKovD,OACApvD,KAAKovD,MAAMoC,eAAexxD,MAWrC0xB,KAAK32B,IAQLskE,gBAQAC,oBAOA/M,uBAUAlD,aAAaD,GACX,IAAKpvD,KAAKk/D,QAAUl/D,KAAKoyD,MAAMx1D,KAC7BoD,KAAKq/D,eAEDr/D,KAAK2wD,UAAU,CACjB,IAAItmB,EAAU+kB,EAAM8C,UAAUlyD,OAASA,KAAK+0D,WAAa/0D,KAAKoyD,MAAM9B,OAAOyE,UAE3E/0D,KAAK8+D,QAAUz0B,EAEXA,GACFrqC,KAAKs/D,oBAabC,SAASnQ,GACP,OAAOA,EAAMmC,YAAYvxD,OCvId,MAAMw/D,WAA8BP,GAOjDQ,WAAWzxD,EAAO23C,GAChB,IAAIlwB,EAAOz1B,KAAKyxD,UAAUkG,iBAE1BliC,EAAKolB,SAASpiC,IAAIzK,EAAO23C,GAEzB3lD,KAAKoyD,MAAMyG,YAAY74D,KAAMy1B,ICblB,MAAMiqC,WAA8BF,GAIjD5xD,YAAYwkD,GACVtkD,MAAMskD,GAENpyD,KAAK+6D,YAAc,IAAI//D,WAAW,GAClCgF,KAAKg7D,UAAY,IAAIhgE,WAAW,GAMlC02B,OAEE1xB,KAAK2/D,eAAe3/D,KAAKoyD,MAAM2I,aAC/B/6D,KAAK4/D,aAAa5/D,KAAKoyD,MAAM4I,WAO/B2E,eAAervC,GAGb,OAFAtwB,KAAK+6D,YAAYtiD,IAAI6X,GAEdtwB,KAOT4/D,aAAatvC,GAGX,OAFAtwB,KAAKg7D,UAAUviD,IAAI6X,GAEZtwB,MCzCI,IAAA2gD,GAEH,0CAFGA,GAMF,62BANEA,GA2BF,slBA3BEA,GAsDC,geCrDDkf,GAAA,CACbC,GAAE,SAAAhuD,OACE6uC,GAAkB,UAAA7uC,OAClB6uC,GAAmB,mcAoBvBof,GAAE,keCnBWC,GAAA,CACbtuC,KAAK4+B,GACUA,EAAO6F,WAAW,oBAAqBxV,GAAQmf,GAAInf,GAAQof,IAG1DnjE,GAGhBklD,WAAY,CAAC,CAAC,SACdpa,YAAa6S,GACbqe,KCXa,cAAwBL,GAIrCl5C,OAAO+vC,GACL,IAAI/zD,EAAOyS,MAAMuR,OAAO+vC,GAExB,GAAI/zD,EAAM,CACR,IAAI4kE,EAAwC,IAA1BjgE,KAAKoyD,MAAM6I,WAAmB,EAAI,EAChDhD,EAAU58D,EAAK48D,QACfrH,EAAoB,EACpBE,EAAkB,EAClBC,EAAc,EAElB,IAAK,IAAI9pD,EAAI,EAAGU,EAAItM,EAAK68D,YAAajxD,EAAIU,EAAGV,IAC3C2pD,GAAqBqH,EAAQhxD,GAAG+I,MAChC8gD,GAAmB,EACnBC,GAAekP,EAGjBjgE,KAAK4wD,kBAAoBA,EACzB5wD,KAAK8wD,gBAAkBA,EACvB9wD,KAAK+wD,YAAcA,KDVvBuH,OAAQA,GACRK,SAAUsG,IEbGiB,GAAA,CACbzN,WACAlY,SACA0kB,iBACA3G,WCCF,MAAM6H,GAAuBC,IAAiB,MAQ5CxyD,YAAYyyD,EAAIx8B,EAAOshB,EAAKmb,EAAWC,GACrC,IAAIC,EAASH,EAAGG,OAEhBxgE,KAAKqgE,GAAKA,EACVrgE,KAAK6jC,MAAQA,EACb7jC,KAAKmlD,IAAMA,EACXnlD,KAAKsgE,UAAY,GASbC,GAAoBD,EAAU,GAAG1wB,MAAQuV,GAC3CnlD,KAAKsgE,UAAUr8D,KAAKq8D,EAAU,IAIhC,IAAK,IAAIr5D,EAAI,EAAGU,EAAI24D,EAAU/kE,OAAQ0L,EAAIU,EAAGV,IAAK,CAChD,IAAIw5D,EAAWH,EAAUr5D,GACrB2oC,EAAQ6wB,EAAS7wB,MAEjBA,GAAS/L,GAAS+L,GAASuV,GAC7BnlD,KAAKsgE,UAAUr8D,KAAKw8D,GAIxB,IAAIC,EAAgB1gE,KAAKsgE,UAAU/kE,OAEnC,GAAsB,IAAlBmlE,EAEF1gE,KAAK2gE,UAAW,EAChB3gE,KAAKsgE,UAAUr8D,KAAK,CAAC2rC,MAAO/L,EAAO50B,MAAOuxD,EAAQ3wB,MAAO2wB,EAAQ1wB,OAAQ0wB,SACpE,GAAsB,IAAlBE,EAET1gE,KAAK2gE,UAAW,MACX,CAEL,IAAIA,GAAW,EACXC,EAAa5gE,KAAKsgE,UAAU,GAAGrxD,MAEnC,IAAK,IAAIhI,EAAI,EAAGU,EAAI3H,KAAKsgE,UAAU/kE,OAAQ0L,EAAIU,EAAGV,IAAK,CACrD,IACIgI,EADWjP,KAAKsgE,UAAUr5D,GACTgI,MAErB,GAAIA,EAAM1T,OAAS,GACjB,IAAK,IAAIyM,EAAI,EAAGzC,EAAI0J,EAAM1T,OAAQyM,EAAIzC,EAAGyC,IACvC,GAAI44D,EAAW54D,KAAOiH,EAAMjH,GAAI,CAC9B24D,GAAW,EACX,YAIJ,GAAI1xD,IAAU2xD,EAAY,CACxBD,GAAW,EACX,OAKFA,EACF3gE,KAAK2gE,UAAW,GAEhB3gE,KAAK2gE,UAAW,EAGZ3gE,KAAKsgE,UAAU,GAAG1wB,QAAU/L,GAC9B7jC,KAAKsgE,UAAU9hE,QAAQ,CAACoxC,MAAO/L,EAAO50B,MAAOuxD,EAAQ3wB,MAAO2wB,EAAQ1wB,OAAQ0wB,IAI1ExgE,KAAKsgE,UAAUtgE,KAAKsgE,UAAU/kE,OAAS,GAAGq0C,QAAUuV,GACtDnlD,KAAKsgE,UAAUr8D,KAAK,CAAC2rC,MAAOuV,EAAKl2C,MAAOjP,KAAKsgE,UAAU,GAAGrxD,MAAO4gC,MAAO7vC,KAAKsgE,UAAU,GAAGxwB,OAAQA,OAAQ9vC,KAAKsgE,UAAU,GAAGzwB,UAWpIgxB,SAAS5jE,EAAK2yC,GACZ,IAAI0wB,EAAYtgE,KAAKsgE,UACjBh4D,EAAQtI,KAAK8gE,YAAYlxB,GACzBr0C,EAAS+kE,EAAU/kE,OAEvB,IAAe,IAAX+M,EAGF,OAFArL,EAAIwb,IAAI6nD,EAAU,GAAGrxD,OAEd,EACF,GAAI3G,IAAU/M,EAGnB,OAFA0B,EAAIwb,IAAI6nD,EAAU/kE,EAAS,GAAG0T,OAEvB1T,EAAS,EACX,CACL,IAAIsoC,EAAQy8B,EAAUh4D,EAAQ,GAC1B68C,EAAMmb,EAAUh4D,GAChBlB,GjChFYpD,GiCgFD4rC,EAAQ/L,EAAM+L,QAAUuV,EAAIvV,MAAQ/L,EAAM+L,OjChFtCmxB,EiCgF8C,EjChFtCC,EiCgFyC,EjC/EjEz6D,KAAKC,IAAID,KAAKG,IAAI1C,EAAG+8D,GAASC,IiCmFjC,OAFAZ,EAAanjE,EAAK4mC,EAAM50B,MAAO40B,EAAMiM,OAAQqV,EAAItV,MAAOsV,EAAIl2C,MAAO7H,EAAGpH,KAAKqgE,GAAGtwB,mBAEvEznC,EjCpFN,IAAetE,EAAG+8D,EAAQC,EiC4F/BF,YAAYlxB,GACV,GAAI5vC,KAAK2gE,SACP,OAAQ,EACH,CACL,IAAIL,EAAYtgE,KAAKsgE,UACjB34D,EAAI24D,EAAU/kE,OAElB,GAAIq0C,EAAQ5vC,KAAK6jC,MACf,OAAQ,EACH,GAAI+L,GAAS5vC,KAAKmlD,IACvB,OAAOx9C,EAEP,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAGV,IAAK,CAG1B,GAFeq5D,EAAUr5D,GAEZ2oC,MAAQA,EACnB,OAAO3oC,OAQbg6D,GAAkB,CACtBnvB,KAAM,EACNC,KAAM,EACNO,KAAM,EACNQ,KAAM,EACNM,KAAM,GAGF8tB,GAAU,CAEdjwB,KAAM,CAAC,GACPC,KAAM,CAAC,GAEPC,KAAM,CAAC,EAAG,EAAG,GACbC,KAAM,CAAC,EAAG,EAAG,EAAG,GAChBC,KAAM,CAAC,EAAG,EAAG,GAEbC,KAAM,CAAC,GACPC,KAAM,CAAC,EAAG,EAAG,GAEbC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,EAAG,EAAG,GACbC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,EAAG,EAAG,GACbC,KAAM,CAAC,GAEPC,KAAM,CAAC,GAEPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GAEPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GAEPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,GACPC,KAAM,CAAC,EAAG,EAAG,GACbC,KAAM,CAAC,GACPC,KAAM,CAAC,GAEPC,KAAM,CAAC,EAAG,EAAG,GACbC,KAAM,CAAC,EAAG,EAAG,GACbC,KAAM,CAAC,GAEPC,KAAM,CAAC,EAAG,EAAG,GACbC,KAAM,CAAC,EAAG,EAAG,EAAG,GAChBC,KAAM,CAAC,EAAG,EAAG,IASTytB,GAAeC,IAAiB,MAKpCxzD,YAAYwkD,EAAOte,GACjB,IAAI6G,EAAkByX,EAAMzX,gBACxBpK,EAAmBuD,EAAUvD,iBAC7BC,EAASsD,EAAUtD,OACnB6wB,EAAeJ,GAAgBntB,EAAU7zC,MAa7C,GAXAD,KAAKoyD,MAAQA,EACbpyD,KAAKC,KAAO6zC,EAAU7zC,KACtBD,KAAKwgE,OAASU,GAAQptB,EAAU7zC,MAChCD,KAAK48C,eAAiB,KACtB58C,KAAK06C,UAAY,GAKjB16C,KAAK+vC,uBAAqCp3C,IAAjB0oE,EAA6BA,EAAevtB,EAAU/D,mBAErD,IAAtBQ,GAA2BoK,EAC7B36C,KAAK48C,eAAiB,IAAIwkB,EAAaphE,KAAM,EAAG26C,EAAgBpK,GAAmBC,GAAQ,QAE3F,IAAK,IAAI8wB,KAAYlP,EAAM1X,UACzB16C,KAAK06C,UAAUz2C,KAAK,IAAIm9D,EAAaphE,QAASshE,EAASnyB,SAAUqB,GAAQ,IAU/EqwB,SAAS5jE,EAAK0M,GACZ,OAAI3J,KAAK48C,eACA58C,KAAK48C,eAAeikB,SAAS5jE,EAAK0M,EAASsI,QAAUjS,KAAK48C,eAAeuI,MAChD,IAAvBx7C,EAAS23D,SACXthE,KAAK06C,UAAU/wC,EAAS23D,UAAUT,SAAS5jE,EAAK0M,EAASimC,QAEhE3yC,EAAIwb,IAAIzY,KAAKwgE,SACL,GAQZe,UAAUD,GACR,OAAIthE,KAAK48C,gBACC58C,KAAK48C,eAAe+jB,UAEpB3gE,KAAK06C,UAAU4mB,GAAUX,SAOrCa,YACE,GAAIxhE,KAAK48C,eACP,OAAO58C,KAAK48C,eAAe0jB,UAAUxnD,IAAK43B,GAAUA,EAAMzhC,OACrD,CACL,IAAI4K,EAAS,GAEb,IAAK,IAAIynD,KAAYthE,KAAK06C,UACxB7gC,EAAO5V,QAAQq9D,EAAShB,UAAUxnD,IAAK43B,GAAUA,EAAMzhC,QAGzD,OAAO4K,MAKP4nD,GAAWN,GAAYhB,GChStB,SAA2BljE,EAAKoL,EAAG1K,EAAGmL,EAAG1D,EAAGgC,EAAGlF,GAWpD,OAVa,IAATA,EACFjF,EAAI,GAAKoL,EAAE,GACO,IAATnG,EACTjF,EAAI,GAAKihD,GAAK71C,EAAE,GAAIjD,EAAE,GAAIgC,GACR,IAATlF,EACTjF,EAAI,GlC8CD,SAAiBoL,EAAG1K,EAAGmL,EAAG1D,EAAGgC,GAClC,IAAIs6D,EAAet6D,EAAIA,EAMvB,OAAQiB,GALMq5D,GAAgB,EAAIt6D,EAAI,GAAK,GAKnBzJ,GAJV+jE,GAAgBt6D,EAAI,GAAKA,GAIC0B,GAH1B44D,GAAgBt6D,EAAI,IAGsBhC,GAF1Cs8D,GAAgB,EAAI,EAAIt6D,IkCnD3Bu6D,CAAQt5D,EAAE,GAAI1K,EAAE,GAAImL,EAAE,GAAI1D,EAAE,GAAIgC,GACvB,IAATlF,IACTjF,EAAI,GlCgED,SAAgBoL,EAAG1K,EAAGmL,EAAG1D,EAAGgC,GACjC,IAAIw6D,EAAO,EAAIx6D,EACXs6D,EAAet6D,EAAIA,EACnBy6D,EAAwBD,EAAOA,EAMnC,OAAQv5D,GALMw5D,EAAwBD,GAKdjkE,GAJV,EAAIyJ,EAAIy6D,GAIkB/4D,GAH1B,EAAI44D,EAAeE,GAGuBx8D,GAF1Cs8D,EAAet6D,GkCvElB06D,CAAOz5D,EAAE,GAAI1K,EAAE,GAAImL,EAAE,GAAI1D,EAAE,GAAIgC,IAGnCnK,KDsRH8kE,GAAYZ,GAAYhB,GCzQvB,SAA2BljE,EAAKoL,EAAG1K,EAAGmL,EAAG1D,EAAGgC,EAAGlF,GAWpD,OAVa,IAATA,EACFikD,QAAKuD,KAAKzsD,EAAKoL,GACG,IAATnG,EACTikD,QAAKjI,KAAKjhD,EAAKoL,EAAGjD,EAAGgC,GACH,IAATlF,EACTikD,QAAKwb,QAAQ1kE,EAAKoL,EAAG1K,EAAGmL,EAAG1D,EAAGgC,GACZ,IAATlF,GACTikD,QAAK2b,OAAO7kE,EAAKoL,EAAG1K,EAAGmL,EAAG1D,EAAGgC,GAGxBnK,KD+PH+kE,GAAYb,GAAYhB,GClPvB,SAA+BljE,EAAKoL,EAAG1K,EAAGmL,EAAG1D,EAAGgC,EAAGlF,GASxD,OARa,IAATA,EACFykD,QAAK+C,KAAKzsD,EAAKoL,GACG,IAATnG,EACTykD,QAAKsb,MAAMhlE,EAAKoL,EAAGjD,EAAGgC,GACJ,IAATlF,GAAuB,IAATA,GACvBykD,QAAKub,OAAOjlE,EAAKoL,EAAG1K,EAAGmL,EAAG1D,EAAGgC,GAGxBnK,KDgPM,SAASklE,GAAc/P,EAAOte,GAC3C,IAAIsuB,EAUJ,OARItuB,aAAqBlD,IAAiBkD,aAAqBjD,GAC7DuxB,EAAcX,GACL3tB,aAAqBhD,GAC9BsxB,EAAcL,GACLjuB,aAAqB/C,KAC9BqxB,EAAcJ,IAGT,IAAII,EAAYhQ,EAAOte,GE3TjB,MAAMH,GAKnB/lC,YAAYwkD,EAAOhxC,GAEjBphB,KAAKoyD,MAAQA,EAEbpyD,KAAK4zC,WAAa,GAElB,IAAK,IAAIE,KAAa1yB,EAAOwyB,WAC3B5zC,KAAK4zC,WAAWE,EAAU7zC,MAAQkiE,GAAc/P,EAAOte,GAQ3D0tB,UAAUvhE,GACR,IAAI6zC,EAAY9zC,KAAK4zC,WAAW3zC,GAEhC,OAAI6zC,EACKA,EAAU0tB,YAGZ,GAUTa,aAAaplE,EAAKgD,EAAM0J,EAAU24D,GAChC,IAAIxuB,EAAY9zC,KAAK4zC,WAAW3zC,GAEhC,OAAI6zC,EACKA,EAAU+sB,SAAS5jE,EAAK0M,IAGjC1M,EAAI,GAAKqlE,GACD,GAUVC,cAActlE,EAAKgD,EAAM0J,EAAU24D,GACjC,IAAIxuB,EAAY9zC,KAAK4zC,WAAW3zC,GAEhC,OAAI6zC,EACKA,EAAU+sB,SAAS5jE,EAAK0M,IAGjC1M,EAAI,GAAKqlE,GACD,GAUVE,gBAAgBvlE,EAAKgD,EAAM0J,EAAU24D,GACnC,IAAIxuB,EAAY9zC,KAAK4zC,WAAW3zC,GAEhC,OAAI6zC,EACKA,EAAU+sB,SAAS5jE,EAAK0M,IAGjCw8C,QAAKuD,KAAKzsD,EAAKqlE,IACP,GAUVG,gBAAgBxlE,EAAKgD,EAAM0J,EAAU24D,GACnC,IAAIxuB,EAAY9zC,KAAK4zC,WAAW3zC,GAEhC,OAAI6zC,EACKA,EAAU+sB,SAAS5jE,EAAK0M,IAGjCg9C,QAAK+C,KAAKzsD,EAAKqlE,IACP,GAQVf,UAAUthE,EAAMqhE,GACd,IAAIxtB,EAAY9zC,KAAK4zC,WAAW3zC,GAEhC,QAAI6zC,GACKA,EAAUytB,UAAUD,IC/GlB,MAAMtrB,WAAyBrC,GAM5C+uB,eAAezlE,EAAK0M,GAClB,OAAO3J,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAU48C,IAQrDwE,YAAY9tD,EAAK0M,GACf,OAAO3J,KAAKyiE,gBAAgBxlE,EAAK,OAAQ0M,EAAU+8C,IAQrDic,SAAS1lE,EAAK0M,GACZ,OAAO3J,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAU88C,IAOrDmc,qBAAqBtB,GACnB,OAAOthE,KAAKuhE,UAAU,OAAQD,GAOhCuB,kBAAkBvB,GAChB,OAAOthE,KAAKuhE,UAAU,OAAQD,GAOhCwB,eAAexB,GACb,OAAOthE,KAAKuhE,UAAU,OAAQD,ICjDnB,SAASyB,GAAO16D,GAC7B,OAAOA,EAAE26D,UAAU91D,OAAO,CAACpO,EAAGmI,EAAGopB,KACG,IAA3BA,EAAI1R,QAAQ7f,EAAGmI,EAAI,IACzB+7D,UCiBE,SAASC,GAAkB7tB,EAAYsK,GAC5C,OAAmB,IAAftK,EACK,CAACsK,EAAGod,UAAWpd,EAAGqd,qBACD,IAAf3nB,EACF,CAACsK,EAAGod,UAAWpd,EAAGwjB,KACD,IAAf9tB,EACF,CAACsK,EAAGyjB,KAAMzjB,EAAG0jB,WACI,IAAfhuB,EACF,CAACsK,EAAG2jB,WAAY3jB,EAAG0jB,WACF,IAAfhuB,EACF,CAACsK,EAAGod,UAAWpd,EAAGwjB,UADpB,ECzBM,MAAM/tB,WAAcxB,GAOjC/lC,YAAYwkD,EAAOvc,EAAOytB,EAAS3tB,GACjC,IAAIP,EAAaS,EAAMT,WACnBE,EAAqBO,EAAMP,mBAC3BoK,EAAK0S,EAAM9B,OAAO5Q,GAEtB5xC,MAAMskD,EAAOvc,GAEb71C,KAAKsI,MAAQg7D,EACbtjE,KAAK21C,cAAgBA,EACrB31C,KAAKo1C,WAAaA,EAClBp1C,KAAKq1C,UAAYQ,EAAMR,UACvBr1C,KAAKu1C,QAAUM,EAAMN,QACrBv1C,KAAKw1C,MAAQK,EAAML,MAEnB,IAAI/+B,EAAQo/B,EAAMp/B,MAsBlB,GApBAzW,KAAKujE,SAAmB,EAAR9sD,EAChBzW,KAAKwjE,qBAA+B,EAAR/sD,EAC5BzW,KAAK06D,SAAmB,GAARjkD,EAChBzW,KAAKyjE,SAAmB,GAARhtD,EAChBzW,KAAK26D,YAAsB,GAARlkD,EACnBzW,KAAK46D,WAAqB,IAARnkD,EAElBzW,KAAK0jE,eAAiC,IAAftuB,GAAmC,IAAfA,EAAoB,EAAI,EACnEp1C,KAAK2jE,eAAiC,IAAfvuB,EAAoB,EAAI,EAE/Cp1C,KAAK4jE,SAAW,EAChB5jE,KAAK6jE,SAAW,EAChB7jE,KAAK8jE,QAAW1uB,EAAa,EAEzBp1C,KAAK8jE,WACN9jE,KAAK4jE,SAAU5jE,KAAK6jE,UD3CpB,SAAyBzuB,EAAYsK,GAC1C,OAAmB,IAAftK,EACK,CAACsK,EAAGod,UAAWpd,EAAGqd,qBACD,IAAf3nB,EACF,CAACsK,EAAGwjB,IAAKxjB,EAAGwjB,KACK,IAAf9tB,EACF,CAACsK,EAAGod,UAAWpd,EAAGwjB,KACD,IAAf9tB,EACF,CAACsK,EAAGyjB,KAAMzjB,EAAG0jB,WACI,IAAfhuB,EACF,CAACsK,EAAGqkB,UAAWrkB,EAAG0jB,WAGpB,CAAC,EAAG,GC8B0BY,CAAgB5uB,EAAYsK,IAG/D1/C,KAAKikE,UAAY,IAAIhmE,aAAa,CAAC,EAAG,KAEV,IAAxBq3C,EAA2B,CAC7B,IAAI4uB,EAAmB9R,EAAMtX,kBAAkBxF,GAE3C4uB,IACFlkE,KAAKkkE,iBAAmBA,GAI5B,IAAIC,EAAW,CACb3uB,MAAO,GACP1Q,KAAM,GACNs/B,YAAa,GACb57B,SAAU,GACV3Q,MAAO,IAGLwsC,GAAc,EACdC,GAAqB,EACrBC,GAAkB,EAClBC,GAAe,EAEnB,IAAK,IAAIv9D,EAAI,EAAGU,EAAIyqD,EAAM1X,UAAUn/C,OAAQ0L,EAAIU,EAAGV,IAAK,CACtD,IAAIuuC,EAAQx1C,KAAKykE,eAAex9D,GAC5B69B,EAAO9kC,KAAK0kE,mBAAmBz9D,GAC/Bm9D,EAAcpkE,KAAK4iE,qBAAqB37D,GACxCuhC,EAAWxoC,KAAK6iE,kBAAkB57D,GAClC4wB,EAAQ73B,KAAK8iE,eAAe77D,GAEhCk9D,EAAS3uB,MAAMvuC,GAAKuuC,EACpB2uB,EAASr/B,KAAK79B,GAAK69B,EACnBq/B,EAASC,YAAYn9D,GAAKm9D,EAC1BD,EAAS37B,SAASvhC,GAAKuhC,EACvB27B,EAAStsC,MAAM5wB,GAAK4wB,EAEpBwsC,EAAcA,GAAev/B,EAC7Bw/B,EAAqBA,GAAsBF,EAC3CG,EAAkBA,GAAmB/7B,EACrCg8B,EAAeA,GAAgB3sC,EAUjC,GAPA73B,KAAKmkE,SAAWA,EAChBnkE,KAAKqkE,YAAcA,EACnBrkE,KAAKskE,mBAAqBA,EAC1BtkE,KAAKukE,gBAAkBA,EACvBvkE,KAAKwkE,aAAeA,EAGhBxkE,KAAK4zC,WAAW3C,KAAM,CAExB,IAAI0zB,EAAa5B,GAAO/iE,KAAK4zC,WAAW3C,KAAKuwB,aAE7C,GAAImD,EAAWppE,OAAS,EAAG,CACzB,IAAI2Y,EAAOqrC,GAAWolB,EAAWz4D,KAAK,KAClC2uC,EAAW,GAGf,IAAK,IAAI5zC,EAAI,EAAGU,EAAIg9D,EAAWppE,OAAQ0L,EAAIU,EAAGV,IAC5C4zC,EAAS5zC,GAAKmrD,EAAMvX,SAAS8pB,EAAW19D,IAG1C,IAAI8vD,EAAQ3E,EAAM9B,OAAOgG,iBAAiBpiD,EAAM2mC,GAEhDkc,EAAMpR,QAAQqN,aACXr2D,KAAK,KACJ,IAAIgpD,EAAUoR,EAAMpR,QAEpBA,EAAQwN,OAAQ,EAChBxN,EAAQyN,OAAQ,EAEhBhB,EAAMvX,SAAS52C,KAAK0hD,GAEpB3lD,KAAKq1C,UAAY+c,EAAMvX,SAASt/C,OAAS,EACzCyE,KAAKikE,UAAUxrD,IAAI,CAACs+C,EAAM17B,QAAS07B,EAAM/kC,WASnD50B,KAAKm+D,GACH,IAAI7b,EAAK1/C,KAAKoyD,MAAM9B,OAAO5Q,GAE3BA,EAAGoc,UAAUP,EAAO9a,SAASmkB,YAAa5kE,KAAK2jE,gBAG3C3jE,KAAK8jE,SACPpkB,EAAG6D,OAAO7D,EAAGkd,OACbld,EAAGmd,UAAU78D,KAAK4jE,SAAU5jE,KAAK6jE,WAEjCnkB,EAAGgd,QAAQhd,EAAGkd,OAGZ58D,KAAK06D,SACPhb,EAAGgd,QAAQhd,EAAGid,WAEdjd,EAAG6D,OAAO7D,EAAGid,WAGX38D,KAAK26D,YACPjb,EAAGgd,QAAQhd,EAAG8D,YAEd9D,EAAG6D,OAAO7D,EAAG8D,YAGXxjD,KAAK46D,WACPlb,EAAG2X,UAAU,GAEb3X,EAAG2X,UAAUr3D,KAAK0jE,gBAStBmB,SAAS5nE,EAAK0M,GACZ,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKw1C,OAQxDsvB,aAAa7nE,EAAK0M,GAEhB,OAAO3J,KAAKqiE,aAAaplE,EAAK,OAAQ0M,EAAU3J,KAAKq1C,WAQvDqtB,eAAezlE,EAAK0M,GAClB,OAAI3J,KAAKkkE,iBACAlkE,KAAKkkE,iBAAiBxB,eAAezlE,EAAK0M,IAGnDw8C,QAAKuD,KAAKzsD,EAAKspD,KACP,GAQVwE,YAAY9tD,EAAK0M,GACf,OAAI3J,KAAKkkE,iBACAlkE,KAAKkkE,iBAAiBnZ,YAAY9tD,EAAK0M,IAGhDg9C,QAAK+C,KAAKzsD,EAAKypD,KACP,GAQVic,SAAS1lE,EAAK0M,GACZ,OAAI3J,KAAKkkE,iBACAlkE,KAAKkkE,iBAAiBvB,SAAS1lE,EAAK0M,IAG7Cw8C,QAAKuD,KAAKzsD,EAAKwpD,KACP,GAOVge,eAAenD,GACb,OAAOthE,KAAKuhE,UAAU,OAAQD,GAOhCoD,mBAAmBpD,GACjB,OAAOthE,KAAKuhE,UAAU,OAAQD,GAOhCsB,qBAAqBtB,GACnB,OAAOthE,KAAKkkE,kBAAoBlkE,KAAKkkE,iBAAiBtB,qBAAqBtB,GAO7EuB,kBAAkBvB,GAChB,OAAOthE,KAAKkkE,kBAAoBlkE,KAAKkkE,iBAAiBrB,kBAAkBvB,GAO1EwB,eAAexB,GACb,OAAOthE,KAAKkkE,kBAAoBlkE,KAAKkkE,iBAAiBpB,eAAexB,ICnQ1D,MAAMhqB,WAAwB3D,GAK3C/lC,YAAYwkD,EAAO2S,GACjBj3D,MAAMskD,EAAO2S,GAEb/kE,KAAKw1C,MAAQuvB,EAAgBvvB,MAC7Bx1C,KAAKswB,MAAQ,IAAIy0C,EAAgBz0C,OAAO0yC,UACxChjE,KAAKu3C,SAAWwtB,EAAgBxtB,SAQlCstB,SAAS5nE,EAAK0M,GAGZ,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU,GAQnDq7D,SAAS/nE,EAAK0M,GACZ,OAAO3J,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAU3J,KAAKswB,OAO1Dm0C,eAAenD,GACb,OAAOthE,KAAKuhE,UAAU,OAAQD,GAOhC2D,eAAe3D,GACb,OAAOthE,KAAKuhE,UAAU,OAAQD,IC7C3B,MAAM4D,GAOXt3D,YAAYwkD,EAAO+S,EAASC,EAAWC,GACrCrlE,KAAKoyD,MAAQA,EACbpyD,KAAKmlE,QAAUA,EACfnlE,KAAKolE,UAAYA,EACjBplE,KAAKqlE,SAAWA,EAOlBjoE,KAAKm+D,EAAQhmB,GACX,IAAImK,EAAK1/C,KAAKoyD,MAAM9B,OAAO5Q,GACvBylB,EAAUnlE,KAAKmlE,QACfzkB,EAAU6a,EAAO7a,QAErBhB,EAAG4c,oBAAoB5b,EAAQ6b,WAAY,EAAG7c,EAAG8c,OAAO,EAAO,GAAI2I,EAAQ,IAC3EzlB,EAAG4c,oBAAoB5b,EAAQ4kB,SAAU,EAAG5lB,EAAG8c,OAAO,EAAO,GAAI2I,EAAQ,IACzEzlB,EAAG4c,oBAAoB5b,EAAQ+b,KAAM,EAAG/c,EAAG8c,OAAO,EAAO,EAAG2I,EAAQ,GAAK5vB,EAAUv1C,KAAKolE,WACxF1lB,EAAG4c,oBAAoB5b,EAAQ6kB,QAAS,EAAG7lB,EAAGgF,eAAe,EAAO,EAAGygB,EAAQ,IAC/EzlB,EAAG4c,oBAAoB5b,EAAQ8kB,aAAc,EAAG9lB,EAAGgF,eAAe,EAAO,EAAGygB,EAAQ,IAMtFp6D,OAAOwlD,GACL,IAAI7Q,EAAK1/C,KAAKoyD,MAAM9B,OAAO5Q,GAE3BA,EAAGoC,WAAWO,gBAAgBK,2BAA2BhD,EAAGke,UAAW59D,KAAKqlE,SAAU3lB,EAAG6a,eAAgBv6D,KAAKmlE,QAAQ,GAAI5U,IAOvH,MAAMta,GAMXroC,YAAYwkD,EAAOqT,EAAQn9D,GACzB,IAKIoxD,EALAl9B,EAAYipC,EAAOvvB,SACnBC,EAAUsvB,EAAOtvB,QACjBuvB,EAAwBD,EAAO3uB,OAC/B6uB,EAAYD,EAAsB,GAAGnqE,OACrC26C,EAAW1Z,EAAUjhC,OAAS,EAE9BqqE,EAAc,IAAI5qE,WAAsB,EAAXk7C,GAM7B2vB,EAAc,IAAI7nE,YAAYk4C,GAC9BK,EAAekvB,EAAOlvB,aACtBC,EAAeivB,EAAOjvB,aACtBC,EAAgBgvB,EAAOhvB,cACvBqvB,EAAS,GAGb,GAAIJ,EAAsBnqE,OAAS,EAAG,CACpCm+D,EAAM,IAAIz7D,aAAaynE,EAAsBnqE,OAASoqE,GAEtD,IAAK,IAAI1+D,EAAI,EAAGU,EAAI+9D,EAAsBnqE,OAAQ0L,EAAIU,EAAGV,IACvDyyD,EAAIjhD,IAAIitD,EAAsBz+D,GAAIA,EAAI0+D,QAGxCjM,EAAMgM,EAAsB,GAI9B,IAAK,IAAIz+D,EAAI,EAAGU,EAAI6uC,EAAaj7C,OAAQgK,EAAI,EAAG0B,EAAIU,EAAGV,IACrD6+D,EAAO7hE,KAAKwyC,EAAcp1C,SAASkE,EAAGA,EAAIixC,EAAavvC,KACvD1B,GAAKixC,EAAavvC,GAIpB,IAAK,IAAIA,EAAI,EAAGA,EAAIivC,EAAUjvC,IAAK,CAKjC,GAJY6+D,EAAOvvB,EAAatvC,IAIrB,CACT,IAAIg0C,EAAQ6qB,EAAOvvB,EAAatvC,IAC5B8+D,EAAYx/D,KAAKC,IAAIy0C,EAAM1/C,OAAQ,GAEvC,IAAK,IAAIyM,EAAI,EAAGA,EAAI+9D,EAAW/9D,IAE7B49D,EAAgB,EAAJ3+D,EAAQe,GAAKizC,EAAMjzC,GAAK,EAGtC69D,EAAY5+D,GAAK8+D,GAIrB/lE,KAAKsI,MAAQA,EACbtI,KAAK02C,WAAa+uB,EAAO/uB,WACzB12C,KAAKgmE,cAAgBxpC,EACrBx8B,KAAKimE,YAAc9vB,EACnBn2C,KAAKkmE,SAAWxM,EAChB15D,KAAKmmE,eAAiBP,EACtB5lE,KAAKomE,gBAAkBP,EACvB7lE,KAAKk6D,UAAYuL,EAAOnvB,MACxBt2C,KAAKolE,UAAwB,EAAZO,EAEjB,IAAI3qB,EAAmBoX,EAAMpX,iBAE7B,IAAK,IAAI/zC,EAAI,EAAGU,EAAIqzC,EAAiBz/C,OAAQ0L,EAAIU,EAAGV,IAC9C+zC,EAAiB/zC,GAAGswC,WAAajvC,IACnCtI,KAAK+kE,gBAAkB/pB,EAAiB/zC,IAI5C,IAAIk9D,EAAW,CACb3uB,MAAO,GACPllB,MAAO,IAGL+1C,GAAU,EAEd,IAAK,IAAIp/D,EAAI,EAAGU,EAAIyqD,EAAM1X,UAAUn/C,OAAQ0L,EAAIU,EAAGV,IAAK,CACtD,IAAIuuC,EAAQx1C,KAAKykE,eAAex9D,GAC5BqpB,EAAQtwB,KAAKilE,eAAeh+D,IAE5BuuC,GAASllB,KACX+1C,GAAU,GAGZlC,EAAS3uB,MAAMvuC,GAAKuuC,EACpB2uB,EAAS7zC,MAAMrpB,GAAKqpB,EAGtBtwB,KAAKmkE,SAAWA,EAChBnkE,KAAKqmE,QAAUA,EAQjBxB,SAAS5nE,EAAK0M,GACZ,OAAI3J,KAAK+kE,gBACA/kE,KAAK+kE,gBAAgBF,SAAS5nE,EAAK0M,IAG5C1M,EAAI,GAAK,GACD,GAQV+nE,SAAS/nE,EAAK0M,GACZ,OAAI3J,KAAK+kE,gBACA/kE,KAAK+kE,gBAAgBC,SAAS/nE,EAAK0M,IAG5Cw8C,QAAKuD,KAAKzsD,EAAKwpD,KACP,GAOVge,eAAenD,GACb,OAAOthE,KAAK+kE,iBAAmB/kE,KAAK+kE,gBAAgBN,eAAenD,GAOrE2D,eAAe3D,GACb,OAAOthE,KAAK+kE,iBAAmB/kE,KAAK+kE,gBAAgBE,eAAe3D,IC7LxD,MAAMgF,GAMnB14D,YAAYtF,EAAOutC,EAAO4vB,GAExBzlE,KAAKsI,MAAQA,EAEbtI,KAAK61C,MAAQA,EAEb71C,KAAKylE,OAASA,GCfH,IAAAc,GAAA,CACb1xB,EAAG,wBACHC,EAAG,sBACH0xB,GAAI,eACJC,GAAI,GACJC,GAAI,oCACJC,GAAI,0BACJC,GAAI,0BACJC,GAAI,0BACJC,GAAI,wBACJC,GAAI,sBACJC,GAAI,oCCJS,MAAMxvB,WAAsB7D,GAMzC/lC,YAAYwkD,EAAOhxC,EAAQ9Y,GACzBwF,MAAMskD,EAAOhxC,GAEbphB,KAAKsI,MAAQA,EACbtI,KAAKC,KAAOmhB,EAAOnhB,KACnBD,KAAK4wB,SAAWxP,EAAOwP,SACvB5wB,KAAKy3C,SAAWr2B,EAAOq2B,SACvBz3C,KAAKmtD,MAAQiF,EAAM/W,YAAYj6B,EAAOwP,WAAau1B,QAAKK,SAExD,IAAI/vC,EAAQ2K,EAAO3K,MAEnBzW,KAAK8tD,uBAAiC,EAARr3C,EAC9BzW,KAAK+tD,oBAA8B,EAARt3C,EAC3BzW,KAAKguD,mBAA6B,EAARv3C,EAC1BzW,KAAK4vD,YAAsB,EAARn5C,EACnBzW,KAAK6vD,aAAuB,GAARp5C,EACpBzW,KAAK8vD,aAAuB,GAARr5C,EACpBzW,KAAK+vD,aAAuB,GAARt5C,EACpBzW,KAAKinE,eAAyB,IAARxwD,EACtBzW,KAAKknE,KAAe,IAARzwD,EACZzW,KAAKmnE,MAAgB,IAAR1wD,EACbzW,KAAKonE,YAAsB,KAAR3wD,EACnBzW,KAAKqnE,WAAqB,KAAR5wD,EAClBzW,KAAKsnE,gBAA0B,KAAR7wD,EACvBzW,KAAKunE,eAAyB,KAAR9wD,EACtBzW,KAAKwnE,cAAwB,MAAR/wD,EACrBzW,KAAKynE,yBAAmC,MAARhxD,EAChCzW,KAAK0nE,mCAA6C,MAARjxD,EAC1CzW,KAAK2nE,YAAsB,OAARlxD,EACnBzW,KAAKyjE,SAAmB,OAARhtD,EAChBzW,KAAK4nE,WAAqB,OAARnxD,EAClBzW,KAAK6nE,OAAiB,QAARpxD,EAEdzW,KAAK8nE,gBAAkB9nE,KAAK4vD,aAAe5vD,KAAK6vD,cAAgB7vD,KAAK8vD,cAAgB9vD,KAAK+vD,aAEtF3uC,EAAOwP,WAAaxP,EAAOq2B,WAC7Bz3C,KAAKy3C,UAAY,GAGnB,IAAI0sB,EAAW,CACbC,YAAa,GACb57B,SAAU,GACV3Q,MAAO,GACPkwC,QAAS,IAGX,IAAK,IAAI9gE,EAAI,EAAGU,EAAIyqD,EAAM1X,UAAUn/C,OAAQ0L,EAAIU,EAAGV,IAAK,CACtD,IAAIm9D,EAAcpkE,KAAK4iE,qBAAqB37D,GACxCuhC,EAAWxoC,KAAK6iE,kBAAkB57D,GAClC4wB,EAAQ73B,KAAK8iE,eAAe77D,GAEhCk9D,EAASC,YAAYn9D,GAAKm9D,EAC1BD,EAAS37B,SAASvhC,GAAKuhC,EACvB27B,EAAStsC,MAAM5wB,GAAK4wB,EACpBssC,EAAS4D,QAAQ9gE,GAAKm9D,GAAe57B,GAAY3Q,EAGnD73B,KAAKmkE,SAAWA,EAWlB6D,cAAc/qE,EAAK0M,GAEjB,OADA1M,EAAI,GAAK,GACD,EAQVylE,eAAezlE,EAAK0M,GAClB,OAAO3J,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAU48C,IAQrDwE,YAAY9tD,EAAK0M,GACf,OAAO3J,KAAKyiE,gBAAgBxlE,EAAK,OAAQ0M,EAAU+8C,IAQrDic,SAAS1lE,EAAK0M,GACZ,OAAO3J,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAU88C,IAOrDmc,qBAAqBtB,GACnB,OAAOthE,KAAKuhE,UAAU,OAAQD,GAOhCuB,kBAAkBvB,GAChB,OAAOthE,KAAKuhE,UAAU,OAAQD,GAOhCwB,eAAexB,GACb,OAAOthE,KAAKuhE,UAAU,OAAQD,ICjInB,MAAMrpB,WAAaT,GAMhC5pC,YAAYwkD,EAAO8U,EAAM5+D,GACvBwF,MAAMskD,EAAO8U,EAAM5+D,GAEnBtI,KAAK+kE,gBAAkB3S,EAAMpX,iBAAiBksB,EAAKhvB,mBAQrD8vB,cAAc/qE,EAAK0M,GACjB,OAAI3J,KAAK+kE,gBACA/kE,KAAK+kE,gBAAgBF,SAAS5nE,EAAK0M,IAG5C1M,EAAI,GAAK,GACD,ICvBG,MAAMk7C,WAAcX,GAMjC5pC,YAAYwkD,EAAO+U,EAAO7+D,GACxBwF,MAAMskD,EAAO+U,EAAO7+D,GAEpBtI,KAAKkC,KAAOilE,EAAMjlE,KAClBlC,KAAKo4C,YAAc+uB,EAAM/uB,YACzBp4C,KAAKswB,MAAQ62C,EAAM72C,MACnBtwB,KAAKq4C,UAAY8uB,EAAM9uB,UACvBr4C,KAAKs4C,aAAe6uB,EAAM7uB,aAC1Bt4C,KAAKu4C,iBAAmB4uB,EAAM5uB,iBAQhC0vB,oBAAoBhrE,EAAK0M,GACvB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKo4C,YAAY,IAQpE8vB,kBAAkBjrE,EAAK0M,GACrB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKo4C,YAAY,IAQpE+vB,aAAalrE,EAAK0M,GAChB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKq4C,WAQxD2sB,SAAS/nE,EAAK0M,GACZ,OAAO3J,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAU3J,KAAKswB,OAQ1D83C,oBAAoBnrE,EAAK0M,GACvB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKu4C,kBAQxD8vB,gBAAgBprE,EAAK0M,GACnB,OAAO3J,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAU3J,KAAKs4C,eCpE7C,MAAME,WAAehB,ICArB,MAAMiB,WAAmBjB,GAMtC5pC,YAAYwkD,EAAOiV,EAAY/+D,GAC7BwF,MAAMskD,EAAOiV,EAAY/+D,GAEzB,IAAIlJ,EAAOioE,EAAWjoE,KAAK5D,QAAQ,MAAO,KAAKye,cAAcze,QAAQ,OAAQ,QAE7EwE,KAAKZ,KAAOA,EACZY,KAAK04C,aAAe2uB,EAAW3uB,aAGlB,KAATt5C,IAAwC,GAAzBA,EAAKuf,QAAQ,UAC9B3e,KAAKsoE,cAAgBlW,EAAM9B,OAAO5+B,KAAKtyB,EAAMgzD,EAAMM,aASvDsV,cAAc/qE,EAAK0M,GACjB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU,IC1BtC,MAAMgvC,WAAwBnB,GAM3C5pC,YAAYwkD,EAAOmW,EAASjgE,GAC1BwF,MAAMskD,EAAOmW,EAASjgE,GAEtBtI,KAAKwoE,iBAAmBpW,EAAM9B,OAAO5+B,KAAK62C,EAAQnpE,KAAK5D,QAAQ,MAAO,KAAKye,cAAcze,QAAQ,OAAQ,QAAS42D,EAAMM,YACxH1yD,KAAKi5C,MAAQsvB,EAAQtvB,MACrBj5C,KAAK+4C,SAAWwvB,EAAQxvB,SACxB/4C,KAAK84C,UAAYyvB,EAAQzvB,UACzB94C,KAAKg5C,SAAWuvB,EAAQvvB,SACxBh5C,KAAK64C,QAAU0vB,EAAQ1vB,QACvB74C,KAAK44C,aAAe2vB,EAAQ3vB,aAQ9B6vB,SAASxrE,EAAK0M,GACZ,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKi5C,OAQxDyvB,YAAYzrE,EAAK0M,GACf,OAAO3J,KAAKuiE,cAActlE,EAAK,QAAS0M,EAAU3J,KAAK+4C,UAQzD4vB,aAAa1rE,EAAK0M,GAChB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK84C,WAQxD8vB,YAAY3rE,EAAK0M,GACf,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKg5C,UAQxD6vB,WAAW5rE,EAAK0M,GACd,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK64C,SAQxDiwB,gBAAgB7rE,EAAK0M,GACnB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK44C,cAQxDovB,cAAc/qE,EAAK0M,GACjB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU,IC5EtC,MAAMuvC,WAAyB1B,GAM5C5pC,YAAYwkD,EAAOmW,EAASjgE,GAC1BwF,MAAMskD,EAAOmW,EAASjgE,GAEtBtI,KAAKgwB,MAAQu4C,EAAQv4C,MACrBhwB,KAAKzE,OAASgtE,EAAQhtE,OACtByE,KAAKi5C,MAAQsvB,EAAQtvB,MACrBj5C,KAAK+4C,SAAWwvB,EAAQxvB,SACxB/4C,KAAK64C,QAAU0vB,EAAQ1vB,QACvB74C,KAAK44C,aAAe2vB,EAAQ3vB,aAC5B54C,KAAK25C,OAAS4uB,EAAQ5uB,OACtB35C,KAAKg5C,SAAWuvB,EAAQvvB,SACxBh5C,KAAK23B,UAAY4wC,EAAQ5wC,UACzB33B,KAAKo5C,WAAamvB,EAAQnvB,WAC1Bp5C,KAAKq5C,WAAakvB,EAAQlvB,WAE1B,IAAItD,EAAgBwyB,EAAQxyB,cAE5B/1C,KAAK+oE,WAAa,CAACR,EAAQltC,QAASktC,EAAQv2C,MAE5ChyB,KAAKgpE,aAAc,EAEG,IAAlBjzB,EACF/1C,KAAKwoE,iBAAmBpW,EAAMvX,SAAS0tB,EAAQlzB,WACpB,IAAlBU,GACT/1C,KAAKwoE,iBAAmBpW,EAAM9B,OAAOwG,gBAAgB,cACrD92D,KAAK+oE,WAAWpZ,KAAK,GACrB3vD,KAAKgpE,aAAc,GACQ,IAAlBjzB,GACT/1C,KAAKwoE,iBAAmBpW,EAAM9B,OAAOwG,gBAAgB,aACrD92D,KAAK+oE,WAAWpZ,KAAK,GACrB3vD,KAAKgpE,aAAc,GAEnBhpE,KAAKwoE,iBAAmBpW,EAAM9B,OAAO5+B,KAAK,wBAA0Bu3C,GAAelzB,GAAiB,OAAQqc,EAAMM,YAGpH1yD,KAAK+1C,cAAgBwyB,EAAQxyB,cAE7B,IAAIoD,EAAaovB,EAAQpvB,WAEzBn5C,KAAKkpE,KAAuB,IAAf/vB,GAAmC,IAAfA,EACjCn5C,KAAKmpE,KAAuB,IAAfhwB,GAAmC,IAAfA,EAEjCn5C,KAAKopE,UAAY,EAAIb,EAAQltC,QAC7Br7B,KAAKqpE,WAAa,EAAId,EAAQv2C,KAC9BhyB,KAAKspE,OAAS,GAEd,IAAIA,EAASf,EAAQjvB,cACjB9D,EAAQ+yB,EAAQhvB,cAEpB,IAAK,IAAItyC,EAAI,EAAGA,EAAI,EAAGA,IACrBjH,KAAKspE,OAAOriE,GAAK,IAAIjM,WAAW,CAA6B,IAA5BuL,KAAKC,IAAI8iE,EAAOriE,GAAG,GAAI,GAAsC,IAA5BV,KAAKC,IAAI8iE,EAAOriE,GAAG,GAAI,GAAsC,IAA5BV,KAAKC,IAAI8iE,EAAOriE,GAAG,GAAI,GAAUuuC,EAAMvuC,KAG5IjH,KAAKupE,QAAUhB,EAAQ/uB,eAEvBx5C,KAAKwpE,UAAY,IAAIjB,EAAQ9uB,iBAAkB8uB,EAAQ7uB,eAEvD15C,KAAK2nE,YAA8B,OAAhBY,EAAQ9xD,MAC3BzW,KAAK4nE,WAA6B,OAAhBW,EAAQ9xD,MAC1BzW,KAAK6nE,OAAyB,QAAhBU,EAAQ9xD,OAErBzW,KAAK4jE,SAAU5jE,KAAK6jE,UAAYZ,GAAkBsF,EAAQnzB,WAAYp1C,KAAKoyD,MAAM9B,OAAO5Q,IAEzF1/C,KAAK21C,cAAgB4yB,EAAQ5yB,cAQ/B8zB,SAASxsE,EAAK0M,GACZ,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKgwB,OAQxD05C,UAAUzsE,EAAK0M,GACb,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKzE,QAQxDktE,SAASxrE,EAAK0M,GACZ,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKi5C,OAQxDyvB,YAAYzrE,EAAK0M,GACf,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK+4C,UAQxD8vB,WAAW5rE,EAAK0M,GACd,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK64C,SAQxDiwB,gBAAgB7rE,EAAK0M,GACnB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK44C,cAQxDovB,cAAc/qE,EAAK0M,GACjB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU,GAQnDggE,aAAa1sE,EAAK0M,GAChB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK23B,YC/I3C,MAAMiiB,WAAsBpC,GAMzC5pC,YAAYwkD,EAAOmW,EAASjgE,GAC1BwF,MAAMskD,EAAOmW,EAASjgE,GAEtBtI,KAAK61C,MAAQuc,EAAMxX,UAAU2tB,EAAQ7xB,YAAY,GACjD12C,KAAK2lD,QAAUyM,EAAMvX,SAAS76C,KAAK61C,MAAMR,WAEzCr1C,KAAK65C,YAAc0uB,EAAQ1uB,YAC3B75C,KAAK85C,YAAcyuB,EAAQzuB,YAC3B95C,KAAKw1C,MAAQ+yB,EAAQ/yB,MACrBx1C,KAAKswB,MAAQi4C,EAAQj4C,MACrBtwB,KAAKg5C,SAAWuvB,EAAQvvB,SACxBh5C,KAAK+5C,YAAcwuB,EAAQxuB,YAC3B/5C,KAAK44C,aAAe2vB,EAAQ3vB,aAC5B54C,KAAK64C,QAAU0vB,EAAQ1vB,QAEvB74C,KAAK+oE,WAAa,CAACR,EAAQltC,QAASktC,EAAQv2C,MAC5ChyB,KAAKopE,UAAY,EAAIb,EAAQltC,QAC7Br7B,KAAKqpE,WAAa,EAAId,EAAQv2C,KAQhC43C,eAAe3sE,EAAK0M,GAClB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK85C,aAQxD+vB,eAAe5sE,EAAK0M,GAClB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAK65C,aAQxDiwB,eAAe7sE,EAAK0M,GAClB,OAAO3J,KAAKqiE,aAAaplE,EAAK,OAAQ0M,EAAU,GAQlDq7D,SAAS/nE,EAAK0M,GACZ,OAAO3J,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAU3J,KAAKswB,OAQ1Du0C,SAAS5nE,EAAK0M,GACZ,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU3J,KAAKw1C,OAQxDwyB,cAAc/qE,EAAK0M,GACjB,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU,IC/ErD,MAAMogE,GAAO5jB,QAAKK,SAKH,MAAMle,WAAekP,GAMlC5pC,YAAYwkD,EAAOjnB,EAAQ7iC,GACzBwF,MAAMskD,EAAOjnB,EAAQ7iC,GAErBtI,KAAKC,KAAOkrC,EAAOlrC,KACnBD,KAAKg6C,SAAW7O,EAAO6O,SACvBh6C,KAAK4oC,YAAcuC,EAAOvC,YAC1B5oC,KAAK6oC,iBAAmBsC,EAAOtC,iBAC/B7oC,KAAK8oC,kBAAoBqC,EAAOrC,kBAChC9oC,KAAKi6C,eAAiB9O,EAAO8O,eAQ/B+vB,uBAAuB/sE,EAAK0M,GAC1B,MAAMgJ,EAAM3S,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAUogE,IAExD,OADA5jB,QAAKtf,IAAI5pC,EAAKA,EAAK+C,KAAKg6C,UACjBrnC,EAQTs3D,qBAAqBhtE,EAAK0M,GACxB,MAAMgJ,EAAM3S,KAAKwiE,gBAAgBvlE,EAAK,OAAQ0M,EAAUogE,IAExD,OADA5jB,QAAKtf,IAAI5pC,EAAKA,EAAK+C,KAAKi6C,gBACjBtnC,EAQTo4C,YAAY9tD,EAAK0M,GACf,OAAO3J,KAAKuiE,cAActlE,EAAK,OAAQ0M,EAAU,IC9CtC,MAAMugE,GAInBt8D,YAAY7S,GAEViF,KAAK8Y,IAAM,GAEX9Y,KAAK0xB,KAAK32B,GAGZ22B,KAAK32B,GACH,GAAIA,EAEF,GAAIA,aAAkBke,YAAa,CACjC,MAAMgpB,EAAU,IAAIphC,YAAY,SAChC,IAAIspE,EAAa,IAAInvE,WAAWD,GAEhCiF,KAAKoqE,SAASnoC,EAAQ7gC,OAAO+oE,SAG7BnqE,KAAKoqE,SAASrvE,GAWpBqvE,SAASrvE,GACP,GAAIA,EAAOe,WAAW,OAAQ,CAC5B,IACIk2B,EADO,IAAID,GAAQh3B,GACPi3B,KACZqS,EAASrS,EAAK,GACdlZ,EAAM9Y,KAAK8Y,IAEf,IAAK,IAAI7R,EAAI,EAAGU,EAAIqqB,EAAKz2B,OAAQ0L,EAAIU,EAAGV,IAAK,CAC3C,IAAIqW,EAAM0U,EAAK/qB,GACXhH,EAAOqd,EAAI,GAEf,GAAIrd,EAAM,CAGH6Y,EAFL7Y,EAAOA,EAAKga,iBAGVnB,EAAI7Y,GAAQ,IAGd,IAAIoqE,EAASvxD,EAAI7Y,GAEjB,IAAK,IAAI+H,EAAI,EAAGzC,EAAI8+B,EAAO9oC,OAAQyM,EAAIzC,EAAGyC,IAAK,CAC7C,IAAI6O,EAAMwtB,EAAOr8B,QAGLrP,IAARke,IACFA,EAAG,SAAA/E,OAAY9J,IAGjBqiE,EAAOxzD,GAAOyG,EAAItV,UAInB,CACL,IACIypB,EADO,IAAIF,GAAQx2B,GACH02B,SAChB3Y,EAAM9Y,KAAK8Y,IAEf,IAAK,IAAKwE,EAAKkU,KAAeC,EAAS5U,UAAW,CAC3C/D,EAAIwE,KACPxE,EAAIwE,GAAO,IAGb,IAAI+sD,EAASvxD,EAAIwE,GAEjB,IAAK,IAAKrd,EAAMqqE,KAAa94C,EAC3B64C,EAAOpqE,GAAQqqE,IAUvBC,OAAO1zD,GACL,OAAO7W,KAAK8Y,IAAIjC,EAAIoD,eAQtBuwD,YAAY3zD,EAAK5W,GACf,OAAOD,KAAK8Y,IAAIjC,EAAIoD,eAAeha,GAOrCwqE,OAAO5zD,EAAKgD,GACV7Z,KAAK8Y,IAAIjC,EAAIoD,eAAiBJ,GChHlC,IAAIo3C,GAAe,IAAIyZ,oBAAoB,EAAG,EAAG,MCMjD,IAAIC,GAAsBj4D,GAAS,IAAIw3D,GAAWx3D,GAC9Ck4D,GAAuB/tE,IDCpB,SAAyB9B,GAC9B,OAAOk2D,GAAa4Z,gBAAgB9vE,ICFK8vE,CAAgBhuE,GAK5C,MAAMq9C,WAAoB1C,GAMvC5pC,YAAYwkD,EAAOgV,EAAa9+D,GAC9BwF,MAAMskD,EAAOgV,EAAa9+D,GAE1B,IAAIgoD,EAAS8B,EAAM9B,OACfrwD,EAAOmnE,EAAYnnE,KACnBiC,EAAOjC,EAAKywB,UAAU,EAAG,GACzB9mB,EAAK3J,EAAKywB,UAAU,GAGX,QAATxuB,IACFA,EAAO,OAGTlC,KAAKpD,IAAK,EACVoD,KAAKkC,KAAOA,EACZlC,KAAK4J,GAAKA,EAEV5J,KAAKwoE,iBAAmB,KAGxBxoE,KAAK8qE,eAAiB,GAEtB9qE,KAAKwwC,OAAS42B,EAAY52B,OAC1BxwC,KAAKpD,IAAK,EACVoD,KAAK48C,eAAiB,KACtB58C,KAAKwgE,OAASuK,QAAKvkB,SAEnB,IAAIjW,EAAmB62B,EAAY72B,kBACT,IAAtBA,IACFvwC,KAAK48C,eAAiBwV,EAAMzX,gBAAgBpK,IAG9C,IAAIy6B,EAAS,GACTtY,EAAaN,EAAMM,WAEvB,GAAa,QAATxwD,EACF8oE,EAAO,GAAK1a,EAAO0F,YAAYtD,EAAW,yBAAyB,GAAI,OAAQiY,SAC1E,GAAa,QAATzoE,EACT8oE,EAAO,GAAK1a,EAAO0F,YAAYtD,EAAW,yBAAyB,GAAI,OAAQiY,SAC1E,GAAa,QAATzoE,EACT8oE,EAAO,GAAK1a,EAAO0F,YAAYtD,EAAW,6BAA6B,GAAI,OAAQiY,QAC9E,IAAa,QAATzoE,EAKT,OAJA8oE,EAAO,GAAK1a,EAAO0F,YAAYtD,EAAW,kCAAkC,GAAI,OAAQiY,IACxFK,EAAO,GAAK1a,EAAO0F,YAAYtD,EAAW,iCAAiC,GAAI,OAAQiY,IAMzF,IAAI3kB,EAAUsK,EAAOtK,UAErBsK,EAAO0C,WAAWgY,GACfruE,KAAMquE,IACLhrE,KAAK0xB,KAAKs5C,GAEVhlB,EAAQ3sD,YAOdq4B,KAAKs5C,GACH,IAAKA,EAAO,GAAGpuE,GACb,OAGF,IAAIsF,EAAOlC,KAAKkC,KACZkwD,EAAQpyD,KAAKoyD,MACb9B,EAAS8B,EAAM9B,OACfoC,EAAaN,EAAMM,WACnBp1C,EAAM0tD,EAAO,GAAG3vE,KAAKkvE,OAAOvqE,KAAK4J,IAErC,GAAI0T,EAAK,CACP,GAAa,QAATpb,EACFlC,KAAKwoE,iBAAmBlY,EAAO5+B,KAAKpU,EAAIi9B,MAAM/+C,QAAQ,OAAQ,QAASk3D,QAClE,GAAa,QAATxwD,GAA2B,QAATA,EAC3BlC,KAAKwoE,iBAAmBlY,EAAO5+B,KAAK,8BAAgCpU,EAAI/d,KAAO,OAAQmzD,GACvF1yD,KAAKspE,OAAS,CAAC,CAAChsD,EAAI2tD,OAAQ3tD,EAAI4tD,OAAQ5tD,EAAI6tD,OAAQ7tD,EAAI8tD,QAAS,CAAC9tD,EAAI+tD,QAAS/tD,EAAIguD,QAAShuD,EAAIiuD,QAASjuD,EAAIkuD,SAAU,CAACluD,EAAImuD,KAAMnuD,EAAIouD,KAAMpuD,EAAIquD,KAAMruD,EAAIsuD,OAC1J5rE,KAAK63B,MAAQva,EAAIuuD,MAEJ,QAAT3pE,GACFlC,KAAK+oE,WAAa,CAACzrD,EAAIwuD,QAASxuD,EAAIyuD,MACpC/rE,KAAKwpE,UAAY,CAAC,CAAClsD,EAAI0uD,gBAAiB1uD,EAAI2uD,cAAe3uD,EAAI4uD,gBAAiB,CAAC5uD,EAAI6uD,aAAc7uD,EAAI8uD,WAAY9uD,EAAI+uD,cACvHrsE,KAAKssE,cAAgB,CAAChvD,EAAIivD,SAAUjvD,EAAIkvD,OACxCxsE,KAAKysE,SAAWnvD,EAAIivD,SAAWjvD,EAAIkvD,QAEnCxsE,KAAK+oE,WAAa,CAAC,EAAG,GACtB/oE,KAAKssE,cAAgB,CAAChvD,EAAIovD,UAAWpvD,EAAIqvD,UAAWrvD,EAAIkvD,OACxDxsE,KAAKysE,SAAWnvD,EAAIovD,UAAYpvD,EAAIqvD,UAAYrvD,EAAIkvD,QAGrDxsE,KAAK4jE,SAAU5jE,KAAK6jE,UAAYZ,GAAkB3lD,EAAIsvD,UAAWtc,EAAO5Q,SACpE,GAAa,QAATx9C,GAGLouD,EAAO8E,YAAa,CACtB,IAAK4V,EAAO,GAAGpuE,GACb,OAKF,GAFA0gB,EAAM0tD,EAAO,GAAG3vE,KAAKkvE,OAAOjtD,EAAIuvD,YAEvB,CACP7sE,KAAK6pC,eAAiBvsB,EAAIwvD,eAC1B9sE,KAAK4pC,YAActsB,EAAIyvD,YACvB/sE,KAAK2pC,YAAcrsB,EAAI0vD,YACvBhtE,KAAKypC,MAAQnsB,EAAI2vD,MACjBjtE,KAAKktE,cAAgB5vD,EAAI6vD,cACzBntE,KAAKwpC,OAASlsB,EAAI8vD,OAElB,IAAIhlC,EAAY9qB,EAAI+vD,UAAUvjD,MAAM,KAEpCwmC,EAAO0C,WAAW5qB,EAAUtvB,IAAKw0D,GAAahd,EAAO0F,YAAYtD,EAAWp1C,EAAIiwD,cAAgBD,GAAU,GAAI,cAAe1C,MAC1HjuE,KAAM63D,IACL,IAAK,IAAIqB,KAAYrB,EACnBx0D,KAAK8qE,eAAe7mE,KAAK4xD,EAASx6D,MAGpC2E,KAAKpD,IAAK,KAMhBoD,KAAKwoE,kBACPxoE,KAAKwoE,iBAAiBxV,aACnBr2D,KAAK,IAAMqD,KAAKpD,IAAK,QAG1BM,QAAQswE,KAAK,0BAA2BtrE,EAAMlC,KAAK4J,IAIvDi3D,SAAS5jE,EAAK0M,GACZ,GAAI3J,KAAK48C,eAAgB,CACvB,IAAIA,EAAiB58C,KAAK48C,eAE1B,OAAO58C,KAAKytE,eAAexwE,EAAK0M,EAASsI,QAAU2qC,EAAgB,EAAGA,GACjE,IAA2B,IAAvBjzC,EAAS23D,SAAiB,CACnC,IAAInyB,EAAWnvC,KAAKoyD,MAAM1X,UAAU/wC,EAAS23D,UAAUnyB,SAEvD,OAAOnvC,KAAKytE,eAAexwE,EAAK0M,EAASimC,MAAOT,EAAS,GAAIA,EAAS,IACjE,CACL,IAAIqxB,EAASxgE,KAAKwgE,OAKlB,OAHAvjE,EAAI,GAAKujE,EAAO,GAChBvjE,EAAI,GAAKujE,EAAO,GAETvjE,GAIXwwE,eAAexwE,EAAK2yC,EAAO/L,EAAOshB,GAChC,IAAI3U,EAASxwC,KAAKwwC,OAElB,GAAIZ,EAAQ/L,GAAS+L,EAAQuV,EAG3B,OAFAloD,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,EAGT,IAAK,IAAIgK,EAAIupC,EAAOj1C,OAAS,EAAG0L,GAAK,EAAGA,IAAK,CAC3C,GAAIupC,EAAOvpC,GAAK48B,EAGd,OAFA5mC,EAAI,GAAK,EACTA,EAAI,GAAKgK,EACFhK,EACF,GAAIuzC,EAAOvpC,IAAM2oC,EAGtB,OAFA3yC,EAAI,GAAK,EACTA,EAAI,GAAKgK,EACFhK,EAMX,OAFAA,EAAI,GAAK,EACTA,EAAI,GAAK,EACFA,GC7LI,MAAMk9C,WAAuB3C,ICkB7B,MAAM+C,WAAcwe,GAIjCnrD,YAAYslD,GACVplD,MAAMolD,GAENlzD,KAAK0d,OAAS,KACd1d,KAAKC,KAAO,GACZD,KAAKuvC,OAAS,KACdvvC,KAAKmyD,OAAS,KACdnyD,KAAK06C,UAAY,GACjB16C,KAAK26C,gBAAkB,GACvB36C,KAAK46C,UAAY,GACjB56C,KAAK41C,OAAS,GACd51C,KAAK66C,SAAW,GAChB76C,KAAK86C,kBAAoB,GACzB96C,KAAK+6C,QAAU,GACf/6C,KAAKg7C,iBAAmB,GACxBh7C,KAAKi7C,MAAQ,GACbj7C,KAAKk7C,OAAS,GACdl7C,KAAKm7C,QAAU,GACfn7C,KAAKo7C,YAAc,GACnBp7C,KAAKq7C,YAAc,GACnBr7C,KAAKs7C,iBAAmB,GACxBt7C,KAAKu7C,kBAAoB,GACzBv7C,KAAKw7C,eAAiB,GACtBx7C,KAAKkrC,QAAU,GACflrC,KAAKy7C,aAAe,GACpBz7C,KAAK07C,gBAAkB,GAEvB17C,KAAK0tE,eAAgB,EACrB1tE,KAAK2tE,gBAAiB,EACtB3tE,KAAK4tE,QAAU,GACf5tE,KAAK6tE,cAAgB,GACrB7tE,KAAK8tE,mBAAqB,GAE1B9tE,KAAK+tE,eAAiB,GACtB/tE,KAAKguE,qBAAuB,GAC5BhuE,KAAKiuE,UAAY,GACjBjuE,KAAKkuE,aAAe,GAMtBx8C,KAAK32B,GAEH,IAAI2iB,EAAS,IAAIywD,GAEjBzwD,EAAOgU,KAAK32B,GAEZiF,KAAK0d,OAASA,EAGd1d,KAAKC,KAAOyd,EAAOzd,KAGnB,IAAIsvC,EAAS7xB,EAAO6xB,OACpBvvC,KAAKmyD,OC3EF,SAAwB3rD,EAAKE,GAClC,IAAI0nE,EAAO5nE,EAAI,GACX6nE,EAAO7nE,EAAI,GACX8nE,EAAO9nE,EAAI,GACX+nE,EAAO7nE,EAAI,GACX8nE,EAAO9nE,EAAI,GACX+nE,EAAO/nE,EAAI,GACXgoE,EAAKH,EAAOH,EACZO,EAAKH,EAAOH,EACZO,EAAKH,EAAOH,EAEhB,MAAO,CACL/hB,OAAQ,IAAItuD,aAAa,EAAEmwE,EAAOG,GAAQ,GAAIF,EAAOG,GAAQ,GAAIF,EAAOG,GAAQ,IAChFjiB,OAAQjmD,KAAKowD,KAAK+X,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAAM,GD8DnCC,CAAet/B,EAAO/oC,IAAK+oC,EAAO7oC,KAChD1G,KAAKuvC,OAASA,EAGd,IAAK,IAAI+xB,KAAY5jD,EAAOg9B,UAC1B16C,KAAK06C,UAAUz2C,KAAKq9D,GAItB,IAAK,IAAI1kB,KAAkBl/B,EAAOi9B,gBAChC36C,KAAK26C,gBAAgB12C,KAAK24C,GAG5B,IAAIkyB,GAAoB,EAGxB,IAAK,IAAInpB,KAAWjoC,EAAOm9B,SAAU,CACnC,IAAIz7C,EAAOumD,EAAQvmD,KACf22C,EAAgB4P,EAAQ5P,cACxBt/B,EAAQkvC,EAAQlvC,MAWpB,GATsB,IAAlBs/B,IACF32C,EAAI,wBAAA0S,OAA2Bm3D,GAAelzB,GAAc,QAEtC,IAAlBA,GAAyC,IAAlBA,IACzB+4B,GAAoB,KAKnB1vE,EAAK2vE,SAAS,UAAY3vE,EAAK2vE,SAAS,QAAS,CAEpD,IAAIzmE,EAAQlJ,EAAKuf,QAAQ,SAEV,IAAXrW,IAEFA,EAAQlJ,EAAKuf,QAAQ,UAGR,IAAXrW,IAEFlJ,EAAOA,EAAK3D,MAAM,EAAG6M,EAAQ,IAIjCtI,KAAKkuE,aAAajqE,KAAK8xC,GAEvB,IAAIi5B,EAAahvE,KAAKswD,OAAO5+B,KAAKtyB,EAAMY,KAAK0yD,YAE7Csc,EAAW7b,SAAmB,EAAR18C,GACtBu4D,EAAW5b,SAAmB,EAAR38C,GAEtBzW,KAAK66C,SAAS52C,KAAK+qE,GAGjBF,GAEF9uE,KAAKivE,mBAIP,IAAK,IAAI/K,KAAoBxmD,EAAOo9B,kBAClC96C,KAAK86C,kBAAkB72C,KAAK,IAAI+xC,GAAiBh2C,KAAMkkE,IAIzD,IAAIZ,EAAU,EACd,IAAK,IAAIpK,KAAYx7C,EAAOk9B,UAAW,CACrC,IAAIs0B,EAAY,GAEhB,IAAK,IAAIr5B,KAASqjB,EAAStjB,OAAQ,CACjC,IAAIu5B,EAAS,IAAIh6B,GAAMn1C,KAAM61C,EAAOytB,IAAWpK,EAASvjB,eAExDu5B,EAAUjrE,KAAKkrE,GACfnvE,KAAK41C,OAAO3xC,KAAKkrE,GAEbA,EAAO9I,UACTrmE,KAAK0tE,eAAgB,GAIzB1tE,KAAK46C,UAAU32C,KAAKirE,GAItB,IAAK,IAAInK,KAAmBrnD,EAAOs9B,iBACjCh7C,KAAKg7C,iBAAiB/2C,KAAK,IAAIqzC,GAAgBt3C,KAAM+kE,IAIvD,GAAIrnD,EAAOq9B,QAAQx/C,OAAQ,CACzB,IAAIg8C,EAAW,EACX63B,EAAU,EACVvB,EAAgB,GAChBC,EAAqB,GAEzB,IAAK,IAAIrI,KAAU/nD,EAAOq9B,QAAS,CACjC,IAAIs0B,EAAU,IAAIp5B,GAAOj2C,KAAMylE,EAAQluB,KAEnC83B,EAAQhJ,UACVrmE,KAAK2tE,gBAAiB,GAGxB3tE,KAAK+6C,QAAQ92C,KAAKorE,GAGlB,IAAK,IAAIF,KAAUnvE,KAAK46C,UAAU6qB,EAAO/uB,YAAa,CACpD,IAAI44B,EAAQ,IAAIhJ,GAAM8I,IAAWD,EAAQE,GAErCF,EAAO/5B,WAAa,EACtBy4B,EAAc5pE,KAAKqrE,GAEnBxB,EAAmB7pE,KAAKqrE,IAM9BxB,EAAmB9lD,KAAK,CAAC3f,EAAG1K,IAAM0K,EAAEwtC,MAAMF,cAAgBh4C,EAAEk4C,MAAMF,eAElE31C,KAAK6tE,cAAc5pE,QAAQ4pE,GAC3B7tE,KAAK8tE,mBAAmB7pE,QAAQ6pE,GAChC9tE,KAAK4tE,QAAQ3pE,QAAQ4pE,KAAkBC,GAEvC9tE,KAAKuvE,eAGPvvE,KAAKq7C,YAAc39B,EAAO29B,YAG1B,IAAIzqB,EAAW,EAGf,IAAK,IAAIs2C,KAAQxpD,EAAOu9B,MACtBj7C,KAAKi7C,MAAMh3C,KAAK,IAAIg0C,GAAKj4C,KAAMknE,EAAMt2C,MAIvC,IAAK,IAAIu2C,KAASzpD,EAAOw9B,OACvBl7C,KAAKk7C,OAAOj3C,KAAK,IAAIk0C,GAAMn4C,KAAMmnE,EAAOv2C,MAI1C,IAAK,IAAI4+C,KAAU9xD,EAAOy9B,QACxBn7C,KAAKm7C,QAAQl3C,KAAK,IAAIu0C,GAAOx4C,KAAMwvE,EAAQ5+C,MAI7C,IAAK,IAAIy2C,KAAc3pD,EAAO09B,YAC5Bp7C,KAAKo7C,YAAYn3C,KAAK,IAAIw0C,GAAWz4C,KAAMqnE,EAAYz2C,MAIzD,IAAK,IAAI02C,KAAmB5pD,EAAO49B,iBACjCt7C,KAAKs7C,iBAAiBr3C,KAAK,IAAI00C,GAAgB34C,KAAMsnE,EAAiB12C,MAIxE,IAAK,IAAI6+C,KAAoB/xD,EAAO69B,kBAClCv7C,KAAKu7C,kBAAkBt3C,KAAK,IAAIi1C,GAAiBl5C,KAAMyvE,EAAkB7+C,MAI3E5wB,KAAKu7C,kBAAkBvzB,KAAK,CAAC3f,EAAG1K,IAAM0K,EAAEstC,cAAgBh4C,EAAEg4C,eAI1D,IAAK,IAAI6xB,KAAiB9pD,EAAO89B,eAC/Bx7C,KAAKw7C,eAAev3C,KAAK,IAAI21C,GAAc55C,KAAMwnE,EAAe52C,MAIlE,IAAK,IAAIua,KAAUztB,EAAOwtB,QACxBlrC,KAAKkrC,QAAQjnC,KAAK,IAAIqkC,GAAOtoC,KAAMmrC,EAAQva,MAI7C,IAAK,IAAIw2C,KAAe1pD,EAAO+9B,aAC7Bz7C,KAAKy7C,aAAax3C,KAAK,IAAIi2C,GAAYl6C,KAAMonE,EAAax2C,MAI5D,IAAK,IAAI22C,KAAkB7pD,EAAOg+B,gBAChC17C,KAAK07C,gBAAgBz3C,KAAK,IAAIk2C,GAAen6C,KAAMunE,EAAgB32C,MAIrE5wB,KAAK+tE,eAAe9pE,QAAQjE,KAAKi7C,SAAUj7C,KAAKk7C,UAAWl7C,KAAKm7C,WAAYn7C,KAAKo7C,eAAgBp7C,KAAKs7C,oBAAqBt7C,KAAKu7C,qBAAsBv7C,KAAKw7C,kBAAmBx7C,KAAKkrC,WAAYlrC,KAAKy7C,gBAAiBz7C,KAAK07C,iBAG1N17C,KAAK0vE,gBAAgB,GAGrB,IAAK,IAAIzoE,EAAI,EAAGU,EAAI3H,KAAK+tE,eAAexyE,OAAQ0L,EAAIU,EAAGV,IACrDjH,KAAKguE,qBAAqB/mE,GAAKjH,KAAK+tE,eAAe/tE,KAAKiuE,UAAUhnE,IAIpEjH,KAAK2vE,gBAQPV,mBACE,IAAI3e,EAAStwD,KAAKswD,OAElB,IAAKA,EAAOwG,gBAAgB,cAAe,CACzC,IAAIpE,EAAa1yD,KAAK0yD,WAClBkd,EAAa,GACbC,EAAY,GAEhB,IAAK,IAAI5oE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAI2C,GAAM,GAAK3C,GAAG4O,SAAS,EAAG,KAE9B+5D,EAAW3oE,GAAKqpD,EAAO5+B,KAAI,4CAAA5f,OAA6ClI,EAAE,QAAQ8oD,GAClFmd,EAAU5oE,GAAKqpD,EAAO5+B,KAAI,0CAAA5f,OAA2ClI,EAAE,QAAQ8oD,GAGjFpC,EAAOgG,iBAAiB,aAAcsZ,GACtCtf,EAAOgG,iBAAiB,YAAauZ,IAQzCtO,UAAUD,GACR,IAAIyM,EAAiB/tE,KAAK+tE,eAE1B,IAAK,IAAI9mE,EAAI,EAAGU,EAAIomE,EAAexyE,OAAQ0L,EAAIU,EAAGV,IAChD,GAAI8mE,EAAe9mE,GAAGk9D,SAAS4D,QAAQzG,GACrC,OAAO,EAIX,OAAO,EAMTqO,gBACE,IAAIxL,EAAW,GAEf,IAAK,IAAIl9D,EAAI,EAAGU,EAAI3H,KAAK06C,UAAUn/C,OAAQ0L,EAAIU,EAAGV,IAChDk9D,EAASl9D,GAAKjH,KAAKuhE,UAAUt6D,GAG/BjH,KAAKmkE,SAAWA,EAMlBoL,eACE,IAAIx0B,EAAU/6C,KAAK+6C,QAEnB,GAAIA,EAAQx/C,OAAS,EAAG,CACtB,IAAImkD,EAAK1/C,KAAKswD,OAAO5Q,GACjBowB,EAAiB,GACjBC,EAAc,GACdC,EAAmB,EACnBC,EAAqB,GACrBC,EAAqB,EAEzB,IAAK,IAAIjpE,EAAI,EAAGU,EAAIozC,EAAQx/C,OAAQ0L,EAAIU,EAAGV,IAAK,CAC9C,IAAIw+D,EAAS1qB,EAAQ9zC,GACjBivC,EAAWuvB,EAAOO,cAClB7vB,EAAUsvB,EAAOQ,YACjBnvB,EAAS2uB,EAAOS,SAChBN,EAAcH,EAAOU,eACrBN,EAAcJ,EAAOW,gBACrB9vB,EAAQmvB,EAAOvL,UACfiW,EAAiBH,EACjBI,EAAgBD,EAAiBj6B,EAASjzC,WAC1CotE,EAAeD,EAAgBj6B,EAAQlzC,WACvCqtE,EAAoBD,EAAev5B,EAAO7zC,WAC1CstE,EAAoBD,EAAoB1K,EAAY3iE,WAExD6sE,EAAe7oE,GAAK,IAAIi+D,GAAcllE,KAAM,CAACmwE,EAAgBC,EAAeC,EAAcC,EAAmBC,EAAmBL,GAAqBzK,EAAOL,UAAW9uB,EAAM/6C,QAE7Kw0E,EAAY9rE,KAAK,CAACksE,EAAgBj6B,IAClC65B,EAAY9rE,KAAK,CAACmsE,EAAej6B,IACjC45B,EAAY9rE,KAAK,CAACosE,EAAcv5B,IAChCi5B,EAAY9rE,KAAK,CAACqsE,EAAmB1K,IACrCmK,EAAY9rE,KAAK,CAACssE,EAAmB1K,IAErCoK,EAAmBhsE,KAAK,CAACisE,EAAoB55B,IAE7C05B,EAAmBO,EAAoB1K,EAAY5iE,WACnDitE,GAAsB55B,EAAMrzC,WAG9B,IAAIpG,EAAc6iD,EAAG0Z,eACrB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcz8D,GAC/B6iD,EAAG6Z,WAAW7Z,EAAG4Z,aAAc0W,EAAkBtwB,EAAG8Z,aAEpD,IAAK,IAAIvyD,EAAI,EAAGU,EAAIooE,EAAYx0E,OAAQ0L,EAAIU,EAAGV,IAC7Cy4C,EAAGsf,cAActf,EAAG4Z,aAAcyW,EAAY9oE,GAAG,GAAI8oE,EAAY9oE,GAAG,IAGtE,IAAI0yD,EAAaja,EAAG0Z,eACpB1Z,EAAG2Z,WAAW3Z,EAAGka,qBAAsBD,GACvCja,EAAG6Z,WAAW7Z,EAAGka,qBAAsBsW,EAAoBxwB,EAAG8Z,aAE9D,IAAK,IAAIvyD,EAAI,EAAGU,EAAIsoE,EAAmB10E,OAAQ0L,EAAIU,EAAGV,IACpDy4C,EAAGsf,cAActf,EAAGka,qBAAsBqW,EAAmBhpE,GAAG,GAAIgpE,EAAmBhpE,GAAG,IAG5FjH,KAAKwwE,mBAAqB3zE,EAC1BmD,KAAKywE,qBAAuB9W,EAC5B35D,KAAK8vE,eAAiBA,GAO1BJ,eAAepjD,GACb,IAAK,IAAIrlB,EAAI,EAAGU,EAAI3H,KAAK+tE,eAAexyE,OAAQ0L,EAAIU,EAAGV,IAAK,CAC1D,IAAIma,EAASphB,KAAK+tE,eAAe9mE,GAE7Bma,EAAOq2B,WAAanrB,IACtBtsB,KAAKiuE,UAAUhqE,KAAKgD,GAEpBjH,KAAK0vE,eAAetuD,EAAOwP,YASjCxzB,KAAKk+D,EAAQlM,GACX,MAAMoE,EAAQxzD,KAAKswD,OAAOkD,MAC1B,IAAI9T,EAAK1/C,KAAKswD,OAAO5Q,GAIjB6b,EAASv7D,KAAKswD,OAAOoE,UAAUxvD,IAAI,qBACvCsuD,EAAMjO,iBAAiBgW,GACvBv7D,KAAKu7D,OAASA,EAEd,MAAMlZ,EAAkB3C,EAAGoC,WAAWO,gBAChC3B,EAAU6a,EAAO7a,QACjBD,EAAW8a,EAAO9a,SAExBf,EAAG8b,iBAAiB/a,EAASgb,OAAO,EAAOrM,EAAMjkB,OAAOwd,uBAExDjJ,EAAG2Z,WAAW3Z,EAAGka,qBAAsB55D,KAAKywE,sBAE5C/wB,EAAGkc,UAAUnb,EAASuc,UAAW,GAIjC,IAAI0T,EAAYhwB,EAAQiwB,YACpB5V,EAAcra,EAAQkwB,cAC1BlxB,EAAG2Z,WAAW3Z,EAAG4Z,aAAcgC,EAAOuV,aACtCnxB,EAAG4c,oBAAoBoU,EAAW,EAAGhxB,EAAGgF,eAAe,EAAO,EAAG,GACjEhF,EAAG4c,oBAAoBvB,EAAa,EAAGrb,EAAGgF,eAAe,EAAM,EAAG,GAElEhF,EAAGkG,cAAclG,EAAGgc,WACpBhc,EAAGsE,YAAYtE,EAAGuE,WAAYqX,EAAOK,aACrCjc,EAAGkc,UAAUnb,EAASob,UAAW,IACjCnc,EAAGoc,UAAUrb,EAASsb,aAAcT,EAAOU,YAC3Ctc,EAAGoc,UAAUrb,EAASwb,UAAWX,EAAOY,SAExC,IAAI4U,EAAapwB,EAAQ0b,aACzB1c,EAAG2Z,WAAW3Z,EAAG4Z,aAAcgC,EAAOe,kBACtC3c,EAAG4c,oBAAoBwU,EAAY,EAAGpxB,EAAG6a,gBAAgB,EAAO,EAAG,GAEnElY,EAAgBO,yBAAyB8tB,EAAW,GACpDruB,EAAgBO,yBAAyBmY,EAAa,GACtD1Y,EAAgBO,yBAAyBkuB,EAAY,GAMvDC,SACE,IAAIrxB,EAAK1/C,KAAKswD,OAAO5Q,GACjB2C,EAAkB3C,EAAGoC,WAAWO,gBAChC3B,EAAU1gD,KAAKu7D,OAAO7a,QAG1BhB,EAAG2X,UAAU,GACb3X,EAAGgd,QAAQhd,EAAGkd,OACdld,EAAG6D,OAAO7D,EAAGid,WACbjd,EAAG6D,OAAO7D,EAAG8D,YAGbnB,EAAgBO,yBAAyBlC,EAAQiwB,YAAa,GAC9DtuB,EAAgBO,yBAAyBlC,EAAQkwB,cAAe,GAChEvuB,EAAgBO,yBAAyBlC,EAAQ0b,aAAc,GAC/D/Z,EAAgBO,yBAAyBlC,EAAQswB,cAAe,GAChE3uB,EAAgBO,yBAAyBlC,EAAQuwB,aAAc,GAC/D5uB,EAAgBO,yBAAyBlC,EAAQwwB,WAAY,GAC7D7uB,EAAgBO,yBAAyBlC,EAAQywB,cAAe,GAOlEC,YAAY9V,EAAQgU,GAClB,IAYI3pB,EAZAjG,EAAK1/C,KAAKswD,OAAO5Q,GACjB2C,EAAkB3C,EAAGoC,WAAWO,gBAChCkZ,EAASv7D,KAAKu7D,OACd7a,EAAU1gD,KAAKu7D,OAAO7a,QACtBD,EAAW8a,EAAO9a,SAClBglB,EAAS6J,EAAM7J,OACf5vB,EAAQy5B,EAAMz5B,MACdw7B,EAAgBrxE,KAAK8vE,eAAerK,EAAOn9D,OAC3CgpE,EAActxE,KAAKkuE,aAAar4B,EAAMR,WAE1CQ,EAAMz4C,KAAKm+D,GAGX,IAAIgW,GAAc,EAEE,IAAhBD,GACF3rB,EAAU3lD,KAAKswD,OAAOwG,gBAAgB,cACtCya,GAAc,GACW,IAAhBD,GACT3rB,EAAU3lD,KAAKswD,OAAOwG,gBAAgB,aACtCya,GAAc,GAEd5rB,EAAU3lD,KAAK66C,SAAShF,EAAMR,WAGhCqK,EAAGoc,UAAUrb,EAAS+wB,cAAeD,GACrC7xB,EAAGoc,UAAUrb,EAASgxB,cAAe57B,EAAMwuB,aAC3C3kB,EAAGoc,UAAUrb,EAASixB,qBAAsB77B,EAAMyuB,oBAClD5kB,EAAGoc,UAAUrb,EAASkxB,kBAAmB97B,EAAM0uB,iBAC/C7kB,EAAGoc,UAAUrb,EAASmxB,eAAgB/7B,EAAM2uB,cAI5C9kB,EAAGmyB,UAAUpxB,EAAS8c,UAAW,EAAI1nB,EAAMouB,UAAU,GAAI,EAAIpuB,EAAMouB,UAAU,IAE7EjkE,KAAKgkD,YAAY2B,EAAS,EAAG2V,EAAO7J,WAEpC,IAAIqgB,EAAcpxB,EAAQswB,cACtBE,EAAaxwB,EAAQqxB,aACrBZ,EAAgBzwB,EAAQsxB,gBACxBC,EAAavxB,EAAQuwB,aAEzB5uB,EAAgBO,yBAAyBkvB,EAAa,GACtDzvB,EAAgBO,yBAAyBsuB,EAAY,GACrD7uB,EAAgBO,yBAAyBuuB,EAAe,GACxD9uB,EAAgBO,yBAAyBqvB,EAAY,GAErDvyB,EAAG2Z,WAAW3Z,EAAG4Z,aAAcgC,EAAO4W,oBAEtCxyB,EAAG4c,oBAAoBwV,EAAa,EAAGpyB,EAAGgF,eAAe,EAAM,EAAG1kD,KAAKk1D,UAAYuQ,EAAOn9D,MAAQ,GAGlGo3C,EAAG2Z,WAAW3Z,EAAG4Z,aAAcgC,EAAO6W,cAEtCzyB,EAAG4c,oBAAoB4U,EAAY,EAAGxxB,EAAG8c,OAAO,EAAO,GAAqB,EAAjBx8D,KAAKk1D,UAAgBrf,EAAMvtC,MAAQ,GAC9Fo3C,EAAG4c,oBAAoB6U,EAAe,EAAGzxB,EAAG8c,OAAO,EAAO,GAAqB,EAAjBx8D,KAAKk1D,UAAgBrf,EAAMvtC,MAAQ,EAAI,IAErGo3C,EAAG4c,oBAAoB2V,EAAY,EAAGvyB,EAAGgF,eAAe,EAAM,EAAG4W,EAAO8W,gBAAgBr+C,WAAa/zB,KAAKk1D,UAAYrf,EAAMvtC,OAE5Ho3C,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKwwE,oBAEpCa,EAAcj0E,KAAKm+D,EAAQ1lB,EAAMN,SAEjC87B,EAActmE,OAAOuwD,EAAOtrD,OAQ9BqiE,cAAc/W,EAAQlM,EAAOwe,GAC3B,GAAIA,GAAWA,EAAQryE,OAAQ,CAC7ByE,KAAK5C,KAAKk+D,EAAQlM,GAElB,IAAK,IAAInoD,EAAI,EAAGU,EAAIimE,EAAQryE,OAAQ0L,EAAIU,EAAGV,IACzCjH,KAAKoxE,YAAY9V,EAAQsS,EAAQ3mE,IAGnCjH,KAAK+wE,UAST1e,aAAah3D,GACX,IAAI+zD,EAAQ/zD,EAAK+zD,MACb6I,EAAU58D,EAAK48D,QAEnB,IAAK,IAAIhxD,EAAI,EAAGU,EAAItM,EAAK68D,YAAajxD,EAAIU,EAAGV,IAC3CjH,KAAKqyE,cAAcpa,EAAQhxD,GAAImoD,EAAOpvD,KAAK6tE,eAS/Cvb,kBAAkBj3D,GAChB,IAAI+zD,EAAQ/zD,EAAK+zD,MACbqC,EAAYp2D,EAAKo2D,UACjBwG,EAAU58D,EAAK48D,QACf1c,EAAoBlgD,EAAKkgD,kBACzBC,EAAiBngD,EAAKmgD,eACtB82B,EAAsBj3E,EAAKi3E,oBAG/B,IAAK,IAAIrrE,EAAI,EAAGU,EAAItM,EAAK68D,YAAajxD,EAAIU,EAAGV,IAC3CjH,KAAKqyE,cAAcpa,EAAQhxD,GAAImoD,EAAOpvD,KAAK8tE,oBAI7C,GAAIvyB,EAAkBhgD,QAAU+2E,EAAoB/2E,QAAUigD,EAAejgD,OAAQ,CACnF,IAAIi4D,EAAQxzD,KAAKswD,OAAOkD,MACpB9T,EAAK1/C,KAAKswD,OAAO5Q,GAErBA,EAAG2X,UAAU,GACb3X,EAAG6D,OAAO7D,EAAGkd,OACbld,EAAGgd,QAAQhd,EAAGid,WACdjd,EAAG6D,OAAO7D,EAAG8D,YAEb,IAAI+X,EAASv7D,KAAKswD,OAAOoE,UAAUxvD,IAAI,qBACvCsuD,EAAMjO,iBAAiBgW,GAEvB7b,EAAG8b,iBAAiBD,EAAO9a,SAASgb,OAAO,EAAOrM,EAAMjkB,OAAOwd,uBAE/DjJ,EAAGkc,UAAUL,EAAO9a,SAASuc,UAAW,GAExCtd,EAAGoc,UAAUP,EAAO9a,SAAS8xB,mBAAmB,GAEhD,IAAK,IAAItrE,EAAI,EAAGU,EAAI4zC,EAAkBhgD,OAAQ0L,EAAIU,EAAGV,IACnDs0C,EAAkBt0C,GAAG8D,OAAO0mD,EAAW8J,GAGzC,IAAK,IAAIt0D,EAAI,EAAGU,EAAI2qE,EAAoB/2E,OAAQ0L,EAAIU,EAAGV,IACrDqrE,EAAoBrrE,GAAG8D,OAAO0mD,EAAW8J,GAG3C7b,EAAGoc,UAAUP,EAAO9a,SAAS8xB,mBAAmB,GAEhD,IAAK,IAAItrE,EAAI,EAAGU,EAAI6zC,EAAejgD,OAAQ0L,EAAIU,EAAGV,IAChDu0C,EAAev0C,GAAG8D,OAAO0mD,EAAW8J,KEznB7B,MAAMiX,GAInB5kE,YAAY6kE,GAEVzyE,KAAKyyE,YAAcA,EAEnBzyE,KAAK8Z,QAAU,GAEf9Z,KAAK0yE,MAAQ,EAUfC,WAAWC,EAAa3oD,GACtB,IAAInQ,EAAU9Z,KAAK8Z,QAGf9Z,KAAK0yE,QAAU54D,EAAQve,QACzBue,EAAQ7V,KAAKjE,KAAK6yE,gBAIpB,IAAIzxD,EAAStH,EAAQ9Z,KAAK0yE,OAM1B,OAJA1yE,KAAK0yE,OAAS,EAEdtxD,EAAO6pC,MAAM2nB,EAAa3oD,GAEnB7I,EAMT/B,SACE,IAAIvF,EAAU9Z,KAAK8Z,QAEnB,IAAK,IAAI7S,EAAI,EAAGA,EAAIjH,KAAK0yE,MAAOzrE,IAAK,CACnC,IAAIma,EAAStH,EAAQ7S,GAErBma,EAAO/B,SAEH+B,EAAO0xD,QAAU,IACnB9yE,KAAK0yE,OAAS,EAIVzrE,IAAMjH,KAAK0yE,QACb54D,EAAQ7S,GAAK6S,EAAQ9Z,KAAK0yE,OAC1B54D,EAAQ9Z,KAAK0yE,OAAStxD,EACtBna,GAAK,IAKXjH,KAAK+yE,aAMPpjB,KAAKijB,GACH,IAAII,EAAWJ,EAAYK,gBAE3B,GAAID,GAAY,EACd,IAAK,IAAI/rE,EAAI,EAAGA,EAAI+rE,EAAU/rE,GAAK,EAAG2rE,EAAYK,kBAChDjzE,KAAKimD,KAAK2sB,GAQhBG,cAQAhoE,OAAO0mD,EAAW8J,IASlB1J,MAAMqhB,GACJ,IAAK,IAAI9xD,KAAUphB,KAAK8Z,QAClBo5D,IAAU9xD,EAAOwxD,YAAYjpE,WAC/ByX,EAAO0xD,OAAS,ICpGxB,IAAI/lB,GAAepG,QAAKH,SACpB2sB,GAAehtB,QAAKK,SACpB4sB,GAAe,IAAIn1E,aAAa,GAEhCo1E,GAAe,IAAIp1E,aAAa,GAChCq1E,GAAc,IAAIr1E,aAAa,GAC/Bs1E,GAAY,IAAIt1E,aAAa,GAKlB,MAAMu1E,GAInB5lE,YAAY26D,GACVvoE,KAAKuoE,QAAUA,EACfvoE,KAAK4yE,YAAc,KAEnB5yE,KAAKyzE,iBAAmBlL,EAAQkK,YAAYjK,iBAAiBjX,cAC7DvxD,KAAK0zE,SAAWvtB,QAAKK,SACrBxmD,KAAK64C,QAAU,EAMjBoS,MAAM2nB,GACJ,IAAIjpE,EAAWipE,EAAYjpE,SACvB9P,EAAO8P,EAASgqE,MAAM3zE,KAAKuoE,QAAQkK,YAAYnqE,OAC/CmrE,EAAmBzzE,KAAKyzE,iBACxB57C,EAAQh+B,EAAK4zD,WACbimB,EAAW1zE,KAAK0zE,SAEpBd,EAAYlK,YAAY0K,IAExBR,EAAYhK,YAAYyK,IACxBT,EAAY/J,WAAWyK,IACvBV,EAAYnK,SAAS8K,IAErBvzE,KAAK4yE,YAAcA,EACnB5yE,KAAKnG,KAAOA,EACZmG,KAAK8yE,OAASO,GAAa,GAC3BrzE,KAAK64C,QAAUy6B,GAAY,GAAKz7C,EAAM,GAGtC8uB,QAAKwD,SAAS4C,IACdpG,QAAKgE,QAAQoC,GAAcA,GAAc/O,IAAez3C,KAAK2qD,GAAI3qD,KAAK2qD,KACtEvK,QAAKitB,QAAQ7mB,GAAcA,GAAc/O,IAAeo1B,GAAa,GAAIA,GAAa,KACtFjtB,QAAKoE,cAAcmpB,EAAUptB,GAAayG,IAG1C5G,QAAKoE,cAAcmpB,EAAUA,EAAU75E,EAAK2zD,eAG5CrH,QAAKtuB,MAAM67C,EAAUA,EAAUH,GAAU,IAGzCptB,QAAK4D,IAAI2pB,EAAUA,EAAU77C,GAE7BluB,EAASylD,MAAMmC,YAAYkiB,GAE3BA,EAAiBllB,kBAAkB10D,EAAK0zD,cAAe5G,QAAKktB,aAAa9mB,GAAczG,GAAatI,GAAc,EAAa,EAAVz3C,KAAK2qD,KAAUr3D,EAAK4zD,YACzIgmB,EAAiBK,YAAY,GAC7BL,EAAiBrlE,OAMnBiR,SACE,IAAIo0D,EAAmBzzE,KAAKyzE,iBACxBC,EAAW1zE,KAAK0zE,SAChBK,EAAuD,KAA1CN,EAAiBrhB,MAAM9B,OAAOmE,UAE/Cgf,EAAiBvU,QAAS,EAE1Bl/D,KAAK8yE,QAAUiB,EAEfL,EAAS,IAAM1zE,KAAK64C,QAAUk7B,EAE9BN,EAAiB7pB,KAAKzD,QAAKtuB,MAAMs7C,GAAcO,EAAUK,IAErD/zE,KAAK8yE,QAAU,GACjB9yE,KAAKyzE,iBAAiB5kE,QCnFb,MAAM8pC,WAAwB65B,GAI3CvsB,KAAK2sB,GACH5yE,KAAK2yE,WAAWC,GAMlBC,eACE,OAAO,IAAIW,GAASxzE,OCZT,MAAMg0E,WAA8BxB,GAIjD5kE,YAAY6kE,GACV3kE,MAAM2kE,GAENzyE,KAAK3E,KAAO,IAAI4C,aAAa,GAC7B+B,KAAKjF,OAAS03E,EAAYrgB,MAAM9B,OAAO5Q,GAAG0Z,eAC1Cp5D,KAAKi0E,WAAa,EAQpBtB,WAAWC,EAAa3oD,GACtB,OAAOnc,MAAM6kE,WAAWC,EAAa3oD,GAMvC8oD,aACE,IAAIj5D,EAAU9Z,KAAK8Z,QACf44D,EAAQ1yE,KAAK0yE,MACbwB,EAAaxB,EAAQ1yE,KAAKm0E,gBAE9B,GAAIn0E,KAAK3E,KAAKE,OAAS24E,EAAY,CACjCl0E,KAAK3E,KAAO,IAAI4C,aAAakgD,GAAW+1B,IAExC,IAAIx0B,EAAK1/C,KAAKyyE,YAAYrgB,MAAM9B,OAAO5Q,GAEvCA,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKjF,QACpC2kD,EAAG6Z,WAAW7Z,EAAG4Z,aAAct5D,KAAK3E,KAAK4H,WAAYy8C,EAAGif,cAG1D,IAAItjE,EAAO2E,KAAK3E,KAEhB,IAAK,IAAI4L,EAAI,EAAG0uB,EAAS,EAAG1uB,EAAIyrE,EAAOzrE,GAAK,EAAG0uB,GAAU,GAAI,CAC3D,IAAIvU,EAAStH,EAAQ7S,GACjBivC,EAAW90B,EAAO80B,SAClBk+B,EAAMhzD,EAAOgzD,IACbC,EAAMjzD,EAAOizD,IACbC,EAAMlzD,EAAOkzD,IACbC,EAAMnzD,EAAOmzD,IACbC,EAAMpzD,EAAOozD,IAEjBn5E,EAAKs6B,EAAS,GAAKugB,EAAS,GAC5B76C,EAAKs6B,EAAS,GAAKugB,EAAS,GAC5B76C,EAAKs6B,EAAS,GAAKugB,EAAS,GAC5B76C,EAAKs6B,EAAS,GAAKy+C,EACnB/4E,EAAKs6B,EAAS,GAAK6+C,EAEnBn5E,EAAKs6B,EAAS,GAAKugB,EAAS,GAC5B76C,EAAKs6B,EAAS,GAAKugB,EAAS,GAC5B76C,EAAKs6B,EAAS,GAAKugB,EAAS,GAC5B76C,EAAKs6B,EAAS,GAAK0+C,EACnBh5E,EAAKs6B,EAAS,GAAK6+C,EAEnBn5E,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAM4+C,EACpBl5E,EAAKs6B,EAAS,IAAM6+C,EAEpBn5E,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAMy+C,EACpB/4E,EAAKs6B,EAAS,IAAM6+C,EAEpBn5E,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAM4+C,EACpBl5E,EAAKs6B,EAAS,IAAM6+C,EAEpBn5E,EAAKs6B,EAAS,IAAMugB,EAAS,GAC7B76C,EAAKs6B,EAAS,IAAMugB,EAAS,IAC7B76C,EAAKs6B,EAAS,IAAMugB,EAAS,IAC7B76C,EAAKs6B,EAAS,IAAM2+C,EACpBj5E,EAAKs6B,EAAS,IAAM6+C,GAQxBzpE,OAAO0mD,EAAW8J,GAChB,IAAIkX,EAAczyE,KAAKyyE,YACnBC,EAAQ1yE,KAAK0yE,MAEjB,GAAID,EAAYjK,kBAAoBkK,EAAQ,EAAG,CAC7C,IAAItgB,EAAQqgB,EAAYrgB,MACpB1S,EAAK0S,EAAM9B,OAAO5Q,GAEtBA,EAAGmd,UAAU4V,EAAY7O,SAAU6O,EAAY5O,UAE/CnkB,EAAG4d,WAAW/B,EAAO9a,SAASg0B,aAAchC,EAAY1J,YAExD3W,EAAMpO,YAAYyuB,EAAYjK,iBAAkB,EAAG/W,GAEnD/R,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKjF,QACpC2kD,EAAGsf,cAActf,EAAG4Z,aAAc,EAAGt5D,KAAK3E,KAAKgG,SAAS,EAAW,GAARqxE,IAE3DhzB,EAAG4c,oBAAoBf,EAAO7a,QAAQ6b,WAAY,EAAG7c,EAAG8c,OAAO,EAAO,GAAI,GAC1E9c,EAAG4c,oBAAoBf,EAAO7a,QAAQg0B,UAAW,EAAGh1B,EAAG8c,OAAO,EAAO,GAAI,IAEzE9c,EAAGi1B,WAAWj1B,EAAGke,UAAW,EAAW,EAAR8U,KC/GrC,IAAI3lB,GAAepG,QAAKH,SACpBsG,GAAe3G,QAAKK,SACpBouB,GAAY,IAAI55E,WAAW,GAC3B65E,GAAY,IAAI52E,aAAa,GAC7B62E,GAAa,IAAI72E,aAAa,GAC9Bm1E,GAAe,IAAIn1E,aAAa,GAChC82E,GAAgB,IAAI92E,aAAa,GACjCs1E,GAAY,IAAIt1E,aAAa,GAC7Bq1E,GAAc,IAAIr1E,aAAa,GAE/B+2E,IADW,IAAI/2E,aAAa,GACjB,CAACkoD,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,SAAUL,QAAKK,WAKjF,MAAMyuB,GAInBrnE,YAAY26D,GACVvoE,KAAKuoE,QAAUA,EACfvoE,KAAK4yE,YAAc,KACnB5yE,KAAK8yE,OAAS,EACd9yE,KAAKkpE,MAAO,EACZlpE,KAAKpE,SAAWuqD,QAAKK,SACrBxmD,KAAK0zE,SAAWvtB,QAAKK,SACrBxmD,KAAK64C,QAAU,EACf74C,KAAKk1E,UAAY/uB,QAAKK,SAEtBxmD,KAAKk2C,SAAW,IAAIj4C,aAAa,IACjC+B,KAAKo0E,IAAM,EACXp0E,KAAKq0E,IAAM,EACXr0E,KAAKs0E,IAAM,EACXt0E,KAAKu0E,IAAM,EACXv0E,KAAKw0E,IAAM,EAObvpB,MAAM2nB,EAAauC,GACjBvC,EAAYnJ,SAASoL,IACrBjC,EAAYlJ,UAAUoL,IACtBlC,EAAYlK,YAAY0K,IACxBR,EAAYjJ,aAAaoL,IACzBnC,EAAYnK,SAAS8K,IACrBX,EAAY/J,WAAWyK,IAEvB,IAAIb,EAAczyE,KAAKuoE,QAAQkK,YAC3B54E,EAAO+4E,EAAYjpE,SAASgqE,MAAMlB,EAAYnqE,OAC9C6kD,EAAQtzD,EAAKszD,MACbt1B,EAAQh+B,EAAK4zD,WACbz9B,EAAuB,GAAf6kD,GAAU,GAClBt5E,EAAyB,GAAhBu5E,GAAW,GACpB/7B,EAAoBq6B,GAAa,I/DtDrB7sE,KAAK2qD,GAAK,K+DuD1B,IAAIv5B,EAAYo9C,GAAc,GAC1B97B,EAAQs6B,GAAU,GAClB33E,EAAWoE,KAAKpE,SAChB83E,EAAW1zE,KAAK0zE,SAEpB1zE,KAAK4yE,YAAcA,EACnB5yE,KAAKnG,KAAOA,EACZmG,KAAK8yE,OAASL,EAAYz5B,SAC1Bh5C,KAAKkpE,KAAOiM,EACZn1E,KAAK64C,QAAUy6B,GAAY,GAAKz7C,EAAM,GAEtCsuB,QAAKuD,KAAK1pD,KAAKk1E,UAAWr9C,GAG1Bj8B,EAAS,GAAKuxD,EAAM,GAAKnP,IAAehuB,EAAOA,GAC/Cp0B,EAAS,GAAKuxD,EAAM,GAAKnP,IAAeziD,EAAQA,GAChDK,EAAS,GAAKuxD,EAAM,GAGfslB,EAAY7K,YACfzhB,QAAKe,cAActrD,EAAUA,EAAU/B,EAAK4uD,aAI9C9B,QAAKwD,SAAS4C,IACdpG,QAAKgE,QAAQoC,GAAcA,GAAcxmD,KAAK2qD,GAAK,GACnDvK,QAAKitB,QAAQ7mB,GAAcA,GAAc/O,IAAejF,EAAUA,IAG7D05B,EAAY9K,aACfhhB,QAAK+D,QAAQqC,GAAcA,GAAc/O,IAAejF,EAAUA,IAI/D05B,EAAY7K,YACfjhB,QAAKoD,IAAIgD,GAAclzD,EAAK2zD,cAAeT,IAI7C5G,QAAKoE,cAAcmpB,EAAUptB,GAAayG,IAG1C5G,QAAKtuB,MAAM67C,EAAUA,EAAUz6B,EAAQ+E,IAAermB,EAAWA,IAGjEwuB,QAAK4D,IAAI2pB,EAAUA,EAAU77C,GAM/BxY,SACE,IAAIozD,EAAczyE,KAAKuoE,QAAQkK,YAC3B2C,EAA0C,KAArC3C,EAAYrgB,MAAM9B,OAAOmE,UAC9B74D,EAAWoE,KAAKpE,SAChB2xD,EAAgBT,GAChB4mB,EAAW1zE,KAAK0zE,SAEpB1zE,KAAK8yE,QAAUsC,EAEf1B,EAAS,IAAM1zE,KAAK64C,QAAUu8B,EAE9BjvB,QAAKkvB,YAAYz5E,EAAUA,EAAU83E,EAAU0B,GAE/CjvB,QAAKuD,KAAK6D,EAAe3xD,GAEzB,IAGI05E,EACAC,EAEApmC,EANAqmC,GAAc/C,EAAYz5B,SAAWh5C,KAAK8yE,QAAUL,EAAYz5B,SAChEK,EAAao5B,EAAYp5B,WACzBmwB,EAAYiJ,EAAYjJ,UAGxBN,EAAOlpE,KAAKkpE,KAGZsM,EAAan8B,GACfi8B,EAASE,EAAan8B,EAEtBk8B,EAAa,EAGXpmC,EADE+5B,EACSM,EAAU,GAEVA,EAAU,KAGvB8L,GAAUE,EAAan8B,IAAe,EAAIA,GAE1Ck8B,EAAa,EAGXpmC,EADE+5B,EACSM,EAAU,GAEVA,EAAU,IAIzB8L,EAAS/uE,KAAKC,IAAI8uE,EAAQ,GAE1B,IAMItnD,EACAR,EACAS,EACAgb,EATApF,EAAQsL,EAAS,GACjBgW,EAAMhW,EAAS,GACfhL,EAASgL,EAAS,GAClBo6B,EAAUkJ,EAAYlJ,QACtBD,EAASmJ,EAAYnJ,OACrBzxC,EAAQqmB,GAAKqrB,EAAQgM,GAAahM,EAAQgM,EAAa,GAAID,GAK3D3rE,EAAW3J,KAAK4yE,YAAYjpE,SAIhC,GAAI8oE,EAAYzJ,YAAa,CAC3B,IAAI0H,EAAY/mE,EAAS+mE,UAIzBziD,GAFAD,EAAO0iD,EAAY,GAEJ,EACfznC,GAFAzb,EAAOkjD,EAAY,EAAK,GAET,MACV,CACL,IAAIr1C,EAAUo3C,EAAY1J,WAAW,GACjCzgE,EAAQ,EACRmtE,EAActwB,EAAMthB,EAEpB4xC,IAGFntE,EAAQu7B,EAAQt9B,KAAKqwD,MAAM6e,EAActxC,EAASmxC,GAAUG,GAK9DxnD,GAFAD,EAAO1lB,EAAQ+yB,GAEA,EACf4N,GAFAzb,EAAOllB,EAAQ+yB,EAAW,GAEX,EAGjBwrB,QAAK3I,KAAK02B,GAAWtL,EAAOiM,GAAajM,EAAOiM,EAAa,GAAID,GAEjE,IAAIjtE,EAAIusE,GAAU,GAElB50E,KAAKo0E,IAAMjhD,GAAclF,EAAOgb,EAAQ5gC,GACxCrI,KAAKq0E,IAAMlhD,GAAcnF,EAAMib,EAAQ5gC,GACvCrI,KAAKs0E,IAAMnhD,GAAclF,EAAOT,EAAKnlB,GACrCrI,KAAKu0E,IAAMphD,GAAcnF,EAAMR,EAAKnlB,GACpCrI,KAAKw0E,IAAMrhD,GAAcyhD,GAAU,GAAIA,GAAU,GAAIA,GAAU,IAE1DjrE,EAASylD,MAGd,IACIlG,EADA/d,EAASxhC,EAASylD,MAAMjkB,OAK1B+d,EADEupB,EAAY5K,OACJ18B,EAAO+d,QAEP/d,EAAOge,mBAGnB,IAAIjT,EAAWl2C,KAAKk2C,SAChBg/B,EAAYl1E,KAAKk1E,UAEjBQ,EAAS79C,EAAQq9C,EAAU,GAC3BS,EAAS99C,EAAQq9C,EAAU,GAC3BU,EAAS/9C,EAAQq9C,EAAU,GAE/B,GAAIhM,EAAM,CAEJuJ,EAAY7K,YACdzhB,QAAKe,cAAcqG,EAAeA,EAAevtD,KAAKnG,KAAK4uD,aAG7D,IAAIotB,EAAKtoB,EAAc,GACnBuoB,EAAKvoB,EAAc,GACnBwoB,EAAKxoB,EAAc,GAEvB,GAAIklB,EAAY5K,OAAQ,CACtB,IAAImO,EAAKhB,GAAS,GAAIiB,EAAKjB,GAAS,GACpCgB,EAAG,GAAKtC,EAAS,GACjBsC,EAAG,GAAKtC,EAAS,GACjBsC,EAAG,GAAK,EACR7vB,QAAKvrD,UAAUo7E,EAAIA,GACnBC,EAAG,IAAMD,EAAG,GACZC,EAAG,GAAKD,EAAG,GACXC,EAAG,GAAK,EACR9vB,QAAKtf,IAAImuC,GAAS,GAAIgB,EAAIC,GAC1B9vB,QAAKv4B,IAAIonD,GAAS,GAAIiB,EAAID,GAC1B7vB,QAAKgF,OAAO6pB,GAAS,GAAIA,GAAS,IAClC7uB,QAAKgF,OAAO6pB,GAAS,GAAIA,GAAS,IAClC9rB,EAAU8rB,GAGZ,IAAIkB,EAAMhtB,EAAQ,GACditB,EAAMjtB,EAAQ,GACdktB,EAAMltB,EAAQ,GACdmtB,EAAMntB,EAAQ,GAElBhT,EAAS,GAAK2/B,EAAKK,EAAI,GAAKR,EAC5Bx/B,EAAS,GAAK4/B,EAAKI,EAAI,GAAKP,EAC5Bz/B,EAAS,GAAK6/B,EAAKG,EAAI,GAAKN,EAC5B1/B,EAAS,GAAK2/B,EAAKM,EAAI,GAAKT,EAC5Bx/B,EAAS,GAAK4/B,EAAKK,EAAI,GAAKR,EAC5Bz/B,EAAS,GAAK6/B,EAAKI,EAAI,GAAKP,EAC5B1/B,EAAS,GAAK2/B,EAAKO,EAAI,GAAKV,EAC5Bx/B,EAAS,GAAK4/B,EAAKM,EAAI,GAAKT,EAC5Bz/B,EAAS,GAAK6/B,EAAKK,EAAI,GAAKR,EAC5B1/B,EAAS,GAAK2/B,EAAKQ,EAAI,GAAKX,EAC5Bx/B,EAAS,IAAM4/B,EAAKO,EAAI,GAAKV,EAC7Bz/B,EAAS,IAAM6/B,EAAKM,EAAI,GAAKT,MACxB,CACL,IAAIx8B,EAAaq5B,EAAYr5B,WACzBk9B,EAAUl9B,EAAas6B,EAAS,GAAK,EACrC6C,EAAUn9B,EAAas6B,EAAS,GAAK,EACrC8C,EAAUp9B,EAAas6B,EAAS,GAAK,EAGrC7vC,EAAQ,CAAC0pB,EAAc,GAAK+oB,EAAS/oB,EAAc,GAAKgpB,EAAShpB,EAAc,GAAKipB,GACpFrxB,EAAM,CAACoI,EAAc,GAAIA,EAAc,GAAIA,EAAc,IAGzDklB,EAAY7K,aACdzhB,QAAKe,cAAcrjB,EAAOA,EAAO7jC,KAAKnG,KAAK4uD,aAC3CtC,QAAKe,cAAc/B,EAAKA,EAAKnlD,KAAKnG,KAAK4uD,cAGzC,IAAIguB,EAAS5yC,EAAM,GACf6yC,EAAS7yC,EAAM,GACf8yC,EAAS9yC,EAAM,GACf+yC,EAAOzxB,EAAI,GACX0xB,EAAO1xB,EAAI,GACX2xB,EAAO3xB,EAAI,GAIXgkB,EAAO,CAACyN,EAAOH,EAAQI,EAAOH,EAAQI,EAAOH,GACjDxwB,QAAKvrD,UAAUuuE,EAAMA,GACrB,IAAI4N,EAAS5wB,QAAK6wB,MAAM,GAAI7rC,EAAOge,mBAAmB,GAAIggB,GAC1DhjB,QAAKvrD,UAAUm8E,EAAQA,GAEvB,IAAIE,EAAUF,EAAO,GAAKrB,EACtBwB,EAAUH,EAAO,GAAKpB,EACtBwB,EAAUJ,EAAO,GAAKnB,EAE1B1/B,EAAS,GAAKugC,EAASQ,EACvB/gC,EAAS,GAAKwgC,EAASQ,EACvBhhC,EAAS,GAAKygC,EAASQ,EAEvBjhC,EAAS,GAAK0gC,EAAOK,EACrB/gC,EAAS,GAAK2gC,EAAOK,EACrBhhC,EAAS,GAAK4gC,EAAOK,EAErBjhC,EAAS,GAAK0gC,EAAOK,EACrB/gC,EAAS,GAAK2gC,EAAOK,EACrBhhC,EAAS,GAAK4gC,EAAOK,EAErBjhC,EAAS,GAAKugC,EAASQ,EACvB/gC,EAAS,IAAMwgC,EAASQ,EACxBhhC,EAAS,IAAMygC,EAASQ,ICzTf,MAAMj+B,WAAyB86B,GAI5CpmE,YAAY6kE,GACV3kE,MAAM2kE,GAENzyE,KAAKm0E,gBAA6D,IAAd,IAA3B1B,EAAYt5B,WAAoB,EAAI,GAM/D8M,KAAK2sB,GACC5yE,KAAKyyE,YAAYvJ,MACnBlpE,KAAK2yE,WAAWC,GAAa,GAG3B5yE,KAAKyyE,YAAYtJ,MACnBnpE,KAAK2yE,WAAWC,GAAa,GAOjCC,eACE,OAAO,IAAIoC,GAAUj1E,OC7BzB,IAAIo3E,GAAYjxB,QAAKK,SACjB6wB,GAAYlxB,QAAKK,SACjBouB,GAAYzuB,QAAKK,SACjB8wB,GAAY,IAAIr5E,aAAa,GAC7Bs5E,GAAW,IAAIt5E,aAAa,GAKjB,MAAMu5E,GAInB5pE,YAAY26D,GACVvoE,KAAKuoE,QAAUA,EACfvoE,KAAK8yE,OAAS,EACd9yE,KAAK4yE,YAAc,KAEnB5yE,KAAKk2C,SAAW,IAAIj4C,aAAa,IACjC+B,KAAKo0E,IAAM,EACXp0E,KAAKq0E,IAAM,EACXr0E,KAAKs0E,IAAM,EACXt0E,KAAKu0E,IAAM,EACXv0E,KAAKw0E,IAAM,EAMbvpB,MAAM2nB,GACJ,IAAIrK,EAAUvoE,KAAKuoE,QACfryB,EAAWl2C,KAAKk2C,SAEpBl2C,KAAKsI,MAAQsqE,EAAY6E,gBAEzB7E,EAAY8E,cAEZ13E,KAAK4yE,YAAcA,EAEnB5yE,KAAK8yE,OAASvK,EAAQkK,YAAYz5B,SAElC,IAAI2+B,EAAW/E,EAAY+E,SAK3B,GAAIA,GAAYA,EAAS7E,OAAS,EAAG,CACnC,IAAIj5E,EAAO+4E,EAAYjpE,SAASgqE,MAAMpL,EAAQkK,YAAYnqE,OACtD6kD,EAAQtzD,EAAKszD,MAEjBylB,EAAYhJ,eAAewN,IAC3BxE,EAAY/I,eAAewN,IAE3BlxB,QAAK1tC,IAAI2+D,GAAWjqB,EAAM,GAAIA,EAAM,GAAKiqB,GAAU,GAAIjqB,EAAM,IAC7DhH,QAAKe,cAAckwB,GAAWA,GAAWv9E,EAAK4uD,aAE9CtC,QAAK1tC,IAAI4+D,GAAWlqB,EAAM,GAAIA,EAAM,GAAKkqB,GAAU,GAAIlqB,EAAM,IAC7DhH,QAAKe,cAAcmwB,GAAWA,GAAWx9E,EAAK4uD,aAE9C,IAAImvB,EAAeD,EAASzhC,SAG5BA,EAAS,GAAKmhC,GAAU,GACxBnhC,EAAS,GAAKmhC,GAAU,GACxBnhC,EAAS,GAAKmhC,GAAU,GAGxBnhC,EAAS,GAAKkhC,GAAU,GACxBlhC,EAAS,GAAKkhC,GAAU,GACxBlhC,EAAS,GAAKkhC,GAAU,GAGxBlhC,EAAS,GAAK0hC,EAAa,GAC3B1hC,EAAS,GAAK0hC,EAAa,GAC3B1hC,EAAS,GAAK0hC,EAAa,GAG3B1hC,EAAS,GAAK0hC,EAAa,GAC3B1hC,EAAS,IAAM0hC,EAAa,GAC5B1hC,EAAS,IAAM0hC,EAAa,QAE5B1hC,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,GAAK,EACdA,EAAS,IAAM,EACfA,EAAS,IAAM,EAOnB72B,SACE,IAAIuzD,EAAc5yE,KAAK4yE,YAEvBA,EAAY5N,SAAS4P,IACrBhC,EAAY/N,SAASyS,IACrB1E,EAAY9I,eAAeyN,IAE3B,IAAI9E,EAAczyE,KAAKuoE,QAAQkK,YAC3B2C,EAA0C,KAArC3C,EAAYrgB,MAAM9B,OAAOmE,UAC9B5b,EAAU45B,EAAY55B,QAAUu8B,EAAKA,EACrCl/B,EAAWl2C,KAAKk2C,SAChB2hC,EAAgBP,GAAU,GAC1BQ,EAAeP,GAAS,GACxBQ,EAAoB,EAAInF,EAAY8E,YACpCM,EAAmBpF,EAAY6E,cAAgBz3E,KAAKsI,MAAQ,EAShE,GAPAtI,KAAK8yE,QAAUsC,EAEfl/B,EAAS,IAAM2C,EACf3C,EAAS,IAAM2C,EACf3C,EAAS,IAAM2C,EACf3C,EAAS,KAAO2C,EAEZ74C,KAAK8yE,QAAU,EACjBF,EAAY8E,kBACP,CACL,IAAIr8C,EAAUo3C,EAAY1J,WAAW,GACjC/6C,EAAQ8pD,EAAez8C,EAAY28C,EAAkBD,EACrDvqD,EAAOsqD,EAAez8C,EAAW,EACjCpN,EAAQD,EAAO+pD,EACf9uC,EAASzb,EAAM,EAEnBQ,EAAe,IAAPA,EAAc,EACtBR,EAAa,IAANA,EAAa,EACpBS,EAAiB,IAARA,EAAe,EACxBgb,GAAmB,IACnB4uC,EAAiC,IAAhBA,EAAuB,EAExC73E,KAAKo0E,IAAMjhD,GAAcnF,EAAMR,EAAKqqD,GACpC73E,KAAKq0E,IAAMlhD,GAAcnF,EAAMib,EAAQ4uC,GACvC73E,KAAKs0E,IAAMnhD,GAAclF,EAAOT,EAAKqqD,GACrC73E,KAAKu0E,IAAMphD,GAAclF,EAAOgb,EAAQ4uC,GACxC73E,KAAKw0E,IAAMrhD,GAA8B,IAAfyhD,GAAU,GAAY,EAAmB,IAAfA,GAAU,GAAY,EAAmB,IAAfA,GAAU,GAAY,KC3I3F,MAAMh7B,WAAsBo6B,GAIzCpmE,YAAY6kE,GACV3kE,MAAM2kE,GAENzyE,KAAKm0E,gBAAkB,GAMzBluB,KAAK2sB,GACHA,EAAY+E,SAAW33E,KAAK2yE,WAAWC,GAMzCC,eACE,OAAO,IAAI2E,GAAOx3E,MAMpB2vD,KAAKijB,GACYA,EAAYK,iBAEX,IACdjzE,KAAKimD,KAAK2sB,GACVA,EAAYK,mBAQhBloE,OAAO0mD,EAAW8J,GAChB,IAAImX,EAAQ1yE,KAAK0yE,MAEjB,GAAIA,EAAQ,EAAG,CACb,IAAID,EAAczyE,KAAKyyE,YACnBrgB,EAAQqgB,EAAYrgB,MACpB1S,EAAK0S,EAAM9B,OAAO5Q,GAEtB+yB,EAAY58B,MAAMz4C,KAAKm+D,GAEvB7b,EAAG4d,WAAW/B,EAAO9a,SAASg0B,aAAchC,EAAY1J,YAExD3W,EAAMpO,YAAYyuB,EAAY9sB,QAAS,EAAG8L,GAE1C/R,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKjF,QACpC2kD,EAAGsf,cAActf,EAAG4Z,aAAc,EAAGt5D,KAAK3E,KAAKgG,SAAS,EAAW,GAARqxE,IAE3DhzB,EAAG4c,oBAAoBf,EAAO7a,QAAQ6b,WAAY,EAAG7c,EAAG8c,OAAO,EAAO,GAAI,GAC1E9c,EAAG4c,oBAAoBf,EAAO7a,QAAQg0B,UAAW,EAAGh1B,EAAG8c,OAAO,EAAO,GAAI,IAEzE9c,EAAGi1B,WAAWj1B,EAAGke,UAAW,EAAW,EAAR8U,KC/DtB,MAAMuF,GAInBrqE,YAAY26D,GACVvoE,KAAKuoE,QAAUA,EACfvoE,KAAK4yE,YAAc,KACnB5yE,KAAK8yE,OAAS,EACd9yE,KAAKwoE,iBAAmBD,EAAQkK,YAAYjK,iBAAiBjX,cAM/DtG,MAAM2nB,GACJ,IAAIjpE,EAAW3J,KAAKwoE,iBAChB3uE,EAAO+4E,EAAYjpE,SAASgqE,MAAM3zE,KAAKuoE,QAAQkK,YAAYnqE,OAE/DtI,KAAK4yE,YAAcA,EAEnBjpE,EAASmqE,YAAY,GACrBnqE,EAAS4kD,kBAAkB10D,EAAK0zD,cAAe1zD,EAAK2zD,cAAe3zD,EAAK4zD,YACxE9jD,EAASyE,OAETwkE,EAAYjpE,SAASylD,MAAMmC,YAAY5nD,GAEvC3J,KAAK8yE,OAAS,EAMhBzzD,SACE,IAAI1V,EAAW3J,KAAKwoE,iBAGhB7+D,EAASimC,OAASjmC,EAASyoD,MAAM1X,UAAU,GAAGvL,SAAS,KACzDnvC,KAAK8yE,OAAS,EAEdnpE,EAASkF,SCpCA,MAAMqpE,WAA8B1F,GAIjD5kE,YAAY6kE,GACV3kE,MAAM2kE,GAENzyE,KAAKkC,KAAO,MAMd+jD,KAAK2sB,GACC5yE,KAAKyyE,YAAY71E,IACnBoD,KAAK2yE,WAAWC,GAOpBC,eACE,OAAO,IAAIoF,GAAej4E,OCtBf,MAAMm4E,GAInBvqE,YAAY26D,GACVvoE,KAAKuoE,QAAUA,EACfvoE,KAAK4yE,YAAc,KACnB5yE,KAAK8yE,OAAS,EACd9yE,KAAKswB,MAAQ,IAAIt1B,WAAW,GAC5BgF,KAAKk2C,SAAW,IAAIj4C,aAAa,IACjC+B,KAAKo0E,IAAM,EACXp0E,KAAKq0E,IAAM,EACXr0E,KAAKs0E,IAAM,EACXt0E,KAAKu0E,IAAM,EACXv0E,KAAKw0E,IAAM,EAMbvpB,MAAM2nB,GACJ,IAKIxc,EALAqc,EAAczyE,KAAKuoE,QAAQkK,YAC3Bv8B,EAAWl2C,KAAKk2C,SAChBkiC,EAAe3F,EAAY56C,MAE3B4wB,EADOmqB,EAAYjpE,SAASgqE,MAAMlB,EAAYnqE,OAC3BmgD,YAGvBzoD,KAAK4yE,YAAcA,EAEnBxc,EAASlgB,EAAS70C,SAAS,EAAG,GAC9B8kD,QAAKe,cAAckP,EAAQ,EAAEgiB,GAAeA,EAAc,GAAI3vB,GAE9D2N,EAASlgB,EAAS70C,SAAS,EAAG,GAC9B8kD,QAAKe,cAAckP,EAAQ,EAAEgiB,EAAcA,EAAc,GAAI3vB,GAE7D2N,EAASlgB,EAAS70C,SAAS,EAAG,GAC9B8kD,QAAKe,cAAckP,EAAQ,CAACgiB,EAAcA,EAAc,GAAI3vB,GAE5D2N,EAASlgB,EAAS70C,SAAS,EAAG,IAC9B8kD,QAAKe,cAAckP,EAAQ,CAACgiB,GAAeA,EAAc,GAAI3vB,GAE7DzoD,KAAK8yE,OAASL,EAAYhG,SAM5BptD,SACE,IAQIi2D,EACAnmC,EACAomC,EACAjtE,EAXAmqE,EAAczyE,KAAKuoE,QAAQkK,YAC3Bp3C,EAAUo3C,EAAY1J,WAAW,GACjCuD,EAAgBmG,EAAYnG,cAC5B9C,EAAYiJ,EAAYjJ,UACxB6O,EAAQ/L,EAAc,GACtBgM,EAAShM,EAAc,GACvBhD,EAASmJ,EAAYnJ,OACrBh5C,EAAQtwB,KAAKswB,MAMjBtwB,KAAK8yE,QAA+C,KAArCL,EAAYrgB,MAAM9B,OAAOmE,UAGxC,IAAI8jB,EAAO9F,EAAYhG,SAAWzsE,KAAK8yE,OAEnCyF,EAAOF,GACT/C,EAASiD,EAAOF,EAChBlpC,EAAWq6B,EAAU,GACrB+L,EAAa,IAEbD,GAAUiD,EAAOF,GAASC,EAC1BnpC,EAAWq6B,EAAU,GACrB+L,EAAa,GAIf1uB,QAAK3I,KAAK5tB,EAAOg5C,EAAOiM,GAAajM,EAAOiM,EAAa,GAAID,GAM7D,IAAItnD,GAHJ1lB,EAAQ/B,KAAKqwD,MAAM1Y,GAAK/O,EAAS,GAAIA,EAAS,GAAImmC,KAG/Bj6C,EACf7N,EAAMjnB,KAAKqwD,MAAMtuD,EAAQ+yB,GACzBpN,EAAQD,EAAO,EACfib,EAASzb,EAAM,EACfnlB,EAAIioB,EAAM,GAIdtwB,KAAKo0E,IAAMjhD,GAAclF,EAAOgb,EAAQ5gC,GACxCrI,KAAKq0E,IAAMlhD,GAAcnF,EAAMib,EAAQ5gC,GACvCrI,KAAKs0E,IAAMnhD,GAAclF,EAAOT,EAAKnlB,GACrCrI,KAAKu0E,IAAMphD,GAAcnF,EAAMR,EAAKnlB,GACpCrI,KAAKw0E,IAAMrhD,GAAc7C,EAAM,GAAIA,EAAM,GAAIA,EAAM,KCjGxC,MAAMkoD,WAA8BxE,GAIjDpmE,YAAY6kE,GACV3kE,MAAM2kE,GAENzyE,KAAKkC,KAAO,MACZlC,KAAKm0E,gBAAkB,GAMzBluB,KAAK2sB,GACC5yE,KAAKyyE,YAAY71E,IACnBoD,KAAK2yE,WAAWC,GAOpBC,eACE,OAAO,IAAIsF,GAAen4E,OCxBf,MAAMy4E,GAInB7qE,YAAY26D,GACVvoE,KAAKuoE,QAAUA,EACfvoE,KAAK4yE,YAAc,KACnB5yE,KAAK8yE,OAAS,EACd9yE,KAAKswB,MAAQ,IAAIt1B,WAAW,GAC5BgF,KAAKk2C,SAAW,IAAIj4C,aAAa,IACjC+B,KAAKo0E,IAAM,EACXp0E,KAAKq0E,IAAM,EACXr0E,KAAKs0E,IAAM,EACXt0E,KAAKu0E,IAAM,EACXv0E,KAAKw0E,IAAM,EAMbvpB,MAAM2nB,GACJ,IAKIxc,EALAqc,EAAczyE,KAAKuoE,QAAQkK,YAC3Bv8B,EAAWl2C,KAAKk2C,SAChBkiC,EAAe3F,EAAY56C,MAE3B4wB,EADOmqB,EAAYjpE,SAASgqE,MAAMlB,EAAYnqE,OAC3BmgD,YAGvBzoD,KAAK4yE,YAAcA,EAEnBxc,EAASlgB,EAAS70C,SAAS,EAAG,GAC9B8kD,QAAKe,cAAckP,EAAQ,EAAEgiB,GAAeA,EAAc,GAAI3vB,GAE9D2N,EAASlgB,EAAS70C,SAAS,EAAG,GAC9B8kD,QAAKe,cAAckP,EAAQ,EAAEgiB,EAAcA,EAAc,GAAI3vB,GAE7D2N,EAASlgB,EAAS70C,SAAS,EAAG,GAC9B8kD,QAAKe,cAAckP,EAAQ,CAACgiB,EAAcA,EAAc,GAAI3vB,GAE5D2N,EAASlgB,EAAS70C,SAAS,EAAG,IAC9B8kD,QAAKe,cAAckP,EAAQ,CAACgiB,GAAeA,EAAc,GAAI3vB,GAE7DzoD,KAAK8yE,OAASL,EAAYhG,SAM5BptD,SACE,IAAIozD,EAAczyE,KAAKuoE,QAAQkK,YAC3BnG,EAAgBmG,EAAYnG,cAC5B+L,EAAQ/L,EAAc,GACtBgM,EAAShM,EAAc,GACvBoM,EAAQpM,EAAc,GACtBhD,EAASmJ,EAAYnJ,OACrBh5C,EAAQtwB,KAAKswB,MAEjBtwB,KAAK8yE,QAA+C,KAArCL,EAAYrgB,MAAM9B,OAAOmE,UAGxC,IAAI8jB,EAAO9F,EAAYhG,SAAWzsE,KAAK8yE,OAEnCyF,EAAOF,EACTxxB,QAAK3I,KAAK5tB,EAAOg5C,EAAO,GAAIA,EAAO,GAAIiP,EAAOF,GACrCE,EAAOF,EAAQC,EACxBzxB,QAAK6C,KAAKp5B,EAAOmiD,EAAYnJ,OAAO,IAEpCziB,QAAK3I,KAAK5tB,EAAOg5C,EAAO,GAAIA,EAAO,IAAKiP,EAAOF,EAAQC,GAAUI,GAInE,IAAIrwE,EAAIioB,EAAM,GAIdtwB,KAAKo0E,IAAMjhD,GAAc,EAAG,EAAG9qB,GAC/BrI,KAAKq0E,IAAMlhD,GAAc,EAAG,EAAG9qB,GAC/BrI,KAAKs0E,IAAMnhD,GAAc,EAAG,EAAG9qB,GAC/BrI,KAAKu0E,IAAMphD,GAAc,EAAG,EAAG9qB,GAC/BrI,KAAKw0E,IAAMrhD,GAAc7C,EAAM,GAAIA,EAAM,GAAIA,EAAM,KC/ExC,MAAMqoD,WAA8B3E,GAIjDpmE,YAAY6kE,GACV3kE,MAAM2kE,GAENzyE,KAAKkC,KAAO,MACZlC,KAAKm0E,gBAAkB,GAMzBluB,KAAK2sB,GACC5yE,KAAKyyE,YAAY71E,IACnBoD,KAAK2yE,WAAWC,GAOpBC,eACE,OAAO,IAAI4F,GAAez4E,OC3Bf,MAAM44E,GAInBhrE,YAAY6kE,GACVzyE,KAAKyyE,YAAcA,EACnBzyE,KAAKkC,KAAO,MAMd+jD,KAAK2sB,GACH,GAAI5yE,KAAKyyE,YAAY71E,GAAI,CACvB,IAAI0zD,EAAStwD,KAAKyyE,YAAYrgB,MAAM9B,OAChClB,EAAQwjB,EAAYjpE,SAASylD,MAGjC,GAAIkB,EAAO8E,aAAehG,EAAM4B,aAAc,CAC5C,IAAIC,EAAe7B,EAAM6B,aACrBsX,EAAUqK,EAAYrK,QACtBuC,EAAiBvC,EAAQuC,eACzB+N,EAAS5nB,EAAa6nB,eACtBC,EAAS9nB,EAAa+nB,qBAG1BH,EAAO5mB,eAAe2gB,EAAYjpE,SAASgqE,MAAMpL,EAAQ33C,UAAU28B,eACnEsrB,EAAOjvC,YAAc2+B,EAAQ1+B,eAC7BgvC,EAAOI,YAAc1Q,EAAQ5+B,YAC7BkvC,EAAOK,QAAQjoB,EAAakoB,aAG5BJ,EAAOh+E,OAAS+vE,EAAgBvkE,KAAK03C,SAAW6sB,EAAevvE,OAAU,GACzEw9E,EAAOG,QAAQL,GAGfE,EAAOl1C,MAAM,KAQnBxkB,UAOAswC,KAAKijB,GACH,IAAII,EAAWJ,EAAYK,gBAE3B,GAAID,GAAY,EACd,IAAK,IAAI/rE,EAAI,EAAGA,EAAI+rE,EAAU/rE,GAAK,EAAG2rE,EAAYK,kBAChDjzE,KAAKimD,KAAK2sB,GAShB7nE,OAAO0mD,EAAW8J,IAUlB1J,MAAMqhB,KCzEO,IAAA5X,GAAA,cAAchD,GAI3B1qD,YAAY6jD,GACV3jD,MAAM2jD,GAEN,IAAIW,EAAQpyD,KAAKoyD,MACb8C,EAAY9C,EAAM8C,UAClBxV,EAAK0S,EAAM9B,OAAO5Q,GAClB0e,EAAgBhM,EAAMnX,MAAM1/C,OAAS,EAEzCyE,KAAKm+D,sBAAwC,GAAhBC,EAC7Bp+D,KAAKq+D,UAAY,IAAIpgE,aAAa+B,KAAKm+D,sBAAwBjJ,GAE/Dl1D,KAAK27D,YAAcjc,EAAGqE,gBACtB/jD,KAAKs+D,iBAAmC,EAAhBF,EACxBp+D,KAAKu+D,kBAAoBrJ,EACzBl1D,KAAKg8D,WAAa,EAAIh8D,KAAKs+D,iBAC3Bt+D,KAAKk8D,QAAU,EAAIl8D,KAAKu+D,kBAExB7e,EAAGkG,cAAclG,EAAGgc,WACpBhc,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAK27D,aACnCjc,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG8e,SAC1D9e,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG8e,SAC1D9e,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAG+e,QAASz+D,KAAKs+D,iBAAkBt+D,KAAKu+D,kBAAmB,EAAG7e,EAAG+E,KAAM/E,EAAG8c,MAAOx8D,KAAKq+D,WAItHr+D,KAAKo5E,UAAY,IAAIp+E,WAAuB,EAAZk6D,GAChCl1D,KAAK6wE,YAAcnxB,EAAG0Z,eACtB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAK6wE,aACpCnxB,EAAG6Z,WAAW7Z,EAAG4Z,aAAct5D,KAAKo5E,UAAUn2E,WAAYy8C,EAAGif,cAGzDvM,EAAMwb,QAAQryE,OAAS,IACzByE,KAAKq5E,iBAAmB,IAAIr+E,WAAWk6D,EAAY9C,EAAMrX,QAAQx/C,OAAS,GAC1EyE,KAAKkyE,mBAAqBxyB,EAAG0Z,eAC7B1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKkyE,oBACpCxyB,EAAG6Z,WAAW7Z,EAAG4Z,aAAct5D,KAAKq5E,iBAAiBp2E,WAAYy8C,EAAGif,cAUpE3+D,KAAKs5E,WAAa,IAAIrgE,YAAYi8C,EAAY9C,EAAMxc,OAAOr6C,OAAS,IACpEyE,KAAKu5E,iBAAmB,IAAIt7E,aAAa+B,KAAKs5E,WAAY,EAAGpkB,EAAY9C,EAAMxc,OAAOr6C,OAAS,GAC/FyE,KAAKoyE,gBAAkB,IAAIp3E,WAAWgF,KAAKs5E,WAAYpkB,EAAY9C,EAAMxc,OAAOr6C,OAAS,GAAI25D,EAAY9C,EAAMxc,OAAOr6C,QACtHyE,KAAKmyE,aAAezyB,EAAG0Z,eACvB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKmyE,cACpCzyB,EAAG6Z,WAAW7Z,EAAG4Z,aAAct5D,KAAKs5E,WAAWr2E,WAAYy8C,EAAGif,eAUlEhP,KAAKt0D,GACH,IAAI28D,EAAY38D,EAAK28D,UACjB5F,EAAQpyD,KAAKoyD,MACb1S,EAAK0S,EAAM9B,OAAO5Q,GAClBwV,EAAY9C,EAAM8C,UAClBskB,EAAcpnB,EAAMrX,QAAQx/C,OAC5Bk+E,EAAarnB,EAAMxc,OAAOr6C,OAC1BwqE,EAAY3T,EAAMnX,MAAM1/C,OACxB8iE,EAAYr+D,KAAKq+D,UACjB+a,EAAYp5E,KAAKo5E,UACjBC,EAAmBr5E,KAAKq5E,iBACxBjH,EAAkBpyE,KAAKoyE,gBACvBmH,EAAmBv5E,KAAKu5E,iBACxB1a,EAAiB,EACjBtO,EAAYl1D,EAAKk1D,UACjBjV,EAAmBjgD,EAAKigD,iBACxBC,EAAoBlgD,EAAKkgD,kBACzBC,EAAiBngD,EAAKmgD,eACtB82B,EAAsBj3E,EAAKi3E,oBAE/B,IAAK,IAAI3qE,EAAI4oD,EAAUh1D,OAAQy8D,EAAYrwD,GAAKk3D,EAAiB3J,EAAW8C,IAAa,CACvF,IAAIruD,EAAW4mD,EAAUyH,GAEzB,GAAIruD,EAASgnD,WAAahnD,EAASm1D,OAAQ,CACzC,IAAI/D,EAAcpxD,EAASoxD,YACvB2e,EAAgB/vE,EAAS+vE,cACzBC,EAAehwE,EAASgwE,aACxBC,EAAcjwE,EAASiwE,YACvBC,EAAYlwE,EAASkwE,UACrBC,EAAWnwE,EAASmwE,SACpBC,EAASpwE,EAASowE,OAClBxxD,EAAO,GAAKs2C,GAAkB,GAAiB,GAAZkH,GACnCiU,EAAuBrwE,EAAS2xC,iBAChC2+B,EAAwBtwE,EAAS4xC,kBACjC2+B,EAAqBvwE,EAAS6xC,eAC9B2+B,EAA0BxwE,EAAS2oE,oBACnC8H,EAAmC,EAAjBvb,EAClBwb,EAAmC,EAAjBxb,EAClByb,EAAmC,EAAjBzb,EAGtB,IAAK,IAAI72D,EAAI,EAAGzC,EAAgB,GAAZwgE,EAAgB/9D,EAAIzC,EAAGyC,IACzCq2D,EAAU91C,EAAOvgB,GAAK0xE,EAAc1xE,GAItCoxE,EAAUiB,GAAmB1wE,EAAS+mE,UAGtC0I,EAAUiB,EAAkB,GAAKtf,EAAY,GAC7Cqe,EAAUiB,EAAkB,GAAKtf,EAAY,GAC7Cqe,EAAUiB,EAAkB,GAAKtf,EAAY,GAC7Cqe,EAAUiB,EAAkB,GAAKtf,EAAY,GAE7C,IAAK,IAAIwf,EAAc,EAAGA,EAAcf,EAAae,IAAe,CAClE,IAAIC,EAA6B,EAAdD,EACfhyD,EAAO2sC,EAAYslB,EAAeJ,EAGtCf,EAAiB9wD,GAAQoxD,EAAaa,GACtCnB,EAAiB9wD,EAAO,GAAKoxD,EAAaa,EAAe,GACzDnB,EAAiB9wD,EAAO,GAAKoxD,EAAaa,EAAe,GACzDnB,EAAiB9wD,EAAO,GAAKoxD,EAAaa,EAAe,GAG3D,GAAIpoB,EAAMwb,QAAQryE,OAAS,EACzB,IAAK,IAAIk/E,EAAa,EAAGA,EAAahB,EAAYgB,IAAc,CAC9D,IAAIC,EAA2B,EAAbD,EACdE,EAASzlB,EAAYulB,EAAa,EAAIH,EAG1ClI,EAAgBld,EAAYulB,EAAa5b,GAAkB+a,EAAYa,GAGvElB,EAAiBoB,GAAUd,EAAUa,GACrCnB,EAAiBoB,EAAS,GAAKd,EAAUa,EAAc,GAGvDnB,EAAiBoB,EAAS,GAAKZ,EAAoB,EAAbU,GACtClB,EAAiBoB,EAAS,GAAKZ,EAAoB,EAAbU,EAAiB,GAGvDlB,EAAiBoB,EAAS,GAAKb,EAASW,GAGxClB,EAAiBoB,EAAS,GAAKd,EAAUa,EAAc,GACvDnB,EAAiBoB,EAAS,GAAKd,EAAUa,EAAc,GAI3D,IAAK,IAAIzzE,EAAI,EAAGU,EAAI2zC,EAAiB//C,OAAQ0L,EAAIU,EAAGV,IAClDq0C,EAAiBr0C,GAAG0oD,KAAKqqB,EAAqB/yE,IAGhD,IAAK,IAAIA,EAAI,EAAGU,EAAI4zC,EAAkBhgD,OAAQ0L,EAAIU,EAAGV,IACnDs0C,EAAkBt0C,GAAG0oD,KAAKsqB,EAAsBhzE,IAGlD,IAAK,IAAIA,EAAI,EAAGU,EAAI6zC,EAAejgD,OAAQ0L,EAAIU,EAAGV,IAChDu0C,EAAev0C,GAAG0oD,KAAKuqB,EAAmBjzE,IAG5C,IAAK,IAAIA,EAAI,EAAGU,EAAI2qE,EAAoB/2E,OAAQ0L,EAAIU,EAAGV,IACrDqrE,EAAoBrrE,GAAG0oD,KAAKwqB,EAAwBlzE,IAGtD43D,GAAkB,GA0BtB,OArBA7+D,KAAKgQ,MAAQ6uD,EAETA,IACFnf,EAAGkG,cAAclG,EAAGgc,WACpBhc,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAK27D,aACnCjc,EAAGqf,cAAcrf,EAAGuE,WAAY,EAAG,EAAG,EAAGjkD,KAAKs+D,iBAAkBO,EAAgBnf,EAAG+E,KAAM/E,EAAG8c,MAAO6B,GAEnG3e,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAK6wE,aACpCnxB,EAAGsf,cAActf,EAAG4Z,aAAc,EAAG8f,GAEjCI,IACF95B,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKkyE,oBACpCxyB,EAAGsf,cAActf,EAAG4Z,aAAc,EAAG+f,IAGnCI,GAAcrnB,EAAMwb,QAAQryE,OAAS,IACvCmkD,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKmyE,cACpCzyB,EAAGsf,cAActf,EAAG4Z,aAAc,EAAGt5D,KAAKs5E,cAIvCthB,ICrMI,MAAM4iB,WAAgBnrB,GAInCQ,aAAaznB,GACXme,QAAKitB,QAAQprC,EAAUA,GAAWjiC,KAAK2qD,GAAK,ICThD,IAAI2pB,GAAiB,IAAI58E,aAAa,GAKvB,MAAM68E,GAKnBltE,YAAYjE,EAAU09D,GACpB,IACIoM,EADgBpM,EAAWiB,cACM/W,cAErCkiB,EAAiBsH,oBAAoB,GACrCtH,EAAiBuH,kBAAmB,EACpCvH,EAAiB5kE,OACjB4kE,EAAiB7kB,UAAUjlD,EAASgqE,MAAMtM,EAAWz2C,WAErD5wB,KAAK2J,SAAWA,EAChB3J,KAAKqnE,WAAaA,EAClBrnE,KAAKyzE,iBAAmBA,EAM1Bp0D,SACE,IAAIo0D,EAAmBzzE,KAAKyzE,iBAExBA,EAAiBrhB,MAAMx1D,KACzBoD,KAAKqnE,WAAWW,cAAc6S,GAAgB76E,KAAK2J,UAE/CkxE,GAAe,GAAK,IAItB76E,KAAK2J,SAASylD,MAAMmC,YAAYkiB,GAE5BA,EAAiBrU,WACnBqU,EAAiBrlE,OAGjBqlE,EAAiBK,YAAY,KAG/BL,EAAiB5kE,SC/CzB,IAAIosE,GAAmB,IAAIh9E,aAAa,GAKzB,MAAMi9E,GAKnBttE,YAAYjE,EAAU4+D,GACpBvoE,KAAK2J,SAAWA,EAChB3J,KAAKuoE,QAAUA,EACfvoE,KAAKizE,gBAAkB,EAMzB5zD,SACMrf,KAAK2J,SAASwxE,qBAChBn7E,KAAK8oE,gBAAgBmS,IAErBj7E,KAAKizE,iBAAmBgI,GAAiB,GAAKj7E,KAAK2J,SAASyoD,MAAM9B,OAAOmE,UAAY,MAQzFgU,SAASxrE,GACP,OAAO+C,KAAKuoE,QAAQE,SAASxrE,EAAK+C,KAAK2J,UAOzC++D,YAAYzrE,GACV,OAAO+C,KAAKuoE,QAAQG,YAAYzrE,EAAK+C,KAAK2J,UAO5Cg/D,aAAa1rE,GACX,OAAO+C,KAAKuoE,QAAQI,aAAa1rE,EAAK+C,KAAK2J,UAO7Ci/D,YAAY3rE,GACV,OAAO+C,KAAKuoE,QAAQK,YAAY3rE,EAAK+C,KAAK2J,UAO5Ck/D,WAAW5rE,GACT,OAAO+C,KAAKuoE,QAAQM,WAAW5rE,EAAK+C,KAAK2J,UAO3Cm/D,gBAAgB7rE,GACd,OAAO+C,KAAKuoE,QAAQO,gBAAgB7rE,EAAK+C,KAAK2J,UAOhDq+D,cAAc/qE,GACZ,OAAO+C,KAAKuoE,QAAQP,cAAc/qE,EAAK+C,KAAK2J,WChFhD,IAAIsxE,GAAmB,IAAIh9E,aAAa,GAKzB,MAAMm9E,GAKnBxtE,YAAYjE,EAAU4+D,GACpBvoE,KAAK2J,SAAWA,EAChB3J,KAAKuoE,QAAUA,EACfvoE,KAAKizE,gBAAkB,EACvBjzE,KAAKq7E,iBAAmB,EAM1Bh8D,SACE,GAAIrf,KAAK2J,SAASwxE,mBAAoB,CACpC,IAAI1a,EAAWzgE,KAAK8oE,gBAAgBmS,IAEhCj7E,KAAKuoE,QAAQ5uB,QACX8mB,IAAazgE,KAAKq7E,kBACpBr7E,KAAKizE,iBAAmBgI,GAAiB,IAG3Cj7E,KAAKq7E,gBAAkB5a,GAEvBzgE,KAAKizE,iBAAmBgI,GAAiB,GAAKj7E,KAAK2J,SAASyoD,MAAM9B,OAAOmE,UAAY,MAS3FgV,SAASxsE,GACP,OAAO+C,KAAKuoE,QAAQkB,SAASxsE,EAAK+C,KAAK2J,UAOzC+/D,UAAUzsE,GACR,OAAO+C,KAAKuoE,QAAQmB,UAAUzsE,EAAK+C,KAAK2J,UAO1C8+D,SAASxrE,GACP,OAAO+C,KAAKuoE,QAAQE,SAASxrE,EAAK+C,KAAK2J,UAOzC++D,YAAYzrE,GACV,OAAO+C,KAAKuoE,QAAQG,YAAYzrE,EAAK+C,KAAK2J,UAO5Ck/D,WAAW5rE,GACT,OAAO+C,KAAKuoE,QAAQM,WAAW5rE,EAAK+C,KAAK2J,UAO3Cm/D,gBAAgB7rE,GACd,OAAO+C,KAAKuoE,QAAQO,gBAAgB7rE,EAAK+C,KAAK2J,UAOhDq+D,cAAc/qE,GACZ,OAAO+C,KAAKuoE,QAAQP,cAAc/qE,EAAK+C,KAAK2J,UAO9CggE,aAAa1sE,GACX,OAAO+C,KAAKuoE,QAAQoB,aAAa1sE,EAAK+C,KAAK2J,WC/FhC,MAAM2xE,GAKnB1tE,YAAYjE,EAAU4+D,GACpBvoE,KAAK2J,SAAWA,EAChB3J,KAAKuoE,QAAUA,EACfvoE,KAAKizE,gBAAkB,EACvBjzE,KAAK23E,SAAW,KAChB33E,KAAKy3E,eAAiB,EACtBz3E,KAAK03E,YAAc,EAMrBr4D,SACMrf,KAAK2J,SAASwxE,qBAChBn7E,KAAKizE,iBAAmBjzE,KAAKuoE,QAAQ3vB,aAAe54C,KAAK2J,SAASyoD,MAAM9B,OAAOmE,UAAY,MAQ/FmV,eAAe3sE,GACb,OAAO+C,KAAKuoE,QAAQqB,eAAe3sE,EAAK+C,KAAK2J,UAO/CkgE,eAAe5sE,GACb,OAAO+C,KAAKuoE,QAAQsB,eAAe5sE,EAAK+C,KAAK2J,UAO/CmgE,eAAe7sE,GACb,OAAO+C,KAAKuoE,QAAQuB,eAAe7sE,EAAK+C,KAAK2J,UAO/Cq7D,SAAS/nE,GACP,OAAO+C,KAAKuoE,QAAQvD,SAAS/nE,EAAK+C,KAAK2J,UAOzCk7D,SAAS5nE,GACP,OAAO+C,KAAKuoE,QAAQ1D,SAAS5nE,EAAK+C,KAAK2J,UAOzCq+D,cAAc/qE,GACZ,OAAO+C,KAAKuoE,QAAQP,cAAc/qE,EAAK+C,KAAK2J,WCpEhD,IAAI+mC,GAAQq6B,QAAKvkB,SAKF,MAAM+0B,GAKnB3tE,YAAYjE,EAAU4+D,GACpBvoE,KAAK2J,SAAWA,EAChB3J,KAAKuoE,QAAUA,EACfvoE,KAAKw7E,UAAY,IAAI19E,YAAY,GACjCkC,KAAKizE,gBAAkB,EAMzBhoB,QACEjrD,KAAKw7E,UAAU7rB,KAAK,GAMtBtwC,SACE,GAAIrf,KAAK2J,SAASwxE,mBAAoB,CACpC,IAAI5S,EAAUvoE,KAAKuoE,QACfiT,EAAYx7E,KAAKw7E,UAErBjT,EAAQ1H,SAASnwB,GAAO1wC,KAAK2J,UAEZ,IAAb+mC,GAAM,IAAaA,GAAM,KAAO8qC,EAAU,IAAM9qC,GAAM,KAAO8qC,EAAU,KACzEx7E,KAAKizE,iBAAmB,GAG1BuI,EAAU,GAAK9qC,GAAM,GACrB8qC,EAAU,GAAK9qC,GAAM,KC/B3B,IAAImqC,GAAiB,IAAI58E,aAAa,GAClCw9E,GAAkBt1B,QAAKK,SACvBuG,GAAepG,QAAKH,SACpBk1B,GAAYv1B,QAAKK,SACjBouB,GAAY,IAAI32E,aAAa,GAC7Bq5E,GAAY,IAAIr5E,aAAa,GAC7B09E,GAAgB,IAAI19E,aAAa,GAKtB,MAAMghE,WAAsBO,GAIzC5xD,YAAYwkD,GACVtkD,MAAMskD,GAENpyD,KAAKo7C,YAAc,GACnBp7C,KAAKs7C,iBAAmB,GACxBt7C,KAAKu7C,kBAAoB,GACzBv7C,KAAKw7C,eAAiB,GACtBx7C,KAAKsyE,oBAAsB,GAC3BtyE,KAAK2zE,MAAQ,GACb3zE,KAAK47E,YAAc,GAEnB57E,KAAK4vC,MAAQ,EACb5vC,KAAKiS,QAAU,EACfjS,KAAKshE,UAAY,EACjBthE,KAAK67E,iBAAmB,EAExB77E,KAAK0wE,UAAY,EACjB1wE,KAAK+6D,YAAc,IAAI//D,WAAW,CAAC,IAAK,IAAK,IAAK,MAElDgF,KAAKm7E,oBAAqB,EAK1Bn7E,KAAK87E,QAAS,EAMhBpqD,OACE,IAAI0gC,EAAQpyD,KAAKoyD,MACbonB,EAAcpnB,EAAMrX,QAAQx/C,OAC5Bk+E,EAAarnB,EAAMxc,OAAOr6C,OAE9ByE,KAAK25E,aAAe,IAAI3+E,WAAyB,EAAdw+E,GACnCx5E,KAAK45E,YAAc,IAAI5+E,WAAWy+E,GAClCz5E,KAAK65E,UAAY,IAAI57E,aAA0B,EAAbw7E,GAClCz5E,KAAK85E,SAAW,IAAI77E,aAAaw7E,GACjCz5E,KAAK+5E,OAAS,IAAI97E,aAA0B,EAAbw7E,GAG/B,IAAIsC,EvEmqBD,SAA6B/rE,EAAOgsE,GACzC,IAAI3gF,EAAO,IAAI4C,aAAa+R,EAAQmgD,IAChCwjB,EAAQ,GACRh+C,EAAS,EACTsmD,EAAiB,EAARjsE,EACTksE,EAAiB,EAARlsE,EACTmsE,EAAkB,GAARnsE,EAGdgsE,EAAOA,GAAQvsB,GAEf,IAAI2sB,EAAS/gF,EAAKgG,SAASs0B,EAAQA,EAASsmD,GAC5CtmD,GAAUsmD,EAEV,IAAII,EAAiBhhF,EAAKgG,SAASs0B,EAAQA,EAASsmD,GACpDtmD,GAAUsmD,EAEV,IAAIK,EAAiBjhF,EAAKgG,SAASs0B,EAAQA,EAASumD,GACpDvmD,GAAUumD,EAEV,IAAIK,EAAclhF,EAAKgG,SAASs0B,EAAQA,EAASsmD,GACjDtmD,GAAUsmD,EAEV,IAAIO,EAAiBnhF,EAAKgG,SAASs0B,EAAQA,EAASsmD,GACpDtmD,GAAUsmD,EAEV,IAAIQ,EAAiBphF,EAAKgG,SAASs0B,EAAQA,EAASumD,GACpDvmD,GAAUumD,EAEV,IAAIQ,EAAcrhF,EAAKgG,SAASs0B,EAAQA,EAASsmD,GACjDtmD,GAAUsmD,EAEV,IAAIU,EAAwBthF,EAAKgG,SAASs0B,EAAQA,EAASsmD,GAC3DtmD,GAAUsmD,EAEV,IAAIW,EAAyBvhF,EAAKgG,SAASs0B,EAAQA,EAASumD,GAC5DvmD,GAAUumD,EAEV,IAAIW,EAAqBxhF,EAAKgG,SAASs0B,EAAQA,EAASsmD,GACxDtmD,GAAUsmD,EAEV,IAAIa,EAAgBzhF,EAAKgG,SAASs0B,EAAQA,EAASwmD,GACnDxmD,GAAUwmD,EAEV,IAAIzC,EAAgBr+E,EAAKgG,SAASs0B,EAAQA,EAASwmD,GAEnD,IAAK,IAAIl1E,EAAI,EAAGA,EAAI+I,EAAO/I,IAAK,CAC9B,IAAI81E,EAAS,EAAJ91E,EACL+1E,EAAMD,EAAK,EACXE,EAAS,EAAJh2E,EACLi2E,EAAMD,EAAK,EACXE,EAAU,GAAJl2E,EACNm2E,EAAQD,EAAM,GAElBxJ,EAAM1sE,GAAK,IAAI+0E,EAAK,CAClBI,EAAO/6E,SAAS07E,EAAIC,GACpBX,EAAeh7E,SAAS07E,EAAIC,GAC5BV,EAAej7E,SAAS47E,EAAIC,GAC5BX,EAAYl7E,SAAS07E,EAAIC,GACzBR,EAAen7E,SAAS07E,EAAIC,GAC5BP,EAAep7E,SAAS47E,EAAIC,GAC5BR,EAAYr7E,SAAS07E,EAAIC,GACzBL,EAAsBt7E,SAAS07E,EAAIC,GACnCJ,EAAuBv7E,SAAS47E,EAAIC,GACpCL,EAAmBx7E,SAAS07E,EAAIC,GAChCF,EAAcz7E,SAAS87E,EAAKC,GAC5B1D,EAAcr4E,SAAS87E,EAAKC,KAIhC,MAAO,CACL/hF,OACAs4E,QACAyI,SACAC,iBACAC,iBACAC,cACAC,iBACAC,iBACAC,cACAC,wBACAC,yBACAC,qBACAC,gBACApD,iBuEvvBqB2D,CAAoBjrB,EAAM2b,eAAexyE,OAAQygF,IAClErI,EAAQoI,EAAepI,MACvB2J,EAAY,EAEhBt9E,KAAK2zE,MAAM1vE,QAAQ0vE,GAGnB3zE,KAAK05E,cAAgBqC,EAAerC,cAGpC,IAAK,IAAIxS,KAAQ9U,EAAMnX,MACrBj7C,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAcpW,GAG3C,IAAK,IAAIC,KAAS/U,EAAMlX,OACtBl7C,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAcnW,GAG3C,IAAK,IAAIqI,KAAUpd,EAAMjX,QACvBn7C,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAc9N,GAG3C,IAAK,IAAInI,KAAcjV,EAAMhX,YAAa,CACxC,IAAIoiC,EAGAnW,EAAWiB,gBACbkV,EAAqB,IAAI1C,GAAmB96E,KAAMqnE,GAElDrnE,KAAKo7C,YAAYn3C,KAAKu5E,IAGxBx9E,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAcjW,EAAYmW,GAGvD,IAAK,IAAIjV,KAAWnW,EAAM9W,iBAAkB,CAC1C,IAAIs3B,EAAc,IAAIsI,GAAoBl7E,KAAMuoE,GAEhDvoE,KAAKs7C,iBAAiBr3C,KAAK2uE,GAE3B5yE,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAc/U,EAASqK,GAGpD,IAAK,IAAIrK,KAAWnW,EAAM7W,kBAAmB,CAC3C,IAAIq3B,EAAc,IAAIwI,GAAqBp7E,KAAMuoE,GAEjDvoE,KAAKu7C,kBAAkBt3C,KAAK2uE,GAE5B5yE,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAc/U,EAASqK,GAGpD,IAAK,IAAIrK,KAAWnW,EAAM5W,eAAgB,CACxC,IAAIo3B,EAAc,IAAI0I,GAAkBt7E,KAAMuoE,GAE9CvoE,KAAKw7C,eAAev3C,KAAK2uE,GAEzB5yE,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAc/U,EAASqK,GAGpD,IAAK,IAAIznC,KAAUinB,EAAMlnB,QACvBlrC,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAcnyC,GAG3C,IAAK,IAAIo9B,KAAWnW,EAAM3W,aAAc,CACtC,IAAIm3B,EAAc,IAAI2I,GAAuBv7E,KAAMuoE,GAEnDvoE,KAAKsyE,oBAAoBruE,KAAK2uE,GAE9B5yE,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAc/U,EAASqK,GAGpD,IAAK,IAAIrL,KAAkBnV,EAAM1W,gBAC/B17C,KAAKu9E,SAAS5J,EAAOA,EAAM2J,KAAc/V,GAK3C,IAAI0G,EAAY7b,EAAM6b,UAEtB,IAAK,IAAIhnE,EAAI,EAAGU,EAAIgsE,EAAMp4E,OAAQ0L,EAAIU,EAAGV,IACvCjH,KAAK47E,YAAY30E,GAAK0sE,EAAM1F,EAAUhnE,IAIxCjH,KAAK8zE,YAAY9zE,KAAKshE,UAMxB/O,sBACE,GAAIvyD,KAAKyxD,UACP,IAAK,IAAIiG,KAAa13D,KAAKyxD,UAAUiG,UAAU79C,SAAU,CACvD,IAAK,IAAI0uD,KAAW7Q,EAAUpc,iBAC5BitB,EAAQ1W,MAAM7xD,MAGhB,IAAK,IAAIuoE,KAAW7Q,EAAUnc,kBAC5BgtB,EAAQ1W,MAAM7xD,MAGhB,IAAK,IAAIuoE,KAAW7Q,EAAUlc,eAC5B+sB,EAAQ1W,MAAM7xD,MAGhB,IAAK,IAAIuoE,KAAW7Q,EAAU4a,oBAC5B/J,EAAQ1W,MAAM7xD,OActBu9E,SAAS5J,EAAO95E,EAAM4jF,EAAer8D,GACnCvnB,EAAKszD,MAAM10C,IAAIglE,EAActwB,OAgC7BtzD,EAAKoG,KAAOw9E,EAAcx9E,KAC1BpG,EAAK6jF,IAAMD,GAEqB,IAA5BA,EAAchmC,SAChB59C,EAAKyyB,OAAStsB,KAEdnG,EAAKyyB,OAASqnD,EAAM8J,EAAchmC,UAGhCgmC,EAAc7tB,YAChB/1D,EAAK+1D,aAAc,EACV6tB,EAAc5tB,aACvBh2D,EAAKg2D,cAAe,EACX4tB,EAAc3tB,aACvBj2D,EAAKi2D,cAAe,EACX2tB,EAAc1tB,eACvBl2D,EAAKk2D,cAAe,GAGlB3uC,IACFvnB,EAAKunB,OAASA,GAOlBvS,OACEf,MAAMe,OAEN,IAAK,IAAIw4D,KAAcrnE,KAAKo7C,YAC1BisB,EAAWoM,iBAAiB5kE,OAOhCT,OACEN,MAAMM,OAEN,IAAK,IAAIi5D,KAAcrnE,KAAKo7C,YAC1BisB,EAAWoM,iBAAiBrlE,OAQhCixD,eACE,IAAuB,IAAnBr/D,KAAKshE,SAAiB,CACxB,IAAIlP,EAAQpyD,KAAKoyD,MACbkP,EAAWlP,EAAM1X,UAAU16C,KAAKshE,UAChCnyB,EAAWmyB,EAASnyB,SACpBslB,EAAYrC,EAAM9B,OAAOmE,UAE7Bz0D,KAAK4vC,OAAS6kB,EACdz0D,KAAKiS,SAAWwiD,EAChBz0D,KAAKm7E,oBAAqB,EAEtBn7E,KAAK4vC,OAAST,EAAS,KACK,IAA1BnvC,KAAK67E,kBAAqD,IAA1B77E,KAAK67E,kBAA6C,IAAnBva,EAAS7qD,OAC1EzW,KAAK4vC,MAAQT,EAAS,GAEtBnvC,KAAK29E,uBAEL39E,KAAK4vC,MAAQT,EAAS,GACtBnvC,KAAKiS,SAAWwiD,EAChBz0D,KAAKm7E,oBAAqB,GAG5Bn7E,KAAKimD,KAAK,SAAUjmD,QAW1B49E,YAAY9B,GACV,IAAIF,EAAc57E,KAAK47E,YACnBta,EAAWthE,KAAKshE,SAChB0M,EAAuBhuE,KAAKoyD,MAAM4b,qBAClC5e,EAAQpvD,KAAKovD,MAGjB,IAAK,IAAInoD,EAAI,EAAGU,EAAIi0E,EAAYrgF,OAAQ0L,EAAIU,EAAGV,IAAK,CAClD,IAAIw2E,EAAgBzP,EAAqB/mE,GACrCpN,EAAO+hF,EAAY30E,GACnBqlB,EAASzyB,EAAKyyB,OAElBmxD,EAAczV,cAAc6S,GAAgB76E,MAE5C,IAAI69E,EAAgBhD,GAAe,IAAM,IACrCiD,EAAchC,GAAWxvD,EAAO+d,SAAWwzC,EAM/C,GAJAhkF,EAAKwwC,QAAUyzC,EAIXA,EAAa,CACf,IAAI7vB,GAAW,EACXkW,EAAWsZ,EAActZ,SACzB/W,EAAgBvzD,EAAKuzD,cACrBC,EAAgBxzD,EAAKwzD,cACrBC,EAAazzD,EAAKyzD,YAGlBwuB,GAAU3X,EAAS4D,QAAQzG,MAC7BrT,GAAW,GAGP6tB,GAAU3X,EAASC,YAAY9C,MACjCmc,EAAc/a,eAAe+Y,GAAiBz7E,MAE9CotD,EAAc,GAAKquB,GAAgB,GACnCruB,EAAc,GAAKquB,GAAgB,GACnCruB,EAAc,GAAKquB,GAAgB,KAIjCK,GAAU3X,EAAS37B,SAAS84B,MAC9Bmc,EAAc1yB,YAAYgC,GAAc/sD,MAExCqtD,EAAc,GAAKN,GAAa,GAChCM,EAAc,GAAKN,GAAa,GAChCM,EAAc,GAAKN,GAAa,GAChCM,EAAc,GAAKN,GAAa,KAI9B+uB,GAAU3X,EAAStsC,MAAMypC,MAC3Bmc,EAAc9a,SAAS+Y,GAAW17E,MAElCstD,EAAW,GAAKouB,GAAU,GAC1BpuB,EAAW,GAAKouB,GAAU,GAC1BpuB,EAAW,GAAKouB,GAAU,KAI9B,IAAIqC,EAAiBjC,GAAU7tB,GAAY3hC,EAAO2hC,UAAYwvB,EAAc3V,gBAE5EjuE,EAAKo0D,SAAW8vB,EAGZA,GACFlkF,EAAKg1D,0BAA0BO,GAKjC,IAAIhuC,EAASvnB,EAAKunB,OAEdA,GAAUy8D,GACZz8D,EAAO/B,SAITxlB,EAAKy1D,eAAeF,KAU1B4uB,cAAclC,GACZ,IAAI1pB,EAAQpyD,KAAKoyD,MACbrX,EAAUqX,EAAMrX,QAChBnF,EAASwc,EAAMxc,OACf+jC,EAAe35E,KAAK25E,aACpBC,EAAc55E,KAAK45E,YACnBC,EAAY75E,KAAK65E,UACjBC,EAAW95E,KAAK85E,SAChBC,EAAS/5E,KAAK+5E,OACdzY,EAAWthE,KAAKshE,SAGpB,IAAK,IAAIr6D,EAAI,EAAGU,EAAIozC,EAAQx/C,OAAQ0L,EAAIU,EAAGV,IAAK,CAC9C,IAAIw+D,EAAS1qB,EAAQ9zC,GACjBg2E,EAAS,EAAJh2E,GAGL60E,GAAUrW,EAAOtB,SAAS7zC,MAAMgxC,MAClCmE,EAAOT,SAAS4P,GAAW50E,MAI3B25E,EAAasD,GAAqB,IAAfrI,GAAU,GAC7B+E,EAAasD,EAAK,GAAoB,IAAfrI,GAAU,GACjC+E,EAAasD,EAAK,GAAoB,IAAfrI,GAAU,KAI/BkH,GAAUrW,EAAOtB,SAAS3uB,MAAM8rB,MAClCmE,EAAOZ,SAASyS,GAAWt3E,MAE3B25E,EAAasD,EAAK,GAAoB,IAAf3F,GAAU,IAKrC,IAAK,IAAIrwE,EAAI,EAAGU,EAAIiuC,EAAOr6C,OAAQ0L,EAAIU,EAAGV,IAAK,CAC7C,IAAI4uC,EAAQD,EAAO3uC,GACfg3E,EAAS,EAAJh3E,EACLg2E,EAAS,EAAJh2E,EAiCT,IA9BI60E,GAAUjmC,EAAMsuB,SAAS3uB,MAAM8rB,MACjCzrB,EAAMgvB,SAASyS,GAAWt3E,MAE1B45E,EAAY3yE,GAAoB,IAAfqwE,GAAU,KAIzBwE,GAAUjmC,EAAMsuB,SAASC,YAAY9C,MACvCzrB,EAAM6sB,eAAe+Y,GAAiBz7E,MAEtC65E,EAAUoD,GAAMxB,GAAgB,GAChC5B,EAAUoD,EAAK,GAAKxB,GAAgB,KAIlCK,GAAUjmC,EAAMsuB,SAAS37B,SAAS84B,MACpCzrB,EAAMkV,YAAYgC,GAAc/sD,MAEhC+5E,EAAOkE,GAAMlxB,GAAa,GAC1BgtB,EAAOkE,EAAK,GAAKlxB,GAAa,KAI5B+uB,GAAUjmC,EAAMsuB,SAAStsC,MAAMypC,MACjCzrB,EAAM8sB,SAAS+Y,GAAW17E,MAE1B85E,EAAS7yE,GAAKy0E,GAAU,IAItBI,GAAUjmC,EAAMsuB,SAASr/B,KAAKw8B,GAAW,CAC3CzrB,EAAMivB,aAAa6W,GAAe37E,MAElC,IAAIikE,EAAYpuB,EAAMouB,UAClB5uB,EAAYsmC,GAAc,GAE9B9B,EAAUoD,EAAK,GAAK5nC,EAAY4uB,EAAU,GAC1C4V,EAAUoD,EAAK,GAAM5nC,EAAY4uB,EAAU,GAAM,IAQvD3E,mBACE,IAAIwc,EAAS97E,KAAK87E,QAEdA,IAA8B,IAAnB97E,KAAKshE,WAAoBthE,KAAKoyD,MAAM9B,OAAO0E,cACxDh1D,KAAK87E,QAAS,EAGd97E,KAAK49E,YAAY9B,GAGjB97E,KAAKg+E,cAAclC,IAUvBoC,aAAat0E,GAGX,OAFA5J,KAAK0wE,UAAY9mE,EAEV5J,KAST2/D,eAAervC,GAGb,OAFAtwB,KAAK+6D,YAAYtiD,IAAI6X,GAEdtwB,KAST8zE,YAAYlqE,GAGV,GAFA5J,KAAKshE,SAAW13D,EAEZ5J,KAAKoyD,MAAMx1D,GAAI,CACjB,IAAI89C,EAAY16C,KAAKoyD,MAAM1X,UAEvB9wC,EAAK,GAAKA,EAAK8wC,EAAUn/C,OAAS,GACpCyE,KAAKshE,UAAY,EACjBthE,KAAK4vC,MAAQ,EACb5vC,KAAKm7E,oBAAqB,GAE1Bn7E,KAAK4vC,MAAQ8K,EAAU9wC,GAAIulC,SAAS,GAGtCnvC,KAAK29E,qBAEL39E,KAAK87E,QAAS,EAGhB,OAAO97E,KAUT+6E,oBAAoB9sC,GAGlB,OAFAjuC,KAAK67E,iBAAmB5tC,EAEjBjuC,KASTm+E,cAAcv0E,GACZ,IAAIy9D,EAAarnE,KAAKoyD,MAAMhX,YAAYxxC,GAExC,GAAIy9D,EACF,OAAOrnE,KAAK2zE,MAAMtM,EAAW/+D,OASjCq1E,qBACE,IAAK,IAAIS,KAAoBp+E,KAAKsyE,oBAChC8L,EAAiBnzB,SClkBR,IAAAozB,GAAA,CACbve,GAAE,SAAAhuD,OACE6uC,GAAkB,UAAA7uC,OAClB6uC,GAAmB,48DAgEvBrmD,GAAE,+lBAAAwX,OAqBE6uC,GAAsB,0rCAgD1B29B,YAAW,SAAAxsE,OACP6uC,GAAmB,gjBA0BvB49B,YAAW,yaC9JEC,GAAA,CACb9sD,KAAK4+B,GACHA,EAAO+E,WAAWopB,IAElB,IAAIC,EAAiBpuB,EAAO6F,WAAW,oBAAqBxV,GAAQmf,GAAInf,GAAQrmD,IAC5EqkF,EAAiBruB,EAAO6F,WAAW,oBAAqBxV,GAAQ29B,YAAa39B,GAAQ49B,aAGzF,OAAOG,EAAe9hF,IAAM+hF,EAAe/hF,IAG7CklD,WAAY,CAAC,CAAC,OAAQ,eAAgB,CAAC,OAAQ,SAC/Cpa,YAAa6S,GACbqe,KCRa,cAAwBL,GAKrCR,gBAAgB3I,GACd,IAAIgD,EAAQpyD,KAAKoyD,MACb/2D,EAAOyS,MAAMiqD,gBAAgB3I,GAC7B9T,EAAmB,GACnBC,EAAoB,GACpBC,EAAiB,GACjB82B,EAAsB,GAE1B,IAAK,IAAI/J,KAAWnW,EAAM9W,iBACxBA,EAAiBr3C,KAAK,IAAI00C,GAAgB4vB,IAG5C,IAAK,IAAIA,KAAWnW,EAAM7W,kBACxBA,EAAkBt3C,KAAK,IAAIi1C,GAAiBqvB,IAG9C,IAAK,IAAIA,KAAWnW,EAAM5W,eACxBA,EAAev3C,KAAK,IAAI21C,GAAc2uB,IAGxC,IAAK,IAAIA,KAAWnW,EAAM3W,aAAc,CACtC,IAAIv5C,EAAOqmE,EAAQrmE,KAEN,QAATA,EACFowE,EAAoBruE,KAAK,IAAIi0E,GAAsB3P,IACjC,QAATrmE,EACTowE,EAAoBruE,KAAK,IAAIu0E,GAAsBjQ,IACjC,QAATrmE,EACTowE,EAAoBruE,KAAK,IAAI00E,GAAsBpQ,IACjC,QAATrmE,GACTowE,EAAoBruE,KAAK,IAAI20E,GAAsBrQ,IAIvD,MAAO,IACFltE,EACHigD,mBACAC,oBACAC,iBACA82B,uBAOJjzD,OAAO+vC,GACL,IAAI/zD,EAAOyS,MAAMuR,OAAO+vC,GAExB,GAAI/zD,EAAM,CACR,IAAI4kE,EAAajgE,KAAKoyD,MAAMwb,QAAQryE,OAChC08D,EAAU58D,EAAK48D,QACfrH,EAAoB,EACpBC,EAAoB,EACpBC,EAAkB,EAClBC,EAAc,EAElB,IAAK,IAAI9pD,EAAI,EAAGU,EAAItM,EAAK68D,YAAajxD,EAAIU,EAAGV,IAC3C2pD,GAAqBqH,EAAQhxD,GAAG+I,MAChC8gD,GAAmB,EACnBC,GAAekP,EAGjB,IAAK,IAAIsI,KAAWltE,EAAKigD,iBAAkB,CACzCitB,EAAQlpD,SAER,IAAIu/D,EAAYrW,EAAQmK,MAEpBkM,IACF/tB,GAAqB+tB,EACrB7tB,GAAe,GAInB,IAAK,IAAIwX,KAAWltE,EAAKkgD,kBAAmB,CAC1CgtB,EAAQlpD,SAER,IAAIu/D,EAAYrW,EAAQmK,MAEpBkM,IACF/tB,GAAqB+tB,EACrB7tB,GAAe,GAInB,IAAK,IAAIwX,KAAWltE,EAAKmgD,eAAgB,CACvC+sB,EAAQlpD,SAER,IAAIu/D,EAAYrW,EAAQmK,MAEpBkM,IACF/tB,GAAqB+tB,EACrB7tB,GAAe,GAInB,IAAK,IAAIwX,KAAWltE,EAAKi3E,oBAIvB,GAHA/J,EAAQlpD,SAGa,QAAjBkpD,EAAQrmE,KAAgB,CAC1B,IAAI08E,EAAYrW,EAAQmK,MAEpBkM,IACF/tB,GAAqB+tB,EACrB7tB,GAAe,GAKrB/wD,KAAK4wD,kBAAoBA,EACzB5wD,KAAK6wD,kBAAoBA,EACzB7wD,KAAK8wD,gBAAkBA,EACvB9wD,KAAK+wD,YAAcA,KD7GvBuH,OAAQA,GACRK,SAAUsG,IEjBG4f,GAAA,CACbpsB,WACAlY,SACA0kB,iBACA3G,WCNammB,GAAA,CACbhsB,WACA3c,YCHagpC,GAAA,CACbC,SAAQ,qSAAAjtE,OAWJ6uC,GAAkB,2vEA4DtBq+B,SAAQ,uwBA6BRC,QAAO,mbAAAntE,OAeH6uC,GAAkB,khDAyCtBu+B,QAAO,mbAePC,SAAQ,80DAoDRC,SAAQ,wpCAyCRC,YAAW,isCAmCXC,YAAW,gqBAwBXC,cAAa,0SAAAztE,OAaT6uC,GAAsB,yPAS1B6+B,cAAa,+hBC5Vf,MAAMC,GAAkB,CACtsB,CAC1BhkBC,EAAKvpC,EAAK1iB,GAClD,MAAY,WAARisD,EACKr9E,KAAKC,IAAImxB,EAAW8nD,GAAgBplC,IAEpC9zC,KAAKC,IAAImxB,EAAW+rD,GAAoBrpC,IC3IpC,MAAMwpC,GAOnBj2E,YAAY8xC,EAAI7iD,EAAainF,EAAWjpC,EAAUkpC,GAChD,IAAIrmE,EAAS,IAAIsmE,GAAUnnF,GACvB4oE,EAAS/nD,EAAOq9B,QAAQ,GACxB7E,EAAWuvB,EAAOvvB,SAClBC,EAAUsvB,EAAOtvB,QACjBujB,EAAM+L,EAAO3uB,OAAO,GACpBmtC,EAAOxe,EAAO3uB,OAAO,GACrBR,EAAQmvB,EAAOnvB,MACf85B,EAAgBl6B,EAASjzC,WACzBihF,EAAY9T,EAAgBj6B,EAAQlzC,WACpCkhF,EAAaD,EAAYxqB,EAAIz2D,WAC7BmhF,EAAcD,GAAcF,EAAOA,EAAKhhF,WAAa,GACpDghF,IACHE,EAAaD,GAEf,IAAI3zB,EAAYuzB,EAAUvoF,OAAS,EAEnC,IAAKs/C,IACH76C,KAAK66C,SAAWn9B,EAAOm9B,SAAS/hC,IAAIurE,GAAOA,EAAIjlF,KAAO2kF,EAAOryD,KAAK2yD,EAAIjlF,MAAQ,MAC9Ey7C,EAAW,IAAI7/C,WAAWu1D,GACtB0zB,GAAQvmE,EAAOm9B,SAASt/C,QAAU,GACpC,IAAK,IAAI0L,EAAI,EAAGA,EAAIspD,IAAatpD,EAC/B4zC,EAAS5zC,GAAK,EAMpB,IAAIkyD,EAAezZ,EAAG0Z,eACtB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcH,GAC/BzZ,EAAG6Z,WAAW7Z,EAAG4Z,aAAc8qB,EAAa1kC,EAAG8Z,aAC/C9Z,EAAGsf,cAActf,EAAG4Z,aAAc,EAAGpjB,GACrCwJ,EAAGsf,cAActf,EAAG4Z,aAAc8W,EAAej6B,GACjDuJ,EAAGsf,cAActf,EAAG4Z,aAAc4qB,EAAWxqB,GACzCuqB,GAAMvkC,EAAGsf,cAActf,EAAG4Z,aAAc6qB,EAAYF,GAExD,IAAItqB,EAAaja,EAAG0Z,eACpB1Z,EAAG2Z,WAAW3Z,EAAGka,qBAAsBD,GACvCja,EAAG6Z,WAAW7Z,EAAGka,qBAAsBtjB,EAAOoJ,EAAG8Z,aAEjD,IAAI8qB,EAAoC,EAAnBR,EAAUvoF,OAC3BgpF,EAA2B7kC,EAAG0Z,eAClC1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcirB,GAC/B7kC,EAAG6Z,WAAW7Z,EAAG4Z,aAAcgrB,EAAiB/zB,EAAW7Q,EAAG8Z,aAC9D9Z,EAAGsf,cAActf,EAAG4Z,aAAc,EAAG,IAAIr7D,aAAa6lF,IACtDpkC,EAAGsf,cAActf,EAAG4Z,aAAcgrB,EAAgB,IAAItpF,WAAW6/C,IAGjE76C,KAAKm5D,aAAeA,EAEpBn5D,KAAK25D,WAAaA,EAElB35D,KAAKowE,cAAgBA,EAErBpwE,KAAKkkF,UAAYA,EAEjBlkF,KAAKmkF,WAAaA,EAElBnkF,KAAKqlE,SAAW/uB,EAAM/6C,OAEtByE,KAAKukF,yBAA2BA,EAEhCvkF,KAAKskF,eAAiBA,EAEtBtkF,KAAKuwD,UAAYA,EAQnBxlD,OAAO20C,EAAI2C,EAAiB3B,EAAS2jC,GACnC,GAAIrkF,KAAK66C,SACP,IAAK,IAAI5zC,EAAI,EAAGA,EAAIjH,KAAK66C,SAASt/C,QAAU0L,EAAI,IAAKA,EAEnD,GADAy4C,EAAGkG,cAAclG,EAAG8kC,SAAWv9E,GAC3BjH,KAAK66C,SAAS5zC,GAAI,CACpB,IAAKjH,KAAK66C,SAAS5zC,GAAG24C,cACpB,OAEFF,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAK66C,SAAS5zC,GAAG24C,eAC1C5/C,KAAKykF,eACR/kC,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAC1DvkD,KAAKykF,cAAe,QAGtB/kC,EAAGsE,YAAYtE,EAAGuE,WAAYogC,EAAIp9E,GAAG24C,eAM3CF,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKukF,0BACpC7kC,EAAG4c,oBAAoB5b,EAAQgkC,mBAAoB,EAAGhlC,EAAG8c,OAAO,EAAO,GAAI,GAC3E9c,EAAG4c,oBAAoB5b,EAAQikC,kBAAmB,EAAGjlC,EAAGgF,eAAe,EAAO,EAAG1kD,KAAKskF,gBAGtF5kC,EAAG2Z,WAAW3Z,EAAG4Z,aAAct5D,KAAKm5D,cACpCzZ,EAAG4c,oBAAoB5b,EAAQ6b,WAAY,EAAG7c,EAAG8c,OAAO,EAAO,GAAI,GACnE9c,EAAG4c,oBAAoB5b,EAAQ4kB,SAAU,EAAG5lB,EAAG8c,OAAO,EAAO,GAAIx8D,KAAKowE,eACtE1wB,EAAG4c,oBAAoB5b,EAAQkkC,MAAO,EAAGllC,EAAG8c,OAAO,EAAO,EAAGx8D,KAAKkkF,WAClExkC,EAAG4c,oBAAoB5b,EAAQmkC,MAAO,EAAGnlC,EAAG8c,OAAO,EAAO,EAAGx8D,KAAKmkF,YAGlEzkC,EAAG2Z,WAAW3Z,EAAGka,qBAAsB55D,KAAK25D,YAG5CtX,EAAgBK,2BAA2BhD,EAAGke,UAAW59D,KAAKqlE,SAAU3lB,EAAG6a,eAAgB,EAAGv6D,KAAKuwD,YCpHxF,MAAMu0B,GAOnBl3E,YAAY8xC,EAAIiG,EAASm+B,EAAW3oD,GAClCn7B,KAAK2lD,QAAUA,EACf3lD,KAAK4tE,QAAU,GACf5tE,KAAKswB,MAAQ,CAAC,EAAG,EAAG,EAAG,GAIvB,IAAI4lB,EAAW,GACXwjB,EAAM,GACNxiB,EAAU,GACVqZ,EAAYuzB,EAAUvoF,OAAS,EACnC,IAAK,IAAIyF,EAAM,EAAGA,EAAMuvD,IAAavvD,EAAK,CACxC,IAAK+jF,EAAIC,EAAIC,EAAIC,EAAIC,GAASrB,EAAUroF,MAAY,EAANuF,EAAe,EAANA,EAAU,GAE7DokF,EAAM7+E,KAAKqwD,OAAOmuB,EAAK5pD,EAAa,IAAM,KAC1CkqD,EAAM9+E,KAAKmwD,MAAMuuB,EAAK9pD,EAAa,IAAM,KACzCmqD,EAAM/+E,KAAKqwD,OAAOouB,EAAK7pD,EAAa,IAAM,KAC1CoqD,EAAMh/E,KAAKmwD,MAAMwuB,EAAK/pD,EAAa,IAAM,KAEzCqqD,GAAYD,EAAMD,EAAM,IAAMD,EAAMD,EAAM,GAC9C,GAAII,EAfc,KAgBhB,SAGF,IAAI3hD,EAAQqS,EAAS36C,OAAS,EAAGkqF,EAAOJ,EAAMD,EAAM,EAChDvhD,EAAQ2hD,EApBM,OAqBhBxlF,KAAK0lF,SAAShmC,EAAIxJ,EAAUwjB,EAAKxiB,GACjChB,EAAS36C,OAAS,EAClBm+D,EAAIn+D,OAAS,EACb27C,EAAQ37C,OAAS,EACjBsoC,EAAQ,GAGV,IAAK,IAAI8hD,EAAKL,EAAKK,GAAMJ,IAAOI,EAAI,CAClC,IAAI1zD,EAAS,IAAL0zD,EAAaxqD,EAAa,GAClC,IAAK,IAAIyqD,EAAKR,EAAKQ,GAAMP,IAAOO,EAAI,CAClC,IAAI5hF,EAAS,IAAL4hF,EAAazqD,EAAa,GAClC+a,EAASjyC,KAAKD,EAAGiuB,EAAGkzD,GACpBzrB,EAAIz1D,MAAMD,EAAI+gF,IAAOE,EAAKF,GAAK,GAAO9yD,EAAI+yD,IAAOE,EAAKF,KAG1D,IAAK,IAAI/9E,EAAI,EAAGA,EAAIs+E,EAAMD,IAAOr+E,EAC/B,IAAK,IAAIe,EAAI,EAAGA,EAAIq9E,EAAMD,IAAOp9E,EAAG,CAClC,IAAI69E,EAAKhiD,EAAQ58B,EAAIw+E,EAAOz9E,EAC5BkvC,EAAQjzC,KAAK4hF,EAAIA,EAAK,EAAGA,EAAKJ,EAAMI,EAAK,EAAGA,EAAKJ,EAAO,EAAGI,EAAKJ,IAKlEvuC,EAAQ37C,QACVyE,KAAK0lF,SAAShmC,EAAIxJ,EAAUwjB,EAAKxiB,GAIrCwuC,SAAShmC,EAAIxJ,EAAUwjB,EAAKxiB,GAC1B,IAAIgtC,EAA8B,EAAlBhuC,EAAS36C,OAErB49D,EAAezZ,EAAG0Z,eACtB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcH,GAC/BzZ,EAAG6Z,WAAW7Z,EAAG4Z,aAAc4qB,EAAyB,EAAbxqB,EAAIn+D,OAAYmkD,EAAG8Z,aAC9D9Z,EAAGsf,cAActf,EAAG4Z,aAAc,EAAG,IAAIr7D,aAAai4C,IACtDwJ,EAAGsf,cAActf,EAAG4Z,aAAc4qB,EAAW,IAAIjmF,aAAay7D,IAE9D,IAAIC,EAAaja,EAAG0Z,eACpB1Z,EAAG2Z,WAAW3Z,EAAGka,qBAAsBD,GACvCja,EAAG6Z,WAAW7Z,EAAGka,qBAAsB,IAAI97D,YAAYo5C,GAAUwI,EAAG8Z,aAEpEx5D,KAAK4tE,QAAQ3pE,KAAK,CAChBigF,YACA/qB,eACAQ,aACA0L,SAAUnuB,EAAQ37C,SAQtBwP,OAAO20C,EAAIe,EAAUC,GAEnBhB,EAAGkG,cAAclG,EAAG8kC,UACpB9kC,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAK2lD,QAAQ/F,eAC3CF,EAAGomC,WAAWrlC,EAASslC,QAAS/lF,KAAKswB,OAErC,IAAK,IAAI3yB,KAAKqC,KAAK4tE,QAEjBluB,EAAG2Z,WAAW3Z,EAAG4Z,aAAc37D,EAAEw7D,cACjCzZ,EAAG4c,oBAAoB5b,EAAQ6b,WAAY,EAAG7c,EAAG8c,OAAO,EAAO,GAAI,GACnE9c,EAAG4c,oBAAoB5b,EAAQ+b,KAAM,EAAG/c,EAAG8c,OAAO,EAAO,EAAG7+D,EAAEumF,WAG9DxkC,EAAG2Z,WAAW3Z,EAAGka,qBAAsBj8D,EAAEg8D,YAGzCja,EAAGsmC,aAAatmC,EAAGke,UAAWjgE,EAAE0nE,SAAU3lB,EAAG6a,eAAgB,ICzGnE,SAAS0rB,GAAe59E,EAAG1K,GACzB,OAAO0K,EAAEi5D,SAASjyB,OAAS1xC,EAAE2jE,SAASjyB,OAGxC,SAAS62C,GAAcz6E,EAAOxL,GAC5B,IAAIoc,EAAQpc,EAAKga,cAAc6P,MAAM,QAAQhR,IAAI9U,GAAKA,EAAEmI,QACxD,OAAOV,EAAM+F,MAAMtZ,GAAKmkB,EAAM8pE,SAASjuF,IAkBzC,SAASkuF,GAAelkF,EAAMmkF,EAAUC,GACtC,IAAI76E,EAAQ66E,EAAYA,EAAUx8D,MAAM,KAAK5c,OAAOlJ,GAAKA,EAAEzI,QAAQud,IAAI5gB,GAAKA,EAAE+hB,eAAiB,GAC3FygC,EAjBN,SAAyBx4C,EAAMw4C,EAAWjvC,GACxC,IAAI86E,EAAW,GAEf,IAAK,IAAIt/E,EAAI,EAAGU,EAAI+yC,EAAUn/C,OAAQ0L,EAAIU,EAAGV,IAAK,CAChD,IAAIq6D,EAAW5mB,EAAUzzC,GAChBq6D,EAASrhE,KAAK6pB,MAAM,KAAK,GAAGtuB,QAAQ,MAAO,IAAI2Q,OAAO8N,gBAElD/X,GAAQgkF,GAAcz6E,EAAO61D,EAASrhE,OACjDsmF,EAAStiF,KAAK,CAACq9D,WAAUh5D,MAAOrB,IAIpC,OAAOs/E,EAKSC,CAAgBtkF,EAAMmkF,EAAU56E,GAChD,IAAKivC,EAAUn/C,OAAQ,CACrBkQ,EAAMxH,KAAK/B,GACX,IAAIm2E,EAAQgO,EAASI,UAAUziF,GAAKkiF,GAAcz6E,EAAOzH,EAAE/D,OACvDo4E,GAAS,GACX39B,EAAUz2C,KAAK,CAACq9D,SAAU+kB,EAAShO,GAAQ/vE,MAAO+vE,IAItD39B,EAAU1yB,KAAKi+D,IAEf,IAAK,IAAIh/E,EAAI,EAAGU,EAAI+yC,EAAUn/C,OAAQ0L,EAAIU,EAAGV,IAAK,CAEhD,IAAIooC,EADWqL,EAAUzzC,GAAGq6D,SACNjyB,OAEtB,GAAe,IAAXA,EACF,MAGF,GAAoB,GAAhB9oC,KAAK03C,SAAgB5O,EACvB,OAAOqL,EAAUzzC,GAIrB,IAAIy/E,EAAgBhsC,EAAUn/C,OAAS0L,EAIvC,OAFeyzC,EADFzzC,EAAIV,KAAKqwD,MAAMrwD,KAAK03C,SAAWyoC,IAM9C,SAASC,GAAcr3E,EAAQg3E,GAC7B,IACIhlB,EAAW8kB,GAAe,QADd92E,EAAO8iD,MAAM1X,UACqB4rC,GAE9ChlB,GACFhyD,EAAOwkE,YAAYxS,EAASh5D,OAIjB,SAASs+E,GAAct3E,EAAQg3E,GAC5Ch3E,EAAO8iD,MAAMY,aACVr2D,KAAMy1D,IACLu0B,GAAcr3E,EAAQg3E,GACtBh3E,EAAOwlD,GAAG,SAAU,IAAM6xB,GAAcr3E,EAAQg3E,MCnDtD,IAAIO,GAAc1gC,QAAKK,SACnBsgC,GAAc3gC,QAAKK,SClBR,IAAAugC,GAAA,CACbC,UDsBa,cAA4B3yB,GAKzCzmD,YAAYwwC,EAAQ6oC,EAAeC,GACjCp5E,MAAMswC,GAENp+C,KAAKk1D,UAAY,IAEjBl1D,KAAK80D,GAAG,QAAS,CAACxlD,EAAQjS,EAAOyC,IAAW5C,QAAQG,MAAMiS,EAAQjS,EAAOyC,IAEzEE,KAAKq1D,WAAW8xB,IAChBnnF,KAAKq1D,WAAW+xB,IAGhBpnF,KAAKinF,cAAgBA,EAErBjnF,KAAKqnF,aAAernF,KAAKm2D,WAAW,SAAUxV,GAAQo+B,SAAUp+B,GAAQq+B,UACxEh/E,KAAKsnF,YAActnF,KAAKm2D,WAAW,QAASxV,GAAQs+B,QAASt+B,GAAQu+B,SACrEl/E,KAAKunF,YAAcvnF,KAAKm2D,WAAW,SAAUxV,GAAQw+B,SAAUx+B,GAAQy+B,UACvEp/E,KAAKwnF,kBAAoBxnF,KAAKm2D,WAAW,cAAexV,GAAQ4+B,cAAe5+B,GAAQ6+B,eACvFx/E,KAAKynF,gBAAkBznF,KAAKm2D,WAAW,aAAcxV,GAAQ0+B,YAAa1+B,GAAQ2+B,aAElFt/E,KAAKovD,MAAQpvD,KAAKu1D,WAClBv1D,KAAKmrC,OAASnrC,KAAKovD,MAAMjkB,OACzBnrC,KAAK28B,MAAQ,GAEb38B,KAAK0nF,WAAa,EAClB1nF,KAAK2nF,sBAAwB,EAE7B3nF,KAAK4nF,UAAW,EAEhB5nF,KAAK6nF,6BAA8B,EACnC7nF,KAAK8nF,YAAc,IAAI5d,GACvBlqE,KAAK+nF,eAAiB,IAAI7d,GAC1BlqE,KAAKgoF,UAAY,IAAI9d,GACrBlqE,KAAKioF,cAAe,EACpBjoF,KAAKkoF,aAAc,EACnBloF,KAAKmoF,cAAe,EAEpB,MAAMruE,EAAUotE,EAAQptE,UAExB1gB,QAAQ+iB,IAAI,CACVrC,KACG,CAAC,0BAA2B,6BAA8B,yBAC1DhB,IAAK1Z,GAASY,KAAKg2D,YAAYixB,EAAc7nF,GAAM,GAAI,YAAQzG,EAAWyG,GAAM4zD,gBAClFr2D,KAAKoP,IAAuC,IAArCgO,EAAKquE,EAASC,EAAYjuD,GAAMruB,EACtC/L,KAAKsoF,eAAiBvuE,EAAID,QAC1B9Z,KAAK6nF,6BAA8B,EACnC7nF,KAAK8nF,YAAYp2D,KAAK02D,EAAQ/sF,MAC9B2E,KAAK+nF,eAAer2D,KAAK22D,EAAWhtF,MACpC2E,KAAKgoF,UAAUt2D,KAAK0I,EAAM/+B,MAC1B2E,KAAKimD,KAAK,mBAGdjmD,KAAKuoF,+BAAgC,EACrCvoF,KAAKwoF,YAAc,IAAIte,GACvBlqE,KAAKyoF,eAAiB,IAAIve,GAC1BlqE,KAAK0oF,qBAAuB,IAAIxe,GAChClqE,KAAKq4B,QAAU,GACfr4B,KAAKs4B,eAAiB,GACtBt4B,KAAK2oF,cAAe,EACpB3oF,KAAK4oF,WAAa,GAClB5oF,KAAK6oF,iBAAkB,EAEvB/uE,EAAQnd,KAAKod,IACX/Z,KAAKuoF,+BAAgC,EACrCvoF,KAAKwoF,YAAczuE,EAAID,QACvB9Z,KAAKimD,KAAK,mBAGZjmD,KAAK8oF,qBAAsB,EAC3B9oF,KAAK+oF,UAAY,IAAI7e,GACrBlqE,KAAKgpF,aAAe,IAAI9e,GACxBlqE,KAAKipF,cAAgB,IAAI/e,GACzBlqE,KAAK28B,MAAQ,GACb38B,KAAKkpF,YAAa,EAElB9vF,QAAQ+iB,IAAI,CAACrC,EAAS9Z,KAAKg2D,YAAYixB,EAAc,6BAA6B,GAAI,YAAQtuF,EAAW,6BAA6Bq6D,eACnIr2D,KAAKmgB,IAA0B,IAAxB/C,EAAKkvE,GAAcnsE,EACzB9c,KAAK8oF,qBAAsB,EAC3B9oF,KAAK+oF,UAAYhvE,EAAID,QACrB9Z,KAAKipF,cAAcv3D,KAAKu3D,EAAc5tF,MACtC2E,KAAKimD,KAAK,iBAGd,IAAIvG,EAAK1/C,KAAK0/C,GACVypC,EAAYzpC,EAAGqE,gBACnBrE,EAAGsE,YAAYtE,EAAGuE,WAAYklC,GAC9BzpC,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAG0pC,GAAI,EAAG,EAAG,EAAG1pC,EAAGqD,IAAKrD,EAAGgF,cAAe,IAAI1pD,WAAW,KACzFgF,KAAKmpF,UAAYA,EAMnBE,eACE,GAAIrpF,KAAKioF,aAAc,CACrB,IAAIvoC,EAAK1/C,KAAK0/C,GACV8T,EAAQxzD,KAAKwzD,MACbnR,EAAkBmR,EAAM1R,WAAWO,gBACnCkZ,EAASv7D,KAAKqnF,aACd5mC,EAAW8a,EAAO9a,SAClBC,EAAU6a,EAAO7a,SACjBrlB,QAACA,EAAOrJ,KAAEA,EAAImJ,aAAEA,EAAYg+B,aAAEA,EAAYQ,WAAEA,EAAU2vB,UAAEA,EAASC,eAAEA,EAAcC,eAAEA,EAAcC,cACnGA,EAAaC,cAAEA,EAAaC,gBAAEA,EAAeC,cAAEA,GAAiB5pF,KAAK6pF,kBACnEC,EAAkB9pF,KAAK8pF,gBACvBC,EAAiBrpC,EAAQ0b,aACzB4tB,EAAiBtpC,EAAQ6b,WACzB0tB,EAAiBvpC,EAAQwpC,WACzBC,EAAmBzpC,EAAQ0pC,aAE/B1qC,EAAGgd,QAAQhd,EAAGkd,OAEdpJ,EAAMjO,iBAAiBgW,GAEvB7b,EAAG8b,iBAAiB/a,EAASgb,OAAO,EAAOz7D,KAAKmrC,OAAOwd,uBACvDjJ,EAAG4d,WAAW7c,EAAS4pC,SAAUlvD,GACjCukB,EAAGmyB,UAAUpxB,EAAS6pC,OAAQjvD,EAAU,EAAGrJ,EAAO,GAClD0tB,EAAG4d,WAAW7c,EAAS8pC,QAASX,GAChClqC,EAAGkc,UAAUnb,EAAS+pC,YAAa,GACnC9qC,EAAGkc,UAAUnb,EAASgqC,WAAY,GAClC/qC,EAAGkc,UAAUnb,EAASiqC,YAAa,GACnChrC,EAAGkc,UAAUnb,EAASkqC,aAAc,GACpCjrC,EAAGoc,UAAUrb,EAASmqC,gBAAiB,GAAKd,EAAgBvuF,OAAS,IACrEmkD,EAAGoc,UAAUrb,EAASoqC,eAAgBf,EAAgBvuF,OAAS,GAE/DmkD,EAAGkG,cAAclG,EAAGmG,UACpBnG,EAAGsE,YAAYtE,EAAGuE,WAAYqlC,GAE9B5pC,EAAGkG,cAAclG,EAAG8kC,UACpB9kC,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAK8qF,iBAEnCprC,EAAGkG,cAAclG,EAAGqrC,UACpBrrC,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAKmpF,WAEnCzpC,EAAGkG,cAAclG,EAAGsrC,UACpBtrC,EAAGsE,YAAYtE,EAAGuE,WAAYslC,GAE9B7pC,EAAG2Z,WAAW3Z,EAAG4Z,aAAcH,GAC/BzZ,EAAG4c,oBAAoB0tB,EAAgB,EAAGtqC,EAAG8c,OAAO,EAAO,EAAG,GAE9D9c,EAAG2Z,WAAW3Z,EAAG4Z,aAAckwB,GAC/B9pC,EAAG4c,oBAAoBytB,EAAgB,EAAGrqC,EAAG8c,OAAO,EAAO,EAAG,GAC9Dna,EAAgBO,yBAAyBmnC,EAAgB,GAEzDrqC,EAAG2Z,WAAW3Z,EAAG4Z,aAAcowB,GAC/BhqC,EAAG4c,oBAAoB2tB,EAAgB,EAAGvqC,EAAGgF,eAAe,EAAO,EAAG,GACtErC,EAAgBO,yBAAyBqnC,EAAgB,GAEzDvqC,EAAG2Z,WAAW3Z,EAAG4Z,aAAcqwB,GAC/BjqC,EAAG4c,oBAAoB6tB,EAAkB,EAAGzqC,EAAGgF,eAAe,EAAO,EAAG,GACxErC,EAAgBO,yBAAyBunC,EAAkB,GAE3DzqC,EAAG2Z,WAAW3Z,EAAGka,qBAAsBD,GAEvCtX,EAAgBK,2BAA2BhD,EAAGke,UAAW,EAAGle,EAAGgF,cAAe,EAAG+kC,GAEjFpnC,EAAgBO,yBAAyBqnC,EAAgB,GACzD5nC,EAAgBO,yBAAyBunC,EAAkB,GAC3D9nC,EAAgBO,yBAAyBmnC,EAAgB,IAO7DkB,cACE,GAAIjrF,KAAKioF,aAAc,CACrB,IAAIvoC,EAAK1/C,KAAK0/C,GACV8T,EAAQxzD,KAAKwzD,MACbnR,EAAkBmR,EAAM1R,WAAWO,gBACnCkZ,EAASv7D,KAAKsnF,YACd7mC,EAAW8a,EAAO9a,SAClBC,EAAU6a,EAAO7a,QACjBwqC,EAAYlrF,KAAKkrF,WACjB7vD,QAACA,EAAOrJ,KAAEA,EAAImJ,aAAEA,EAAYg+B,aAAEA,EAAYQ,WAAEA,EAAU2vB,UAAEA,EAASE,eAAEA,EAAcC,cAAEA,EAAa0B,eAAEA,EAAcC,YAAEA,EAAWxB,cAAEA,GAAiB5pF,KAAK6pF,kBACrJE,EAAiBrpC,EAAQ0b,aACzB4tB,EAAiBtpC,EAAQ6b,WACzB8uB,EAAgB3qC,EAAQ4qC,UAE5B5rC,EAAG6D,OAAO7D,EAAGkd,OACbld,EAAGmd,UAAUnd,EAAGwjB,IAAKxjB,EAAGqd,qBAExBvJ,EAAMjO,iBAAiBgW,GAEvB7b,EAAG8b,iBAAiB/a,EAASgb,OAAO,EAAOz7D,KAAKmrC,OAAOwd,uBACvDjJ,EAAG4d,WAAW7c,EAAS4pC,SAAUlvD,GACjCukB,EAAGmyB,UAAUpxB,EAAS6pC,OAAQjvD,EAAU,EAAGrJ,EAAO,GAClD0tB,EAAG4d,WAAW7c,EAAS8pC,QAASX,GAChClqC,EAAGkc,UAAUnb,EAAS+pC,YAAa,GACnC9qC,EAAGkc,UAAUnb,EAAS8qC,iBAAkB,GACxC7rC,EAAGkc,UAAUnb,EAAS+qC,WAAY,GAClC9rC,EAAGoc,UAAUrb,EAASgrC,eAAgBzrF,KAAK0rF,mBAC3ChsC,EAAGoc,UAAUrb,EAASkrC,YAA+B,EAAlB3rF,KAAK0nF,YACxChoC,EAAGomC,WAAWrlC,EAASmrC,eAAgB5rF,KAAK6rF,cAC5CnsC,EAAGomC,WAAWrlC,EAASqrC,eAAgB9rF,KAAK+rF,cAC5CrsC,EAAGomC,WAAWrlC,EAASurC,kBAAmBhsF,KAAKisF,iBAC/CvsC,EAAGwsC,UAAUzrC,EAAS0rC,YAA4B,IAAfjB,EAAU,GAAa/vD,EAAa,GACtD,IAAf+vD,EAAU,GAAa/vD,EAAa,GACL,KAA9BE,EAAU6vD,EAAU,GAAK,GAAa/vD,EAAa,GACxB,KAA3BnJ,EAAOk5D,EAAU,GAAK,GAAa/vD,EAAa,IAEnDukB,EAAGkG,cAAclG,EAAGmG,UACpBnG,EAAGsE,YAAYtE,EAAGuE,WAAYqlC,GAE9B5pC,EAAGkG,cAAclG,EAAG8kC,UACpB9kC,EAAGsE,YAAYtE,EAAGuE,WAAYknC,GAE9BzrC,EAAGkG,cAAclG,EAAGqrC,UACpBrrC,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAKosF,cAEnC1sC,EAAG2Z,WAAW3Z,EAAG4Z,aAAcH,GAC/BzZ,EAAG4c,oBAAoB0tB,EAAgB,EAAGtqC,EAAG8c,OAAO,EAAO,EAAG,GAE9D9c,EAAG2Z,WAAW3Z,EAAG4Z,aAAckwB,GAC/B9pC,EAAG4c,oBAAoBytB,EAAgB,EAAGrqC,EAAG8c,OAAO,EAAO,EAAG,GAC9Dna,EAAgBO,yBAAyBmnC,EAAgB,GAEzDrqC,EAAG2Z,WAAW3Z,EAAG4Z,aAAc8xB,GAC/B1rC,EAAG4c,oBAAoB+uB,EAAe,EAAG3rC,EAAGgF,eAAe,EAAO,EAAG,GACrErC,EAAgBO,yBAAyByoC,EAAe,GAExD3rC,EAAG2Z,WAAW3Z,EAAGka,qBAAsBD,GACvCtX,EAAgBK,2BAA2BhD,EAAGke,UAAW,EAAGle,EAAGgF,cAAe,EAAG+kC,GAEjFpnC,EAAgBO,yBAAyByoC,EAAe,GACxDhpC,EAAgBO,yBAAyBmnC,EAAgB,IAO7DsC,eACE,GAAIrsF,KAAKkoF,YAAa,CACpB,IAAIxoC,EAAK1/C,KAAK0/C,GACV2C,EAAkB3C,EAAGoC,WAAWO,gBAChCmR,EAAQxzD,KAAKwzD,MACb+H,EAASv7D,KAAKunF,YACd7mC,EAAU6a,EAAO7a,QACjBD,EAAW8a,EAAO9a,UAClBplB,QAACA,EAAOrJ,KAAEA,EAAImJ,aAAEA,EAAYouD,eAAEA,EAAcK,cAAEA,GAAiB5pF,KAAK6pF,kBAExEnqC,EAAGgd,QAAQhd,EAAGkd,OAEdpJ,EAAMjO,iBAAiBgW,GAEvB7b,EAAG8b,iBAAiB/a,EAASgb,OAAO,EAAOz7D,KAAKmrC,OAAOwd,uBACvDjJ,EAAGkc,UAAUnb,EAAS+pC,YAAa,GACnC9qC,EAAGmyB,UAAUpxB,EAAS6pC,OAAQjvD,EAAU,EAAGrJ,EAAO,GAClD0tB,EAAG4d,WAAW7c,EAAS8pC,QAASX,GAChClqC,EAAG4d,WAAW7c,EAAS6rC,eAAgBnxD,GACvCukB,EAAGkc,UAAUnb,EAAS8rC,WAAY,GAClC7sC,EAAGkc,UAAUnb,EAAS+rC,WAAY,GAClC9sC,EAAGkc,UAAUnb,EAASiqC,YAAa,GAEnChrC,EAAGkG,cAAclG,EAAGmG,UACpBnG,EAAGsE,YAAYtE,EAAGuE,WAAYslC,GAE9B7pC,EAAGkG,cAAclG,EAAG8kC,UACpB9kC,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAKysF,cAAc,GAAG7sC,eACpDF,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAEtDvkD,KAAKysF,cAAclxF,OAAS,IAC9BmkD,EAAGkG,cAAclG,EAAGqrC,UACpBrrC,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAKysF,cAAc,GAAG7sC,eACpDF,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,SAG5D7E,EAAGkG,cAAclG,EAAGsrC,UACpBtrC,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAKmpF,WAGnC9mC,EAAgBO,yBAAyBlC,EAAQgkC,mBAAoB,GACrEriC,EAAgBO,yBAAyBlC,EAAQikC,kBAAmB,GAGpE,IAAK,IAAI+H,KAAS1sF,KAAK2sF,YACrBD,EAAM3hF,OAAO20C,EAAI2C,EAAiB3B,EAAS1gD,KAAKysF,eAIlDpqC,EAAgBO,yBAAyBlC,EAAQgkC,mBAAoB,GACrEriC,EAAgBO,yBAAyBlC,EAAQikC,kBAAmB,IAOxEiI,mBACE,GAAI5sF,KAAKioF,cAAgBjoF,KAAK6oF,gBAAiB,CAC7C,IAAInpC,EAAK1/C,KAAK0/C,GACV8T,EAAQxzD,KAAKwzD,MACb+H,EAASv7D,KAAKynF,gBACd/mC,EAAU6a,EAAO7a,QACjBD,EAAW8a,EAAO9a,UAClBplB,QAACA,EAAOrJ,KAAEA,EAAImJ,aAAEA,EAAYmuD,UAAEA,EAASM,cAAEA,GAAiB5pF,KAAK6pF,kBAEnEnqC,EAAG6D,OAAO7D,EAAGkd,OACbld,EAAGmd,UAAUnd,EAAGod,UAAWpd,EAAGqd,qBAC9Brd,EAAGmtC,cAAcntC,EAAGotC,UAEpBt5B,EAAMjO,iBAAiBgW,GAEvB7b,EAAG8b,iBAAiB/a,EAASgb,OAAO,EAAOz7D,KAAKmrC,OAAOwd,uBACvDjJ,EAAGkc,UAAUnb,EAAS+pC,YAAa,GACnC9qC,EAAGmyB,UAAUpxB,EAAS6pC,OAAQjvD,EAAU,EAAGrJ,EAAO,GAClD0tB,EAAG4d,WAAW7c,EAAS8pC,QAASX,GAChClqC,EAAG4d,WAAW7c,EAAS6rC,eAAgBnxD,GACvCukB,EAAGkc,UAAUnb,EAASuc,UAAW,GACjCtd,EAAGkc,UAAUnb,EAASiqC,YAAa,GAEnChrC,EAAGkG,cAAclG,EAAGmG,UACpBnG,EAAGsE,YAAYtE,EAAGuE,WAAYqlC,GAE9B5pC,EAAGkG,cAAclG,EAAGqrC,UACpBrrC,EAAGsE,YAAYtE,EAAGuE,WAAYjkD,KAAKmpF,WAGnC,IAAK,IAAI4D,KAAS/sF,KAAKgtF,gBACrBD,EAAMhiF,OAAO20C,EAAIe,EAAUC,IAyDjC31C,SACM/K,KAAK4nF,WACP5nF,KAAK0/C,GAAGsH,YAAYhnD,KAAKmrC,OAAO0c,MAEhC7nD,KAAKqpF,eACLrpF,KAAKqsF,eAELv+E,MAAMukD,eAENryD,KAAK4sF,mBACL5sF,KAAKirF,cACLn9E,MAAMwkD,qBAOVjzC,SACMrf,KAAK4nF,WACH5nF,KAAKitF,gBACPjtF,KAAK0nF,YAAc1nF,KAAK2nF,sBACpB3nF,KAAK0nF,YAAc1nF,KAAKitF,cAAc1xF,SACxCyE,KAAK0nF,WAAa,IAItB55E,MAAMuR,UAOVrd,cAAcjH,GAEZiF,KAAKktF,OAAS,IAAIpmD,GAAQ/rC,GAAQ,GAElC,IAAIksF,EAAgBjnF,KAAKinF,cAErB37C,EAAM,IAAIxO,GAAW98B,KAAKktF,OAAOhoF,IAAI,eAAerI,eACxDmD,KAAKsrC,IAAMA,EACXtrC,KAAKqb,QAAUiwB,EAAIjwB,QACnBrb,KAAKg9B,cAAgBsO,EAAItO,cACzBh9B,KAAKkrF,UAAY5/C,EAAIlO,wBACrBp9B,KAAKmtF,SAAW7hD,EAAI70B,MAEpBzW,KAAKimD,KAAK,aAEVjmD,KAAKotF,cAAiBhuF,IAYb6nF,EAAc7nF,EAAMY,KAAKqb,UAGlC,IAAIgwB,EAAM,IAAIvQ,GAAW96B,KAAKktF,OAAOhoF,IAAI,eAAerI,eAExDmD,KAAKo7B,QAAUiQ,EAAIjQ,QACnBp7B,KAAKm7B,aAAekQ,EAAIlQ,aACxBn7B,KAAKk7B,QAAUmQ,EAAInQ,QAEnBl7B,KAAKqtF,iBAEL,MAAMtU,EAAS/4E,KAAKktF,OAAOhoF,IAAI,eAC/B,IAAK6zE,EACH,OAYF,IAAIuU,EAAeC,EAVnBvtF,KAAKq4B,QAAU,IAAID,GAAW2gD,EAAOl8E,eAErCmD,KAAKimD,KAAK,iBAENjmD,KAAK6nF,4BACP7nF,KAAKwtF,0BAA0BniD,GAE/BrrC,KAAKizD,KAAK,gBAAiB,IAAMjzD,KAAKwtF,0BAA0BniD,IAKlErrC,KAAKgrC,QAAU,GACfhrC,KAAKytF,eAAiB,GAElBztF,KAAKuoF,+BACPvoF,KAAK0tF,8BACLJ,EAAgBl0F,QAAQC,WAExBi0F,EAAgB,IAAIl0F,QAAQ,CAACC,EAASC,KACpC0G,KAAKizD,KAAK,gBAAiB,KACzBjzD,KAAK0tF,8BACLr0F,QAKF2G,KAAK8oF,qBACP9oF,KAAK2tF,oBACLJ,EAAcn0F,QAAQC,WAEtBk0F,EAAc,IAAIn0F,QAAQ,CAACC,EAASC,KAClC0G,KAAKizD,KAAK,cAAe,KACvBjzD,KAAK2tF,oBACLt0F,QAKND,QAAQ+iB,IAAI,CAACmxE,EAAeC,IAAc5wF,KAAK,KAC7CqD,KAAK4tF,gBAQTF,8BACE,IAAIt+B,EAAQpvD,KAAKovD,MACb1kB,EAAM1qC,KAAKq4B,QAGf,IAAK,IAAIzY,KAAU8qB,EAAIrS,QAAS,CAC9B,IAAI/a,EAAMtd,KAAKwoF,YAAY5+D,KAAKtM,GAAOA,EAAI1T,KAAOgW,EAAOhW,IACzD,IAAK0T,EAAK,SACV,IAAIpb,EAAOob,EAAIpb,KAEX3C,GADJ+d,EAAMA,EAAIjiB,MACKkE,KACXsuF,EAAS/6E,SAASwK,EAAIwwE,QAAU,KAEhCvuF,EAAKwvE,SAAS,UAChBxvE,EAAOA,EAAK9D,MAAM,GAAI,IAGxB,IAAIsyF,EAAUxuF,EAEdA,GAAQ,OAEJsuF,EAAS,IACXE,GAAWxnF,KAAKC,IAAIoZ,EAAO+X,UAAWk2D,EAAS,IAGjDE,GAAW,OAEX,IAAIz9D,EAAQ,CAAC,IAAK,IAAK,KAEV,iBAATpuB,IACFouB,EAAM,GAAKxd,SAASwK,EAAI0wE,QACxB19D,EAAM,GAAKxd,SAASwK,EAAI2wE,QACxB39D,EAAM,GAAKxd,SAASwK,EAAI4wE,SAGb,iBAAThsF,GAA2Bob,EAAI6wE,QAAyB,MAAf7wE,EAAI6wE,QAC/CnuF,KAAKouF,UAAU9wE,EAAI6wE,OAAQvuE,EAAOhkB,SAAS,GAAIgkB,EAAOhkB,SAAS,IAKjE,IACIw2D,EADAi8B,EAAUruF,KAAKktF,OAAOhoF,IAAI6oF,IAAY/tF,KAAKktF,OAAOhoF,IAAI3F,IAIxD6yD,EADEi8B,EACMruF,KAAK0xB,KAAK28D,EAAQpuF,MAElBD,KAAK0xB,KAAKq8D,IAGd/6B,aAAar2D,KAAK,KACtB,IAAIgN,EAAWyoD,EAAMb,cACrB,GAAIj0C,EAAIgxE,QAAS,CACf,MAAMt0E,EAAOo4C,EAAM8b,aAAavvD,QAAQ7L,SAASwK,EAAIixE,OAAS,MAC9D,GAAIv0E,GAAQ,EAAG,CACb,IAAIqqE,EAAM/mE,EAAIgxE,QACVjK,EAAIroF,YAAY,MAAQuK,KAAKG,IAAI29E,EAAIroF,YAAY,KAAMqoF,EAAIroF,YAAY,SACzEqoF,GAAO,QAET16E,EAAS81D,WAAWrN,EAAMvX,SAAS7gC,GAAOha,KAAK0xB,KAAK2yD,KAGxD16E,EAASigD,KAAKhqC,EAAOhkB,UACrB+N,EAAS+kD,YAAY/H,QAAKktB,aAAaltB,QAAKH,SAAUF,GAAa1mC,EAAOgY,QAC1EjuB,EAASkuB,MAAMjY,EAAOiY,OACtBluB,EAAS41D,SAASnQ,GACbpvD,KAAKwuF,eAAe5uE,EAAOhkB,SAAS,GAAIgkB,EAAOhkB,SAAS,MAC3D00B,EAAM,GAAK/pB,KAAKqmD,MAAiB,GAAXt8B,EAAM,GAAU,KACtCA,EAAM,GAAK/pB,KAAKqmD,MAAiB,GAAXt8B,EAAM,GAAU,KACtCA,EAAM,GAAK/pB,KAAKqmD,MAAiB,GAAXt8B,EAAM,GAAU,MAExC3mB,EAASg2D,eAAervC,GAExBs2D,GAAcj9E,KAKlB3J,KAAK2oF,cAAe,EACpB3oF,KAAK4nF,UAAW,EAOlB+F,kBAAkBn0D,GAChB,MAAMu/C,EAAS/4E,KAAKktF,OAAOhoF,IAAI,oBAC/B,IAAK6zE,EACH,OAEF,IAAI0V,EAAW,IAAI/nD,GAAgBqyC,EAAOl8E,eACtCuyD,EAAQpvD,KAAKovD,MACbs/B,EAAS,GAGb,IAAK,IAAIjvE,KAAQgvE,EAAS9xD,MAAO,CAC/B,IAAIv9B,EAGAxD,EAAW6jB,EAAK7jB,SAChBi8B,EAAQpY,EAAKoY,MACb64C,EAAYjxD,EAAK0f,OACjBmnD,EAAY,GAEZtmF,KAAKg9B,cAAgB,MAAU0zC,GAAa,KAC9CA,GAAa,IAEf,IAAIpzD,EAAM,KACNgT,EAAQ,CAAC,IAAK,IAAK,KAEvB,GAAgB,SAAZ7Q,EAAK7V,GACPxK,EAAO,gDACF,CAEL,KADAke,EAAMtd,KAAK+oF,UAAUn/D,KAAKtM,GAAOA,EAAI1T,KAAO6V,EAAK7V,KACvC,SACV,MAAM1H,EAAOob,EAAIpb,MAGjB9C,GAFAke,EAAMA,EAAIjiB,MAECkE,MAEFwvE,SAAS,UAChB3vE,EAAOA,EAAK3D,MAAM,GAAI,IAGxBo8B,EAAQsuB,QAAKwoC,MAAMlvE,EAAKoY,OACxBsuB,QAAKtuB,MAAMA,EAAOA,EAAOva,EAAIsxE,YAE7B,IAAIC,EAAevxE,EAAIwxE,WAAah8E,SAASwK,EAAIwxE,WAC7CxxE,EAAIwxE,WAAaD,GAAgB,IACnCne,EAAYme,GAGD,SAAT3sF,GACFouB,EAAM,GAAKxd,SAASwK,EAAIyxE,KACxBz+D,EAAM,GAAKxd,SAASwK,EAAI0xE,OACxB1+D,EAAM,GAAKxd,SAASwK,EAAI2xE,OACN,SAAT/sF,IACTouB,EAAM,GAAKxd,SAASwK,EAAI0wE,QACxB19D,EAAM,GAAKxd,SAASwK,EAAI2wE,QACxB39D,EAAM,GAAKxd,SAASwK,EAAI4wE,SAG1B,IAAIgB,EAAgB5xE,EAAI6xE,YAAc1lE,WAAWnM,EAAI6xE,YACjDD,KACFtzF,EAAWuqD,QAAKwoC,MAAMlvE,EAAK7jB,WAClB,IAAMszF,GAGjB9vF,GAAQ,OAER,IAAI2tF,EAAQzvE,EAAI8xE,WAAapvF,KAAKipF,cAAc1e,OAAOjtD,EAAI8xE,WAC3D,GAAIrC,EAAO,CACT,IAAIpnC,EAAO,GAAA7zC,OAAMi7E,EAAMsC,IAAG,MAAAv9E,OAAKi7E,EAAMxtF,KAAI,QACpCmvF,EAAO/oC,KACV+oC,EAAO/oC,GAAW,CAACm+B,UAAW,GAAIwL,QAAS,IAE7C,IAAItrF,EAAIyb,EAAK7jB,SAAS,GAAIq2B,EAAIxS,EAAK7jB,SAAS,GAAI+K,EAAIomF,EAAMlhB,MAC1D6iB,EAAO/oC,GAASm+B,UAAU7/E,KAAKD,EAAI2C,EAAGsrB,EAAItrB,EAAG3C,EAAI2C,EAAGsrB,EAAItrB,EAAG,GAG7D,GAAI2W,EAAIiyE,YAAiC,MAAnBjyE,EAAIiyE,WAAoB,CAC5C,IAAI5pC,EAAO,iCAAA7zC,OAAoCwL,EAAIiyE,WAAU,QACzDC,EAAU/lE,WAAWnM,EAAImyE,SAAW,KACpCC,EAAUjmE,WAAWnM,EAAIqyE,SAAW,KACpCC,EAAUnmE,WAAWnM,EAAIuyE,SAAW,KACpCC,EAAUrmE,WAAWnM,EAAIyyE,SAAW,KACnCrB,EAAO/oC,KACV+oC,EAAO/oC,GAAW,CAACm+B,UAAW,GAAIwL,QAAS,KAE7C,IAAItrF,EAAIyb,EAAK7jB,SAAS,GAAK4zF,EAASv9D,EAAIxS,EAAK7jB,SAAS,GAAK8zF,EAC3DhB,EAAO/oC,GAASm+B,UAAU7/E,KAAKD,EAAGiuB,EAAGjuB,EAAI4rF,EAAS39D,EAAI69D,EAAS,GAG7DxyE,EAAI0yE,gBAAyC,MAAvB1yE,EAAI0yE,gBAC5BhwF,KAAKouF,UAAU9wE,EAAI0yE,eAAgBvwE,EAAK7jB,SAAS,GAAI6jB,EAAK7jB,SAAS,IAGrE0qF,EAAYhpE,EAAI2yE,UAGlB,GAAI7wF,EAAM,CACR,IACIuK,EADQ3J,KAAK0xB,KAAKtyB,GACDmyD,cAIrB5nD,EAASigD,KAAKhuD,GACd+N,EAAS+kD,YAAY/H,QAAKktB,aAAaltB,QAAKH,SAAUF,GAAa7mC,EAAKmY,QACxEjuB,EAASkuB,MAAMA,GACfluB,EAASu0E,aAAaxN,GACtB/mE,EAAS41D,SAASnQ,GACbpvD,KAAKwuF,eAAe5yF,EAAS,GAAIA,EAAS,MAC7C00B,EAAM,GAAK/pB,KAAKqmD,MAAiB,GAAXt8B,EAAM,GAAU,KACtCA,EAAM,GAAK/pB,KAAKqmD,MAAiB,GAAXt8B,EAAM,GAAU,KACtCA,EAAM,GAAK/pB,KAAKqmD,MAAiB,GAAXt8B,EAAM,GAAU,MAExC3mB,EAASg2D,eAAervC,GAEpBhT,GACFtd,KAAK28B,MAAM14B,KAAK,CAACwb,OAAM9V,WAAU/N,WAAU4wD,OAAuC,GAA/B/iC,WAAWnM,EAAIua,OAAS,OAG7E+uD,GAAcj9E,EAAU28E,QAExBppF,QAAQC,IAAI,kBAAmBsiB,EAAK7V,GAAI6V,GAI5Czf,KAAKkpF,YAAa,EAClBlpF,KAAK4nF,UAAW,EAEhB,IAAIsI,EAAgBn2F,OAAO8iB,QAAQ6xE,GAAQ51E,IAAKi0E,IAC9C,IAAI3tF,EAAO2tF,EAAM,IACbjJ,UAACA,EAASwL,QAAEA,GAAWvC,EAAM,GAEjC,OAAO/sF,KAAK0xB,KAAKtyB,GAAM4zD,aACpBr2D,KAAMgpD,IACL,IAAIonC,EAAQ,IAAIjI,GAAW9kF,KAAK0/C,GAAIiG,EAASm+B,EAAW9jF,KAAKm7B,cAE7D,OADA4xD,EAAMz8D,MAAM,GAAKg/D,EACVvC,MAIb3zF,QAAQ+iB,IAAI+zE,GAAevzF,KAAKwzF,IAC9BnwF,KAAKgtF,gBAAkBmD,EACvBnwF,KAAK6oF,iBAAkB,IAO3B7mF,gCAAgCqpC,GAC9B,IAAIhwB,EAAUgwB,EAAIhwB,QAElBrb,KAAKowF,SAAW,GAChBpwF,KAAK8pF,gBAAkB,GAEvB,IAAK,IAAItuD,KAAiB6P,EAAIrQ,eAAgB,CAC5C,IAAI1d,EAAMtd,KAAK8nF,YAAYvd,OAAO/uC,GAC7Ble,IAILtd,KAAKowF,SAASnsF,KAAKqZ,GACnBtd,KAAK8pF,gBAAgB7lF,KAAKjE,KAAK0xB,KAAI,GAAA5f,OAAIwL,EAAIsmE,IAAG,MAAA9xE,OAAKwL,EAAI/d,KAAI,WAwB7DS,KAAKqwF,mBAAqBrwF,KAAK8pF,gBAAgBvuF,OAC/CyE,KAAK8pF,gBAAgB7lF,KAAKjE,KAAK0xB,KAAI,uBAAA5f,OAtBrB,CACZkT,EAAG,QACHC,EAAG,UACHM,EAAG,UACHD,EAAG,OACHG,EAAG,QACHM,EAAG,UACHP,EAAG,MACHH,EAAG,SACHH,EAAG,UACHQ,EAAG,QACHE,EAAG,QACHC,EAAG,UACHI,EAAG,cACHD,EAAG,UACHL,EAAG,QACHP,EAAG,UACHD,EAAG,UACHW,EAAG,SAI8DzK,GAAQ,iBAE3Erb,KAAKi7B,cAAgB,GACrBj7B,KAAKysF,cAAgB,GAErB,IAAK,IAAIhxD,KAAgB4P,EAAIpQ,cAAe,CAC1C,IAAI3d,EAAMtd,KAAK+nF,eAAexd,OAAO9uC,GAChCne,IAILtd,KAAKi7B,cAAch3B,KAAKqZ,GACxBtd,KAAKysF,cAAcxoF,KAAKjE,KAAK0xB,KAAI,GAAA5f,OAAIwL,EAAIgzE,OAAM,MAAAx+E,OAAKwL,EAAIizE,QAAO,WAGjE,IAAIC,EAAWxwF,KAAKgoF,UAAUzd,OAAM,GAAAz4D,OAAIuJ,EAAO,QAE/Crb,KAAK0rF,kBAAoB8E,EAASjkE,OAClCvsB,KAAK2nF,sBAAwB6I,EAASC,QAAU,GAChDzwF,KAAKitF,cAAgB,GACrBjtF,KAAK6rF,aAAe,IAAI5tF,aAAa,CAACuyF,EAASE,OAAQF,EAASG,OAAQH,EAASI,OAAQJ,EAASK,SAClG7wF,KAAK+rF,aAAe,IAAI9tF,aAAa,CAACuyF,EAASM,OAAQN,EAASO,OAAQP,EAASQ,OAAQR,EAASS,SAClGjxF,KAAKisF,gBAAkB,IAAIhuF,aAAa,CAACuyF,EAASU,OAAQV,EAASW,OAAQX,EAASY,OAAQZ,EAASa,SACrGrxF,KAAKsxF,gBAAkB,IAAIrzF,aAAa,CAACuyF,EAASe,OAAQf,EAASgB,OAAQhB,EAASiB,OAAQjB,EAASkB,SAErG,IAAK,IAAIzqF,EAAI,EAAGU,EAAI6oF,EAASmB,OAAQ1qF,EAAIU,EAAGV,IAC1CjH,KAAKitF,cAAchpF,KAAKjE,KAAK0xB,KAAI,GAAA5f,OAAI0+E,EAASD,SAAOz+E,OAAG7K,EAAI,GAAK,IAAM,IAAE6K,OAAG7K,EAAC,gBAGzEjH,KAAKgzD,WAAW,IAAIhzD,KAAK8pF,mBAAoB9pF,KAAKitF,gBAExD,IAAIvtC,EAAK1/C,KAAK0/C,GAEd1/C,KAAK4xF,iCAEL,IAAIx2D,EAAUiQ,EAAIjQ,SACbC,EAASrJ,GAAQhyB,KAAKk7B,QACvBC,EAAen7B,KAAKm7B,aACpBsuD,GAAiBpuD,EAAU,IAAMrJ,EAAO,GACxC6/D,EAAe,IAAI5zF,aAAao9B,EAAUrJ,GAC1C8/D,EAAgB,IAAI7zF,aAAao9B,EAAUrJ,GAC3C+/D,EAAe,IAAI9zF,aAAao9B,EAAUrJ,GAC1CggE,EAAiB,IAAIh3F,WAA2B,EAAhByuF,GAChCwI,EAAmB,IAAIj3F,WAA2B,EAAhByuF,GAClCyI,EAAa,IAAIl3F,WAAWyuF,GAC5B9/E,EAAW,EACXwoF,EAAS,GAEbnyF,KAAKq7B,QAAUA,EAAU,EACzBr7B,KAAKgyB,KAAOA,EAAO,EAEnB,IAAIogE,EAAe,GACnB,IAAK,IAAIxyE,KAAU5f,KAAKq4B,QAAQC,eAAgB,CAC9C,IAAIhb,EAAMtd,KAAKsoF,eAAe1+D,KAAKtM,GAAOA,EAAI1T,KAAOgW,EAAOhW,IACvD0T,IAEA80E,GADL90E,EAAMA,EAAIjiB,MACYg3F,WACpBD,EAAa90E,EAAI+0E,SAAWryF,KAAK0xB,KAAKpU,EAAI+0E,iBAGxCryF,KAAKgzD,WAAWj5D,OAAO8f,OAAOu4E,IACpC,IAAK,IAAIxyE,KAAU5f,KAAKq4B,QAAQC,eAAgB,CAC9C,IAAIhb,EAAMtd,KAAKsoF,eAAe1+D,KAAKtM,GAAOA,EAAI1T,KAAOgW,EAAOhW,IAC5D,IAAK0T,EAAK,SAEV,IAAIg1E,EAAUF,GADd90E,EAAMA,EAAIjiB,MACqBg3F,SAC/B,IAAKC,IAAYA,EAAQ5zC,UACvB,SAEF,IAAIt/C,EAAOke,EAAI/d,KAAO,OACjB4yF,EAAO/yF,KACV+yF,EAAO/yF,GAAQ,CAAC0kF,UAAW,KAE7B,IAAK9/E,EAAGiuB,GAAKrS,EAAOhkB,SAChBsN,EAAIopF,EAAQv+B,aAAa/jC,OAAS,EAAG3mB,EAAIipF,EAAQv+B,aAAaxnC,QAAU,EAC5E,IAAK,IAAItlB,EAAI,EAAGA,EAAIoC,IAAKpC,EACvB,IAAK,IAAIe,EAAI,EAAGA,EAAIkB,IAAKlB,EACvBozB,EAAQnJ,EAAIhrB,GAAGjD,EAAIgE,GAAGuqF,UAAY,EAGtCJ,EAAO/yF,GAAM0kF,UAAU7/E,KAAiB,KAAXD,EAAIkF,EAAE,GAAaiyB,EAAa,GAAgB,KAAXlJ,EAAI5oB,EAAE,GAAa8xB,EAAa,GAAsC,KAAjCC,EAAQnJ,GAAGjuB,GAAG02B,YAAc,IAGrI,IAAK,IAAIzI,EAAI,EAAGA,EAAID,EAAMC,IACxB,IAAK,IAAIjuB,EAAI,EAAGA,EAAIq3B,EAASr3B,IAAK,CAChC,IAAIwuF,EAAap3D,EAAQnJ,GAAGjuB,GACxBsE,EAAQ2pB,EAAIoJ,EAAUr3B,EAQ1B,GANA6tF,EAAavpF,GAASkqF,EAAWz4D,aACjC+3D,EAAcxpF,GAASkqF,EAAWz4D,aAAey4D,EAAW93D,aAAe83D,EAAWC,YAAc,GAAK,EACzGV,EAAazpF,GAASkqF,EAAWx4D,YAEjCw4D,EAAWE,MAAQF,EAAWp4D,MAAQp6B,KAAK0rF,kBAAoB8G,EAAWx4D,YAAc83D,EAAcxpF,GAAS,EAE3G2pB,EAAID,EAAO,GAAKhuB,EAAIq3B,EAAU,EAAG,CAKnC,GAHA62D,EAAWvoF,GAAY3J,KAAK2yF,QAAQ3uF,EAAGiuB,GAGnCugE,EAAWD,UACb,GAAIC,EAAWD,SAAW,EAAG,CAC3B,IAAI93D,EAAe+3D,EAAW/3D,aACT,KAAjBA,IACFA,EAAe,GAEjB,IACImpD,EADW5jF,KAAKi7B,cAAcR,GACfm4D,aACfxzF,EAAI,qBAAA0S,OAAwB8xE,EAAG,MAAA9xE,OAAK8xE,GAAG9xE,OAAG0gF,EAAWK,SAAQ,SAE7DtqE,EAAOiqE,EAAW93D,YAEpBnS,EAD2B,IAAzBiqE,EAAWM,UACNvsF,KAAKC,IAAI+hB,EAAM6S,EAAQnJ,EAAI,GAAGjuB,GAAG02B,YAAaU,EAAQnJ,GAAGjuB,EAAI,GAAG02B,YAAaU,EAAQnJ,EAAI,GAAGjuB,EAAI,GAAG02B,aAEnGn0B,KAAKC,IAAI+hB,EAAM6S,EAAQnJ,EAAI,GAAGjuB,GAAG02B,YAAaU,EAAQnJ,GAAGjuB,EAAI,GAAG02B,YAAaU,EAAQnJ,EAAI,GAAGjuB,EAAI,GAAG02B,aAGvGy3D,EAAO/yF,KACV+yF,EAAO/yF,GAAQ,CAAC0kF,UAAW,GAAIjpC,SAAU,KAE3Cs3C,EAAO/yF,GAAM0kF,UAAU7/E,KAAS,IAAJD,EAAUm3B,EAAa,GAAQ,IAAJlJ,EAAUkJ,EAAa,GAAiB,KAAZ5S,EAAO,IAC1F4pE,EAAO/yF,GAAMy7C,SAAS52C,KAAKw2B,SAExB,GAAIz6B,KAAK+yF,QAAQ/uF,EAAGiuB,GAAI,CAC7B,IAAI+gE,EAAkBR,EAAW93D,YAC7Bu4D,EAAmB73D,EAAQnJ,GAAGjuB,EAAI,GAAG02B,YACrCw4D,EAAe93D,EAAQnJ,EAAI,GAAGjuB,GAAG02B,YACjCy4D,EAAgB/3D,EAAQnJ,EAAI,GAAGjuB,EAAI,GAAG02B,YACtCnS,EAAOhiB,KAAKC,IAAIwsF,EAAiBC,EAAkBC,EAAcC,GACjE7lB,EAAWttE,KAAKozF,cAAcJ,EAAiBC,EAAkBC,EAAcC,EAAe5qE,GAElG,GAAiB,SAAb+kD,EAAqB,CACvB,IAAI7yC,EAAe+3D,EAAW/3D,aAGT,KAAjBA,IACFA,EAAe,GAGjB,IACImpD,EADW5jF,KAAKi7B,cAAcR,GACf44D,cACfj0F,EAAI,qBAAA0S,OAAwB8xE,EAAG,MAAA9xE,OAAK8xE,GAAG9xE,OAAGw7D,GAAQx7D,OAAG6xE,GAAkBC,EAAKtW,EAAUklB,EAAWj4D,gBAAe,QAE/G43D,EAAO/yF,KACV+yF,EAAO/yF,GAAQ,CAAC0kF,UAAW,GAAIjpC,SAAU,KAG3Cs3C,EAAO/yF,GAAM0kF,UAAU7/E,KAAS,IAAJD,EAAUm3B,EAAa,GAAQ,IAAJlJ,EAAUkJ,EAAa,GAAiB,KAAZ5S,EAAO,IAC1F4pE,EAAO/yF,GAAMy7C,SAAS52C,KAAKw2B,QAExB,CACL,IAAI64D,EAAoBtzF,KAAKuzF,cAAcvvF,EAAGiuB,GAC1CuhE,EAAqBxzF,KAAKuzF,cAAcvvF,EAAI,EAAGiuB,GAC/CwhE,EAAiBzzF,KAAKuzF,cAAcvvF,EAAGiuB,EAAI,GAC3CyhE,EAAkB1zF,KAAKuzF,cAAcvvF,EAAI,EAAGiuB,EAAI,GAChD4oB,EAAWkoB,GAAO,CAACuwB,EAAmBE,EAAoBC,EAAgBC,IAAkB1rE,OAEhGgqE,EAA0B,EAAXroF,GAAgBkxC,EAAS,GAAK,EAC7Co3C,EAA4B,EAAXtoF,GAAgB3J,KAAK2pE,aAAa9uB,EAAS,GAAI23C,EAAWh4D,iBAE3EqgB,EAASx6C,QAET,IAAK,IAAI4G,EAAI,EAAGU,EAAIkzC,EAASt/C,OAAQ0L,EAAIU,EAAGV,IAAK,CAC/C,IAAI0+C,EAAU9K,EAAS5zC,GACnB0sF,EAAS,EAETH,IAAuB7tC,IACzBguC,GAAU,GAGRL,IAAsB3tC,IACxBguC,GAAU,GAGRD,IAAoB/tC,IACtBguC,GAAU,GAGRF,IAAmB9tC,IACrBguC,GAAU,GAGZ3B,EAA0B,EAAXroF,EAAe,EAAI1C,GAAK0+C,EAAU,EACjDssC,EAA4B,EAAXtoF,EAAe,EAAI1C,GAAK0sF,GAI7ChqF,GAAY,GAKlB,IAAIwvD,EAAezZ,EAAG0Z,eACtB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcH,GAC/BzZ,EAAG6Z,WAAW7Z,EAAG4Z,aAAc,IAAIr7D,aAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAKyhD,EAAG8Z,aAE9E,IAAIG,EAAaja,EAAG0Z,eACpB1Z,EAAG2Z,WAAW3Z,EAAGka,qBAAsBD,GACvCja,EAAG6Z,WAAW7Z,EAAGka,qBAAsB,IAAI5+D,WAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK0kD,EAAG8Z,aAE9E,IAAI+vB,EAAiB7pC,EAAGqE,gBACxBrE,EAAGsE,YAAYtE,EAAGuE,WAAYslC,GAC9B7pC,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAGk0C,KAAMv4D,EAASrJ,EAAM,EAAG0tB,EAAGqD,IAAKrD,EAAG8c,MAAOq1B,GAE7E,IAAIvI,EAAY5pC,EAAGqE,gBACnBrE,EAAGsE,YAAYtE,EAAGuE,WAAYqlC,GAC9B5pC,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAGk0C,KAAMv4D,EAASrJ,EAAM,EAAG0tB,EAAGqD,IAAKrD,EAAG8c,MAAOs1B,GAE7E,IAAI3G,EAAiBzrC,EAAGqE,gBACxBrE,EAAGsE,YAAYtE,EAAGuE,WAAYknC,GAC9BzrC,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG8e,SAC1D9e,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG8e,SAC1D9e,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAGk0C,KAAMv4D,EAASrJ,EAAM,EAAG0tB,EAAGqD,IAAKrD,EAAG8c,MAAOu1B,GAE7E,IAAIvI,EAAiB9pC,EAAG0Z,eACxB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAckwB,GAC/B9pC,EAAG6Z,WAAW7Z,EAAG4Z,aAAc,IAAIr7D,aAAawrF,GAAe3wE,IAAI,CAACklD,EAAc11D,EAAOiQ,IAAUjQ,GAAQo3C,EAAG8Z,aAE9G,IAAIkwB,EAAgBhqC,EAAG0Z,eACvB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcowB,GAC/BhqC,EAAG6Z,WAAW7Z,EAAG4Z,aAAc04B,EAAgBtyC,EAAG8Z,aAElD,IAAImwB,EAAkBjqC,EAAG0Z,eACzB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAcqwB,GAC/BjqC,EAAG6Z,WAAW7Z,EAAG4Z,aAAc24B,EAAkBvyC,EAAG8Z,aAEpD,IAAI4xB,EAAc1rC,EAAG0Z,eACrB1Z,EAAG2Z,WAAW3Z,EAAG4Z,aAAc8xB,GAC/B1rC,EAAG6Z,WAAW7Z,EAAG4Z,aAAc44B,EAAYxyC,EAAG8Z,aAE9C,IAAIowB,EAAgB,IAAI3rF,aAAa,CAAC,EAAIo9B,EAAS,EAAIrJ,IAEvDhyB,KAAK6pF,kBAAoB,CACvB73D,OACAqJ,UACAF,eACAg+B,eACAQ,aACA2vB,YACAE,iBACAC,gBACAuI,iBACAtI,gBACAC,kBACAC,gBACAL,iBACA4B,iBACAC,eAGFprF,KAAKioF,cAAe,EACpBjoF,KAAK4nF,UAAW,EAEhB5nF,KAAK6zF,cAEL,IAAIC,EAAgB/5F,OAAO8iB,QAAQs1E,GAAQr5E,IAAK4zE,IAC9C,IAAIttF,EAAOstF,EAAM,IACb5I,UAACA,EAASjpC,SAAEA,GAAY6xC,EAAM,GAElC,OAAO1sF,KAAKg2D,YAAYh2D,KAAKotF,cAAchuF,GAAM,GAAI,mBAAezG,EAAWyG,GAC5E4zD,aACAr2D,KAAMk5D,GACE,IAAIguB,GAAankC,EAAImW,EAASx6D,KAAMyoF,EAAWjpC,EAAU76C,SAItEA,KAAK2sF,kBAAoBvzF,QAAQ+iB,IAAI23E,GACrC9zF,KAAK2sF,YAAY3kE,KAAK,CAAC3f,EAAG1K,KAAO0K,EAAEwyC,UAAYl9C,EAAEk9C,UACjD76C,KAAKkoF,aAAc,EAGrBmF,iBACE,IAAIjyD,EAAUp7B,KAAKo7B,SACdC,EAASrJ,GAAQhyB,KAAKk7B,QAGvB64D,EAAQ,CACV,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAIF,IAAK,IAAI9hE,EAAI,EAAGA,EAAID,EAAO,IAAKC,EAC9B,IAAK,IAAIjuB,EAAI,EAAGA,EAAIq3B,EAAU,IAAKr3B,EAAG,CACpC,IAAI0B,EAAI01B,EAAQnJ,GAAGjuB,GACnB,IAAK0B,EAAEw0B,KAAM,SACb,IAAI7xB,EAAI+yB,EAAQnJ,EAAI,GAAGjuB,EAAI,GACvBrG,EAAIy9B,EAAQnJ,GAAGjuB,EAAI,GACnB8E,EAAIsyB,EAAQnJ,EAAI,GAAGjuB,EAAI,GACvBoB,EAAIg2B,EAAQnJ,EAAI,GAAGjuB,GACnBlF,EAAIs8B,EAAQnJ,EAAI,GAAGjuB,EAAI,GACvB3E,EAAI+7B,EAAQnJ,GAAGjuB,EAAI,GACnB4E,EAAIwyB,EAAQnJ,EAAI,GAAGjuB,EAAI,GACvBqF,EAAI+xB,EAAQnJ,EAAI,GAAGjuB,GACnBukB,EAAO7iB,EAAEg1B,YACb,GAAK/8B,EAAEu8B,MAAQ76B,EAAE66B,MAAU90B,EAAE80B,MAAQ7wB,EAAE6wB,KAAO,CAC5C,IAAI85D,EAAS,EACTr2F,EAAEu8B,MAAQ76B,EAAE66B,OACd85D,EAASztF,KAAKG,IAAIstF,GAASr2F,EAAE+8B,YAAcr7B,EAAEq7B,aAAe,EAAInS,IAE9DnjB,EAAE80B,MAAQ7wB,EAAE6wB,OACd85D,EAASztF,KAAKG,IAAIstF,GAAS5uF,EAAEs1B,YAAcrxB,EAAEqxB,aAAe,EAAInS,IAE9DlgB,EAAE6xB,MAAQp7B,EAAEo7B,OACd85D,EAASztF,KAAKG,IAAIstF,IAAU3rF,EAAEqyB,YAAc57B,EAAE47B,aAAe,EAAInS,GAAQ,IAEvEzf,EAAEoxB,MAAQtxB,EAAEsxB,OACd85D,EAASztF,KAAKG,IAAIstF,IAAUlrF,EAAE4xB,YAAc9xB,EAAE8xB,aAAe,EAAInS,GAAQ,IAE3E7iB,EAAE+sF,WAAauB,GAMrB,IAAK,IAAI/hE,EAAI,EAAGA,EAAID,EAAO,IAAKC,EAC9B,IAAK,IAAIjuB,EAAI,EAAGA,EAAIq3B,EAAU,IAAKr3B,EAAG,CACpC,IAAIqE,EAAI+yB,EAAQnJ,GAAGjuB,GACfrG,EAAIy9B,EAAQnJ,EAAI,GAAGjuB,GACnB8E,EAAIsyB,EAAQnJ,GAAGjuB,EAAI,GACnBoB,EAAIg2B,EAAQnJ,EAAI,GAAGjuB,EAAI,GAC3B,IAAKqE,EAAEkqF,UAAYtgE,EAAID,EAAO,EAAG,CAC/B,IAAIlzB,EAAIs8B,EAAQnJ,EAAI,GAAGjuB,GACnB3E,EAAI+7B,EAAQnJ,EAAI,GAAGjuB,EAAI,GACvBiwF,EAAK1tF,KAAKC,IAAI6B,EAAEqyB,YAAa57B,EAAE47B,aAAcw5D,EAAK3tF,KAAKC,IAAIsC,EAAE4xB,YAAar7B,EAAEq7B,aAChF,GAAI/8B,EAAE+8B,cAAgBu5D,GAAM7uF,EAAEs1B,cAAgBw5D,EAAI,CAChD,IAAI3rE,EAAOhiB,KAAKC,IAAIytF,EAAIC,GACxB,GAAI7rF,EAAE6xB,OAASv8B,EAAEu8B,MAAQ7xB,EAAE6xB,OAASp7B,EAAEo7B,MAAQpxB,EAAEoxB,OAAS90B,EAAE80B,MAAQpxB,EAAEoxB,OAAS76B,EAAE66B,MAAQ7xB,EAAE6xB,OAASpxB,EAAEoxB,KAAM,CACzG,IAAIj6B,EAAOD,KAAKm0F,aAAar1F,EAAGO,EAAGyJ,EAAGT,EAAGkgB,GACrCwrE,EAAM5N,SAASlmF,KACjBoI,EAAEwqF,SAAW5yF,EACboI,EAAEkqF,SAAW,EACb50F,EAAE40F,UAAY,KAKtB,IAAKlqF,EAAEkqF,UAAYvuF,EAAIq3B,EAAU,EAAG,CAClC,IAAIv8B,EAAIs8B,EAAQnJ,GAAGjuB,EAAI,GACnB3E,EAAI+7B,EAAQnJ,EAAI,GAAGjuB,EAAI,GACvBiwF,EAAK1tF,KAAKC,IAAI6B,EAAEqyB,YAAa57B,EAAE47B,aAAc05D,EAAK7tF,KAAKC,IAAI7I,EAAE+8B,YAAar7B,EAAEq7B,aAChF,GAAI5xB,EAAE4xB,cAAgBu5D,GAAM7uF,EAAEs1B,cAAgB05D,EAAI,CAChD,IAAI7rE,EAAOhiB,KAAKC,IAAIytF,EAAIG,GACxB,GAAI/rF,EAAE6xB,OAASpxB,EAAEoxB,MAAQ7xB,EAAE6xB,OAASp7B,EAAEo7B,MAAQv8B,EAAEu8B,OAAS90B,EAAE80B,MAAQv8B,EAAEu8B,OAAS76B,EAAE66B,MAAQ7xB,EAAE6xB,OAASv8B,EAAEu8B,KAAM,CACzG,IAAIj6B,EAAOD,KAAKm0F,aAAax2F,EAAG0B,EAAGP,EAAGuJ,EAAGkgB,GACrCwrE,EAAM5N,SAASlmF,KACjBoI,EAAEwqF,SAAW5yF,EACboI,EAAEkqF,SAAW,EACbzpF,EAAEypF,UAAY,MAS1B,IAAK,IAAItgE,EAAI,EAAGA,EAAID,EAAO,IAAKC,EAC9B,IAAK,IAAIjuB,EAAI,EAAGA,EAAIq3B,EAAU,IAAKr3B,EAAG,CACpC,IAAIqE,EAAI+yB,EAAQnJ,GAAGjuB,GACfrG,EAAIy9B,EAAQnJ,EAAI,GAAGjuB,GACnB8E,EAAIsyB,EAAQnJ,GAAGjuB,EAAI,GACnBoB,EAAIg2B,EAAQnJ,EAAI,GAAGjuB,EAAI,GAC3B,GAAIqE,EAAEoqF,YAAc90F,EAAE80F,YAAc3pF,EAAE2pF,YAAcrtF,EAAEqtF,WACpD,SAEF,IAAIlqE,EAAOlgB,EAAEqyB,YACT/8B,EAAE+8B,cAAgBnS,GAAQzf,EAAE4xB,cAAgBnS,GAAQnjB,EAAEs1B,cAAgBnS,IACxElgB,EAAEqkF,OAAQ,GAMhB,IAAK,IAAIz6D,EAAI,EAAGA,EAAID,EAAO,IAAKC,EAC9B,IAAK,IAAIjuB,EAAI,EAAGA,EAAIq3B,EAAU,IAAKr3B,EAAG,CACpC,IAAuBrG,EAAnB0K,EAAI+yB,EAAQnJ,GAAGjuB,GACnB,GAAIqE,EAAEkqF,UAAYlqF,EAAEkqF,SAAW,EAAG,CAChC,IAAItN,EAAKjhF,EAAI,EAAGkhF,EAAKjzD,EAAI,EACN,IAAf5pB,EAAEkqF,UACJ50F,EAAIy9B,EAAQnJ,EAAI,GAAGjuB,GACnBkhF,EAAKjzD,EAAI,IAETt0B,EAAIy9B,EAAQnJ,GAAGjuB,EAAI,GACnBihF,EAAKjhF,EAAI,GAEX,IAAI+gF,EAAKx+E,KAAKG,IAAI,EAAG1C,EAAI,GAAIghF,EAAKz+E,KAAKG,IAAI,EAAGurB,EAAI,GAClDgzD,EAAK1+E,KAAKC,IAAIy+E,EAAI5pD,EAAU,GAC5B6pD,EAAK3+E,KAAKC,IAAI0+E,EAAIlzD,EAAO,GACzB,IAAIqyD,EAAM,KACV,IAAK,IAAIgQ,EAAKrP,EAAIqP,GAAMnP,GAAa,MAAPb,IAAegQ,EAC3C,IAAK,IAAIC,EAAKvP,EAAIuP,GAAMrP,IAAMqP,EAAI,CAChC,IAAIC,EAAOn5D,EAAQi5D,GAAIC,GACvB,GAAIC,EAAK7H,QAAU6H,EAAKhC,SAAU,CAChClO,EAAMkQ,EAAK95D,aACX,OAIK,MAAP4pD,IACFh8E,EAAEoyB,aAAe98B,EAAE88B,aAAe4pD,KAe5C+O,cAAcJ,EAAiBC,EAAkBC,EAAcC,EAAe5qE,GAC5E,OAAO7mB,OAAOC,aAAa,GAAKuxF,EAAe3qE,GAC7C7mB,OAAOC,aAAa,GAAKwxF,EAAgB5qE,GACzC7mB,OAAOC,aAAa,GAAKsxF,EAAmB1qE,GAC5C7mB,OAAOC,aAAa,GAAKqxF,EAAkBzqE,GAG/C4rE,aAAa9rF,EAAG1K,EAAGmL,EAAG1D,EAAGmjB,GACvB,IAAIisE,EAAKnsF,EAAEqyB,YAAcnS,EAAMksE,EAAK92F,EAAE+8B,YAAcnS,EAAM3mB,EAAKkH,EAAE4xB,YAAcnS,EAAMmsE,EAAKtvF,EAAEs1B,YAAcnS,EAC1G,OAAIisE,EAAK,GAAKC,EAAK,GAAK7yF,EAAK,GAAK8yF,EAAK,EAC9B,IAGDrsF,EAAE6xB,KADC,MAAe,OACKs6D,IAAO72F,EAAEu8B,KAD7B,MAAe,OACmCu6D,IAAO3rF,EAAEoxB,KAD3D,MAAe,OACiEt4B,IAAOwD,EAAE80B,KADzF,MAAe,OAC+Fw6D,GAO3H9C,iCACE,IAAIxB,EAAWpwF,KAAK8pF,gBAChB6K,EAAgBvE,EAAS70F,OACzB6iD,EAAS5lD,SAASqT,cAAc,UAChCwyC,EAAMD,EAAOE,WAAW,MAE5BF,EAAOpuB,MAAQ,KACfouB,EAAO7xB,OAAS,IAAMooE,EAAgB,GAEtC,IAAK,IAAIt5E,EAAU,EAAGA,EAAUs5E,EAAet5E,IAAW,CACxD,IAAIqjC,EAAY0xC,EAAS/0E,GAASqjC,UAClC,GAAKA,EAAL,CAIA,IAAK,IAAI/mB,EAAY,EAAGA,EAAY,GAAIA,IAAa,CACnD,IAAI3zB,EAAK2zB,EAAY,EAAK,GACtB1F,EAA4B,IAAtB0F,EAAY,EAAK,GAE3B0mB,EAAIW,aAAaN,EAAuB,GAAZ/mB,EAAiB3zB,EAAmB,IAAfqX,EAAU,GAAU4W,EAAGjuB,EAAGiuB,EAAG,GAAI,IAGpF,GAAwB,MAApBysB,EAAU1uB,MACZ,IAAK,IAAI2H,EAAY,EAAGA,EAAY,GAAIA,IAAa,CACnD,IAAI3zB,EAAI,IAAO2zB,EAAY,EAAK,GAC5B1F,EAA4B,IAAtB0F,EAAY,EAAK,GAE3B0mB,EAAIW,aAAaN,EAAW,KAAmB,GAAZ/mB,EAAiB3zB,EAAmB,IAAfqX,EAAU,GAAU4W,EAAGjuB,EAAGiuB,EAAG,GAAI,MAK/F,IAAIytB,EAAK1/C,KAAK0/C,GACViG,EAAUjG,EAAGqE,gBACjBrE,EAAGsE,YAAYtE,EAAGuE,WAAY0B,GAC9BjG,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAG+E,KAAM/E,EAAG+E,KAAM/E,EAAGgF,cAAetG,GAEpEp+C,KAAK8qF,gBAAkBnlC,EAEvBvH,EAAO7xB,OAAS,IAEhB,IAAI0gE,EAAgBjtF,KAAKitF,cAEzB,IAAK,IAAIhmF,EAAI,EAAGU,EAAIslF,EAAc1xF,OAAQ0L,EAAIU,EAAGV,IAAK,CACpD,IAAIjD,EAAIiD,EAAI,GACRgrB,EAAKhrB,EAAI,GAAM,EAEnBo3C,EAAIW,aAAaiuC,EAAchmF,GAAGy3C,UAAe,IAAJ16C,EAAa,IAAJiuB,GAGxD,IAAIm6D,EAAe1sC,EAAGqE,gBACtBrE,EAAGsE,YAAYtE,EAAGuE,WAAYmoC,GAC9B1sC,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAG+E,KAAM/E,EAAG+E,KAAM/E,EAAGgF,cAAetG,GAEpEp+C,KAAKosF,aAAeA,EAQtBziB,aAAarvC,EAAe3C,GAC1B,IAAIguB,EAAU3lD,KAAK8pF,gBAAgBxvD,GAGnC,OAAIqrB,EAAQ31B,MAAQ21B,EAAQp5B,OACtBoL,EAAY,GACP,GAAKA,EACW,KAAdA,EACF,GAEA,EAGS,IAAdA,EACK,EAEA,GAYbo7D,QAAQz3D,EAAQhe,GACd,QAAStd,KAAKo7B,QAAQ9d,GAAKge,GAAQoxD,MAUrCiG,QAAQr3D,EAAQhe,GACd,IAAI8d,EAAUp7B,KAAKo7B,QAEnB,OAAOA,EAAQ9d,GAAKge,GAAQlB,OAASgB,EAAQ9d,GAAKge,EAAS,GAAGlB,OAASgB,EAAQ9d,EAAM,GAAGge,GAAQlB,OAASgB,EAAQ9d,EAAM,GAAGge,EAAS,GAAGlB,MAUxIw6D,iBAAiBC,GACf,IAAIC,EAAe90F,KAAKi7B,cAAc45D,GAAYE,WAC9C3E,EAAWpwF,KAAKowF,SAEpB,IAAK,IAAInpF,EAAI,EAAGU,EAAIyoF,EAAS70F,OAAQ0L,EAAIU,EAAGV,IAC1C,GAAImpF,EAASnpF,GAAG+tF,SAAWF,EACzB,OAAO7tF,EAYbssF,cAAcj4D,EAAQhe,GACpB,IAAI8d,EAAUp7B,KAAKo7B,QACfC,EAAUr7B,KAAKq7B,QACfrJ,EAAOhyB,KAAKgyB,KAEhB,IAAK,IAAIC,GAAK,EAAGA,EAAI,EAAGA,IACtB,IAAK,IAAIjuB,GAAK,EAAGA,EAAI,EAAGA,IACtB,GAAIs3B,EAASt3B,EAAI,GAAKs3B,EAASt3B,EAAIq3B,EAAU,GAAK/d,EAAM2U,EAAI,GAAK3U,EAAM2U,EAAID,EAAO,EAAG,CACnF,IAAIuJ,EAASH,EAAQ9d,EAAM2U,GAAGqJ,EAASt3B,GACvC,GAAIhE,KAAK+yF,QAAQz3D,EAASt3B,EAAGsZ,EAAM2U,IAAMsJ,EAAOg3D,SAAU,CACxD,IAAI5sC,EAAUpqB,EAAOd,aAMrB,OAJgB,KAAZkrB,IACFA,EAAU,GAGL3lD,KAAK40F,iBAAiBjvC,IAMrC,IAAIpqB,EAASH,EAAQ9d,GAAKge,GAG1B,OAAIC,EAAOpB,OACFn6B,KAAKqwF,mBAGP90D,EAAOjB,cAGhB5I,KAAKh5B,GACH,OAAOoV,MAAM4jB,KAAKh5B,EAAKsH,KAAKotF,eAS9B6H,sBAAsBC,EAASC,EAAaC,GACtCA,IAEFp1F,KAAKq1F,uBAAuBH,EAASC,EAAaC,EAAiBx7D,eAGnE55B,KAAKq1F,uBAAuBH,EAASC,EAAaC,EAAiBv7D,cAUvEw7D,uBAAuBH,EAASC,EAAaG,GAC3C,IAAK,IAAIC,KAAsBD,EAAkBx7E,QAAS,CACxD,IAAIwD,EAAM43E,EAAQ3qB,OAAOgrB,EAAmBj8D,OACxCC,EAAQg8D,EAAmBh8D,MAGE,KAA7Bg8D,EAAmBh8D,OAAiB27D,EAAQ3qB,OAAOhxC,IACrD27D,EAAQzqB,OAAO8qB,EAAmBh8D,MAAOjc,EAAM,IAAIA,IAGrD,IAAK,IAAImc,KAAgB87D,EAAmB/7D,cAAe,CACzD,IAAIg8D,EAAWL,EAAY5qB,OAAO9wC,EAAa7vB,IAE3C4rF,EACFl4E,EAAIk4E,EAAS3tE,OAAS4R,EAAaxqB,MAEnC/R,QAAQswE,KAAK,0BAA2B/zC,EAAa7vB,MAa7D6rF,aAAax4F,EAAK+G,EAAGiuB,GACnB,IAAIkJ,EAAen7B,KAAKm7B,aACpBD,EAAUl7B,KAAKk7B,QAKfw6D,EAAY,GAHhB1xF,GAAKA,EAAIm3B,EAAa,IAAM,KAIxBw6D,EAAY,GAHhB1jE,GAAKA,EAAIkJ,EAAa,IAAM,KAM5B,GAAIu6D,GAAS,GAAKA,EAAQx6D,EAAQ,GAAK,GAAKy6D,GAAS,GAAKA,EAAQz6D,EAAQ,GAAK,EAAG,CAEhF,IAAIE,EAAUp7B,KAAKo7B,QACfo3D,EAAap3D,EAAQu6D,GAAOD,GAAO37D,aACnC67D,EAAcx6D,EAAQu6D,GAAOD,EAAQ,GAAG37D,aACxC87D,EAAUz6D,EAAQu6D,EAAQ,GAAGD,GAAO37D,aACpC+7D,EAAW16D,EAAQu6D,EAAQ,GAAGD,EAAQ,GAAG37D,aACnC/1B,EAAI0xF,GACJzjE,EAAI0jE,GAEE,GACdxvC,QAAK1tC,IAAIouE,GAAa,EAAG,EAAG+O,EAAcpD,GAC1CrsC,QAAK1tC,IAAIquE,GAAa,EAAG,EAAG+O,EAAUrD,KAEtCrsC,QAAK1tC,IAAIouE,IAAc,EAAG,EAAGiP,EAAWD,GACxC1vC,QAAK1tC,IAAIquE,GAAa,EAAG,EAAGgP,EAAWF,IAGzCzvC,QAAKvrD,UAAUqC,EAAKkpD,QAAK6wB,MAAM/5E,EAAK4pF,GAAaC,UAEjD3gC,QAAK1tC,IAAIxb,EAAK,EAAG,EAAG,GAGtB,OAAOA,EAGT84F,SAAS/xF,EAAGiuB,GACV,IAAIkJ,EAAen7B,KAAKm7B,aACpBD,EAAUl7B,KAAKk7B,QAKfw6D,EAAY,GAHhB1xF,GAAKA,EAAIm3B,EAAa,IAAM,KAIxBw6D,EAAY,GAHhB1jE,GAAKA,EAAIkJ,EAAa,IAAM,KAK5B,GAAIu6D,GAAS,GAAKA,EAAQx6D,EAAQ,GAAK,GAAKy6D,GAAS,GAAKA,EAAQz6D,EAAQ,GAAK,EAAG,CAChF,IAAIE,EAAUp7B,KAAKo7B,QACnB,MAAM46D,EAAKltF,GAAKA,EAAEixB,aAAejxB,EAAE4xB,YAAc,EACjD,IAMInO,EANAimE,EAAawD,EAAG56D,EAAQu6D,GAAOD,IAC/BE,EAAcI,EAAG56D,EAAQu6D,GAAOD,EAAQ,IACxCG,EAAUG,EAAG56D,EAAQu6D,EAAQ,GAAGD,IAChCI,EAAWE,EAAG56D,EAAQu6D,EAAQ,GAAGD,EAAQ,IACzCO,EAAMjyF,EAAI0xF,EACVQ,EAAMjkE,EAAI0jE,EASd,OAAgB,KALdppE,EADE0pE,EAAMC,EAAM,EACL1D,GAAcoD,EAAcpD,GAAcyD,GAAOJ,EAAUrD,GAAc0D,EAEzEJ,GAAYF,EAAcE,IAAa,EAAII,IAAQL,EAAUC,IAAa,EAAIG,IAM3F,OAAO,EAGTzH,eAAexqF,EAAGiuB,GAGhB,OAFAjuB,GAAKA,EAAIhE,KAAKm7B,aAAa,IAAM,IACjClJ,GAAKA,EAAIjyB,KAAKm7B,aAAa,IAAM,MAC7Bn3B,EAAIhE,KAAKkrF,UAAU,OACnBlnF,GAAKhE,KAAKk7B,QAAQ,GAAKl7B,KAAKkrF,UAAU,GAAK,MAC3Cj5D,EAAIjyB,KAAKkrF,UAAU,OACnBj5D,GAAKjyB,KAAKk7B,QAAQ,GAAKl7B,KAAKkrF,UAAU,GAAK,KACvClrF,KAAKo7B,QAAQ70B,KAAKqwD,MAAM3kC,IAAI1rB,KAAKqwD,MAAM5yD,IAAIq2B,SAGrD+zD,UAAU7uF,EAAMyE,EAAGiuB,GACjB,IAAKjyB,KAAKgrC,QAAQzrC,GAAO,CACvB,IAAIH,EAAI,iCAAA0S,OAAoCvS,EAAI,QAChDS,KAAKgrC,QAAQzrC,GAAQ,GACrBS,KAAKytF,eAAeluF,GAAQS,KAAK0xB,KAAKtyB,GAExCY,KAAKgrC,QAAQzrC,GAAM0E,KAAK,CAACD,IAAGiuB,MAG9BjwB,0BACQhC,KAAKgzD,WAAWj5D,OAAO8f,OAAO7Z,KAAKytF,iBAEzC,IAAI/tC,EAAK1/C,KAAK0/C,GACVvkB,EAAen7B,KAAKm7B,cACnBE,EAASrJ,GAAQhyB,KAAKk7B,QAI3B,MAAMi7D,GAHN96D,EAA0B,GAAfA,EAAU,KACrBrJ,EAAoB,GAAZA,EAAO,IAGTokE,EAAa,IAAIp7F,WAAWqgC,EAAUrJ,GACtC+mD,EAAS/4E,KAAKktF,OAAOhoF,IAAI,eAC/B,GAAI6zE,EAAQ,CACV,IAAIh+E,EAASg+E,EAAOl8E,cACpB,GAAI9B,EAAOkI,YAAckzF,EAAY,CACnCp7F,EAAS,IAAIC,WAAWD,GACxB,IAAK,IAAIkM,EAAI,EAAGA,EAAIkvF,IAAclvF,EAChCmvF,EAAWnvF,GAAKlM,EAAOkM,GAAK,GAKlC,IAAK,IAAK1H,EAAMomD,KAAY5rD,OAAO8iB,QAAQ7c,KAAKytF,gBAAiB,CAC/D,IAAK9nC,EAAQoO,aACX,SAEF,IAAI14D,KAACA,EAAI20B,MAAEA,EAAKzD,OAAEA,GAAUo5B,EAAQoO,aAChCsiC,EAAK9vF,KAAKqmD,MAAc,GAAR58B,GAAcsmE,EAAK/vF,KAAKqmD,MAAe,GAATrgC,GAElD,IAAK,IAAI3wB,KAAYoE,KAAKgrC,QAAQzrC,GAAO,CACvC,IAAIwlF,EAAKx+E,KAAKqwD,OAAOh7D,EAASoI,EAAIm3B,EAAa,IAAM,IAAQk7D,EACzDrR,EAAKz+E,KAAKqwD,OAAOh7D,EAASq2B,EAAIkJ,EAAa,IAAM,IAAQm7D,EAC7D,IAAK,IAAIrkE,EAAI,EAAGA,EAAI1F,IAAU0F,EAC5B,KAAI+yD,EAAK/yD,EAAI,GAAK+yD,EAAK/yD,GAAKD,GAG5B,IAAK,IAAIhuB,EAAI,EAAGA,EAAIgsB,IAAShsB,EACvB+gF,EAAK/gF,EAAI,GAAK+gF,EAAK/gF,GAAKq3B,GAGxBhgC,EAAuB,GAAjB42B,EAAIjC,EAAQhsB,GAAS,KAC7BoyF,GAAYpR,EAAK/yD,GAAKoJ,EAAU0pD,EAAK/gF,GAAK,MAQpD,IAAI+gF,EAAyB,EAApB/kF,KAAKkrF,UAAU,GAAQjG,EAAiD,GAA3CjlF,KAAKk7B,QAAQ,GAAKl7B,KAAKkrF,UAAU,GAAK,GACxElG,EAAyB,EAApBhlF,KAAKkrF,UAAU,GAAQhG,EAAiD,GAA3CllF,KAAKk7B,QAAQ,GAAKl7B,KAAKkrF,UAAU,GAAK,GAC5E,IAAK,IAAIj5D,EAAI+yD,EAAI/yD,EAAIizD,IAAMjzD,EACzB,IAAK,IAAIjuB,EAAI+gF,EAAI/gF,EAAIihF,IAAMjhF,EACjBhE,KAAKo7B,QAAQnJ,GAAK,GAAGjuB,GAAK,GAC5Bq2B,WACJ+7D,EAAWnkE,EAAIoJ,EAAUr3B,GAPX,KAWpB,IAAK,IAAIiuB,EAAI,EAAGA,EAAID,IAAQC,EAAG,CAC7B,IAAK,IAAIjuB,EAAI,EAAGA,EAAI+gF,IAAM/gF,EACxBoyF,EAAWnkE,EAAIoJ,EAAUr3B,GAbT,IAelB,IAAK,IAAIA,EAAIihF,EAAIjhF,EAAIq3B,IAAWr3B,EAC9BoyF,EAAWnkE,EAAIoJ,EAAUr3B,GAhBT,IAmBpB,IAAK,IAAIA,EAAI+gF,EAAI/gF,EAAIihF,IAAMjhF,EAAG,CAC5B,IAAK,IAAIiuB,EAAI,EAAGA,EAAI+yD,IAAM/yD,EACxBmkE,EAAWnkE,EAAIoJ,EAAUr3B,GArBT,IAuBlB,IAAK,IAAIiuB,EAAIizD,EAAIjzD,EAAID,IAAQC,EAC3BmkE,EAAWnkE,EAAIoJ,EAAUr3B,GAxBT,IA4BpB,IAAImlF,EAAYzpC,EAAGqE,gBACnBrE,EAAGsE,YAAYtE,EAAGuE,WAAYklC,GAC9BzpC,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG4E,mBAAoB5E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG8E,mBAAoB9E,EAAG6E,QAC1D7E,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAGyE,eAAgBzE,EAAG+T,eACtD/T,EAAGwE,cAAcxE,EAAGuE,WAAYvE,EAAG2E,eAAgB3E,EAAG+T,eACtD/T,EAAGoD,WAAWpD,EAAGuE,WAAY,EAAGvE,EAAG0pC,GAAI/tD,EAASrJ,EAAM,EAAG0tB,EAAGqD,IAAKrD,EAAGgF,cAAe0xC,GACnFp2F,KAAKmpF,UAAYA,EAEjBnpF,KAAKmoF,cAAe,EAGtB0L,cACE,IAAKx4D,EAASrJ,GAAQhyB,KAAKk7B,QACvBE,EAAUp7B,KAAKo7B,QAEfD,EAAen7B,KAAKm7B,aACpBq1D,EAAWxwF,KAAKgoF,UAAUzd,OAAM,GAAAz4D,OAAI9R,KAAKqb,QAAO,QAEhDk7E,EAA8B,KAAhBv2F,KAAKmtF,SACnBqJ,EAAgC,KAAhBx2F,KAAKmtF,SAErBsJ,EAAS,GAAA3kF,OAAM0+E,EAASkG,SAAQ,MAAA5kF,OAAK0+E,EAASmG,WAAU,MAAA7kF,OAAK0+E,EAASmG,WAAU,SAChFC,EAAa,GAAA9kF,OAAM0+E,EAASkG,SAAQ,MAAA5kF,OAAK0+E,EAASqG,YAAW,MAAA/kF,OAAK0+E,EAASqG,YAAW,SACtFC,EAAY,GAAAhlF,OAAM0+E,EAASkG,SAAQ,MAAA5kF,OAAK0+E,EAASuG,YAAW,MAAAjlF,OAAK0+E,EAASuG,YAAW,SAErFvuD,EAAWA,CAACngC,EAAG1K,EAAGmL,IAChBT,GAAW,EAAI9B,KAAK2qD,GAAK,EACzBvzD,GAAW4I,KAAK2qD,GAAK,EACrBpoD,EAAUvC,KAAK2qD,GAAK,EACjB,EAAI3qD,KAAK2qD,GAAK,EAEnB8lC,EAAYA,CAAC3uF,EAAG1K,EAAGmL,EAAG1D,IACpBiD,GAAK1K,GAAW4I,KAAK2qD,GAAK,EAC1BvzD,GAAKmL,EAAU,EACfA,GAAK1D,EAAUmB,KAAK2qD,GAAK,EACzB7oD,GAAKjD,EAAUmB,KAAK2qD,GACjB,KAGLt1D,EAAW,IAAIqC,aAAa,GAC5BkyF,EAAS,GAET5+B,EAAcA,CAACnyD,EAAMopC,KAClB2nD,EAAO/wF,KACV+wF,EAAO/wF,GAAQY,KAAK0xB,KAAKtyB,IAE3B,IAAIuK,EAAWwmF,EAAO/wF,GAAMmyD,cAC5B5nD,EAASigD,KAAKhuD,GACd+N,EAAS+kD,YAAY/H,QAAKktB,aAAaltB,QAAKH,SAAUF,GAAa9d,IACnE7+B,EAAS41D,SAASv/D,KAAKovD,OAClBpvD,KAAKwuF,eAAe5yF,EAAS,GAAIA,EAAS,KAC7C+N,EAASg2D,eAAe,CAAC,GAAI,GAAI,KAEnCinB,GAAcj9E,IAGhB,IAAK,IAAIsoB,EAAI,EAAGA,EAAID,EAAO,IAAKC,EAC9B,IAAK,IAAIjuB,EAAI,EAAGA,EAAIq3B,EAAU,IAAKr3B,EAAG,CACpC,IAAIqE,EAAI+yB,EAAQnJ,GAAGjuB,GAAIrG,EAAIy9B,EAAQnJ,GAAGjuB,EAAI,GAAI8E,EAAIsyB,EAAQnJ,EAAI,GAAGjuB,EAAI,GAAIoB,EAAIg2B,EAAQnJ,EAAI,GAAGjuB,GAC5F,GAAIqE,EAAE+xB,OAASz8B,EAAEy8B,OAAStxB,EAAEsxB,OAAStxB,EAAEsxB,MAAO,CAC5C,IAAI24D,EAAW1qF,EAAEqyB,cAAgB/8B,EAAE+8B,aAAeryB,EAAEqyB,cAAgB5xB,EAAE4xB,aAAeryB,EAAEqyB,cAAgBt1B,EAAEs1B,YACzG,GAAIq4D,IAAYwD,EACd,SAEF,IAAKxD,IAAYyD,EACf,SAEF,IAAIS,EAAM5uF,EAAEqqF,MArDD,GAAK,IAqDiB,EAAI,EACjCwE,EAAMv5F,EAAE+0F,MAtDD,GAAK,IAsDiB,EAAI,EACjCyE,EAAMruF,EAAE4pF,MAvDD,GAAK,IAuDiB,EAAI,EACjC0E,EAAMhyF,EAAEstF,MAxDD,GAAK,IAwDiB,EAAI,EACjC1iF,EAASinF,EAAKC,EAAKC,EAAKC,EAI5B,GAHAx7F,EAAS,GAAS,IAAJoI,EAAYm3B,EAAa,GAAK,GAC5Cv/B,EAAS,GAAS,IAAJq2B,EAAYkJ,EAAa,GAAK,GAC5Cv/B,EAAS,GAAwG,MAAjGyM,EAAE2xB,YAAcr8B,EAAEq8B,YAAclxB,EAAEkxB,YAAc50B,EAAE40B,aAAe,EAAMh6B,KAAK0rF,mBAA6B,EAC3G,IAAV17E,EACFuhD,EAAYulC,EAActuD,EAASyuD,EAAIC,EAAIC,SACtC,GAAc,IAAVnnF,EAAa,CACtB,IAAIqnF,EAAML,EAAUC,EAAIC,EAAIC,EAAIC,GACrB,MAAPC,GACF9lC,EAAYklC,EAAWY,QAEN,IAAVrnF,GACTuhD,EAAYqlC,EAAepuD,GAAUyuD,GAAKC,GAAKC,GAAW5wF,KAAK2qD,MAOzEomC,WACMt3F,KAAKu3F,WAAav3F,KAAKu3F,UAAUh8F,SACnCyE,KAAKu3F,UAAUxwF,QAAQqrD,IACrB,IAAIpxD,EAAMhB,KAAKgtF,gBAAgBruE,QAAQyzC,GACnCpxD,GAAO,GACThB,KAAKgtF,gBAAgBpuE,OAAO5d,EAAK,KAGrChB,KAAKu3F,UAAY,IAEnBv3F,KAAKmsB,SAAW,GAGlBqrE,cAAc76D,GAEZ,GADA38B,KAAKs3F,YACA36D,EAAMphC,OACT,OAGF,IAAImzF,EAAS,GAEb1uF,KAAKmsB,SAAWwQ,EAAMzvB,OAAOgiB,IAAY,IAAXzP,KAACA,GAAKyP,EAC9B5R,EAAMtd,KAAK+oF,UAAUn/D,KAAKtM,GAAOA,EAAI1T,KAAO6V,EAAK7V,IACrD,IAAK0T,EAAK,OAAO,EACjBA,EAAMA,EAAIjiB,KACV,IAAIo8F,EAAWhuE,WAAWnM,EAAIua,OAAS,KACvC,IAAK4/D,EAAU,OAAO,EAEtB,IAA4Br4F,EAAxBotD,EAAS,GAAKirC,EACdjrC,EAAS,MACXptD,EAAO,4DAMJsvF,EAJHtvF,EADIotD,EAAS,IACN,yDAEA,8DAGPkiC,EAAOtvF,GAAQ,IAEjB,IAAK4E,EAAGiuB,GAAKxS,EAAK7jB,SACdqrD,EAAIx9B,WAAWnM,EAAIo6E,MAAQ,KAG/B,OAFAhJ,EAAOtvF,GAAM6E,KAAKD,EAAIwoD,EAAQv6B,EAAIu6B,EAAQxoD,EAAIwoD,EAAQv6B,EAAIu6B,EAAQvF,EAAI,IAE/D,IAGT,IAAIkpC,EAASnwF,KAAKu3F,UAAY,GAC9Bx9F,OAAO8iB,QAAQ6xE,GAAQ3nF,QAAQgpB,IAAuB,IAArB3wB,EAAM0kF,GAAU/zD,EAC/C/vB,KAAK0xB,KAAKtyB,GAAM4zD,aAAar2D,KAAK0nF,IAChC,GAAIrkF,KAAKu3F,YAAcpH,EAAQ,OAC/B,IAAI/9B,EAAQ,IAAI0yB,GAAW9kF,KAAK0/C,GAAI2kC,EAAKP,EAAW9jF,KAAKm7B,cACzDi3B,EAAM9hC,MAAQ,CAAC,EAAG,EAAG,EAAG,GACxBtwB,KAAKu3F,UAAUtzF,KAAKmuD,GACpBpyD,KAAKgtF,gBAAgB/oF,KAAKmuD,OAKhCulC,WAAW3zF,EAAGiuB,EAAGnF,GACf,IAAI8qE,EAAM,IAAI35F,aAAa,GAC3B+B,KAAKmrC,OAAO0hB,iBAAiB+qC,EAAK,CAAC5zF,EAAGiuB,IACtC,IAAI2xD,EAAMiD,GACVjD,EAAI,GAAKgU,EAAI,GAAKA,EAAI,GACtBhU,EAAI,GAAKgU,EAAI,GAAKA,EAAI,GACtBhU,EAAI,GAAKgU,EAAI,GAAKA,EAAI,GACtBzxC,QAAKvrD,UAAUgpF,EAAKA,GACpB,IAAIiU,EAAO1xC,QAAKK,SAAUsxC,EAAQ3xC,QAAKK,SAAUuxC,EAAO5xC,QAAKK,SAEzDwxC,EAAS,KACTC,EAAU,IACdj4F,KAAK28B,MAAM51B,QAAQmxF,IACjB,IAAIvuF,SAACA,EAAQ/N,SAAEA,EAAQ4wD,OAAEA,GAAU0rC,EACnC/xC,QAAK1tC,IAAIo/E,EAAM,EAAG,EAAGrrC,EAAS,GAC9BrG,QAAK1tC,IAAIq/E,EAAOtrC,EAAQA,EAAQA,GAEhCrG,QAAKtf,IAAIgxD,EAAMA,EAAMj8F,GACrBuqD,QAAKv4B,IAAIiqE,EAAMA,EAAMD,GACrBzxC,QAAKgyC,IAAIN,EAAMA,EAAMC,GACrB3xC,QAAKgyC,IAAIJ,EAAMnU,EAAKkU,GACpB,IAAIM,EAAOjyC,QAAKkyC,OAAON,GAEnBO,EAAK/xF,KAAKG,IAAI,EAAGy/C,QAAKoyC,IAAIR,EAAMF,IAASO,EACzCE,EAAKL,IACT9xC,QAAKtuB,MAAMkgE,EAAMA,EAAMO,GACnBnyC,QAAKqyC,QAAQT,EAAMF,GAAQ,IAC7BG,EAASE,EACTD,EAAUK,MAGd,IAAIG,EAAM,GACV,GAAIT,EACF,GAAIlrE,EAAQ,CAEV,MAAM9rB,GADNy3F,EAAMz4F,KAAKmsB,SAAS1wB,SACJkjB,QAAQq5E,GACpBh3F,GAAO,EACTy3F,EAAI75E,OAAO5d,EAAK,GAEhBy3F,EAAIx0F,KAAK+zF,QAGXS,EAAM,CAACT,GAIX,OADAh4F,KAAKw3F,cAAciB,GACZA,EAGTC,YAAY3T,EAAIC,EAAIC,EAAIC,GACtB,IAAI18E,EAAK,IAAIvK,aAAa,GACtBw6F,EAAMz4F,KAAK28B,MAAMzvB,OAAOgrF,IAC1B,IAAIt8F,SAACA,EAAQ4wD,OAAEA,EAAM/sC,KAAEA,GAAQy4E,EAC3B56E,EAAMtd,KAAK+oF,UAAUn/D,KAAKtM,GAAOA,EAAI1T,KAAO6V,EAAK7V,IACrD,IAAK0T,EAAK,OAAO,EACjBA,EAAMA,EAAIjiB,KACV,IAAK2I,EAAGiuB,GAAKxS,EAAK7jB,SACdqrD,EAAIx9B,WAAWnM,EAAIo6E,MAAQ,KAAO13F,KAAK+1F,SAAS/xF,EAAGiuB,GAEvD,OADAjyB,KAAKmrC,OAAOwhB,cAAcnkD,EAAI,CAACxE,EAAGiuB,EAAGg1B,IACjCz+C,EAAG,IAAMu8E,GAAMv8E,EAAG,GAAKy8E,GAAMz8E,EAAG,IAAMw8E,GAAMx8E,EAAG,GAAK08E,IAM1D,OADAllF,KAAKw3F,cAAciB,GACZA,KEz0DIE,GAAA,CACbx9E,QAAS,QACT2iC,WACAwS,OCAa,CACbsoC,YACAvkC,eACAhE,SACA/nB,UACAqsB,SCNa,CACbuL,OACA2e,OACAJ,gBACAh0C,UCFF,MAAMouD,GAAQ1yC,QAAKK,SAAUsyC,GAAQ3yC,QAAKK,SAAUuyC,GAAO5yC,QAAKK,SAAUwyC,GAAQ7yC,QAAKK,SACjFyyC,GAAQrxC,QAAKpB,SACb0yC,GAAS,IAAIj7F,aAAa,GAE1Bk7F,GAAa,CACjB,MACA,OACA,OACA,SACA,SACA,SACA,QACA,OACA,OACA,aACA,aACA,QACA,SACA,OACA,YACA,SACA,QACA,QACA,OACA,WACA,OACA,OACA,UACA,SACA,SAGa,MAAMC,WAAsBvuF,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAC7DuP,MAAQ,CACNuK,QAAS,GACTlI,OAAQ,GACRqN,QAAS,EACTyxD,UAAW,GACZ1wE,KAIDq5F,KAAO9yF,KAAK2qD,GAAK,EAAClxD,KAClBypC,OAASljC,KAAK2qD,GAAK,EAAClxD,KACpB0oC,SAAW,IAAG1oC,KACdusD,OAASpG,QAAKK,SAAQxmD,KACtB2pC,YAAc,EAAC3pC,KACf4pC,YAAc,IAAI5pC,KAgBlBs5F,YAAcx6F,KACZtG,SAASiX,iBAAiB,YAAazP,KAAKu5F,aAAa,GACzD/gG,SAASiX,iBAAiB,UAAWzP,KAAKw5F,WAAW,GACrDx5F,KAAKy5F,QAAU,CAACz1F,EAAGlF,EAAE46F,QAASznE,EAAGnzB,EAAE66F,SACnC76F,EAAEuP,mBACHrO,KACDu5F,YAAcz6F,KACZ,GAAIkB,KAAKy5F,SAAWz5F,KAAKo+C,OAAQ,CAC/B,MAAMswB,EAAK5vE,EAAE46F,QAAU15F,KAAKy5F,QAAQz1F,EAClC2qE,EAAK7vE,EAAE66F,QAAU35F,KAAKy5F,QAAQxnE,EAC1B2nE,GAAO55F,KAAKo+C,OAAOpuB,MAAQhwB,KAAKo+C,OAAO7xB,QAAU,EAGvD,IAFAvsB,KAAKq5F,KAAY,EAAL3qB,EAASnoE,KAAK2qD,GAAK0oC,EAC/B55F,KAAKypC,OAAc,EAALklC,EAASpoE,KAAK2qD,GAAK0oC,EAC1B55F,KAAKq5F,IAAM9yF,KAAK2qD,IACrBlxD,KAAKq5F,KAAiB,EAAV9yF,KAAK2qD,GAEnB,KAAOlxD,KAAKq5F,KAAO9yF,KAAK2qD,IACtBlxD,KAAKq5F,KAAiB,EAAV9yF,KAAK2qD,GAEnBlxD,KAAKypC,MAAQljC,KAAKC,IAAIxG,KAAKypC,MAAO,GAClCzpC,KAAKypC,MAAQljC,KAAKG,IAAI1G,KAAKypC,OAAQljC,KAAK2qD,IACxClxD,KAAKy5F,QAAU,CAACz1F,EAAGlF,EAAE46F,QAASznE,EAAGnzB,EAAE66F,SAEnC35F,KAAK65F,UAAU,CAACvqF,OAAQ,CAACL,OAAQ,KAEnCnQ,EAAEuP,mBACHrO,KACDw5F,UAAY16F,YACHkB,KAAKy5F,QACZz5F,KAAK85F,eACLh7F,EAAEuP,mBACHrO,KACD+5F,aAAej7F,KACTA,EAAEk7F,OAAS,EACbh6F,KAAK0oC,SAAWniC,KAAKC,IAAoB,IAAhBxG,KAAK0oC,SAAgB1oC,KAAK4pC,aAEnD5pC,KAAK0oC,SAAWniC,KAAKG,IAAI1G,KAAK0oC,SAAW,IAAK1oC,KAAK2pC,aAErD3pC,KAAK65F,UAAU,CAACvqF,OAAQ,CAACL,OAAQ,OAClCjP,KAOD6wB,UAAY/xB,KACV,IAAIwJ,EAAQwK,SAAShU,EAAEwQ,OAAOL,MAAO,IACjC8G,MAAMzN,KAAQA,EAAQ,GAC1BtI,KAAK8O,SAASS,IACZ,GAAIjH,IAAUiH,EAAM0P,SAAW1P,EAAMuK,QAAQxR,GAG3C,OAFAtI,KAAKovD,MAAMoC,eAAejiD,EAAMuK,QAAQvK,EAAM0P,SAAStV,UACvD3J,KAAKovD,MAAMmC,YAAYhiD,EAAMuK,QAAQxR,GAAOqB,UACrC,CAACsV,QAAS3W,OAGtBtI,KAED8zE,YAAch1E,KACZ,IAAIm7F,EAAMnnF,SAAShU,EAAEwQ,OAAOL,MAAO,IAC/B8G,MAAMkkF,KAAMA,GAAO,GACvBj6F,KAAK8O,SAASS,IACZ,MAAMwK,EAAMxK,EAAMuK,QAAQvK,EAAM0P,SAChC,GAAIlF,GAAOA,EAAIunD,WAAa24B,EAAK,CAC/BlgF,EAAIpQ,SAASmqE,YAAYmmB,GACzB,MAAMngF,EAAUvK,EAAMuK,QAAQre,QAE9B,OADAqe,EAAQvK,EAAM0P,SAAW,IAAIlF,EAAKunD,SAAU24B,GACrC,CAACngF,gBAGb9Z,KAED65F,UAAY/6F,KACV,IAAIo7F,EAAMpnF,SAAShU,EAAEwQ,OAAOL,MAAO,IAC/B8G,MAAMmkF,KAAMA,GAAO,GACvBl6F,KAAK8O,SAASS,IACZ,MAAMwK,EAAMxK,EAAMuK,QAAQvK,EAAM0P,SAChC,GAAIlF,GAAOA,EAAIoxB,SAAW+uD,EAAK,CAC7B,MAAMpgF,EAAUvK,EAAMuK,QAAQre,QAE9B,OADAqe,EAAQvK,EAAM0P,SAAW,IAAIlF,EAAKoxB,OAAQ+uD,GACnC,CAACpgF,gBAGb9Z,KAEDk+E,aAAep/E,KACb,IAAIwxB,EAAQxd,SAAShU,EAAEwQ,OAAOL,MAAO,IACjC8G,MAAMua,KAAQA,EAAQ,GAC1BtwB,KAAK8O,SAAS,CAAC4hE,UAAWpgD,GAAQ,KAChCtwB,KAAKuP,MAAMuK,QAAQ/S,QAAQgT,GAAOA,EAAIpQ,SAASu0E,aAAa5tD,QAE/DtwB,KAEDm6F,QAAUC,KACRp6F,KAAK4vC,MAAQyqD,sBAAsBr6F,KAAKm6F,SACxCn6F,KAAKovD,MAAMjkB,OAAO6b,SAAS,CAAC,EAAG,EAAGhnD,KAAKo+C,OAAOpuB,MAAOhwB,KAAKo+C,OAAO7xB,SAEjE,MAAMnL,EAASphB,KAAKuP,MAAMuK,QAAQ9Z,KAAKuP,MAAM0P,SACvCi7E,EAAM94E,GAAUA,EAAOgxC,MAAMlnB,QAAQ9pB,EAAO+pB,QAClD,GAAI+uD,EAAK,CACPA,EAAIlwB,uBAAuB6uB,GAAOz3E,EAAOzX,UACzCuwF,EAAIjwB,qBAAqB6uB,GAAO13E,EAAOzX,UACvCuwF,EAAInvC,YAAYmuC,GAAQ93E,EAAOzX,UAC/Bw8C,QAAKv4B,IAAIorE,GAAOF,GAAOD,IACvB1yC,QAAKvrD,UAAUo+F,GAAOA,IACtBpxC,QAAK0yC,aAAarB,GAAOC,GAAO,GAAIF,IACpC7yC,QAAK1tC,IAAIsgF,GAAM,EAAG,EAAG,GACrB5yC,QAAKe,cAAc6xC,GAAMA,GAAME,IAC/B,MAAMjxC,EAAShoD,KAAKo+C,OAAOpuB,MAAQhwB,KAAKo+C,OAAO7xB,OACzCguE,EAA2D,EAApDh0F,KAAKi0F,KAAKj0F,KAAKk0F,IAAIP,EAAItxD,YAAc,GAAKof,GACvDhoD,KAAKovD,MAAMjkB,OAAOme,YAAYixC,EAAMvyC,EAAQkyC,EAAIpxD,kBAAmBoxD,EAAIrxD,kBACvE7oC,KAAKovD,MAAMjkB,OAAO6f,cAAc6tC,GAAOC,GAAOC,SAE9C/4F,KAAKovD,MAAMjkB,OAAOme,YAAY/iD,KAAK2qD,GAAK,EAAGlxD,KAAKo+C,OAAOpuB,MAAQhwB,KAAKo+C,OAAO7xB,OAAQvsB,KAAK2pC,YAAa3pC,KAAK4pC,aAC1G5pC,KAAK06F,aAGP16F,KAAKswD,OAAO6G,oBAnIdujC,aACM16F,KAAKovD,OACPpvD,KAAKovD,MAAMjkB,OAAOsf,wBAAwBzqD,KAAKq5F,IAAKr5F,KAAKypC,MAAOzpC,KAAKusD,OAAQvsD,KAAK0oC,UAItFh5B,uBACM1P,KAAK4vC,QACP+qD,qBAAqB36F,KAAK4vC,cACnB5vC,KAAK4vC,OAEd5vC,KAAK85F,eA4CPA,eACEthG,SAASmX,oBAAoB,YAAa3P,KAAKu5F,aAAa,GAC5D/gG,SAASmX,oBAAoB,UAAW3P,KAAKw5F,WAAW,GA6E1DoB,YAAYxoC,EAAO9pD,GACZ8pD,EAAMx1D,IAGXoD,KAAK8O,SAASS,IACZ,MAAM5F,EAAWyoD,EAAMb,eACvBjpD,EAAQ/B,KAAKC,IAAI8B,EAAOiH,EAAMuK,QAAQve,WACxBgU,EAAM0P,UACd1P,EAAMuK,QAAQxR,IAChBtI,KAAKovD,MAAMoC,eAAejiD,EAAMuK,QAAQxR,GAAOqB,UAEjD3J,KAAKovD,MAAMmC,YAAY5nD,GACnByoD,EAAMD,QAAUC,EAAMD,OAAO3F,OAAS,MACxCxsD,KAAK2pC,YAAcpjC,KAAKC,IAAI,IAA2B,GAAtB4rD,EAAMD,OAAO3F,QAC9CxsD,KAAK4pC,YAAiC,IAAnB5pC,KAAK2pC,YACxB3pC,KAAK0oC,SAA8B,GAAnB1oC,KAAK2pC,cAGzBhgC,EAASu0E,aAAa3uE,EAAMmhE,WACxBte,EAAM1X,UAAUn/C,OAAS,GAC3BoO,EAASmqE,YAAY,GAEvBnqE,EAASoxE,oBAAoB,GAC7B,MAAMjhE,EAAU,IAAIvK,EAAMuK,SAO1B,OANAA,EAAQ8E,OAAOtW,EAAO,EAAG,CACvB8pD,QACAzoD,WACA23D,SAAUlP,EAAM1X,UAAUn/C,OAAS,GAAK,EACxC4vC,OAAQinB,EAAMlnB,QAAQ3vC,OAAS,GAAK,IAE/B,CAACue,aAIZtK,oBACE,IAAKxP,KAAKo+C,OACR,OAEF,MAAMA,EAASp+C,KAAKo+C,OACpBp+C,KAAKswD,OAAS,IAAI+D,GAAY/D,OAAO+D,YAAYjW,GACjDp+C,KAAKswD,OAAO5Q,GAAGm7C,WAAW,GAAK,GAAK,GAAK,GACzC76F,KAAKswD,OAAOwE,GAAG,QAAS,CAACxlD,EAAQjS,EAAOyC,KACtC,GAAc,kBAAVzC,EAA2B,CAC7B,GAAIiS,EAAOwrF,WACT,OAEF96F,KAAK8O,SAAS/C,IAAA,IAAC6F,OAACA,GAAO7F,EAAA,MAAM,CAAC6F,OAAQ,IAAIA,EAAM,kBAAAE,OAAoBxC,EAAOlQ,aAG/EY,KAAKovD,MAAQpvD,KAAKswD,OAAOiF,WACzBv1D,KAAKswD,OAAO+E,WAAWhB,GAAY/D,OAAOqE,SAASkqB,KAEnD,MAAMxjF,EAAO2E,KAAK6N,QAEZqG,EAAQlU,KAAKyL,MAAMrM,KAAOkW,EAAStV,KAAKyL,MAAMrM,MAAQY,KAAKyL,MAAM7B,GAEjEmxF,EAAc37F,IAClB,MAAMqiD,EAAsB,kBAATriD,EAAoBA,EAAKrD,OAAOqD,EAAKpD,YAAY,MAAMie,cAAgB,OAC1F,GAAI,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,QAAQ0E,QAAQ8iC,IAAQ,EAC5E,MAAO,CAACpmD,EAAKqf,MAAMtb,GAAO,QAAQ,GAC7B,CACL,MAAM47F,EAAM3/F,EAAKZ,OAAO2E,GACxB,OAAI47F,EACK,CAACA,EAAI3/F,KAAKN,OAAQ0mD,GAAK,GAEvB,CAACpmD,EAAK2W,MAAMvX,OAAO2E,GAAOqiD,GAAK,KAM5C,GADAzhD,KAAKswD,OAAO5+B,KAAKxd,EAAM6mF,GAAa/nC,aAAar2D,KAAKy1D,GAASpyD,KAAK46F,YAAYxoC,EAAO,IACnFpyD,KAAKyL,MAAMrM,KAAM,CACnB,MAAM67F,EAAWj7F,KAAKyL,MAAMrM,KAAK5D,QAAQ,UAAW,iBAC9C42D,EAAQpyD,KAAKswD,OAAO5+B,KAAKupE,EAAUF,GACzC3oC,EAAM0oC,YAAa,EACnB1oC,EAAMY,aAAar2D,KAAKy1D,GAASpyD,KAAK46F,YAAYxoC,EAAO,IAG3DpyD,KAAK4vC,MAAQyqD,sBAAsBr6F,KAAKm6F,SAG1CpvF,SACE,MAAM6G,OAAEA,EAAMkI,QAAEA,EAAOmF,QAAEA,EAAOyxD,UAAEA,GAAc1wE,KAAKuP,MAC/C6R,EAAStH,EAAQmF,GACvB,OACEpU,IAAAgB,cAAA,OAAKT,UAAU,aACbP,IAAAgB,cAACikB,KAAS,KACPhT,IAAA,IAACkT,MAACA,EAAKzD,OAAEA,GAAOzP,EAAA,OACfjS,IAAAgB,cAAA,UACAytF,YAAat5F,KAAKs5F,YAClB4B,QAASl7F,KAAK+5F,aACd5pF,IAAKhH,GAAKnJ,KAAKo+C,OAASj1C,EACxB6mB,MAAOzpB,KAAKG,IAAIspB,EAAO,KACvBzD,OAAQhmB,KAAKG,IAAI6lB,EAAQ,SAI7B1hB,IAAAgB,cAAA,MAAIT,UAAU,OACXwG,EAAOkH,IAAI,CAAC1d,EAAK4F,IAAQ6J,IAAAgB,cAAA,MAAIgL,IAAK7V,EAAKoK,UAAU,SAAShQ,KAE7DyP,IAAAgB,cAAA,OAAKT,UAAU,WAAU,mBACPP,IAAAgB,cAAA,KAAGhQ,KAAK,6CAA6CyT,OAAO,UAAS,qBAEtFwK,EAAQve,OAAS,GAChBsP,IAAAgB,cAAA,OAAKT,UAAU,YACZ0O,EAAQve,OAAS,GAAKsP,IAAAgB,cAAA,aAAO,SAC5BhB,IAAAgB,cAAA,UAAQoD,MAAOgQ,EAAS5P,SAAUrP,KAAK6wB,WACpC/W,EAAQhB,IAAI,CAACiB,EAAK9S,IAAM4D,IAAAgB,cAAA,UAAQgL,IAAK5P,EAAGgI,MAAOhI,GAAI8S,EAAIq4C,MAAMnyD,SAGvD,MAAVmhB,GAAkBvW,IAAAgB,cAAA,aAAO,aACxBhB,IAAAgB,cAAA,UAAQoD,MAAOmS,EAAOkgD,SAAUjyD,SAAUrP,KAAK8zE,aAC7CjpE,IAAAgB,cAAA,UAAQoD,OAAQ,GAAG,QAClBmS,EAAOgxC,MAAM1X,UAAU5hC,IAAI,CAACmhF,EAAKhzF,IAAM4D,IAAAgB,cAAA,UAAQgL,IAAK5P,EAAGgI,MAAOhI,GAAIgzF,EAAIh6F,SAGhE,MAAVmhB,GAAkBA,EAAOgxC,MAAMlnB,QAAQ3vC,OAAS,GAAKsP,IAAAgB,cAAA,aAAO,UAC3DhB,IAAAgB,cAAA,UAAQoD,MAAOmS,EAAO+pB,OAAQ97B,SAAUrP,KAAK65F,WAC3ChvF,IAAAgB,cAAA,UAAQoD,OAAQ,GAAG,QAClBmS,EAAOgxC,MAAMlnB,QAAQpyB,IAAI,CAACohF,EAAKjzF,IAAM4D,IAAAgB,cAAA,UAAQgL,IAAK5P,EAAGgI,MAAOhI,GAAIizF,EAAIj6F,SAGzE4K,IAAAgB,cAAA,aAAO,cACLhB,IAAAgB,cAAA,UAAQoD,MAAOyhE,EAAWrhE,SAAUrP,KAAKk+E,cACtCib,GAAWrgF,IAAI,CAAC7Y,EAAMgH,IAAM4D,IAAAgB,cAAA,UAAQgL,IAAK5P,EAAGgI,MAAOhI,GAAIhH,SAnRnDm5F,GAQZp6E,YAAcxD,GAAS6C,YCxCjB,MAAM88E,WAAoBtwF,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KACvDuP,MAAQ,CAACnB,MAAM,GAAMpO,KAGrBoO,KAAOtP,KACLkB,KAAK8O,SAAS,CAACV,MAAM,IACrBtP,EAAEuP,mBACHrO,KAMDo7F,SAAWvhG,KACTmG,KAAKq7F,MAAQxhG,EACTA,EACFrB,SAASiX,iBAAiB,UAAWzP,KAAKkP,WAAW,GAErD1W,SAASmX,oBAAoB,UAAW3P,KAAKkP,WAAW,KAE3DlP,KAEDkP,UAAYpQ,KACV,OAAQA,EAAEkP,OACV,KAAKC,IAAQC,MAAMiB,IACjBnP,KAAK8O,SAAS,CAACV,MAAM,OAIxBpO,KAEDs5F,YAAcx6F,KACRA,EAAEwQ,SAAWtP,KAAKq7F,OACpBr7F,KAAK8O,SAAS,CAACV,MAAM,MAxBzBsB,uBACElX,SAASmX,oBAAoB,UAAW3P,KAAKkP,WAAW,GA2B1DnE,SACE,IAAI3L,EAAOY,KAAKyL,MAAMrM,KACtB,MAAM/D,EAAO2E,KAAK6N,QAClB,GAAa,KAATzO,GAAwB,MAATA,GAAyB,MAATA,EACjC,OAAOA,EAET,MAAM4J,EAAI5J,EAAK4M,MAAM,iBAChBhD,EAEe,SAATA,EAAE,KACX5J,EAAO4J,EAAE,GAAK,QAFd5J,GAAQ,OAIV,MACMqd,EAAM9G,EADCL,EAASlW,IAGtB,OACEyL,IAAAgB,cAAChB,IAAM+V,SAAQ,KACZ5gB,KAAKuP,MAAMnB,MAAQktF,IAASC,aAC3B1wF,IAAAgB,cAAA,OAAKT,UAAU,cAAckuF,YAAat5F,KAAKs5F,YAAanpF,IAAKnQ,KAAKo7F,UACpEvwF,IAAAgB,cAAA,WACEhB,IAAAgB,cAACutF,GAAa,CAACh6F,KAAMA,MAGzB5G,SAASmc,MAEX9J,IAAAgB,cAAA,KAAGhQ,KAAI,IAAAiW,OAAMzW,EAAKuO,GAAE,WAAAkI,OAAU2K,GAAOnM,QAAStQ,KAAKoO,MAAOhP,KA9D7C+7F,GAEZn8E,YAAcxD,GAAS6C,YCChC,MAAM4N,GAAalgB,IAAA,IAACqV,OAACA,GAAOrV,EAAA,OAC1BlB,IAAAgB,cAACkV,GAASJ,SAAQ,KACfpG,GAAS1P,IAAAgB,cAAC2vF,GAAa,CAAC5xF,GAAIwX,EAAOxX,IAAIiB,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMyI,EAAK,KAAAzI,OAAIsP,EAAOlf,KAAI,KAAA4P,OAAIsP,EAAOxX,KAAMiB,IAAAgB,cAACsV,GAAU,CAACC,OAAQA,IAAUA,EAAOnhB,SAI9Hw7F,GAAgB3+E,IAAA,IAACsE,OAACA,GAAOtE,EAAA,OAC7BjS,IAAAgB,cAACkV,GAASJ,SAAQ,KACfpG,GAAS1P,IAAAgB,cAAC2vF,GAAa,CAAC5xF,GAAIwX,EAAOxX,IAAIiB,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMyI,EAAK,KAAAzI,OAAIsP,EAAOlf,KAAI,KAAA4P,OAAIsP,EAAOxX,KAAOwX,EAAOxX,OAIvG,MAAM8xF,WAAwB7wF,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAChDuP,MAAQ,CAAC8rF,MAAO,MAAKr7F,KAErB27F,YAAc78F,KACZ,MAAM+oD,EAAO/oD,EAAEwQ,OAAOssF,wBAChBrvE,EAAShmB,KAAKG,IAAIlO,SAASqjG,gBAAgBC,aAActiG,OAAOuiG,aAAe,GACjFl0C,EAAKr6B,IAAMq6B,EAAK5e,OAAS1c,EAC3BvsB,KAAK8O,SAAS,CAACusF,MAAO,QAEtBr7F,KAAK8O,SAAS,CAACusF,MAAO,aAEzBr7F,KACDg8F,WAAa,MACXh8F,KAAK8O,SAAS,CAACusF,MAAO,SAGxBtwF,SACE,MAAMC,SAACA,EAAQixF,QAAEA,GAAWj8F,KAAKyL,OAC3B4vF,MAACA,GAASr7F,KAAKuP,MAErB,OAAO8rF,EACLxwF,IAAAgB,cAAA,MAAIT,UAAW6E,IAAW,kBAAmBorF,GAAQa,aAAcl8F,KAAK27F,YAAaQ,aAAcn8F,KAAKg8F,YACrGC,EACAjxF,GAGHH,IAAAgB,cAAA,MAAIqwF,aAAcl8F,KAAK27F,YAAaQ,aAAcn8F,KAAKg8F,YAAahxF,IAKnE,MAAMoxF,WAAkBvxF,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KACjDuP,MAAQ,CAAC8rF,OAAO,GAAMr7F,KAEtB27F,YAAc78F,KACZ,GAAIA,EAAEwQ,OAAO+sF,aAAev9F,EAAEwQ,OAAOgtF,YAAa,CAChD,GAAIx9F,EAAEwQ,OAAOitF,QAAQ,gBACnB,OAEFv8F,KAAK8O,SAAS,CAACusF,OAAO,OAEzBr7F,KACDg8F,WAAa,MACXh8F,KAAK8O,SAAS,CAACusF,OAAO,MAGxBtwF,SACE,MAAMC,SAACA,GAAYhL,KAAKyL,OAClB4vF,MAACA,GAASr7F,KAAKuP,MAErB,OAAO8rF,EACLxwF,IAAAgB,cAAA,MAAIT,UAAU,YAAY8wF,aAAcl8F,KAAK27F,YAAaQ,aAAcn8F,KAAKg8F,YAC3EnxF,IAAAgB,cAAA,WAAMb,GAAe,KAGvBH,IAAAgB,cAAA,MAAIqwF,aAAcl8F,KAAK27F,YAAaQ,aAAcn8F,KAAKg8F,YAAahxF,IAK1E,MAAMwxF,GAActtE,IAAmB,IAAlBjgB,MAACA,EAAK5T,KAAEA,GAAK6zB,EAChC,MAAMnlB,EAASwmB,GAAUthB,EAAO5T,GAChC,OAAOwP,IAAAgB,cAAA,WAAM9B,IAef,MAAM0yF,WAAwB5xF,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KAC5CuP,MAAQ,CAAC86B,SAAS,GAAMrqC,KACxB08F,OAAS,KAAM18F,KAAK8O,SAAS,CAACu7B,SAAS,KAEvCt/B,SACE,MAAM3L,KAACA,EAAI4S,MAAEA,EAAK5G,UAAEA,KAAcK,GAASzL,KAAKyL,MAC1CiP,EAAQ1I,EAAM0I,MAAMtb,GAC1B,OAAa,MAATsb,EACK,KAGP7P,IAAAgB,cAACqlB,KAAOn3B,OAAAC,OAAA,CAAC4P,GAAG,gBAAmB6B,EAAK,CAAEL,UAAW6E,IAAW7E,EAAW,CAACuxF,SAAU38F,KAAKuP,MAAM86B,YAC3Fx/B,IAAAgB,cAAA,OAAKnT,IAAKgiB,EAAOgiF,OAAQ18F,KAAK08F,OAAQrrE,IAAI,WAMlD,MAAMurE,GAAa7sE,IAAA,IAAC3wB,KAACA,GAAK2wB,EAAA,OACxBllB,IAAAgB,cAAC2P,GAAS6C,YAAYsC,SAAQ,KAC3B3O,IACC,MAAM4I,EAAO5I,EAAM6I,WAAWzb,GAC9B,OACEyL,IAAAgB,cAAC6H,IAAc,CAACmpF,UAAU,MAAMppF,QAAS5I,IAAAgB,cAAC4wF,GAAe,CAACr9F,KAAMA,EAAM4S,MAAOA,KAC3EnH,IAAAgB,cAAA,YACW,MAAR+O,GAAgB/P,IAAAgB,cAAA,QAAMT,UAAU,OAAOE,MAAOsP,IAC9Cxb,OAQP09F,GAAiBC,IAAyB,IAAxB9tF,MAACA,EAAK4J,KAAEA,EAAIxd,KAAEA,GAAK0hG,EACrClkF,EAAK3W,KAAKyc,QAAQ,SAGtB,IAAIzc,EAAO2W,EAAK3W,KAIhB,GAHa,kBAATA,IACFA,EAAO,mBAEL7G,EAAKmuB,MAAMtnB,GACb,OAAK+M,GAAmB,MAAVA,EACP5T,EAAKmuB,MAAMtnB,GAAM+M,IAAU,QADE,OAGtC,OAAQ/M,GACR,IAAK,OAAQ,OAAO4Q,SAAS7D,EAAO,IAAM,OAAS,QACnD,IAAK,SAAU,MAAiB,MAAVA,EAAgB,GAAKA,EAC3C,IAAK,OAAQ,OAAOA,EACpB,IAAK,MAAO,OAAO6D,SAAS7D,EAAO,KAAO,EAC1C,IAAK,OACL,IAAK,SAAU,OAAQwa,WAAWxa,IAAU,GAAGya,QAAQ7Q,EAAK8Q,WAAa,GACzE,IAAK,uBAAwB,OAAOxD,GAAqBlX,IAAUA,EACnE,IAAK,cAAe,OAAO8V,GAAS9V,IAAUA,EAC9C,IAAK,iBAAkB,OAAOoX,GAAepX,IAAUA,EAEvD,IAAK,WACH,GAAIuX,GAASvX,GAAQ,OAAOuX,GAASvX,GAEvC,IAAK,WAAY,IAAK,WACtB,IAAK,aAAc,IAAK,aACxB,IAAK,WAAY,IAAK,WACtB,IAAK,WAAY,IAAK,cAAe,IAAK,kBAC1C,IAAK,WAAY,IAAK,WACtB,IAAK,cAAe,IAAK,cACvB,GAAc,MAAVA,EAAe,MAAO,GAC1B,MAAM8K,EAAM1e,EAAKye,QAAQ8P,KAAK7P,GAAOA,EAAInQ,KAAOqF,GAChD,OAAO8K,EAAMlP,IAAAgB,cAACogB,GAAU,CAAC7K,OAAQrH,IAAS9K,EAC5C,IAAK,OACH,OAAOpE,IAAAgB,cAAC+wF,GAAU,CAACx9F,KAAM6P,IAC3B,IAAK,QACH,OAAOpE,IAAAgB,cAACsvF,GAAW,CAAC/7F,KAAM6P,IAC5B,QACE,MAAiB,MAAVA,GAAiBA,GAAS,SAI/B+tF,GAAoBC,IAAyB,IAAxBhuF,MAACA,EAAK4J,KAAEA,EAAIxd,KAAEA,GAAK4hG,EAE5C,OADWpkF,EAAK3W,MAEhB,IAAK,MAAO,OAAO4Q,SAAS7D,EAAO,KAAO,EAC1C,IAAK,OACL,IAAK,SAAU,OAAQwa,WAAWxa,IAAU,GAAGya,QAAQ7Q,EAAK8Q,WAAa,GACzE,IAAK,WACL,IAAK,WAAY,IAAK,WACtB,IAAK,aAAc,IAAK,aACxB,IAAK,WAAY,IAAK,WACtB,IAAK,WAAY,IAAK,cAAe,IAAK,kBAC1C,IAAK,WAAY,IAAK,WACtB,IAAK,cAAe,IAAK,cACvB,MAAM5P,EAAM1e,EAAKye,QAAQ8P,KAAK7P,GAAOA,EAAInQ,KAAOqF,GAChD,OAAO8K,EAAMlP,IAAAgB,cAAC4vF,GAAa,CAACr6E,OAAQrH,IAAS9K,EAC/C,QACE,OAAOA,IAIEiuF,GAAcC,IAAmC,IAAlCluF,MAACA,EAAK4J,KAAEA,EAAIxd,KAAEA,EAAImsB,SAAEA,GAAS21E,EACvD,MAAMC,EAAW51E,EAAWw1E,GAAoBF,GAChD,GAAIjkF,EAAK3W,KAAKyc,QAAQ,SAAW,EAAG,CAClC,GAAc,MAAV1P,EACF,OAAOpE,IAAAgB,cAACuwF,GAAS,KAAE50E,EAAWvY,EAAQ,IAExC,GAAc,KAAVA,EAAc,OAAOpE,IAAAgB,cAACuwF,GAAS,MACnC,MAAMiB,EAAO,GAKb,OAJApuF,EAAM6a,MAAM,KAAK/iB,QAAQ,CAACgjB,EAAMzhB,KAC1B+0F,EAAK9hG,QAAQ8hG,EAAKp5F,KAAKujB,EAAW,IAAM,MAC5C61E,EAAKp5F,KAAK4G,IAAAgB,cAACuxF,EAAQ,CAACnuF,MAAO8a,EAAMlR,KAAMA,EAAMxd,KAAMA,EAAMwb,IAAKvO,OAEzDuC,IAAAgB,cAACuwF,GAAS,KAAEiB,GACd,GAAIxkF,EAAK3W,KAAKyc,QAAQ,UAAY,IAAM6I,EAAU,CACvD,MAAM61E,EAAO,GACPrzE,EAASlX,SAAS7D,EAAO,IAC/B,IAAK,IAAIgb,EAAO,EAAGA,EAAO,IAAO,GAAKA,GAASD,IAAUC,EAClD,GAAKA,EAAQD,IACZqzE,EAAK9hG,QAAQ8hG,EAAKp5F,KAAKujB,EAAW,IAAM,MAC5C61E,EAAKp5F,KAAK4G,IAAAgB,cAACuxF,EAAQ,CAACnuF,MAAOgb,EAAMpR,KAAMA,EAAMxd,KAAMA,EAAMwb,IAAKoT,MAGlE,OAAOpf,IAAAgB,cAACuwF,GAAS,KAAEiB,GACd,MAAkB,WAAdxkF,EAAK3W,MACTslB,GAAsB,MAAVvY,IAAeA,EAAQ,IAtI5C,SAAsB3N,EAAKjG,GACzB,OAAIiG,EAAI0K,MAAM,iBAEVnB,IAAAgB,cAAC6vF,GAAe,CAACO,QAASpxF,IAAAgB,cAAC2wF,GAAW,CAACvtF,MAAO3N,EAAKjG,KAAMA,KACtDiG,GAIEuJ,IAAAgB,cAACuwF,GAAS,KAAE96F,GA+HZg8F,CAAaruF,EAAO5T,IAEpBwP,IAAAgB,cAACuwF,GAAS,KAACvxF,IAAAgB,cAACuxF,EAAQ,CAACnuF,MAAOA,EAAO4J,KAAMA,EAAMxd,KAAMA,MCxN1DkiG,GAAmBxxF,IAA8B,IAA7BqV,OAACA,EAAM/lB,KAAEA,EAAImsB,SAAEA,GAASzb,EAChD,MAAMimB,EAAO,GAUb,OATAzK,GAAenG,EAAQ/lB,EAAMmsB,EAAU,CAAC3Q,EAAK5W,EAAMgP,EAAO4J,KACxDmZ,EAAK/tB,KACH4G,IAAAgB,cAAA,MAAIgL,IAAKA,GACPhM,IAAAgB,cAACuwF,GAAS,KAAEn8F,GACZ4K,IAAAgB,cAACqxF,GAAW,CAACjuF,MAAOA,EAAO4J,KAAMA,EAAMxd,KAAMA,EAAMmsB,SAAUA,QAMjE3c,IAAAgB,cAAA,aACGmmB,IAKDwrE,GAAiB/xF,GACrBZ,IAAAgB,cAACiV,GAASH,SAAQ,KACf6G,GAAY3c,IAAAgB,cAAC0xF,GAAgBxjG,OAAAC,OAAA,GAAKyR,EAAK,CAAE+b,SAAUA,MAIxD,MAAMi2E,WAAmB5yF,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KASvCuP,MAAQ,GAAEvP,KAEVs5F,YAAex6F,KACbkB,KAAK8O,SAAS,CAAC2qF,QAAS36F,EAAE46F,QAAU15F,KAAKyL,MAAM2E,MAC/C5X,SAASiX,iBAAiB,YAAazP,KAAKu5F,aAAa,GACzD/gG,SAASiX,iBAAiB,UAAWzP,KAAKw5F,WAAW,GACrD16F,EAAEuP,iBACFvP,EAAE4+F,oBACH19F,KACDu5F,YAAez6F,KACb,MAAM26F,QAAEA,GAAYz5F,KAAKuP,MACR,EAAZzQ,EAAE6+F,SAA2B,MAAXlE,GACrBz5F,KAAKyL,MAAM4D,SAASvQ,EAAE46F,QAAUD,GAChC36F,EAAEuP,iBACFvP,EAAE4+F,mBAEF19F,KAAKw5F,UAAU16F,KAElBkB,KACDw5F,UAAa16F,KACXkB,KAAK8O,SAAS,CAAC2qF,QAAS,OACxBz5F,KAAK49F,kBACL9+F,EAAEuP,iBACFvP,EAAE4+F,oBA/BJE,kBACEplG,SAASmX,oBAAoB,YAAa3P,KAAKu5F,aAAa,GAC5D/gG,SAASmX,oBAAoB,UAAW3P,KAAKw5F,WAAW,GAE1D9pF,uBACE1P,KAAK49F,kBA6BP7yF,SACE,MAAMqF,IAACA,GAAOpQ,KAAKyL,MACnB,OAAOZ,IAAAgB,cAAA,OAAKT,UAAU,cAAcE,MAAO,CAAC0iB,KAAM5d,GAAMkpF,YAAat5F,KAAKs5F,eAIvE,MAAMuE,WAAmBhzF,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KAC9CuP,MAAQ,CAACuuF,UAAW,KAAI99F,KAIxB+9F,aAAeD,KACbA,EAAYv3F,KAAKG,IAAI,GAAIo3F,GACrB99F,KAAKg+F,SACPF,EAAYv3F,KAAKC,IAAIxG,KAAKg+F,OAAO1B,YAAc,GAAIwB,IAErD99F,KAAK8O,SAAS,CAACgvF,cACRA,IACR99F,KAEDi+F,OAASn/F,IAAKkB,KAAKg+F,OAASl/F,GAE5BiM,SACE,MAAM1P,KAACA,EAAI+P,UAAEA,KAAcK,GAASzL,KAAKyL,OACnCqyF,UAACA,GAAa99F,KAAKuP,MACnB3F,EAAK5J,KAAK6N,QACVuT,EAAS/lB,EAAKye,QAAQ8P,KAAK7P,GAAOA,EAAInQ,KAAOA,GACnD,OAAKwX,EASHvW,IAAAgB,cAAC6jB,KAAK31B,OAAAC,OAAA,CAACoR,UAAW6E,IAAW7E,EAAW,eAAmBK,GACzDZ,IAAAgB,cAAC4xF,GAAU,CAACrtF,IAAK0tF,EAAWzuF,SAAUrP,KAAK+9F,eAC3ClzF,IAAAgB,cAAC2S,GAAK,CAACjO,MAAO6Q,EAAOnhB,OACrB4K,IAAAgB,cAAA,OAAKT,UAAU,iBACbP,IAAAgB,cAAA,aACEhB,IAAAgB,cAAA,aACEhB,IAAAgB,cAAA,UACEhB,IAAAgB,cAAA,MAAImkB,MAAO8tE,GAAW,QACtBjzF,IAAAgB,cAAA,UAAI,aAKZhB,IAAAgB,cAAA,OAAKT,UAAU,cACbP,IAAAgB,cAAA,SAAOsE,IAAKnQ,KAAKi+F,QACfpzF,IAAAgB,cAAA,aACEhB,IAAAgB,cAAA,UACEhB,IAAAgB,cAAA,MAAImkB,MAAO8tE,GAAW,QACtBjzF,IAAAgB,cAAA,UAAI,WAGRhB,IAAAgB,cAAC2xF,GAAc,CAACp8E,OAAQA,EAAQ/lB,KAAMA,OA5B1CwP,IAAAgB,cAAC6jB,KAAK31B,OAAAC,OAAA,CAACoR,UAAW6E,IAAW7E,EAAW,eAAmBK,GACzDZ,IAAAgB,cAAA,WAAKhB,IAAAgB,cAAA,QAAMT,UAAU,cAAcxB,EAAK,oBAAsB,sCAxB3Di0F,GAGJ7+E,YAAciC,UC9DvB,MAAMi9E,WAA4BrzF,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KAGhDm+F,YAAc,KAAMn+F,KAAK6N,QAAQwR,OAAO,YAAarf,KAAK6N,QAAQ2Z,WAElEzc,SACE,MAAOiB,OAAQiU,QAAQ1F,MAACA,EAAKrY,KAAEA,EAAI0H,GAAEA,IAAIvO,KAAEA,GAAQ2E,KAAKyL,MACxD,OACEZ,IAAAgB,cAACiV,GAAS/B,SAAQ,CAAC9P,QAASjP,KAAK6N,QAAQ2Z,UACvC3c,IAAAgB,cAACqV,GAAenC,SAAQ,CAAC9P,MAAOjP,KAAKm+F,aACnCtzF,IAAAgB,cAACkV,GAAShC,SAAQ,CAAC9P,MAAOsL,GACxB1P,IAAAgB,cAACmV,GAAQjC,SAAQ,CAAC9P,MAAO/M,GACvB2I,IAAAgB,cAACoV,GAAMlC,SAAQ,CAAC9P,MAAOrF,GACrBiB,IAAAgB,cAAA,OAAKT,UAAU,cACbP,IAAAgB,cAAC6jB,KAAK,CAAC4C,MAAI,GACTznB,IAAAgB,cAACwiB,GAAU,CAACtrB,KAAM,IAAKq7F,QAAS,IAAKC,WAAS,EAACjzF,UAAU,YAAY/P,KAAMA,EAAM6G,KAAMA,EAAM0H,GAAIA,EAAIiN,IAAK3U,IAC1G2I,IAAAgB,cAACgyF,GAAU,CAACO,QAAS,IAAKhzF,UAAU,aAAa/P,KAAMA,YAhBrE6iG,GACGl/E,YAAcE,GAAQf,QA2B/B,MAAMmgF,GAAkB5tF,EAAU,CAChCrV,KAAMA,CAAA0Q,EAAUiG,KAAK,IAAdhG,MAACA,GAAMD,EAAA,OAAYiG,EAAM8H,YAC/BokF,QAAqBvlG,OAAWA,GAEnC2lG,GAAgBt/E,YAAcxD,GAAS6C,YAEhC,MAAMkgF,GAAaA,IAAM1zF,IAAAgB,cAACC,IAAK,CAAC1M,KAAI,qBAAwBqhB,UAAW69E,KC/CjEr9E,GAAQpW,IAAMuT,cAAc,MCWnCogF,GAAeA,CAACC,EAAUlpF,KAC9B,MAAMkG,EAAO,CACXxb,KAAM,GACNy+F,KAAM,GACNC,MAAO,IAEKF,EAAS30E,MAAM,MAAM5c,OAAO/D,GAAKA,EAAE5N,OAAS,GACpDwL,QAAQ3H,IACZ,MAAMlH,EAAIkH,EAAK0qB,MAAM,UACrB,IAAIqtE,EAAK17E,EACT,IAAK,IAAIxU,EAAI,EAAGA,EAAI/O,EAAEqD,OAAS,IAAK0L,EAAG,CACrC,MAAM23F,EAAK1mG,EAAE+O,GAAGgT,cACXk9E,EAAGuH,KAAKE,KACXzH,EAAGuH,KAAKE,GAAM,CACZ3+F,KAAM/H,EAAE+O,GACRy3F,KAAM,GACNC,MAAO,KAGXxH,EAAKA,EAAGuH,KAAKE,GAEf,MAAMC,EAAMz/F,EAAK4M,MAAM,4BACjBy1C,EAAMriD,EAAK4M,MAAM,gBACvBmrF,EAAGwH,MAAM16F,KAAK,CACZhE,KAAM/H,EAAEA,EAAEqD,OAAS,GACnB6D,OACAyX,IAAKgoF,EAAM/oF,EAAS+oF,EAAI,IAAMvpF,EAASlW,EAAMmW,GAC7CksC,IAAKA,EAAMA,EAAI,GAAGxnC,cAAgB,cAGtC,MAAM0kF,EAAQ,GACRG,EAAcA,CAACz2F,EAAG1K,IAAM0K,EAAEpI,KAAKga,cAAckO,cAAcxqB,EAAEsC,KAAKga,eAClE7hB,EAAUwrF,IACdA,EAAI8a,KAAO3kG,OAAO8f,OAAO+pE,EAAI8a,MAAM12E,KAAK82E,GACxClb,EAAI8a,KAAK33F,QAAQ6mB,GAAOx1B,EAAQw1B,IAChCg2D,EAAI+a,MAAM32E,KAAK82E,GACfH,EAAM16F,QAAQ2/E,EAAI+a,QAGpB,OADAvmG,EAAQqjB,GACD,CAAEA,OAAMkjF,UAGXI,GAAWhzF,IAAA,IAACxM,KAAEA,GAAMwM,EAAA,OACxBlB,IAAAgB,cAAC2P,GAAS6C,YAAYsC,SAAQ,KAC3BtlB,GACCwP,IAAAgB,cAACoV,GAAMN,SAAQ,KACZ/W,GACCiB,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMzW,EAAKuO,GAAE,WAAAkI,OAAU6D,EAAQpW,EAAKsX,MAC1CzL,UAAW6E,IAAW,aAAc,CAAEmc,SAAU7sB,EAAK6sB,SAAUD,SAAUnW,EAASpM,EAAIrK,EAAKsX,QAC3FhM,IAAAgB,cAAA,QAAMT,UAAW,uBAAyB7L,EAAKkiD,MAC/C52C,IAAAgB,cAAA,QAAMT,UAAU,cAAc7L,EAAKU,UAQ/C,MAAM++F,GACJpxF,YAAYrO,EAAM+sB,GAAQtsB,KAS1BusB,OAAS,EARPvsB,KAAKT,KAAOA,EACZS,KAAKT,KAAK+sB,OAAStsB,KACnBA,KAAKssB,OAASA,EACdtsB,KAAKT,KAAK0/F,cAAiBxyE,KACzBA,EAAGzsB,KAAKT,MACRS,KAAKi/F,cAAcxyE,KAIvB1hB,SACE,OAAOF,IAAAgB,cAACkzF,GAAQ,CAACx/F,KAAMS,KAAKT,OAE9BotB,WAAWrkB,GACT,OAAOtI,KAAK+K,SAEdk0F,cAAcxyE,GACZA,EAAGzsB,MACHA,KAAKssB,QAAUtsB,KAAKssB,OAAO2yE,cAAcxyE,GAE3CyyE,gBAAgBzyE,GACdA,EAAGzsB,MACHysB,EAAGzsB,KAAKT,OAIZ,MAAM4/F,GACJvxF,YAAYg2E,EAAKt3D,GAAQtsB,KA2FzB8sB,OAAS,MACH9sB,KAAK+sB,SACP/sB,KAAKgtB,WAELhtB,KAAKitB,WA9FPjtB,KAAKssB,OAASA,EACdtsB,KAAKktB,MAASZ,EAASA,EAAOY,MAAQ,EAAI,EAC1CltB,KAAKuQ,MAAQqzE,EAAI3jF,MAAQ,WACzBD,KAAKgQ,MAAQ4zE,EAAI+a,MAAMpjG,OACvByE,KAAK0+F,KAAO,GACZ1+F,KAAKgL,SAAW,GAChB44E,EAAI8a,KAAK33F,QAAQq4F,IACf,MAAMxxE,EAAM,IAAIuxE,GAAcC,EAAQp/F,MACtCA,KAAKgL,SAAS/G,KAAK2pB,GACnB5tB,KAAK0+F,KAAKU,EAAOn/F,KAAKga,eAAiB2T,EACvC5tB,KAAKgQ,OAAS4d,EAAI5d,QAEpB4zE,EAAI+a,MAAM53F,QAAQs4F,IAChBr/F,KAAKgL,SAAS/G,KAAK,IAAI+6F,GAASK,EAASr/F,SAE3CA,KAAKutB,WAAajB,EAAS,EAAI,EAC/BtsB,KAAKgL,SAASjE,QAAQ+B,IACpBA,EAAE0kB,IAAMxtB,KAAKutB,WACbvtB,KAAKutB,YAAczkB,EAAEyjB,SAKrBvsB,KAAK+sB,UAHFT,EAKLtsB,KAAKosB,UAAW,EAElB6yE,cAAcxyE,GACZA,EAAGzsB,MACHA,KAAKssB,QAAUtsB,KAAKssB,OAAO2yE,cAAcxyE,GAE3CyyE,gBAAgBzyE,GACdA,EAAGzsB,MACHA,KAAKgL,SAASjE,QAAQ/C,GAAKA,EAAEk7F,gBAAgBzyE,IAE/CgB,UAAUjY,EAAO9J,GACf,IAAIpD,EAAQoD,EAAQ1L,KAAKgL,SAAS2T,QAAQjT,IAAU,EACpD,GAAIpD,GAAS,EACX,OAASA,EAAQtI,KAAKgL,SAASzP,QAC7ByE,KAAKgL,SAAS1C,GAAOklB,KAAOhY,EAGhCxV,KAAKutB,YAAc/X,EACfxV,KAAKssB,QAAUtsB,KAAK+sB,SACtB/sB,KAAKssB,OAAOmB,UAAUjY,EAAOxV,MACpBA,KAAK0tB,UACd1tB,KAAK0tB,SAAS1tB,KAAKusB,QAIvBA,aACE,OAAOvsB,KAAK+sB,SAAW/sB,KAAKutB,WAAa,EAG3C+xE,WAAW//F,EAAMggG,GAIf,GAHKA,IACHA,EAAQhgG,EAAKH,KAAK0qB,MAAM,UAEtBy1E,EAAMhkG,OAAS,EAAG,CACpB,MAAM0E,EAAOs/F,EAAM,GAAGtlF,cAChB2T,EAAM5tB,KAAK0+F,KAAKz+F,GACtB,GAAI2tB,EAEF,OADAA,EAAIX,SACGW,EAAI0xE,WAAW//F,EAAMggG,EAAM9jG,MAAM,IAAMmyB,EAAIJ,QAE/C,CACL,MAAMI,EAAM5tB,KAAKgL,SAAS4e,KAAK7P,GAAOA,EAAIxa,OAASA,GACnD,GAAIquB,EACF,OAAOA,EAAIJ,IAGf,OAAO,EAGTP,UACOjtB,KAAK+sB,UAAY/sB,KAAKgQ,MAAQ,IACjChQ,KAAK+sB,UAAW,EACZ/sB,KAAKssB,QACPtsB,KAAKssB,OAAOmB,UAAUztB,KAAKutB,WAAa,EAAGvtB,OAKjDgtB,WACMhtB,KAAK+sB,UAAY/sB,KAAKssB,SACxBtsB,KAAK+sB,UAAW,EAChB/sB,KAAKssB,OAAOmB,UAAU,EAAIztB,KAAKutB,WAAYvtB,OAY/C+K,SACE,OAAK/K,KAAKssB,OAIRzhB,IAAAgB,cAAA,OAAKyE,QAAStQ,KAAKw/F,UAAWp0F,UAAW6E,IAAW,cAAe,CAAE8c,SAAU/sB,KAAK+sB,SAAUX,SAAUpsB,KAAKosB,YAC3GvhB,IAAAgB,cAAA,QAAMT,UAAU,SAASkF,QAAStQ,KAAK8sB,SACvCjiB,IAAAgB,cAAA,QAAMiiB,cAAe9tB,KAAK8sB,QAAQjiB,IAAAgB,cAAA,QAAMT,UAAU,SAChDP,IAAAgB,cAAA,QAAMT,UAAU,SACbpL,KAAKuQ,SAPL1F,IAAAgB,cAAA,YAAM,iBAajB4zF,eAAen3F,GACb,GAAItI,KAAK+sB,SAAU,CACjB,IAAIiB,EAAO,EAAGC,EAAQjuB,KAAKgL,SAASzP,OAAS,EAC7C,KAAOyyB,EAAOC,GAAO,CACnB,MAAMC,EAAOF,EAAOC,EAAQ,GAAM,EAC9BjuB,KAAKgL,SAASkjB,GAAKV,IAAMllB,EAC3B2lB,EAAQC,EAAM,EAEdF,EAAOE,EAGX,OAAOluB,KAAKgL,SAASgjB,GAEvB,OAAO,KAETrB,WAAWrkB,GACT,GAAItI,KAAKssB,SAAWhkB,EAClB,OAAOtI,KAAK+K,SAEd,GAAI/K,KAAK+sB,SAAU,CACjB,IAAIiB,EAAO,EAAGC,EAAQjuB,KAAKgL,SAASzP,OAAS,EAC7C,KAAOyyB,EAAOC,GAAO,CACnB,MAAMC,EAAOF,EAAOC,EAAQ,GAAM,EAC9BjuB,KAAKgL,SAASkjB,GAAKV,IAAMllB,EAC3B2lB,EAAQC,EAAM,EAEdF,EAAOE,EAGX,MAAMxiB,EAAQ1L,KAAKgL,SAASgjB,GACtBG,EAAW7lB,EAAQtI,KAAKgL,SAASgjB,GAAMR,IACvCloB,EAAOtF,KAAKgL,SAASgjB,GAAMrB,WAAWwB,GAC5C,IAAIC,EAAY,KAYhB,OAXIpuB,KAAKssB,SACH0B,EAAOhuB,KAAKgL,SAASzP,OAAS,EAE9B6yB,EADe,IAAbD,EACU,QAEA,OAEQ,IAAbA,IACTC,EAAY,aAIdvjB,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,SAAUme,EAAW,CAAEhC,SAAU1gB,EAAM0gB,YAC/D9mB,KAOX,MAAMo6F,WAAsB70F,IAAM4T,cAGhC7Q,YAAYnC,GACVqC,MAAMrC,GAAOzL,KAHfuP,MAAQ,CAAE+e,OAAQ,GAAIC,cAAe,KAAMnC,UAAU,GAAOpsB,KAU5DwuB,gBAAmB1vB,KACD,KAAZA,EAAEkP,QACJhO,KAAK8O,SAAS,CAAEwf,OAAQ,GAAIC,cAAe,OAC3CvuB,KAAK2/F,cAAe,KAEvB3/F,KACDgP,SAAYlQ,KACV,MAAMwvB,EAASxvB,EAAEwQ,OAAOL,MAAM9C,OAC9B,IAAI4D,EAAQ,GACR6vF,GAAkB,EAGtB,GADA5/F,KAAKyb,KAAKyjF,gBAAgBrlG,GAAQA,EAAKuyB,UAAW,GACpC,IAAVkC,GAAgBtuB,KAAK2+F,MAAO,CAC9B,MAAM/vE,EAAK,IAAIC,OAAOP,EAAO9yB,QAAQ,sBAAuB,QAAS,KACrEwE,KAAK2+F,MAAM53F,QAAQ,CAACxH,EAAM0H,KACxB,IAAImlB,IAAa7sB,EAAKH,KAAK4M,MAAM4iB,GACjCrvB,EAAK0/F,cAAeplG,IAClBA,EAAKuyB,SAAWvyB,EAAKuyB,UAAYA,EAC7BvyB,EAAKuyB,WACPwzE,GAAkB,OAIxB5/F,KAAK8O,SAAS,CAAEwf,OAAQxvB,EAAEwQ,OAAOL,MAAOsf,cAAexe,EAAOqc,SAAUwzE,SAGxE5/F,KAAKyb,KAAKyjF,gBAAgBrlG,GAAQA,EAAKuyB,UAAW,GAClDpsB,KAAK8O,SAAS,CAAEwf,OAAQxvB,EAAEwQ,OAAOL,MAAOsf,cAAe,KAAMnC,SAAUwzE,IAGpE5/F,KAAKyuB,OACRzuB,KAAKyuB,MAAMC,kBAEb1uB,KAAK2/F,cAAe,IACrB3/F,KAED0tB,SAAW,MACT1tB,KAAK0c,gBACN1c,KACDivB,YAAcnS,KAA2B,IAA1BxU,MAAEA,KAAU2O,GAAS6F,EAElC,MAAMjG,IAAEA,EAAGvL,MAAEA,GAAU2L,EAGjBkY,GAFOnvB,KAAKyb,KAAKzQ,SAAS1C,GAEjBtI,KAAKyb,KAAKgkF,eAAen3F,IACxC,OACEuC,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,UAAW,CAAEmc,SAAU+C,GAAUA,EAAO/C,WAAavV,IAAKA,EAAKvL,MAAOA,GAC9FtL,KAAKyb,KAAKkR,WAAWrkB,MAG3BtI,KACD6/F,kBAAoB3wE,KAA2B,IAA1B5mB,MAAEA,KAAU2O,GAASiY,EACxC,MAAMrY,IAAEA,EAAGvL,MAAEA,GAAU2L,EACvB,OACEpM,IAAAgB,cAAA,OAAKT,UAAW,UAAWyL,IAAKA,GAC7B7W,KAAKyb,KAAKkR,WAAWrkB,MA5D1B,MAAMqK,EAAM6rF,GAAa/yF,EAAMgP,UAAWhP,EAAMwP,OAChDjb,KAAK2+F,MAAQhsF,EAAIgsF,MACjB3+F,KAAKyb,KAAO,IAAI0jF,GAAcxsF,EAAI8I,MAClCzb,KAAKyb,KAAKiS,SAAW1tB,KAAK0tB,SA6D5B3iB,SACE,MAAM0P,SAAEA,EAAQ7Q,GAAEA,EAAEwB,UAAEA,EAAS6P,MAAEA,KAAUxP,GAAUzL,KAAKyL,OACpD6iB,OAAEA,EAAMC,cAAEA,EAAanC,SAAEA,GAAapsB,KAAKuP,MAEjD,IAAKvP,KAAKyb,KACR,OAAO,KAGT,IAAK8S,IAAkBvY,EAAShW,KAAKyb,KAAK+T,IAAK5lB,GAAK,CAClD,MAAMrK,EAAOS,KAAK2+F,OAAS3+F,KAAK2+F,MAAM/0E,KAAK7P,GAAO/D,EAAS+D,EAAIlD,IAAKjN,IACpE,GAAIrK,EAAM,CACRS,KAAKyb,KAAKiS,SAAW,KACrB,MAAMplB,EAAQtI,KAAKyb,KAAK6jF,WAAW//F,GACnCS,KAAKyb,KAAKiS,SAAW1tB,KAAK0tB,SAC1B1tB,KAAKyb,KAAK+T,IAAM5lB,EAChBY,WAAW,KACLxK,KAAKyuB,OACPzuB,KAAKyuB,MAAMgB,YAAYnnB,MAK/B,OACEuC,IAAAgB,cAAC6jB,KAAK31B,OAAAC,OAAA,CAACmW,IACLtW,GAAMmG,KAAK8/F,OAAOjmG,EAClBuR,UAAW6E,IAAW7E,EAAW,eAAmBK,GACpDZ,IAAAgB,cAAA,OAAKT,UAAU,cACbP,IAAAgB,cAAC0f,KAAW,CAACrpB,KAAK,OAAO+M,MAAOqf,EAAQqB,YAAY,SAASzgB,UAAWlP,KAAKwuB,gBAAiBnf,SAAUrP,KAAKgP,YAE/GnE,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,kBAAmBmc,IAC5CvhB,IAAAgB,cAACikB,KAAS,KACPC,IAAA,IAACC,MAAEA,EAAKzD,OAAEA,GAAQwD,EAAA,OACjBllB,IAAAgB,cAACokB,KAAI,CAAC7kB,UAAU,cACd+E,IAAKtW,GAAQmG,KAAKyuB,MAAQ50B,EAC1Bm2B,MAAOA,EACPzD,OAAQA,EACR2D,SAAUlwB,KAAKyb,KAAK8Q,OACpB4D,UAAW,GACXlB,YAAajvB,KAAKivB,mBAUlC,MAAM8wE,GAAahD,IAAA,IAACnzF,GAAEA,EAAE6Q,SAAEA,EAAQrP,UAAEA,KAAcK,GAAOsxF,EAAA,OAAKlyF,IAAAgB,cAAC6jB,KAAK31B,OAAAC,OAAA,CAACoR,UAAW6E,IAAW7E,EAAW,eAAmBK,KAE5Gu0F,GAAWtvF,EAAU,CAChC+J,SAAUwiF,IAAA,IAAC5hG,KAAEA,GAAM4hG,EAAA,OAAK5hG,EAAKof,aAC5B0iF,IAAA,IAAC9hG,KAAEA,KAASoQ,GAAO0xF,EAAA,OAAKtyF,IAAAgB,cAAC6zF,GAAa3lG,OAAAC,OAAA,CAAC6c,IAAKxb,EAAKuO,GAAIqR,MAAO5f,EAAK4f,OAAWxP,KAAWs0F,GAAYA,yBChYtG,MAAME,GAAOl0F,IAAwB,IAAvBkD,MAAEA,EAAK8wB,QAAEA,GAASh0B,EAC9Bg0B,EAAUA,GAAWA,EAAQvkC,QAAQ,OAAQ,MAC7C,MAAMkpC,EAAmB,MAATz1B,GAA2B,KAAVA,EAAe,GAAKA,EAAM2G,WAC3D,OAAO/K,IAAAgB,cAAA,OAAK0E,MAAOwvB,GAAW2E,GAAUA,IAG3B,MAAMw7D,WAAoBr1F,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAC3DmgG,UAAYrjF,KAAe,IAAdxU,MAAEA,GAAOwU,EACpB,OAAO9c,KAAKyL,MAAMpQ,KAAK22B,KAAK1pB,KAC7BtI,KAEDogG,eAAiBlxE,KAAe,IAAd5mB,MAAEA,GAAO4mB,EACzB,OAAO,MAGTmxE,gBACE,MAAMhlG,KAAEA,GAAS2E,KAAKyL,MAEtB,OAAOuB,MAAMszF,KAAK,CAAE/kG,OAAQF,EAAKi3B,MAAQ,CAACvuB,EAAGuE,IAC3CuC,IAAAgB,cAAC00F,KAAM,CAACn1F,UAAW,OAAS9C,EAC1BuO,IAAKvO,EACL0nB,MAAOhwB,KAAKogG,eAAe,CAAE93F,UAC7Bk4F,QAAS9+F,OAAO4G,GAChBm4F,aAAc1wE,IAAA,IAAC2wE,SAAEA,EAAQC,SAAEA,GAAU5wE,EAAA,OACnCllB,IAAAgB,cAACo0F,GAAI,CACHhxF,MAAOyxF,EACP3gE,QAAS1kC,EAAKg3B,UAAYh3B,EAAKg3B,SAASsuE,IAAatlG,EAAKg3B,SAASsuE,GAAUr4F,SAOvFyC,SACE,MAAM1P,KAAEA,EAAIiQ,MAAEA,GAAUtL,KAAKyL,MAG7B,IAAKpQ,IAASA,EAAK22B,OAAS4uE,OAAOC,UAAUxlG,EAAKi3B,OAASj3B,EAAKi3B,MAAQ,EAAG,OAAO,KAElF,MAAMwuE,EAAyB,GAAZzlG,EAAKi3B,KACxB,OACEznB,IAAAgB,cAAA,OAAKT,UAAU,WACbP,IAAAgB,cAACikB,KAAS,KACPitE,IAAA,IAAC/sE,MAAEA,EAAKzD,OAAEA,GAAQwwE,EAAA,OACjBlyF,IAAAgB,cAACk1F,KAAK,CACJz1F,MAAOA,EACP0kB,MAAO8wE,EACPv0E,OAAQA,EAAS,GACjB4D,UAAW,GACXgwE,UAAWngG,KAAKmgG,UAChBjwE,SAAU70B,EAAK22B,KAAKz2B,OACpBylG,iBAAkB,GAEjBhhG,KAAKqgG,qBCrDL,MAAMY,WAAoBp2F,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAC3DuP,MAAQ,CACN2xF,IAAKpuF,SAAS,MAAO,IACrBquF,SAAKxoG,GACNqH,KAEDgP,SAAW,EAAC0D,EAAMkxE,IACZ5jF,KAAKyuB,MACAzuB,KAAKyuB,MAAMH,OAAO5b,EAAMkxE,GAExB,MAEV5jF,KAWDivB,YAAcljB,KAAyB,IAAxBzD,MAACA,KAAU2O,GAAQlL,EAChC,MAAM8K,IAACA,EAAGvL,MAAEA,GAAS2L,EACf0e,EAAiB,GAARrtB,EACT84F,EAASphG,KAAKohG,OACd9jF,EAAM,IAAItd,KAAKyL,MAAMpQ,KAAKgG,SAASs0B,EAAQA,EAAS,KACpD4iE,EAAM,IAAIrxF,WAAW,GAC3B,OACE2D,IAAAgB,cAAA,OAAKT,UAAU,SAASyL,IAAKA,EAAKvL,MAAOA,GACvCT,IAAAgB,cAAA,QAAMT,UAAU,UAAUuqB,EAAO/f,SAAS,IAAIC,SAASurF,EAAQ,MAC/Dv2F,IAAAgB,cAAA,QAAMT,UAAU,OACbkS,EAAIxE,IAAI,CAACuoF,EAAMp6F,IAAM4D,IAAAgB,cAAA,QAAMgL,IAAK5P,GAAIo6F,EAAKzrF,SAAS,IAAIC,SAAS,EAAG,OAClEyH,EAAI/hB,OAAS,IAAM,IAAIyR,MAAM,GAAKsQ,EAAI/hB,SAASud,IAAI,CAACwoF,EAAKr6F,IAAM4D,IAAAgB,cAAA,QAAMgL,IAAK5P,EAAGmE,UAAU,WAAW,QAErGP,IAAAgB,cAAA,QAAMT,UAAU,SACb1J,OAAOC,gBAAgB2b,EAAIxE,IAAIuoF,GAAQA,GAAQ,IAAMA,GAAQ,IAAMA,EAAO9I,QAvBnF6I,aACE,MAAM7lG,EAASyE,KAAKyL,MAAMpQ,KAAKE,OAC/B,IAAIgmG,EAAY,EAChB,KAAQ,GAAkB,EAAZA,GAAmBhmG,KAC7BgmG,EAEJ,OAAOA,EAuBTx2F,SACE,MAAM1P,KAAEA,GAAS2E,KAAKyL,MACtB,OACEZ,IAAAgB,cAACikB,KAAS,KACPhT,IAAA,IAACkT,MAACA,EAAKzD,OAAEA,GAAOzP,EAAA,OACfjS,IAAAgB,cAACokB,KAAI,CAAC7kB,UAAU,WACV4kB,MAAOA,EACPzD,OAAQA,EACR2D,SAAU3pB,KAAKmwD,KAAKr7D,EAAKE,OAAS,IAClC40B,UAAW,GACXlB,YAAajvB,KAAKivB,wBC3ClC,SAASuyE,GAAc3nG,EAAM6R,GAC3B,IAAK,IAAIzE,EAAI,EAAGA,EAAIpN,EAAK4nG,WAAWlmG,SAAU0L,EAC5C,GAAIpN,EAAK4nG,WAAWx6F,KAAOyE,EACzB,OAAOzE,EAGX,OAAQ,EAEV,SAASy6F,GAAkB7nG,EAAMmW,GAC/B,GAAIA,GAASnW,EAAK4nG,WAAWlmG,OAAQ,OAAO1B,EAAK8nG,YAAYpmG,OAC7D,IAAIA,EAAS,EACb,IAAK,IAAI0L,EAAI,EAAGA,EAAI+I,IAAS/I,EAC3B1L,GAAU1B,EAAK4nG,WAAWx6F,GAAG06F,YAAYpmG,OAE3C,OAAOA,EAET,SAASqmG,GAAc/nG,EAAMgoG,EAAQC,GACnC,IAAInsE,EAAS,EAMb,IAJEA,EADEksE,EAAOJ,WAAWlmG,OACXmmG,GAAkBG,EAAQC,GAE1BA,EAEJD,GAAUA,IAAWhoG,GAAM,CAChC,MAAMyyB,EAASu1E,EAAOE,eAAiBF,EAAOG,WAC9CrsE,GAAU+rE,GAAkBp1E,EAAQk1E,GAAcl1E,EAAQu1E,IAC1DA,EAASv1E,EAEX,OAAIu1E,IAAWhoG,EAAa,EACrB87B,EA0BT,SAASssE,GAAiBvvF,EAAMwvF,EAASvsE,GACvC,MAAM5rB,EAAS,GACf,IAAImO,EAAO,EAWX,OAVAgqF,EAAQn7F,QAAQiC,IACd,MAAM66B,EAAQt9B,KAAKG,IAAIsC,EAAEV,MAAQqtB,EAAQ,GAAIwvB,EAAM5+C,KAAKC,IAAIwC,EAAEV,MAAQU,EAAEzN,OAASo6B,EAAQjjB,EAAKnX,QAC1F4pD,GAAOthB,IACPA,EAAQ3rB,GAAMnO,EAAO9F,KAAKyO,EAAKge,UAAUxY,EAAM2rB,IACnD95B,EAAO9F,KAAK4G,IAAAgB,cAAA,QAAMT,UAAWpC,EAAEoC,UAAWyL,IAAK7N,EAAEV,OAAQoK,EAAKge,UAAUmT,EAAOshB,KAC/EjtC,EAAOitC,KAELjtC,EAAOxF,EAAKnX,QACdwO,EAAO9F,KAAKyO,EAAKge,UAAUxY,IAEP,IAAlBnO,EAAOxO,OACFwO,EAAO,GAETA,EAGM,MAAMo4F,WAAiBt3F,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KACpDuP,MAAQ,CACN6yF,WAAY,GACZC,cAAe,IAChBriG,KACDsiG,UAAY,GAAEtiG,KAsHduiG,OAAS,MACP,IAAKviG,KAAKwiG,MAAO,OACjB,MAAMF,EAAY9oG,OAAOipG,eACnBC,EAAY,GACZtI,EAAKp6F,KAAKsiG,UACVK,EAAY3iG,KAAK4iG,WAAWN,EAAUO,WAAYP,EAAUR,cAC5DgB,EAAW9iG,KAAK4iG,WAAWN,EAAUS,UAAWT,EAAUU,aAChE,GAAI5I,EAAGuI,WAAavI,EAAG0I,UAAYH,GAAaG,EAAU,CACxD,MAAMG,EAAW7I,EAAGuI,UAAUr9F,KAAO80F,EAAG0I,SAASx9F,KAAO80F,EAAGuI,UAAYvI,EAAG0I,SACpEI,EAAS9I,EAAGuI,UAAUr9F,KAAO80F,EAAG0I,SAASx9F,KAAO80F,EAAG0I,SAAW1I,EAAGuI,UACjEQ,EAAeR,EAAUr9F,KAAOw9F,EAASx9F,KAAOg9F,EAAUO,WAAaP,EAAUS,UACjFK,EAAWT,EAAUr9F,KAAOw9F,EAASx9F,KAAOq9F,EAAYG,EACxDO,EAAaV,EAAUr9F,KAAOw9F,EAASx9F,KAAOg9F,EAAUS,UAAYT,EAAUO,WAC9ES,EAASX,EAAUr9F,KAAOw9F,EAASx9F,KAAOw9F,EAAWH,EACrD32E,EAAMhsB,KAAKyL,MAAMuM,MACvB,GAAIirF,EAAQ39F,KAAO89F,EAAQ99F,MAAiC,IAAzB69F,EAAYI,SAAgB,CAC7D,MAAMvrF,EAAQ,GACd,IAAK,IAAI/Q,EAAIg8F,EAAQ39F,KAAM2B,GAAKm8F,EAAQ99F,OAAQ2B,EAAG,CACjD,IAAI3B,EAAO0mB,EAAI/kB,GACV3B,IACD2B,IAAMg8F,EAAQ39F,KAAMA,EAAOA,EAAKvJ,OAAOknG,EAAQttE,QAC1C1uB,IAAMm8F,EAAQ99F,OAAMA,EAAOA,EAAKvJ,OAAO,EAAGqnG,EAAQztE,SAC3D3d,EAAM/T,KAAKqB,IAEb,MAAMk+F,EAAUxrF,EAAM9L,KAAK,MAC3B,GAAIs3F,EAAQjoG,OAAQ,CAClB,MAAMkoG,EAAWjrG,SAASqT,cAAc,QACxC43F,EAASn4F,MAAM0uC,SAAW,WAC1BypD,EAASn4F,MAAM0iB,KAAO,WACtBy1E,EAASn4F,MAAMkiB,IAAM,WACrBi2E,EAASn4F,MAAMo4F,SAAW,IAC1BD,EAASn4F,MAAMq4F,WAAa,MAC5BF,EAASG,UAAYJ,EACrBd,EAAUz+F,KAAKw/F,GACfN,EAAYvuF,YAAY6uF,IAG5B,GAAIP,EAAM59F,KAAOg+F,EAAMh+F,MAA+B,IAAvB+9F,EAAUE,SAAgB,CACvD,MAAMvrF,EAAQ,GACd,IAAK,IAAI/Q,EAAIq8F,EAAMh+F,KAAO,EAAG2B,GAAKi8F,EAAM59F,OAAQ2B,EAAG,CACjD,IAAI3B,EAAO0mB,EAAI/kB,GACV3B,IACD2B,IAAMq8F,EAAMh+F,KAAMA,EAAOA,EAAKvJ,OAAOunG,EAAM3tE,QACtC1uB,IAAMi8F,EAAM59F,OAAMA,EAAOA,EAAKvJ,OAAO,EAAGmnG,EAAMvtE,SACvD3d,EAAM/T,KAAKqB,IAEb,MAAMu+F,EAAS7rF,EAAM9L,KAAK,MAC1B,GAAI23F,EAAOtoG,OAAQ,CACjB,MAAMkoG,EAAWjrG,SAASqT,cAAc,QACxC43F,EAASn4F,MAAM0uC,SAAW,WAC1BypD,EAASn4F,MAAM0iB,KAAO,WACtBy1E,EAASn4F,MAAMkiB,IAAM,WACrBi2E,EAASn4F,MAAMo4F,SAAW,IAC1BD,EAASn4F,MAAMq4F,WAAa,MAC5BF,EAASG,UAAYC,EACrBnB,EAAUz+F,KAAKw/F,GACfJ,EAAUtB,cAAc+B,aAAaL,EAAUJ,KAIjDX,EAAUnnG,QACZ/B,OAAOgR,WAAW,KAChBk4F,EAAU37F,QAAQlN,GAAQA,EAAKmoG,WAAWltF,YAAYjb,KACrD,OAENmG,KAED+jG,SAAW,MACT,GAAI/jG,KAAKgkG,iBAAmBhkG,KAAKsiG,YAActiG,KAAKwiG,MAAO,OAC3D,MAAMF,EAAY9oG,OAAOipG,eACnBrI,EAAKp6F,KAAKsiG,UAEV2B,EAAUpqG,IACd,IAAIyL,EAAOzL,EACX,KAAOyL,GAAQA,IAAStF,KAAKwiG,OAASl9F,IAAStF,KAAKkkG,YAChD5+F,IAAStF,KAAKmkG,aAAe7+F,EAAK8+F,YAAc9+F,EAAK8+F,UAAUC,SAAS,cAC1E/+F,EAAOA,EAAKy8F,eAAiBz8F,EAAK08F,WAEpC,OAAI18F,IAAStF,KAAKkkG,YAAc5+F,IAAStF,KAAKmkG,aACtC7+F,EAAK8+F,YAAc9+F,EAAK8+F,UAAUC,SAAS,cAGrD,GAAK/B,EAAUO,YAAe7iG,KAAKwiG,MAAM6B,SAAS/B,EAAUO,aAErD,IAAKoB,EAAQ3B,EAAUO,YAAa,CACzC,MAAMyB,EAAMtkG,KAAKukG,UAAUnK,EAAGuI,WACxB6B,EAAQxkG,KAAKykG,UAAUH,GACvBI,EAAQ1kG,KAAK4iG,WAAWN,EAAUO,WAAYP,EAAUR,cAC1D0C,GAASE,GAASF,EAAMl/F,OAASo/F,EAAMp/F,MAAQk/F,EAAM7uE,SAAW+uE,EAAM/uE,OACxE2sE,EAAUqC,iBAAiBL,EAAIzqG,KAAMyqG,EAAI3uE,OAAQ2sE,EAAUS,UAAWT,EAAUU,cAEhF5I,EAAGuI,UAAY+B,EACftK,EAAGwK,UAAYF,SATjBtK,EAAGuI,UAAY,KAajB,GAAKL,EAAUS,WAAc/iG,KAAKwiG,MAAM6B,SAAS/B,EAAUS,YAEpD,IAAKkB,EAAQ3B,EAAUS,WAAY,CACxC,MAAMyB,EAAQxkG,KAAKykG,UAAUzkG,KAAKukG,UAAUnK,EAAG0I,WACzC4B,EAAQ1kG,KAAK4iG,WAAWN,EAAUS,UAAWT,EAAUU,aACzDwB,GAASE,GAASF,EAAMl/F,OAASo/F,EAAMp/F,MAAQk/F,EAAM7uE,SAAW+uE,EAAM/uE,SAGxEykE,EAAG0I,SAAW4B,SAPhBtK,EAAG0I,SAAW,OAUjB9iG,KAeD6T,SAAW9H,KAAiB,IAAhB+H,UAACA,GAAU/H,EACrB,MAAMquF,EAAKp6F,KAAKsiG,UACXlI,GAAOA,EAAGuI,WAAcvI,EAAG0I,WAChC9iG,KAAKgkG,gBAAiB,EACtBhkG,KAAK6kG,YAAYzK,EAAGuI,UAAWvI,EAAG0I,UAC9B9iG,KAAK8kG,YAAY9wF,aAAahU,KAAK8kG,YACvC9kG,KAAK8kG,WAAat6F,WAAW,KAC3BxK,KAAKgkG,gBAAiB,SACfhkG,KAAK8kG,YACX,QACJ9kG,KAED+kG,kBAAqBt5F,KACnB,MAAMT,EAAWg6F,aAAyBv5F,GAG1C,OAFAT,EAASxM,QAAQqM,IAAAgB,cAAA,OAAKgL,IAAI,aAAazL,UAAU,YAAY+E,IAAKtW,GAAQmG,KAAKkkG,WAAarqG,GAAMgR,IAAAgB,cAAA,eAClGb,EAAS/G,KAAK4G,IAAAgB,cAAA,OAAKgL,IAAI,YAAYzL,UAAU,YAAY+E,IAAKtW,GAAQmG,KAAKmkG,UAAYtqG,GAAMgR,IAAAgB,cAAA,eACtFb,IACRhL,KAEDivB,YAAcnS,KAAyB,IAAxBxU,MAACA,EAAKuO,IAAEA,EAAGvL,MAAEA,GAAMwR,EAChC,MAAMmoF,cAAEA,EAAaC,cAAEA,GAAkBllG,KAAKyL,MAC9C,GAAIzL,KAAKyL,MAAM05F,QAAS,CACtB,GAAc,IAAV78F,GAAeA,EAAQtI,KAAKyL,MAAMuM,MAAMzc,OAC1C,OAAO,KAEP+M,GAAS,EAGb,MAAMgmB,EAAStuB,KAAKuP,MAAM61F,YAC1B,IAAI9/F,EAAOtF,KAAKyL,MAAMuM,MAAM1P,GAC5B,MAAM45F,EAAU5zE,GAlTpB,SAAqB5b,EAAM8d,EAAOvR,EAASomF,GACzC,IAAIr5F,EACJ,MAAMk2F,EAAU,GAChB,KAAQl2F,EAAQwkB,EAAMC,KAAK/d,IACzBwvF,EAAQj+F,KAAK,CACXqE,MAAO0D,EAAM1D,MACb/M,OAAQyQ,EAAM,GAAGzQ,OACjB6P,UAAY6T,GAAWA,EAAQ3Z,OAAS+/F,GAAapmF,EAAQ0W,SAAW3pB,EAAM1D,MAAQ,gBAAkB,UAG5G,OAAO45F,EAwSqBoD,CAAYhgG,EAAMgpB,EAAQtuB,KAAKuP,MAAMg2F,YAAaj9F,GAkB5E,OAjBI28F,GAAiBC,EACnB5/F,ECvVN,SAAsBoN,EAAM8d,EAAOvrB,EAAMugG,GACvC,MAAMz7F,EAAS,GACf,IAAciC,EAAVkM,EAAO,EACNstF,IACHA,EAAQA,EAAC3hE,EAAOshB,IAAQzyC,EAAKge,UAAUmT,EAAOshB,KAEhD,MAAM0+C,EAASrjG,IACF,MAAPA,IAEsB,kBAARA,GAAoBuJ,EAAOxO,QAA+C,kBAA9BwO,EAAOA,EAAOxO,OAAS,GACnFwO,EAAOA,EAAOxO,OAAS,IAAMiF,EAE7BuJ,EAAO9F,KAAKzD,KAGhB,KAAQwL,EAAQwkB,EAAMC,KAAK/d,IAAQ,CAC7B1G,EAAM1D,MAAQ4P,GAChB2rF,EAAO2B,EAAMttF,EAAMlM,EAAM1D,QAE3B,MAAMm9F,EAAUxgG,EAAK+G,GACjBnB,IAAM66F,eAAeD,GACvB5B,EAAOh5F,IAAMoB,aAAaw5F,EAAS,CAAC5uF,IAAK7K,EAAM1D,SAE/Cu7F,EAAO4B,GAETvtF,EAAOlM,EAAM1D,MAAQ0D,EAAM,GAAGzQ,OAKhC,OAHI2c,EAAOxF,EAAKnX,QACdsoG,EAAO2B,EAAMttF,EAAMxF,EAAKnX,SAEnBwO,EDyTI47F,CAAargG,EAAM2/F,EAAej5F,IACvC,IAAI1K,EAAM0K,EAAM,GAIhB,OAHIk2F,IACF5gG,EAAM2gG,GAAiBj2F,EAAM,GAAIk2F,EAASl2F,EAAM1D,QAE3C48F,EAAc5jG,EAAK0K,IACzB,CAAC63B,EAAOshB,KACT,IAAI7jD,EAAMgE,EAAKorB,UAAUmT,EAAOshB,GAIhC,OAHI+8C,IACF5gG,EAAM2gG,GAAiB3gG,EAAK4gG,EAASr+D,IAEhCviC,IAEA4gG,IACT58F,EAAO28F,GAAiB38F,EAAM48F,EAAS,IAGvCr3F,IAAAgB,cAAA,OAAKT,UAAU,WAAWyL,IAAKA,EAAKvL,MAAOA,GACzCT,IAAAgB,cAAA,QAAMT,UAAU,OAAOw6F,mBAAkBt9F,EAAQ,IAChDhD,EAAM,KACPuF,IAAAgB,cAAA,QAAMT,UAAU,WAGrBpL,KAED6lG,WAAa32E,KAAa,IAAZ5mB,MAACA,GAAM4mB,EACnB,GAAIlvB,KAAKyL,MAAM05F,QAAS,CACtB,GAAc,IAAV78F,GAAeA,EAAQtI,KAAKyL,MAAMuM,MAAMzc,OAC1C,OAAOyE,KAAKyL,MAAM05F,QAElB78F,GAAS,EAGb,OAAOtI,KAAKyL,MAAMq6F,QAAQx9F,KAC3BtI,KAUD+lG,UAAYjyF,KACN9T,KAAKyuB,MACPzuB,KAAKyuB,MAAMu3E,iBAAiBlyF,GAE5B9T,KAAKimG,WAAanyF,IAErB9T,KACDkmG,QAAUpnG,KACRkB,KAAKyuB,MAAQ3vB,EACbkB,KAAKwiG,MAAQlH,IAAS6K,YAAYrnG,GACX,MAAnBkB,KAAKimG,aACPjmG,KAAKyuB,MAAMu3E,iBAAiBhmG,KAAKimG,mBAC1BjmG,KAAKimG,cAtUhBz2F,oBACEhX,SAASiX,iBAAiB,OAAQzP,KAAKuiG,QACvC/pG,SAASiX,iBAAiB,kBAAmBzP,KAAK+jG,UAEpDr0F,uBACElX,SAASmX,oBAAoB,OAAQ3P,KAAKuiG,QAC1C/pG,SAASmX,oBAAoB,kBAAmB3P,KAAK+jG,UAGvDz1E,OAAO5b,EAAM0zF,GACX,MAAMb,EAAcvlG,KAAKuP,MAAMg2F,YAC/B,IAAIc,EAAa,GAAIC,EAAU,KAAMv2F,EAAQ,KAAMhG,EAAS,KAC5D,GAAI2I,EAAKvG,OAAQ,CACf,GAAIuG,IAAS1S,KAAKuP,MAAM6yF,WACtBiE,EAAarmG,KAAKuP,MAAM8yF,kBACnB,CACL,MAAMkE,EAAY7zF,EAAKuH,cACvBja,KAAKyL,MAAMuM,MAAMjR,QAAQ,CAACzB,EAAMgD,KAC9B,IAAgBk+F,EAAZ7wE,EAAS,EACb,MAAM8wE,EAAYnhG,EAAK2U,cACvB,MAA0D,KAAlDusF,EAAOC,EAAU9nF,QAAQ4nF,EAAW5wE,KAC1C0wE,EAAWpiG,KAAK,CAACqB,KAAMgD,EAAOqtB,OAAQ6wE,IACtC7wE,EAAS6wE,EAAOD,EAAUhrG,SAIhC,IAAImrG,GAAY,EAChB,IAAmB,IAAfN,EAAkB,CACpB,MAAMO,EAAwB,IAAdP,GAAmBb,EACjC,CAACjgG,KAAMigG,EAAYjgG,KAAMqwB,OAAQ4vE,EAAY5vE,OAAS,GACtD31B,KAAKsiG,UAAUsC,WAAa,CAACt/F,KAAM,EAAGqwB,OAAQ,IAEhD+wE,EAAWL,EAAW5f,UAAUz9E,GAAKA,EAAE1D,KAAOqhG,EAAOrhG,MAAS0D,EAAE1D,OAASqhG,EAAOrhG,MAAQ0D,EAAE2sB,QAAUgxE,EAAOhxE,SAC5F,GAAK0wE,EAAW9qG,SAAQmrG,EAAW,OAC7C,CACL,MAAMC,EAAUpB,EAAc,CAACjgG,KAAMigG,EAAYjgG,KAAMqwB,OAAQ4vE,EAAY5vE,OAAS,GAClF31B,KAAKsiG,UAAUsC,WAAa,CAACt/F,KAAM,EAAGqwB,OAAQ,GAEhD0wE,EAAWt/F,QAAQ,CAACiC,EAAGV,KACjBU,EAAE1D,KAAOqhG,EAAOrhG,MAAS0D,EAAE1D,OAASqhG,EAAOrhG,MAAQ0D,EAAE2sB,OAASgxE,EAAOhxE,SACzE+wE,EAAWp+F,KAETo+F,EAAW,GAAKL,EAAW9qG,SAAQmrG,EAAWL,EAAW9qG,OAAS,GAExE+qG,EAAUD,EAAWK,GACrB32F,EAAQu2F,GAAWA,EAAQhhG,KAC3ByE,EAAS,CAACqG,IAAKs2F,EAAU12F,MAAOq2F,EAAW9qG,QApIjD,IAAmB+F,EAiJf,OAXItB,KAAKyuB,OACPzuB,KAAKyuB,MAAMC,kBAEb1uB,KAAK8O,SAAS,CACZszF,WAAY1vF,EACZ6yF,YAAae,EACblB,YAAa1yF,GAAQA,EAAKvG,QA5Ib7K,EA4IgCoR,EA3IjDpR,EAAMA,EAAI9F,QAAQ,wBAAyB,QACpC,IAAIqzB,OAAO,IAAMvtB,EAAM,IAAK,OA0IsB,KACrD+gG,cAAegE,GACd,KACGt2F,GAAS/P,KAAKyuB,OAAOzuB,KAAKyuB,MAAMgB,YAAY1f,KAE3ChG,EAGT64F,WAAW/oG,EAAM87B,GACf,OAAO31B,KAAKykG,UAAU,CAAC5qG,OAAM87B,WAE/B8uE,UAAUppG,GACR,IAAKA,IAAS2E,KAAKwiG,MAAO,OAC1B,MAAM3oG,KAACA,EAAI87B,OAAEA,GAAUt6B,EACvB,IAAK2E,KAAKwiG,MAAM6B,SAASxqG,GAAO,OAChC,GAAIA,IAASmG,KAAKkkG,WAAY,CAC5B,MAAMlsF,EAAQhY,KAAKwiG,MAAMoE,iBAAiB,SAC1C,IAAK5uF,EAAMzc,OAAQ,OAEnB,MAAO,CAAC+J,KADUwN,SAASkF,EAAM,GAAG6uF,aAAa,oBAAqB,IAAM,EACnDlxE,OAAQ,GAEnC,GAAI97B,IAASmG,KAAKmkG,UAAW,CAC3B,MAAMnsF,EAAQhY,KAAKwiG,MAAMoE,iBAAiB,SAC1C,IAAK5uF,EAAMzc,OAAQ,OAEnB,MAAO,CAAC+J,KADSwN,SAASkF,EAAMA,EAAMzc,OAAS,GAAGsrG,aAAa,oBAAqB,IAAM,EAClElxE,OAAQ3d,EAAMA,EAAMzc,OAAS,GAAGwmG,cAAcJ,YAAYpmG,OAAS,GAE7F,IAAI+J,EAAOzL,EACX,KAAOyL,GAAQA,IAAStF,KAAKwiG,SAAWl9F,EAAK8+F,YAAc9+F,EAAK8+F,UAAUC,SAAS,cACjF/+F,EAAOA,EAAKy8F,eAAiBz8F,EAAK08F,WAEpC,IAAK18F,IAASA,EAAK8+F,YAAc9+F,EAAK8+F,UAAUC,SAAS,YAAa,OACtE,MAAMyC,EAAWxhG,EAAKyhG,cAAc,SACpC,OAAKD,EAEE,CAACxhG,KADUwN,SAASg0F,EAASD,aAAa,oBAAqB,IAC5C,EAAGlxE,OAAQisE,GAAct8F,EAAMzL,EAAM87B,SAF/D,EAIFqxE,WAAW1hG,EAAMqwB,GACf,OAAO31B,KAAKukG,UAAU,CAACj/F,OAAMqwB,WAE/B4uE,UAAUlpG,GACR,IAAKA,IAAS2E,KAAKwiG,MAAO,OAC1B,MAAMl9F,KAACA,EAAIqwB,OAAEA,GAAUt6B,EACvB,IAAIyrG,EAAW9mG,KAAKwiG,MAAMuE,cAAa,2BAAAj1F,OAA4BxM,EAAO,EAAC,OAC3E,IAAKwhG,EAAU,CACb,MAAM9uF,EAAQhY,KAAKwiG,MAAMoE,iBAAiB,SAC1C,IAAK5uF,EAAMzc,OAAQ,OAEnB,OAAI+J,EADcwN,SAASkF,EAAM,GAAG6uF,aAAa,oBAAqB,IAAM,GACpD7mG,KAAKkkG,WACpB,CAACrqG,KAAMmG,KAAKkkG,WAAYvuE,OAAQ,GAGrCrwB,EADawN,SAASkF,EAAMA,EAAMzc,OAAS,GAAGsrG,aAAa,oBAAqB,IAAM,GACnE7mG,KAAKmkG,UACnB,CAACtqG,KAAMmG,KAAKmkG,UAAWxuE,OAAQ,QAExC,EAIF,OAnKJ,SAASsxE,EAAeptG,EAAM87B,GAC5B,IAAK97B,EAAK4nG,WAAWlmG,OAAQ,MAAO,CAAC1B,OAAM87B,OAAQpvB,KAAKC,IAAI3M,EAAK8nG,YAAYpmG,OAAQo6B,IACrF,IAAK,IAAI1uB,EAAI,EAAGA,EAAIpN,EAAK4nG,WAAWlmG,SAAU0L,EAAG,CAC/C,MAAM1L,EAAS1B,EAAK4nG,WAAWx6F,GAAG06F,YAAYpmG,OAC9C,GAAIo6B,EAASp6B,GAAU0L,IAAMpN,EAAK4nG,WAAWlmG,OAAS,EACpD,OAAO0rG,EAAeptG,EAAK4nG,WAAWx6F,GAAI0uB,GAE5CA,GAAUp6B,EAEZ,MAAO,CAAC1B,OAAM87B,OAAQ,GA0JbsxE,CADPH,EAAWA,EAAS/E,cACYpsE,GA+GlCkvE,YAAYqC,EAASC,GACnB,MAAM7E,EAAY9oG,OAAOipG,eACnBnC,EAAOtgG,KAAKukG,UAAU2C,GACtB5mF,EAAKtgB,KAAKukG,UAAU4C,GAC1B7E,EAAUqC,iBACRrE,EAAOA,EAAKzmG,KAAOyoG,EAAUO,WAC7BvC,EAAOA,EAAK3qE,OAAS2sE,EAAUR,aAC/BxhF,EAAKA,EAAGzmB,KAAOyoG,EAAUS,UACzBziF,EAAKA,EAAGqV,OAAS2sE,EAAUU,aAE7BhjG,KAAKsiG,UAAUK,UAAYuE,EAC3BlnG,KAAKsiG,UAAUsC,UAAYsC,EAC3BlnG,KAAKsiG,UAAUQ,SAAWqE,EAsE5Bv3F,qBACM5P,KAAKonG,SAAWpnG,KAAKyL,MAAMuM,QAC7BhY,KAAKyuB,MAAM44E,sBACXrnG,KAAKonG,OAASpnG,KAAKyL,MAAMuM,MACzBhY,KAAKsiG,UAAY,IAoBrBv3F,SACE,MAAMK,UACJA,EAASyI,SACTA,EAAQiyF,QACRA,EAAO9tF,MACPA,EAAKitF,cACLA,EAAaC,cACbA,EAAaC,QACbA,KACG15F,GACDzL,KAAKyL,MACT,IAAIuE,EAAQgI,EAAMzc,QAAU4pG,EAAU,EAAI,GAK1C,OAJInlG,KAAKsnG,WAAaxB,IACpB9lG,KAAKsnG,SAAWxB,EAChB9lG,KAAKunG,WAAazB,EAAQ34F,OAAO,CAACq6F,EAAKn+F,IAAMm+F,EAAMn+F,EAAoB,GAAhB87F,GAAW,IAAUn1F,GAEvEnF,IAAAgB,cAACokB,KAAIl2B,OAAAC,OAAA,CACVoR,UAAW6E,IAAW7E,EAAW,YACjC+E,IAAKnQ,KAAKkmG,QACVh2E,SAAUlgB,EACVy3F,iBAAkBznG,KAAKunG,WACvB1zF,SAAUjH,EAAsB5M,KAAK6T,SAAUA,GAC/CkxF,kBAAmB/kG,KAAK+kG,kBACxB50E,UAAWnwB,KAAK6lG,WAChB52E,YAAajvB,KAAKivB,aACdxjB,KE5bK,MAAMi8F,WAAqB78F,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAC5DgP,SAAW,EAAC0D,EAAMkxE,IACZ5jF,KAAKyuB,MACAzuB,KAAKyuB,MAAMH,OAAO5b,EAAMkxE,GAExB,MAIX74E,SACE,MAAMiN,MAAEA,EAAK8tF,QAAEA,GAAY9lG,KAAKyL,MAChC,OACEZ,IAAAgB,cAAChB,IAAM+V,SAAQ,KACb/V,IAAAgB,cAAC8B,EAAS,CAACqB,SAAUhP,KAAKgP,WAC1BnE,IAAAgB,cAACikB,KAAS,KACP/jB,IAAA,IAACikB,MAACA,EAAKzD,OAAEA,GAAOxgB,EAAA,OACflB,IAAAgB,cAACs2F,GAAQ,CAAChyF,IAAKrR,GAAKkB,KAAKyuB,MAAQ3vB,EACvBkxB,MAAOA,EACPzD,OAAQA,EACRvU,MAAOA,EACP8tF,QAASA,EACTX,QAAS,QCxB/B,MAAMwC,GAAYtsG,IAChB,MAAMo6B,EAAO,IAAIyM,SAAS7mC,EAAKN,OAAQM,EAAK04B,WAAY14B,EAAK4H,YAC7D,GAAiC,aAA7BwyB,EAAKmyE,UAAU,GAAG,GACpB,MAAO,CACLC,OAAQ,MACR73E,MAAOyF,EAAKmyE,UAAU,IAAI,GAC1Br7E,OAAQkJ,EAAKmyE,UAAU,IAAI,IAExB,GAAiC,aAA7BnyE,EAAKmyE,UAAU,GAAG,GAC3B,MAAO,CACLC,OAAQ,SACR73E,MAAOyF,EAAKmyE,UAAU,IAAI,GAC1Br7E,OAAQkJ,EAAKmyE,UAAU,IAAI,IAExB,GAAiC,aAA7BnyE,EAAKmyE,UAAU,GAAG,GAC3B,MAAO,CACLC,OAAQ,MACR73E,MAAOyF,EAAKmyE,UAAU,IAAI,GAC1Br7E,OAAQkJ,EAAKmyE,UAAU,IAAI,IAExB,GAAiC,aAA7BnyE,EAAKmyE,UAAU,GAAG,IAAsC,KAAZvsG,EAAK,IAA2B,KAAZA,EAAK,IAA4B,KAAZA,EAAK,GAQ9F,OAAiC,aAA7Bo6B,EAAKmyE,UAAU,GAAG,IAAsD,YAA7BnyE,EAAKmyE,UAAU,GAAG,GAC/D,CACLC,OAAQ,MACR73E,MAAOyF,EAAKmyE,UAAU,IAAI,GAC1Br7E,OAAQkJ,EAAKmyE,UAAU,IAAI,IAER,MAAZvsG,EAAK,IAA2B,MAAZA,EAAK,IAA2B,MAAZA,EAAK,IAAyC,MAA1BA,EAAKA,EAAKE,OAAS,IAAyC,MAA1BF,EAAKA,EAAKE,OAAS,GACnH,CACLssG,OAAQ,MACR73E,MAAO,IACPzD,OAAQ,KAGH,CACLs7E,OAAQ,MACR73E,MAAOyF,EAAKqyE,SAAS,IAAI,GACzBv7E,OAAQkJ,EAAKqyE,SAAS,IAAI,IAxBoF,CAChH,MACMC,EAAS,GAAK,GADR,EAAQ1sG,EAAK,KAEzB,MAAO,CACLwsG,OAAQ,MACR73E,MAAOyF,EAAKqyE,SAASC,EAAS,GAAG,GACjCx7E,OAAQkJ,EAAKqyE,SAASC,EAAS,GAAG,MAuBzB,MAAMC,WAAsBn9F,IAAM4T,cAC/C1T,SACE,MAAM1P,KAAEA,EAAIqf,MAAEA,EAAKza,KAAEA,GAASD,KAAKyL,MAC7BhC,EAAOpO,GAAQssG,GAAUtsG,GAC/B,OACEwP,IAAAgB,cAAA,WACW,MAARpC,GAAgBoB,IAAAgB,cAAA,WAAMpC,EAAKumB,MAAM,IAAEvmB,EAAK8iB,OAAO,KAAG9iB,EAAKo+F,OAAO,KAC/Dh9F,IAAAgB,cAAA,WACEhB,IAAAgB,cAAA,OAAKnT,IAAKgiB,EAAO2W,IAAKpxB,GAAQ,iBCzDzB,MAAMgoG,WAAsBp9F,IAAM4T,cAC/C1T,SACE,MAAMm9F,MAAEA,GAAUloG,KAAKyL,MACvB,OACEZ,IAAAgB,cAAA,WACEhB,IAAAgB,cAAA,SAAOs8F,UAAQ,EAACC,aAAa,aAAa1vG,IAAKwvG,MCPxC,SAASG,GAAcxvF,GACpC,MAAM5b,EAAM,CAEZA,QAAiB,OACjBA,WAAoB,OACpBA,MAAe,OACfA,KAAc,OACdA,SAAkB,OAClBA,OAAgB,OAChBA,SAAkB,OAClBA,MAAe,OACfA,QAAiB,OACjBA,YAAqB,OACrBA,OAAgB,OAChBA,IAAa,OACbA,KAAc,OACdA,GAAY,OACZA,KAAc,OACdA,MAAe,OACfA,KAAc,OACdA,OAAgB,OAChBA,KAAc,OACdA,QAAiB,OACjBA,SAAkB,OAClBA,GAAY,OACZA,IAAa,OACbA,IAAa,OAEbA,MAAe,OACfA,QAAiB,OACjBA,KAAc,OACdA,OAAgB,OAChBA,QAAiB,OACjBA,KAAc,OACdA,OAAgB,OAChBA,QAAiB,OAEjBA,KAAc,QAERqrG,GAAUzvF,EAAKnC,SAAS,sBAAwB,IAAIoT,MAAM,UAC1Dy+E,EAAW,mDACjBD,EAAOvhG,QAAQzB,IACb,MAAM0D,EAAI1D,EAAK0G,MAAMu8F,GACjBv/F,IACW,WAATA,EAAE,GACJ/L,EAAI+L,EAAE,IAAM,OACM,SAATA,EAAE,GACX/L,EAAI+L,EAAE,IAAM,OAEZ/L,EAAI+L,EAAE,IAAM,UAKlB,MAAMw/F,GAAY3vF,EAAKnC,SAAS,wBAA0B,IAAIoT,MAAM,UACpE,IAAI2+E,GAAS,EAAOC,GAAS,EAoB7B,OAnBAF,EAASzhG,QAAQzB,IACf,IAAI0D,EACAy/F,EACEnjG,EAAK0G,MAAM,uBACby8F,GAAS,IAEDz/F,EAAI1D,EAAK0G,MAAM,+BACzB08F,EAAmB,YAAT1/F,EAAE,GACH0/F,GACJ1/F,EAAI1D,EAAK0G,MAAM,qDAClB/O,EAAI+L,EAAE,IAAM,SAGTA,EAAI1D,EAAK0G,MAAM,6CAClB/O,EAAI+L,EAAE,IAAM,UAKX/L,ECnET,MAAM0rG,GAAU,6GACVC,GAAY,GAsDlB,MAAMC,GAAen4F,EAAU,CAC7BmI,KAAMA,CAACpN,EAAOoC,IAAYA,EAAQgL,QArDpC,cAA4BhO,IAAM4T,cAGhC7Q,YAAYnC,GACVqC,MAAMrC,GAAOzL,KAHfgP,SAAW,EAAC0D,EAAMkxE,IAAQ5jF,KAAKyuB,MAAQzuB,KAAKyuB,MAAMH,OAAO5b,EAAMkxE,GAAO,MAAI5jF,KAO1E8oG,UAAY,EAACp2F,EAAI3G,KAAoC,IAAjCoQ,EAAKvS,EAAI/D,EAAKkjG,EAAKznG,EAAK0nG,GAAIj9F,EAC9C,GAAInC,EAAI,CACN,MAAMq/F,EAAKjpG,KAAKkpG,SAASt/F,GACzB,OAAIq/F,EACKp+F,IAAAgB,cAAA,QAAMT,UAAW69F,GAAKv2F,GAEtBA,EAEJ,OAAI7M,EACFgF,IAAAgB,cAAA,QAAMT,UAAU,QAAQsH,GACtBq2F,EACFl+F,IAAAgB,cAAA,QAAMT,UAAU,QAAQsH,GACtBpR,EACFuJ,IAAAgB,cAAA,QAAMT,UAAU,QAAQsH,GACtBs2F,EACFn+F,IAAAgB,cAAA,QAAMT,UAAU,QAAQsH,GAExBA,IApBT1S,KAAKkpG,SAAWb,GAAc58F,EAAMoN,MAwBtC9N,SACE,MAAMiN,MAACA,GAAShY,KAAKyL,MACfq6F,EAAU9tF,EAAMc,IAAIxT,GAAQA,EAAKwkB,MAAM,MAAMvuB,OAASqtG,IAC5D,OACE/9F,IAAAgB,cAAChB,IAAM+V,SAAQ,KACb/V,IAAAgB,cAAC8B,EAAS,CAACqB,SAAUhP,KAAKgP,WAC1BnE,IAAAgB,cAACikB,KAAS,KACPhT,IAAA,IAACkT,MAACA,EAAKzD,OAAEA,GAAOzP,EAAA,OACfjS,IAAAgB,cAACs2F,GAAQ,CAAChyF,IAAKrR,GAAKkB,KAAKyuB,MAAQ3vB,EACzBsM,UAAU,aACV4kB,MAAOA,EACPzD,OAAQA,EACRvU,MAAOA,EACP8tF,QAASA,EACTb,cAAe0D,GACfzD,cAAellG,KAAK8oG,sBAUtBnwG,OAAWA,GAC7BkwG,GAAa7pF,YAAcxD,GAAS2C,QAErB0qF,iBChDf,MAAMM,GAAgB,CACpBC,cAAeC,GAAQ3+D,IAAIC,KAC3B2+D,cAAeD,GAAQz+D,IAAID,KAC3B4+D,cAAeF,GAAQx+D,IAAIF,KAC3B6+D,cAAeH,GAAQt+D,IAAIJ,KAC3B8+D,mBAAoBJ,GAAQx7D,SAASlD,KACrC++D,cAAeL,GAAQp+D,IAAIN,KAC3Bg/D,cAAeN,GAAQj+D,IAAIT,KAC3Bi/D,cAAeP,GAAQh+D,IAAIV,KAC3Bk/D,cAAeR,GAAQv7D,IAAInD,KAC3Bm/D,cAAeT,GAAQ/9D,IAAIX,KAC3Bo/D,cAAeV,GAAQ99D,IAAIZ,KAC3Bq/D,cAAeX,GAAQz9D,IAAIjB,KAC3Bs/D,cAAeZ,GAAQr9D,IAAIrB,KAC3Bu/D,cAAeb,GAAQl9D,IAAIxB,KAC3Bw/D,cAAed,GAAQj9D,IAAIzB,KAC3By/D,cAAef,GAAQh9D,IAAI1B,KAC3B0/D,cAAehB,GAAQ98D,IAAI5B,KAC3B2/D,cAAejB,GAAQz7D,IAAIjD,MAsBtB,MAAM4/D,WAAiB1/F,IAAMC,UAClC8C,YAAYnC,GACVqC,MAAMrC,GAAOzL,KAkHfyqB,WAAa,MAEXpW,EADa,IAAI0C,KAAK,CAAC/W,KAAKvF,QAAS,CAAEyH,KAAM,6BAC1BlC,KAAK+nB,aAnHxB,MAAMne,GAAEA,EAAEvO,KAAEA,GAAS2E,KAAKyL,MACpB8D,EAAQ,CAAEi7F,MAAO,OACjBjrG,EAAOlE,GAAQA,EAAK0f,SAAW1f,EAAK0f,QAAQzE,WAAW1M,GAC7D,GAAIrK,EAAM,CAGR,GAFAS,KAAKvF,OAAS8E,EAAKlE,KACnB2E,KAAKyW,MAAQlX,EAAKkX,MACD,EAAbzW,KAAKyW,MAAW,CAClB,MAAM/D,GAAO,IAAIiE,IAAS9V,aAAcO,OAAOpB,KAAKvF,QAC9Cud,EAAQtF,EAAKoX,MAAM,YACzB,GAAI9pB,KAAKyqG,SACPzqG,KAAK2a,KAAO3C,EACZzI,EAAMi7F,MAAQ,WACT,CACLxqG,KAAK0S,KAAO,GACZ,MAAMg4F,EAAY,KAClB1yF,EAAMjR,QAAQzB,IACZ,GAAIA,EAAK/J,OAASmvG,EAChB,IAAK,IAAIzjG,EAAI,EAAGA,EAAI3B,EAAK/J,OAAQ0L,GAAKyjG,EACpC1qG,KAAK0S,KAAKzO,KAAKqB,EAAKvJ,OAAOkL,EAAGyjG,SAGhC1qG,KAAK0S,KAAKzO,KAAKqB,KAGnBtF,KAAK2qG,YAAc3qG,KAAK0S,KAAKoG,IAAI,IAAM,IACvCvJ,EAAMi7F,MAAQ,OAEd,IACExqG,KAAKuyB,IAAM,IAAIR,GAAQrf,GACvBnD,EAAMi7F,MAAQ,MACd,MAAO1rG,MAIb,GAAiB,EAAbkB,KAAKyW,MAAW,CAClB,MAAMnC,EAAO,IAAIyC,KAAK,CAAC/W,KAAKvF,QAAS,CAAEyH,KAAoB,EAAblC,KAAKyW,MAAa,aAAe,cAC/EzW,KAAKkoG,MAAQvtG,IAAI4Z,gBAAgBD,GACjC/E,EAAMi7F,MAAQ,QAEC,EAAbxqG,KAAKyW,QACPlH,EAAMi7F,MAAQ,SAEhBxqG,KAAK0a,MAAQrf,EAAK0f,QAAQnE,UAAUhN,GAChC5J,KAAK0a,QACPnL,EAAMi7F,MAAQ,SAEhB,MAAMvqG,EAAOD,KAAK+nB,UAClB,GAAIohF,GAAclpG,GAChB,IACED,KAAK3E,KAAO,IAAI8tG,GAAclpG,GAAMD,KAAKvF,OAAOM,QAChDwU,EAAMi7F,MAAQ,OACd,MAAO1rG,GACP5B,QAAQG,MAAM4C,EAAK,mCAAmCnB,IAI5DkB,KAAKuP,MAAQA,EAGfq7F,UAAU3qG,EAAMsQ,GACd,OAAO1F,IAAAgB,cAAA,MAAIgL,IAAK5W,EAAMmL,UAAW6E,IAAW,aAAc,CAAEuD,OAAUxT,KAAKuP,MAAMi7F,QAAUvqG,IACzFqQ,QAASA,IAAMtQ,KAAK8O,SAAS,CAAE07F,MAAOvqG,KAAUsQ,GAIpDs6F,aACE,MAAML,MAAEA,GAAUxqG,KAAKuP,MACvB,OAAQi7F,GACN,IAAK,MAAO,OAAO3/F,IAAAgB,cAACo1F,GAAW,CAAC5lG,KAAM2E,KAAKvF,SAC3C,IAAK,MAAO,OAAOoQ,IAAAgB,cAACq0F,GAAW,CAAC7kG,KAAM2E,KAAKuyB,MAC3C,IAAK,OAAQ,OAAO1nB,IAAAgB,cAAC67F,GAAY,CAAC1vF,MAAOhY,KAAK0S,KAAMozF,QAAS9lG,KAAK2qG,cAClE,IAAK,OAAQ,OAAO9/F,IAAAgB,cAACg9F,GAAY,CAAC7wF,MAAOhY,KAAK2a,OAC9C,IAAK,QAAS,OAAO9P,IAAAgB,cAACo8F,GAAa,CAACC,MAAOloG,KAAKkoG,QAChD,IAAK,QAAS,OAAOr9F,IAAAgB,cAACutF,GAAa,CAACxvF,GAAI5J,KAAKyL,MAAM7B,KACnD,IAAK,QAAS,OAAOiB,IAAAgB,cAACm8F,GAAa,CAAC3sG,KAAM2E,KAAKvF,OAAQigB,MAAO1a,KAAK0a,QACnE,IAAK,OAEH,OADAxd,QAAQC,IAAI6C,KAAK3E,MACVwP,IAAAgB,cAACi/F,KAAe,CAACC,YAAa,EAAG1vG,KAAM2E,KAAK3E,OAErD,QAAS,OAAO,MAIpB0sB,UACE,IAAI1sB,KAAEA,EAAIuO,GAAEA,GAAO5J,KAAKyL,MACxB,GAAIzL,KAAKC,KACP,OAAOD,KAAKC,KAEd,MAAMw+F,EAAWpjG,EAAKkE,KAAK,gBAC3B,GAAIk/F,EAAU,CACZ,MACMx+F,EADQw+F,EAAS30E,MAAM,MAAM5c,OAAO/D,GAAKA,EAAE5N,OAAS,GACvCquB,KAAKxqB,IACtB,MAAMy/F,EAAMz/F,EAAK4M,MAAM,4BAEvB,OAAOgK,EADK6oF,EAAM/oF,EAAS+oF,EAAI,IAAMvpF,EAASlW,GACzBwK,KAEvB,GAAY,MAAR3J,EAAc,CAChB,MAAMs/F,EAAQt/F,EAAK6pB,MAAM,SACzB,OAAO9pB,KAAKC,KAAOs/F,EAAMA,EAAMhkG,OAAS,IAG5C,OAAOyE,KAAKC,KAAO0V,EAAQ/L,GAG7B6gG,SACE,MAAMxqG,EAAOD,KAAK+nB,UAClB,GAAI9nB,GAAQA,EAAK+L,MAAM,SACrB,OAAO,EAET,MAAMpC,EAAK5J,KAAKyL,MAAM7B,GACtB,OAAOoM,EAASV,EAAS,aAAc1L,IAAOoM,EAASV,EAAS,qBAAsB1L,GAQxFmB,SACE,OAAK/K,KAAKvF,OAKRoQ,IAAAgB,cAAA,OAAKT,UAAU,YACbP,IAAAgB,cAAC2S,GAAK,CAACjO,MAAOvQ,KAAK+nB,YACnBld,IAAAgB,cAAA,MAAIT,UAAU,YACZP,IAAAgB,cAAA,MAAIgL,IAAI,KAAKzL,UAAU,cAAckF,QAAStQ,KAAKyqB,YAAY,YAAS5f,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,kBACxFzQ,KAAK4qG,UAAU,MAAO,OACT,MAAb5qG,KAAK0S,MAAgB1S,KAAK4qG,UAAU,OAAQ,QAC/B,MAAb5qG,KAAK2a,MAAgB3a,KAAK4qG,UAAU,OAAQ,QAChC,MAAZ5qG,KAAKuyB,KAAevyB,KAAK4qG,UAAU,MAAO,OAC5B,MAAd5qG,KAAKkoG,OAAiBloG,KAAK4qG,UAAU,QAAS,SACzB,KAAP,EAAb5qG,KAAKyW,QAAoBzW,KAAK4qG,UAAU,QAAS,SACpC,MAAd5qG,KAAK0a,OAAiB1a,KAAK4qG,UAAU,QAAS,SACjC,MAAb5qG,KAAK3E,MAAgB2E,KAAK4qG,UAAU,OAAQ,SAE/C//F,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,WAAYjQ,KAAKuP,MAAMi7F,QAC/CxqG,KAAK6qG,eAlBH,MCrLb,MAAM5K,GAAOl0F,IAAkC,IAAhC7J,KAAM8oG,EAAI/7F,MAAEA,EAAK8wB,QAAEA,GAAQh0B,EAGxC,OAFAg0B,EAAUA,GAAWA,EAAQvkC,QAAQ,OAAQ,MACvB,MAATyT,GAA0B,IAATA,EAAcpE,IAAAgB,cAACm/F,EAAI,CAACz6F,MAAOwvB,GAAS,QAAgBl1B,IAAAgB,cAACm/F,EAAI,CAACz6F,MAAOwvB,GAAU9wB,EAAM2G,aAIlG,MAAMsqF,WAAoBr1F,IAAM4T,cAC7C1T,SACE,MAAM1P,KAAEA,GAAS2E,KAAKyL,MAChBw/F,EAAQ,IAAIj+F,MAAM3R,EAAKi3B,OAAOxZ,IAAI,CAAC/U,EAAGkD,IAAMA,GAC5CikG,EAAQ,IAAI7vG,EAAK22B,MAAMlZ,IAAI,CAAC/U,EAAGkD,IAAMA,GAC3C,OACE4D,IAAAgB,cAAA,OAAKT,UAAU,WACbP,IAAAgB,cAAA,aACGxQ,EAAK22B,KAAKz2B,QAAU,GAAKsP,IAAAgB,cAAA,aACxBhB,IAAAgB,cAAA,UACGo/F,EAAMnyF,IAAI7R,GAAK4D,IAAAgB,cAACo0F,GAAI,CAAC/9F,KAAK,KAAK2U,IAAK5P,EAAGgI,MAAO5T,EAAK22B,KAAK,GAAG/qB,IAAM,GAAI84B,QAAS1kC,EAAKg3B,UAAYh3B,EAAKg3B,SAAS,IAAMh3B,EAAKg3B,SAAS,GAAGprB,QAGzI4D,IAAAgB,cAAA,aACGq/F,EAAMh+F,OAAOjG,GAAKA,EAAI,GAAG6R,IAAI7R,GAC5B4D,IAAAgB,cAAA,MAAIgL,IAAK5P,GACNgkG,EAAMnyF,IAAI9Q,GAAK6C,IAAAgB,cAACo0F,GAAI,CAAC/9F,KAAK,KAAK2U,IAAK7O,EAAGiH,MAAO5T,EAAK22B,KAAK/qB,GAAK5L,EAAK22B,KAAK/qB,GAAGe,QAAKrP,EAC9EonC,QAAS1kC,EAAKg3B,UAAYh3B,EAAKg3B,SAASprB,IAAM5L,EAAKg3B,SAASprB,GAAGe,YCTjF,MAAMmjG,GAAgBp/F,IAAA,IAAC2O,MAACA,EAAKza,KAAEA,GAAK8L,EAAA,OAClClB,IAAAgB,cAAA,OAAKT,UAAU,YACbP,IAAAgB,cAAA,MAAIT,UAAU,YACZP,IAAAgB,cAAA,MAAIT,UAAU,qBAAoB,UAEpCP,IAAAgB,cAAA,OAAKT,UAAU,kBACbP,IAAAgB,cAACm8F,GAAa,CAACttF,MAAOA,EAAOza,KAAMA,OA0FzC,MAAMmrG,GAAiB16F,EAAU,CAC/BrV,KAAMyhB,IAAA,IAACzhB,KAACA,GAAKyhB,EAAA,OAAKzhB,IAtFpB,cAA4BwP,IAAMC,UAChC8C,YAAYnC,GACVqC,MAAMrC,GAAOzL,KA0DfyqB,WAAa,MAEXpW,EADa,IAAI0C,KAAK,CAAC/W,KAAKyL,MAAMpQ,MAAO,CAAC6G,KAAM,6BAC7BlC,KAAKyL,MAAMxL,QA3D9B,MAAMA,KAACA,EAAI5E,KAAEA,GAAQoQ,EAEf8D,EAAQ,CAACi7F,MAAO,OAEhB/oD,EAAMxhD,EAAKlE,OAAOkE,EAAKjE,YAAY,MAAMie,cAC/C,GAAY,SAARwnC,EACFzhD,KAAKoyD,OAAQ,EACb7iD,EAAMi7F,MAAQ,aACT,GAAY,OAAR/oD,EAAc,CACvB,MAAM/uC,GAAO,IAAIiE,IAAS9V,aAAcO,OAAO/F,GAC/C2E,KAAK2a,KAAOjI,EAAKoX,MAAM,YACvBva,EAAMi7F,MAAQ,YACT,GAAY,SAAR/oD,GAA0B,SAARA,EAAgB,CAC3C,MAAM/uC,GAAO,IAAIiE,IAAS9V,aAAcO,OAAO/F,GACzC2c,EAAQtF,EAAKoX,MAAM,YACzB9pB,KAAK0S,KAAO,GACZ,MAAMg4F,EAAY,KAYlB,GAXA1yF,EAAMjR,QAAQzB,IACZ,GAAIA,EAAK/J,OAASmvG,EAChB,IAAK,IAAIzjG,EAAI,EAAGA,EAAI3B,EAAK/J,OAAQ0L,GAAKyjG,EACpC1qG,KAAK0S,KAAKzO,KAAKqB,EAAKvJ,OAAOkL,EAAGyjG,SAGhC1qG,KAAK0S,KAAKzO,KAAKqB,KAGnBtF,KAAK2qG,YAAc3qG,KAAK0S,KAAKoG,IAAI,IAAM,IACvCvJ,EAAMi7F,MAAQ,OACF,SAAR/oD,EACF,IACEzhD,KAAKuyB,IAAM,IAAIR,GAAQrf,GACvBnD,EAAMi7F,MAAQ,MACd,MAAO1rG,KAIbkB,KAAKuP,MAAQA,EAGfq7F,UAAU3qG,EAAMsQ,GACd,OAAO1F,IAAAgB,cAAA,MAAIgL,IAAK5W,EAAMmL,UAAW6E,IAAW,aAAc,CAACuD,OAAUxT,KAAKuP,MAAMi7F,QAAUvqG,IACxFqQ,QAASA,IAAMtQ,KAAK8O,SAAS,CAAC07F,MAAOvqG,KAASsQ,GAIlDs6F,aACE,MAAML,MAAEA,GAAUxqG,KAAKuP,MACvB,OAAQi7F,GACR,IAAK,MAAO,OAAO3/F,IAAAgB,cAACo1F,GAAW,CAAC5lG,KAAM2E,KAAKyL,MAAMpQ,OACjD,IAAK,OAAQ,OAAOwP,IAAAgB,cAAC67F,GAAY,CAAC1vF,MAAOhY,KAAK0S,KAAMozF,QAAS9lG,KAAK2qG,cAClE,IAAK,OAAQ,OAAO9/F,IAAAgB,cAACg9F,GAAY,CAAC7wF,MAAOhY,KAAK2a,OAC9C,IAAK,QAAS,OAAO9P,IAAAgB,cAACutF,GAAa,CAACxvF,GAAI5J,KAAKyL,MAAM7B,KACnD,IAAK,MAAO,OAAOiB,IAAAgB,cAACq0F,GAAW,CAAC7kG,KAAM2E,KAAKuyB,MAC3C,QAAS,OAAO,MASlBxnB,SACE,OACEF,IAAAgB,cAAA,OAAKT,UAAU,YACbP,IAAAgB,cAAC2S,GAAK,CAACjO,MAAOvQ,KAAKyL,MAAMxL,OACzB4K,IAAAgB,cAAA,MAAIT,UAAU,YACZP,IAAAgB,cAAA,MAAIgL,IAAI,KAAKzL,UAAU,cAAckF,QAAStQ,KAAKyqB,YAAY,YAAS5f,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,kBACxFzQ,KAAK4qG,UAAU,MAAO,OACT,MAAb5qG,KAAK0S,MAAgB1S,KAAK4qG,UAAU,OAAQ,QAC/B,MAAb5qG,KAAK2a,MAAgB3a,KAAK4qG,UAAU,OAAQ,QAChC,MAAZ5qG,KAAKuyB,KAAevyB,KAAK4qG,UAAU,MAAO,SACxC5qG,KAAKoyD,OAASpyD,KAAK4qG,UAAU,QAAS,UAE3C//F,IAAAgB,cAAA,OAAKT,UAAW6E,IAAW,WAAYjQ,KAAKuP,MAAMi7F,QAC/CxqG,KAAK6qG,sBASElyG,OAAWA,GAsCtB,MAAM0yG,GAAe36F,EAAU,CACpC+J,SAAUyU,IAAA,IAAC7zB,KAACA,GAAK6zB,EAAA,OAAK7zB,EAAKof,aArC7B,cAAiC5P,IAAM4T,cACrC7Q,YAAYnC,GACVqC,MAAMrC,GACN,MAAM7B,GAACA,EAAEvO,KAAEA,EAAIof,SAAEA,GAAYza,KAAKyL,MAE5B4Q,EAAQ5B,EAASqP,MAAM,MAAM5c,OAAO/D,GAAKA,EAAE5N,OAAS,GAM1D,GALAyE,KAAKC,KAAOoc,EAAMuN,KAAKxqB,IACrB,MAAMy/F,EAAMz/F,EAAK4M,MAAM,4BAEvB,OAAOgK,EADK6oF,EAAM/oF,EAAS+oF,EAAI,IAAMvpF,EAASlW,GAAM,GAC/BwK,KAEN,MAAb5J,KAAKC,KAAc,CACrBD,KAAKC,KAAOD,KAAKC,KAAK6pB,MAAM,SAASpf,MACrC,MAAM+2C,EAAMzhD,KAAKC,KAAKlE,OAAOiE,KAAKC,KAAKjE,YAAY,MAAMie,cAErD,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,QAAQ0E,QAAQ8iC,IAAQ,EAC5EzhD,KAAK0a,MAAQrf,EAAKqf,MAAM9Q,GAExB5J,KAAK3E,KAAOoB,MAAMpB,EAAK2W,MAAMvX,OAAOmP,IACjCjN,KAAKH,GAAYA,EAASI,GAAKJ,EAASK,cAAgBzD,QAAQE,UAChEqD,KAAK2uG,GAAM,IAAItwG,WAAWswG,KAInCvgG,SACE,MAAM1P,KAAEA,EAAIuO,GAAEA,GAAO5J,KAAKyL,MAC1B,OAAIzL,KAAK0a,MACA7P,IAAAgB,cAACs/F,GAAa,CAACzwF,MAAO1a,KAAK0a,MAAOza,KAAMD,KAAKC,OAC3CD,KAAK3E,KACPwP,IAAAgB,cAACu/F,GAAc,CAAC/vG,KAAM2E,KAAK3E,KAAM4E,KAAMD,KAAKC,KAAM2J,GAAIA,IAEtDiB,IAAAgB,cAAA,QAAMT,UAAU,WAAU,yBAOhBzS,OAAWA,UC3IlC,MAAM4yG,WAA0B1gG,IAAMC,UAGpCC,SACE,MAAM1P,EAAO2E,KAAK6N,QACZ4O,EAAMzc,KAAKyL,MAAMO,MAAMiU,OAAOrW,GAC9BiN,EAAa,MAAP4F,EAAc,KAAO3G,EAAS2G,GAC1C,OACE5R,IAAAgB,cAACoV,GAAMlC,SAAQ,CAAC9P,MAAO4H,GACrBhM,IAAAgB,cAAA,OAAKT,UAAU,YACbP,IAAAgB,cAAC6jB,KAAK,CAAC4C,MAAI,GACTznB,IAAAgB,cAACm0F,GAAQ,CAACj9F,KAAM,IAAKq7F,QAAS,IAAKC,WAAS,EAACjzF,UAAU,YAAY/P,KAAMA,EAAMuO,GAAIiN,IACnFhM,IAAAgB,cAAC6jB,KAAK,CAACtkB,UAAU,aAAagzF,QAAS,KAC7B,MAAPvnF,EACChM,IAAAgB,cAAA,QAAMT,UAAU,WAAU,sCACvB/P,EAAK+a,QAAQS,GAChBhM,IAAAgB,cAAC0+F,GAAQ,CAAClvG,KAAMA,EAAMuO,GAAIiN,EAAKA,IAAK4F,IACjCphB,EAAK0f,QACRlQ,IAAAgB,cAAA,QAAMT,UAAU,WAAU,kBAE1BP,IAAAgB,cAACw/F,GAAY,CAAChwG,KAAMA,EAAMuO,GAAIiN,EAAKA,IAAK4F,SApBlD8uF,GACGvsF,YAAcxD,GAAS6C,YA6BzB,MAAMmtF,GAAWA,IAAM3gG,IAAAgB,cAACC,IAAK,CAAC1M,KAAI,qBAAwBqhB,UAAW8qF,KCzC7D,MAAME,WAAgB5gG,IAAMC,UAGzCC,SACE,MAAM1P,EAAO2E,KAAK6N,QAClB,IAAIpE,EAAOpO,EAAKkE,KAAK,aACjBkK,IACFA,EAAOwJ,KAAKC,MAAMzJ,IAEpB,IAAIiR,EAAQ,KAOZ,OANIrf,EAAK0f,WACPL,EAAQrf,EAAK0f,QAAQnE,UAAU,yBAE7B8D,EAAQrf,EAAK0f,QAAQnE,UAAU,oBAIjC/L,IAAAgB,cAAA,OAAKT,UAAU,YACbP,IAAAgB,cAAA,UAAKxQ,EAAKmf,KAAO,sBAAwB,GAAInf,EAAK4E,MACzC,MAARwJ,GACCoB,IAAAgB,cAAA,MAAIT,UAAU,WACZP,IAAAgB,cAAA,UAAIhB,IAAAgB,cAAA,SAAG,SAAS,IAAChB,IAAAgB,cAAA,YAAO0kB,GAAU9mB,EAAKxJ,QACvC4K,IAAAgB,cAAA,UAAIhB,IAAAgB,cAAA,SAAG,sBAAsB,IAAChB,IAAAgB,cAAA,YAAO0kB,GAAU9mB,EAAK+0B,WACpD3zB,IAAAgB,cAAA,UAAIhB,IAAAgB,cAAA,SAAG,gBAAgB,IAAChB,IAAAgB,cAAA,YAAO0kB,GAAU9mB,EAAK2nB,eAC9CvmB,IAAAgB,cAAA,UAAIhB,IAAAgB,cAAA,SAAG,WAAW,IAAChB,IAAAgB,cAAA,YAAO0kB,GAAU9mB,EAAKwzB,UACzCpyB,IAAAgB,cAAA,UACY,MAAT6O,GAAiB7P,IAAAgB,cAAA,OAAKnT,IAAKgiB,EAAO2W,IAAI,oBA1BhCo6E,GACZzsF,YAAcxD,GAAS6C,mBCUhC,MAAMsqF,GAAU,6GAEVC,GAAY,GASZ8C,GAAc3/F,IAAoC,IAAnCkL,QAACA,EAAOsT,UAAEA,KAAc9e,GAAMM,EACjD,MAAMke,EAAOhqB,GAAQ4K,IAAAgB,cAAA,SAAO3J,KAAK,WAAWypB,UAAW1U,EAAQhX,GAAOoP,SAAUvQ,GAAKyrB,EAAUtqB,EAAMnB,EAAEwQ,OAAOqc,QAAU,EAAI,KACtHggF,EAAS1rG,GAAQ4K,IAAAgB,cAAA,SAAO3J,KAAK,SAASsE,IAAK,EAAGE,IAAK,GAAI++E,KAAM,EAAGx2E,MAAOgI,EAAQhX,GAAOoP,SAAUvQ,GATtF8sG,EAACC,EAAQh1F,EAAK/X,KAC9B,MAAM0B,EAAMsS,SAAShU,EAAEwQ,OAAOL,MAAO,IAChC8G,MAAMvV,IACTqrG,EAAOh1F,EAAKrW,IAM6ForG,CAAUrhF,EAAWtqB,EAAMnB,KACtI,OACE+L,IAAAgB,cAACqlB,KAAOn3B,OAAAC,OAAA,CAAC4P,GAAG,gBAAmB6B,GAC7BZ,IAAAgB,cAAA,YACEhB,IAAAgB,cAAA,aAAQoe,EAAK,cAAc,kBACxBhT,EAAQ60F,YACTjhG,IAAAgB,cAAA,SAAOT,UAAU,UAAS,UAAQugG,EAAO,WAE3C9gG,IAAAgB,cAAA,aAAQoe,EAAK,cAAc,oBAC3Bpf,IAAAgB,cAAA,aAAQoe,EAAK,aAAa,uBAC1Bpf,IAAAgB,cAAA,aAAQoe,EAAK,eAAe,uBAC5Bpf,IAAAgB,cAAA,aAAQoe,EAAK,kBAAkB,4BAC/Bpf,IAAAgB,cAAA,aAAQoe,EAAK,uBAAuB,uBACjChT,EAAQ80F,qBACTlhG,IAAAgB,cAAA,SAAOT,UAAU,UAAS,cAAYugG,EAAO,oBAE/C9gG,IAAAgB,cAAA,aAAQoe,EAAK,qBAAqB,qBAC/BhT,EAAQ+0F,mBACTnhG,IAAAgB,cAAA,SAAOT,UAAU,UAAS,cAAYugG,EAAO,kBAE/C9gG,IAAAgB,cAAA,aAAQoe,EAAK,oBAAoB,oBAC9BhT,EAAQg1F,kBACTphG,IAAAgB,cAAA,SAAOT,UAAU,UAAS,cAAYugG,EAAO,iBAE/C9gG,IAAAgB,cAAA,aAAQoe,EAAK,mBAAmB,8BAChCpf,IAAAgB,cAAA,aAAQoe,EAAK,iBAAiB,qCA2KtC,MAAMiiF,GAAqBx7F,EAAU,CACnCoJ,QAASiW,IAAA,IAAC10B,KAACA,GAAK00B,EAAA,OAAK10B,EAAKye,YAtK5B,cAAyBjP,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KACvCuP,MAAQ,CACNgf,cAAe,KACf6zE,WAAY,IACbpiG,KASDwO,SAAW,KAAMxO,KAAKsuB,OAAOtuB,KAAKuP,MAAM6yF,YAAa,IAAEpiG,KACvDyO,SAAW,KAAMzO,KAAKsuB,OAAOtuB,KAAKuP,MAAM6yF,WAAY,IAAEpiG,KACtDmsG,eAAiBrtG,IAAKkB,KAAKsuB,OAAOxvB,EAAEwQ,OAAOL,MAAO,IAAEjP,KACpDwuB,gBAAkB1vB,KAChB,OAAQA,EAAEkP,OACV,KAAKC,IAAQC,MAAMkB,MACjBpP,KAAKsuB,OAAOtuB,KAAKuP,MAAM6yF,WAAY,GACnCtjG,EAAEuP,iBACF,MACF,KAAKJ,IAAQC,MAAMiB,IACjBnP,KAAKsuB,OAAO,GAAI,GAChBxvB,EAAEuP,oBAILrO,KACDkP,UAAYpQ,KACV,MAAMsjG,WAAEA,GAAepiG,KAAKuP,MAC5B,OAAQzQ,EAAEkP,OACV,KAAKC,IAAQC,MAAMI,GACbxP,EAAEyP,SACJvO,KAAKsuB,OAAO8zE,GAAa,GAEzBpiG,KAAKsuB,OAAO8zE,EAAY,GAEtBpiG,KAAKosG,UACPpsG,KAAKosG,QAAQz9F,QACb3O,KAAKosG,QAAQx9F,UAEf9P,EAAEuP,iBACF,MACF,KAAKJ,IAAQC,MAAM7O,EACbP,EAAEqP,SAAWnO,KAAKosG,UACpBpsG,KAAKosG,QAAQz9F,QACb3O,KAAKosG,QAAQx9F,SACb9P,EAAEuP,qBAKPrO,KAED8oG,UAAY,EAACp2F,EAAIoK,KAAoC,IAAjCX,EAAKvS,EAAI/D,EAAKkjG,EAAKznG,EAAK0nG,GAAIlsF,EAC9C,MAAMzhB,KAAEA,EAAI6tG,SAAEA,EAAQpvF,QAAEA,GAAY9Z,KAAKyL,MACzC,GAAI7B,EAAI,CACN,MAAMq/F,EAAKC,EAASt/F,GACpB,OAAIq/F,EACKp+F,IAAAgB,cAAA,QAAMT,UAAW69F,GAAKv2F,GAEtBA,EAEJ,GAAI7M,EACT,OAAOgF,IAAAgB,cAAA,QAAMT,UAAU,QAAQsH,GAC1B,GAAIq2F,EAAK,CACd,MAAM//F,EAAI+/F,EAAI/8F,MAAM,YACd+N,EAAM/Q,GAAK8Q,EAAQA,QAAQ8P,KAAKlkB,GAAKA,EAAEkE,KAAOZ,EAAE,IAChDqjG,EAAMxhG,IAAAgB,cAAA,QAAMT,UAAU,QAAQsH,GACpC,OAAIqH,EAEAlP,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMzW,EAAKuO,GAAE,KAAAkI,OAAIiI,EAAI7X,KAAI,KAAA4P,OAAIiI,EAAInQ,IAAM2G,MAAOwJ,EAAI9Z,MACvDosG,GAIEA,EAEJ,OAAI/qG,EACFuJ,IAAAgB,cAAA,QAAMT,UAAU,QAAQsH,GACtBs2F,EACFn+F,IAAAgB,cAAA,QAAMT,UAAU,QAAQsH,GAExBA,IAEV1S,KAEDyqB,WAAa,MACX,MAAM/X,EAAO1S,KAAKyL,MAAMuM,MAAM9L,KAAK,MAAM1Q,QAAQ,KAAM,QACjDkvB,GAAU,IAAI/T,IAASgU,aAAcC,OAAOlY,GAElD2B,EADa,IAAI0C,KAAK,CAAC2T,GAAU,CAACxoB,KAAM,eACrB,eACpBlC,KAED+lG,UAAYjyF,KACN9T,KAAKyuB,MACPzuB,KAAKyuB,MAAMs3E,UAAUjyF,GAErB9T,KAAKimG,WAAanyF,IAErB9T,KACDkmG,QAAUpnG,KACRkB,KAAKyuB,MAAQ3vB,EACU,MAAnBkB,KAAKimG,aACPjmG,KAAKyuB,MAAMs3E,UAAU/lG,KAAKimG,mBACnBjmG,KAAKimG,cApGhB33E,OAAO5b,EAAMkxE,GACX5jF,KAAK8O,SAAS,CACZszF,WAAY1vF,EACZ6b,cAAevuB,KAAKyuB,MAAQzuB,KAAKyuB,MAAMH,OAAO5b,EAAMkxE,GAAO,OAqG/D74E,SACE,MAAMiN,MAAEA,EAAK8tF,QAAEA,EAAO7uF,QAAEA,EAAOsT,UAAEA,GAAcvqB,KAAKyL,OAC9C8iB,cAAEA,EAAa6zE,WAAEA,GAAepiG,KAAKuP,MACrCR,EAAUwf,GAAiBA,EAAcve,MAC/C,OACEnF,IAAAgB,cAAA,OAAKT,UAAU,WAAW8D,UAAWlP,KAAKkP,WACxCrE,IAAAgB,cAACygG,IAAM,CAACC,OAAK,EAACnhG,UAAU,cACtBP,IAAAgB,cAAC2gG,KAAG,KACF3hG,IAAAgB,cAACgV,KAAO,CAACV,SAAS,SAAS7P,QAAStQ,KAAKyqB,YAAY,YAC1C5f,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,kBAE5B5F,IAAAgB,cAAC0H,EAAU,CAACysB,QAAQ,QAAQysE,WAAS,EAAC5P,UAAU,SAASppF,QAAS5I,IAAAgB,cAAC6/F,GAAW,CAACz0F,QAASA,EAASsT,UAAWA,KAC1G1f,IAAAgB,cAACgV,KAAO,CAACV,SAAS,UAAS,gBAK/BtV,IAAAgB,cAACygG,IAAOI,KAAI,CAACC,UAAQ,GACnB9hG,IAAAgB,cAACuf,KAAS,KACRvgB,IAAAgB,cAAA,OAAKT,UAAU,gBACbP,IAAAgB,cAAA,SAAO3J,KAAK,OACLytB,YAAY,SACZxf,IAAKtW,GAAQmG,KAAKosG,QAAUvyG,EAC5BoV,MAAOmzF,EACP/yF,SAAUrP,KAAKmsG,eACfj9F,UAAWlP,KAAKwuB,oBACpBD,GAAiB1jB,IAAAgB,cAAA,QAAMT,UAAU,cAAemjB,EAAcne,IAAM,EAAK,IAAMme,EAAcve,OAChGnF,IAAAgB,cAAA,UAAQwE,UAAWtB,EAASuB,QAAStQ,KAAKwO,SAAU+B,MAAM,YAAW1F,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,gBACtF5F,IAAAgB,cAAA,UAAQwE,UAAWtB,EAASuB,QAAStQ,KAAKyO,SAAU8B,MAAM,QAAO1F,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,sBAK1F5F,IAAAgB,cAACuI,EAAW,CAACD,MAAOrV,GAAKkB,KAAK4sG,OAAS9tG,EAAG0K,SAAUxJ,KAAK+lG,YACzDl7F,IAAAgB,cAAA,OAAKT,UAAU,aAAa+E,IAAKtW,GAAQmG,KAAKwiG,MAAQ3oG,GACpDgR,IAAAgB,cAACikB,KAAS,KACPZ,IAAA,IAACc,MAACA,EAAKzD,OAAEA,GAAO2C,EAAA,OACfrkB,IAAAgB,cAACs2F,GAAQ,CACH/2F,UAAU,YACV+E,IAAKnQ,KAAKkmG,QACVl2E,MAAOA,EACPzD,OAAQA,EACRvU,MAAOA,EACP8tF,QAASA,EACTjyF,SAAU7T,KAAK6T,SACfoxF,cAAe0D,GACfzD,cAAellG,KAAK8oG,uBAWzBnwG,OAAWA,GAE1B,MAAMk0G,WAAuBhiG,IAAM4T,cAGjC1T,SACE,MAAMkM,QAACA,EAAOsT,UAAEA,EAAS1R,KAAEA,GAAQ7Y,KAAKyL,MAClCpQ,EAAO2E,KAAK6N,SACZi+F,WAACA,EAAUE,kBAAEA,EAAiBD,oBAAEA,EAAmBE,iBAAEA,KAAqBa,GAAe71F,EAC1F60F,IAAYgB,EAAY11F,OAAS,GACjC40F,IAAmBc,EAAYr1F,cAAgB,GAC/Cs0F,IAAqBe,EAAYp1F,gBAAkB,GACnDu0F,IAAkBa,EAAYn1F,aAAe,GAClD,MAAMK,EAAQ3c,EAAKsf,KAAKmyF,GAClBhH,EAAU9tF,EAAMc,IAAIxT,GAAQA,EAAKwkB,MAAM,MAAMvuB,OAASqtG,IACtDM,EAAWb,GAAcxvF,GAE/B,OAAOhO,IAAAgB,cAACqgG,GAAkB,CAAChD,SAAUA,EAAU7tG,KAAMA,EAAM2c,MAAOA,EAAO8tF,QAASA,EAAS7uF,QAASA,EAASsT,UAAWA,KAftHsiF,GACG7tF,YAAcxD,GAAS6C,YAkBhC,MAAM0uF,WAAsBliG,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KAwB1CuqB,UAAY,EAACtqB,EAAMgP,KACjB,MAAMsD,EAAM,IAAIvS,KAAKiX,SACrB1E,EAAItS,GAAQgP,EACZjP,KAAK6N,QAAQwR,OAAO,iBAAkB9M,KAPxC0E,cACE,OAAOjX,KAAK6N,QAAQm/F,gBAAkBD,GAAchiF,aAStDhgB,SACE,OAAOF,IAAAgB,cAACghG,GAAc,CAACh0F,KAAM7Y,KAAKyL,MAAMoN,KAAM5B,QAASjX,KAAKiX,QAASsT,UAAWvqB,KAAKuqB,aA/BnFwiF,GACGhiF,aAAe,CACpB+gF,YAAY,EACZ10F,OAAQ,EACRC,WAAY,EACZC,UAAW,EACXC,YAAa,EACbC,eAAgB,EAChBw0F,mBAAmB,EACnBv0F,cAAe,EACfs0F,qBAAqB,EACrBr0F,gBAAiB,EACjBu0F,kBAAkB,EAClBt0F,aAAc,EACdC,gBAAiB,EACjBC,cAAe,GAfbk1F,GAkBG/tF,YAAcE,GAAQf,QAiB/B,MAAM8uF,GAAWv8F,EAAU,CACzBmI,KAAMA,CAACpN,EAAOoC,IAAYA,EAAQgL,QACjCk0F,QAAep0G,OAAWA,GAC7Bs0G,GAASjuF,YAAcxD,GAAS2C,QAEjB8uF,UClRD9mD,QAAKK,SAAkBL,QAAKK,SAAiBL,QAAKK,SAAkBL,QAAKK,SACzEoB,QAAKpB,SACJ,IAAIvoD,aAAa,GAFhC,MA4BMivG,GAAiB,CACrBjmG,EAAK,YACLkC,EAAK,WACLzD,EAAK,gBACLsD,EAAK,cACLrB,EAAK,WACLpC,EAAK,UACLyC,EAAK,WAGP,SAASmlG,GAAa1tF,EAAM6wC,GAC1B,MAAM88C,EAAQ,GACd,SAASC,EAAQthG,GAAU,IAATyrB,MAACA,GAAMzrB,EACvB,MAAMqe,EAAS,GAqCfoN,EAAMzwB,QAAQmoB,IAAA,IAACtlB,GAACA,EAAE0tB,OAAEA,GAAOpI,EAAA,OApC3B,SAASo+E,EAAQ1jG,EAAI0tB,GACnB,MAAM5X,EAAO4wC,EAAOy4B,UAAUn/D,KAAKnK,GAAQA,EAAK7V,KAAOA,GACvD,GAAI8V,GAAsB,SAAdA,EAAKxd,KACfkoB,EAAOnmB,KAAK,CAACyb,OAAM4X,eACd,IAAW,aAAP1tB,EACT,OACK,GAAc,MAAVA,EAAG,GAAY,CACxB,MAAM2jG,EAAU3jG,EAAG1C,WAAW,GAAwB,IAAnB0C,EAAG1C,WAAW,GAC3CsmG,EAAW5jG,EAAG1C,WAAW,GACzBw4B,EAAQ4wB,EAAOhlB,IAAI1M,iBAAiBhV,KAAK6jF,GAAOA,EAAI7jG,KAAO2jG,GAC7D7tE,GACFA,EAAM/C,MAAM51B,QAAQ+V,IAA4B,IAA1Bwa,OAAQo2E,EAAOnxE,IAAEA,GAAIzf,EACrCyf,EAAIixE,IACNF,EAAQ/wE,EAAIixE,GAAWl2E,EAASo2E,EAAU,YAI3C,GAAc,MAAV9jG,EAAG,IAAwB,MAAVA,EAAG,GAAY,CACzC,MAAM1H,EAAOgrG,GAAetjG,EAAG,IACzBsjB,EAAmB,MAAVtjB,EAAG,IAAc,EAAIkJ,SAASlJ,EAAG,IAC1C4tB,EAAQ84B,EAAOy4B,UAAU77E,OAAOuS,GAClB,SAAdA,EAAKvd,QACHgrB,GAAS,GAAKpa,SAAS2M,EAAKpkB,KAAK6xB,SAAWA,MAG5ChrB,GAAQud,EAAKpkB,KAAKytB,QAAU5mB,IAQpCkoB,EAAOnmB,KAAK,CAAChE,KAAI,UAAA6R,OAAYob,GAAS,EAAI,SAAWA,EAAQ,YAAW,KAAApb,OAAI5P,EAAiB,YAATA,EAAqB,gBAAkBA,EAAO,QAAW,QAAUo1B,SAAQE,YAGnI81E,CAAQ1jG,EAAI0tB,KAC5C81E,EAAMnpG,KAAKmmB,GAEb,GAAI3K,EAAK6lB,kBAAoB,EAAG,CAC9B,MAAM5F,EAAQ4wB,EAAOhlB,IAAIzM,iBAAiBjV,KAAK6jF,GAAOA,EAAI7jG,KAAO6V,EAAK6lB,kBAClE5F,GACFA,EAAM7C,KAAK91B,QAAQ0R,GAAO40F,EAAS50F,IAIvC,OADAgH,EAAK8lB,gBAAgBx+B,QAAQ0R,GAAO40F,EAAS50F,IACtC20F,EAGT,MAAMO,GAAW59E,IAAY,IAAXrQ,KAACA,GAAKqQ,EACtB,MAAOhD,EAAU6gF,GAAe/iG,IAAMimB,UAAS,GACzC9e,EAAQnH,IAAMgjG,WAAWryF,GAAS6C,aACxC,OACExT,IAAAgB,cAAA,UACEhB,IAAAgB,cAAC2vF,GAAa,CAAC5xF,GAAI8V,EAAKA,MAAQA,EAAKA,KAAK9V,IACvC8V,EAAKA,KACJ7U,IAAAgB,cAAA,KAAGhQ,KAAI,IAAAiW,OAAME,EAAMpI,GAAE,KAAAkI,OAAI4N,EAAKA,KAAKxd,KAAI,KAAA4P,OAAI4N,EAAKA,KAAK9V,IAAM0F,OAAO,UAChEzE,IAAAgB,cAACsV,GAAU,CAACC,OAAQ1B,EAAKA,OACxBA,EAAK4X,OAAO5N,QAAQ,GAAG,OAAKhK,EAAKA,KAAKzf,MAGzC4K,IAAAgB,cAAA,YACEhB,IAAAgB,cAACsV,GAAU,CAACC,OAAQ,CAACxG,KAAQtF,EAAS,+DACrCoK,EAAK4X,OAAO5N,QAAQ,GAAG,OAAKhK,EAAKzf,KACnB,MAAdyf,EAAK8X,OAAiB9X,EAAK8X,MAAMj8B,OAAS,GAAKsP,IAAAgB,cAAA,QAAMT,UAAU,aAAakF,QAASA,IAAMs9F,GAAa7gF,IAAYA,EAAQ,kBAAAjb,OAAuB4N,EAAK8X,MAAMj8B,OAAM,cAI5J,MAAdmkB,EAAK8X,OAAiBzK,GACrBliB,IAAAgB,cAAA,MAAIT,UAAU,YACXsU,EAAK8X,MAAM1e,IAAI4G,GACd7U,IAAAgB,cAAA,UACEhB,IAAAgB,cAAC2vF,GAAa,CAAC5xF,GAAI8V,EAAK9V,IACtBiB,IAAAgB,cAAA,KAAGhQ,KAAI,IAAAiW,OAAME,EAAMpI,GAAE,KAAAkI,OAAI4N,EAAKxd,KAAI,KAAA4P,OAAI4N,EAAK9V,IAAM0F,OAAO,UACtDzE,IAAAgB,cAACsV,GAAU,CAACC,OAAQ1B,IAAO,IAAEA,EAAKzf,YAWpD,MAAM6tG,WAAwBjjG,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KAC5C+tG,OAAS,CAAC/pG,EAAG,GAAIiuB,EAAG,IAAGjyB,KAYvBs5F,YAAcx6F,KACZkB,KAAKguG,QAAU,CAAChqG,EAAGlF,EAAE46F,QAASznE,EAAGnzB,EAAE66F,SACnCnhG,SAASiX,iBAAiB,YAAazP,KAAKu5F,aAAa,GACzD/gG,SAASiX,iBAAiB,UAAWzP,KAAKw5F,WAAW,KACtDx5F,KACDu5F,YAAcz6F,KACZ,MAAM4vE,EAAK5vE,EAAE46F,QAAU15F,KAAKguG,QAAQhqG,EAAG2qE,EAAK7vE,EAAE66F,QAAU35F,KAAKguG,QAAQ/7E,EACrEjyB,KAAK+tG,OAAO/pG,GAAK0qE,EACjB1uE,KAAK+tG,OAAO97E,GAAK08C,EACb3uE,KAAKylG,UACPzlG,KAAKylG,QAAQn6F,MAAM0iB,KAAOhuB,KAAK+tG,OAAO/pG,EAAI,KAC1ChE,KAAKylG,QAAQn6F,MAAMkiB,IAAMxtB,KAAK+tG,OAAO97E,EAAI,MAE3CjyB,KAAKguG,QAAU,CAAChqG,EAAGlF,EAAE46F,QAASznE,EAAGnzB,EAAE66F,WACpC35F,KACDw5F,UAAY,aACHx5F,KAAKguG,QACZhuG,KAAKiuG,qBAzBPA,mBACEz1G,SAASmX,oBAAoB,YAAa3P,KAAKu5F,aAAa,GAC5D/gG,SAASmX,oBAAoB,UAAW3P,KAAKw5F,WAAW,GAE1D9pF,uBACE1P,KAAKiuG,mBAuBPljG,SACE,MAAMmjG,SAAEA,EAAQvxE,MAAEA,EAAK2zB,OAAEA,EAAMgnC,SAAEA,GAAat3F,KAAKyL,MAC7CuG,EAAQhS,KAAK6N,QACbvC,EAAQ,CAAC0iB,KAAMhuB,KAAK+tG,OAAO/pG,EAAGwpB,IAAKxtB,KAAK+tG,OAAO97E,GAChD0K,EAAMphC,SACT+P,EAAMoJ,QAAU,QAElB,MAAMy5F,EAAOD,EAASr8E,WAAW,QAY3Bu8E,GAXkBC,EAYtBF,EAAKjpG,IAAI,iBAAiB4kB,MAAM,KAAKhR,IAAI9U,GAAK8O,SAAS9O,IAZxBsqG,EAa/Bx7F,SAASq7F,EAAKjpG,IAAI,0BAbkBqpG,EAcpCz7F,SAASq7F,EAAKjpG,IAAI,0BAduBspG,EAezC17F,SAASq7F,EAAKjpG,IAAI,0BAdX,SAASkpG,EAAWlhF,GACzB,OAAIA,GAAS,EACJ,EACHA,GAASmhF,EAAQ9yG,OACd8yG,EAAQnhF,EAAQ,GAEhBohF,EAAMF,EAAWlhF,EAAQ,GAAKqhF,EAAMrhF,EAAQshF,IAPlCC,IAACJ,EAASC,EAAKC,EAAKC,EAiB3C,IAAIE,EAAU,EACd,MAAM/5F,EACJ9J,IAAAgB,cAAA,MAAIT,UAAU,QACXuxB,EAAM7jB,IAAIikF,IAAY,IAAXt9E,KAACA,GAAKs9E,EAChB,MAAM1hG,EAAOi1D,EAAOy4B,UAAUn/D,KAAKtM,GAAOA,EAAI1T,KAAO6V,EAAK7V,IAC1D,IAAKvO,EACH,OAAO,KAET,IAAIszG,EAAU,KACd,MAAMvB,EAAQD,GAAa1tF,EAAM6wC,GACjC,GAAI88C,EAAO,CACT,MAAMwB,EAAWlvE,GACf70B,IAAAgB,cAAA,MAAIT,UAAU,YACXs0B,EAAM5mB,IAAI4G,GAAQ7U,IAAAgB,cAAC8hG,GAAQ,CAACjuF,KAAMA,MAGnC0tF,EAAM7xG,OAAS,EACjBozG,EACE9jG,IAAAgB,cAAA,MAAIT,UAAU,aACXgiG,EAAMt0F,IAAI,CAAC4mB,EAAO1+B,IACjB6J,IAAAgB,cAAA,UACEhB,IAAAgB,cAAA,YAAM,oBAAkB7K,EAAM,EAAE,mBAAiB0+B,EAAMvyB,OAAO,CAACq6F,EAAGvK,KAAA,IAAE3lE,OAACA,GAAO2lE,EAAA,OAAKuK,EAAMlwE,GAAQ,GAAG5N,QAAQ,GAAG,MAC5GklF,EAASlvE,MAKT0tE,EAAM7xG,SACfozG,EAAUC,EAASxB,EAAM,KAG7B,IAAIyB,EAAW,KACf,MAAM3hF,EAAQpa,SAASzX,EAAKA,KAAK6xB,OACjC,IAAKnX,MAAMmX,GAAQ,CACjB,MAAM4hF,EAAKV,EAAWlhF,GACtBwhF,GAAWI,EACXD,EAAWhkG,IAAAgB,cAAA,YAAM,QAAQijG,EAAG,QAE9B,OACEjkG,IAAAgB,cAAA,UACEhB,IAAAgB,cAAC2vF,GAAa,CAAC5xF,GAAI6V,EAAK7V,IACtBiB,IAAAgB,cAAA,KAAGhQ,KAAI,IAAAiW,OAAME,EAAMpI,GAAE,KAAAkI,OAAIzW,EAAK6G,KAAI,KAAA4P,OAAIzW,EAAKuO,IAAM0F,OAAO,UACtDzE,IAAAgB,cAACsV,GAAU,CAACC,OAAQ/lB,IAAOwP,IAAAgB,cAAA,QAAMT,UAAU,QAAQ/P,EAAK4E,MAAY,IAAE4uG,IAGzEF,MAMX,OACE9jG,IAAAgB,cAAA,OAAKT,UAAU,YAAYE,MAAOA,EAAO6E,IAAKhH,GAAKnJ,KAAKylG,QAAUt8F,GAChE0B,IAAAgB,cAAA,OAAKT,UAAU,UAAUkuF,YAAat5F,KAAKs5F,aAAa,YAAUoV,EAAU,EAAC,KAAA58F,OAAQ48F,EAAO,cAAe,IAC1G/5F,IAhHHm5F,GAGG9uF,YAAcxD,GAAS6C,YAkHhC,MAAM0wF,GAAuBr+F,EAAU,CACrCw9F,SAAU/Q,IAAA,IAAC+Q,SAACA,GAAS/Q,EAAA,OAAK+Q,IACzBJ,IAEY,MAAMrC,WAAgB5gG,IAAMC,UAczC8C,YAAYnC,EAAOoC,GACjBC,MAAMrC,EAAOoC,GAAS7N,KAbxBuP,MAAQ,CACNy/F,cAAe,GACf1M,UAAW,IACZtiG,KAEDq5F,IAAM,EAACr5F,KACPypC,OAASljC,KAAK2qD,GAAK,EAAClxD,KACpB0oC,SAAW,IAAI1oC,KACfusD,OAASpG,QAAKK,SAAQxmD,KACtB2pC,YAAc,IAAG3pC,KACjB4pC,YAAc,IAAK5pC,KAqBnBivG,cAAgBnwG,KACdA,EAAEuP,mBACHrO,KACDs5F,YAAcx6F,KACZtG,SAASiX,iBAAiB,YAAazP,KAAKu5F,aAAa,GACzD/gG,SAASiX,iBAAiB,UAAWzP,KAAKw5F,WAAW,GACrDx5F,KAAKkvG,UAAYlvG,KAAKy5F,QAAU,CAACz1F,EAAGlF,EAAE46F,QAASznE,EAAGnzB,EAAE66F,SACpD35F,KAAKmvG,WAAcrwG,EAAEqP,QAAU,EAAKrP,EAAEyP,SAAW,EAAI,EACrDzP,EAAEuP,mBACHrO,KACDu5F,YAAcz6F,KACZ,GAAIkB,KAAKy5F,SAAWz5F,KAAKo+C,OAAQ,CAC/B,MAAMswB,EAAK5vE,EAAE46F,QAAU15F,KAAKy5F,QAAQz1F,EACpC2qE,EAAK7vE,EAAE66F,QAAU35F,KAAKy5F,QAAQxnE,EACxB2nE,GAAO55F,KAAKo+C,OAAOpuB,MAAQhwB,KAAKo+C,OAAO7xB,QAAU,EACvD,GAAwB,IAApBvsB,KAAKmvG,WAAkB,CAGzB,IAFAnvG,KAAKq5F,KAAY,EAAL3qB,EAASnoE,KAAK2qD,GAAK0oC,EAC/B55F,KAAKypC,OAAc,EAALklC,EAASpoE,KAAK2qD,GAAK0oC,EAC1B55F,KAAKq5F,IAAM9yF,KAAK2qD,IACrBlxD,KAAKq5F,KAAiB,EAAV9yF,KAAK2qD,GAEnB,KAAOlxD,KAAKq5F,KAAO9yF,KAAK2qD,IACtBlxD,KAAKq5F,KAAiB,EAAV9yF,KAAK2qD,GAEnBlxD,KAAKypC,MAAQljC,KAAKC,IAAIxG,KAAKypC,MAAO,GAClCzpC,KAAKypC,MAAQljC,KAAKG,IAAI1G,KAAKypC,OAAQljC,KAAK2qD,GAAK,EAAI,UAC5C,GAAwB,IAApBlxD,KAAKmvG,WAAkB,CAChC,IAAIC,EAAKpvG,KAAKo+C,OAAOw9C,wBACjB7W,EAAKx+E,KAAKC,IAAIxG,KAAKkvG,UAAUlrG,EAAGhE,KAAKy5F,QAAQz1F,GAAKorG,EAAGphF,KACrDg3D,EAAKz+E,KAAKC,IAAIxG,KAAKkvG,UAAUj9E,EAAGjyB,KAAKy5F,QAAQxnE,GAAKm9E,EAAG5hF,IACrDy3D,EAAK1+E,KAAKG,IAAI1G,KAAKkvG,UAAUlrG,EAAGhE,KAAKy5F,QAAQz1F,GAAKorG,EAAGphF,KACrDk3D,EAAK3+E,KAAKG,IAAI1G,KAAKkvG,UAAUj9E,EAAGjyB,KAAKy5F,QAAQxnE,GAAKm9E,EAAG5hF,IACrDxtB,KAAKswD,SACPtwD,KAAKqvG,cAAgBrvG,KAAKswD,OAAOooC,YAAY3T,EAAIC,EAAIC,EAAIC,IAEvDllF,KAAKsvG,UACPtvG,KAAKsvG,QAAQhkG,MAAMoJ,QAAU,QAC7B1U,KAAKsvG,QAAQhkG,MAAM0iB,KAAI,GAAAlc,OAAMizE,EAAE,MAC/B/kF,KAAKsvG,QAAQhkG,MAAMkiB,IAAG,GAAA1b,OAAMkzE,EAAE,MAC9BhlF,KAAKsvG,QAAQhkG,MAAM0kB,MAAK,GAAAle,OAAMmzE,EAAKF,EAAE,MACrC/kF,KAAKsvG,QAAQhkG,MAAMihB,OAAM,GAAAza,OAAMozE,EAAKF,EAAE,YAEnC,GAAwB,IAApBhlF,KAAKmvG,WAAkB,CAChC,MAAMn5B,EAAK7vB,QAAKC,YAAY7/C,KAAKgpG,IAAIvvG,KAAKq5F,KAAM9yF,KAAKipG,IAAIxvG,KAAKq5F,KAAM,GAC9DpjB,EAAK9vB,QAAKC,WAAW4vB,EAAG,IAAKA,EAAG,GAAI,GACpCy5B,EAAMzvG,KAAK0oC,SAAWkxD,EAC5BzzC,QAAKkvB,YAAYr1E,KAAKusD,OAAQvsD,KAAKusD,OAAQypB,EAAItH,EAAK+gC,GACpDtpD,QAAKkvB,YAAYr1E,KAAKusD,OAAQvsD,KAAKusD,OAAQ0pB,EAAItH,EAAK8gC,GAEtDzvG,KAAKy5F,QAAU,CAACz1F,EAAGlF,EAAE46F,QAASznE,EAAGnzB,EAAE66F,SAErC76F,EAAEuP,mBACHrO,KACDw5F,UAAY16F,KACV,GAAIkB,KAAKy5F,SAAWz5F,KAAKswD,OAAQ,CAC/B,GAAItwD,KAAKmvG,WAAa,GAAK5oG,KAAKmpG,IAAI1vG,KAAKy5F,QAAQz1F,EAAIhE,KAAKkvG,UAAUlrG,GAAK,GAAKuC,KAAKmpG,IAAI1vG,KAAKy5F,QAAQxnE,EAAIjyB,KAAKkvG,UAAUj9E,GAAK,EAAG,CAC7H,IAAIm9E,EAAKpvG,KAAKo+C,OAAOw9C,wBACjBj/D,EAAQ38B,KAAKswD,OAAOqnC,WAAW74F,EAAE46F,QAAU0V,EAAGphF,KAAMlvB,EAAE66F,QAAUyV,EAAG5hF,IAAKxtB,KAAKmvG,YACjFnvG,KAAK8O,SAAS,CAACwzF,UAAW3lE,WAErB38B,KAAKy5F,QAEVz5F,KAAKqvG,gBACPrvG,KAAK8O,SAAS,CAACwzF,UAAWtiG,KAAKqvG,uBACxBrvG,KAAKqvG,eAEVrvG,KAAKsvG,UACPtvG,KAAKsvG,QAAQhkG,MAAMoJ,QAAU,QAE/B1U,KAAK85F,eACLh7F,EAAEuP,mBACHrO,KACD+5F,aAAej7F,KACTA,EAAEk7F,OAAS,EACbh6F,KAAK0oC,SAAWniC,KAAKC,IAAoB,IAAhBxG,KAAK0oC,SAAgB1oC,KAAK4pC,aAEnD5pC,KAAK0oC,SAAWniC,KAAKG,IAAI1G,KAAK0oC,SAAW,IAAK1oC,KAAK2pC,eAEtD3pC,KAQDm6F,QAAUC,KAMR,GAJAp6F,KAAK2vG,OAASvV,EACdp6F,KAAK4vC,MAAQyqD,sBAAsBr6F,KAAKm6F,SACxCn6F,KAAKovD,MAAMjkB,OAAO6b,SAAS,CAAC,EAAG,EAAGhnD,KAAKo+C,OAAOpuB,MAAOhwB,KAAKo+C,OAAO7xB,SAE7DvsB,KAAKswD,OAAOp1B,QAAS,CACvB,MAAMn4B,EAAO/C,KAAKswD,OAAOp1B,QAASvF,EAAS31B,KAAKswD,OAAOn1B,aAGvD,GAFAn7B,KAAKusD,OAAO,GAAKhmD,KAAKG,IAAIivB,EAAO,GAAIpvB,KAAKC,IAAIxG,KAAKusD,OAAO,GAAI,IAAMxpD,EAAK,GAAK4yB,EAAO,KACrF31B,KAAKusD,OAAO,GAAKhmD,KAAKG,IAAIivB,EAAO,GAAIpvB,KAAKC,IAAIxG,KAAKusD,OAAO,GAAI,IAAMxpD,EAAK,GAAK4yB,EAAO,MAChF31B,KAAK4vG,SAAU,CAClB5vG,KAAK4vG,SAAW,GAChB,IAAK,IAAI3oG,EAAI,EAAGA,EAAI,KAAMA,EAAG,CAC3B,MAAM4oG,EAAMtpG,KAAK03C,SAAW13C,KAAK2qD,GAAK,EAChC4+C,EAAOvpG,KAAK03C,SAClBj+C,KAAK4vG,SAAS3rG,KAAK,CAACsC,KAAKgpG,IAAIM,GAAOC,EAAMvpG,KAAKipG,IAAIK,GAAOC,KAG9D9vG,KAAKusD,OAAO,GAAK,EACjBvsD,KAAK4vG,SAAS7oG,QAAQgpG,IAAY,IAAV/rG,EAAGiuB,GAAE89E,EAC3B/vG,KAAKusD,OAAO,IAAMvsD,KAAKswD,OAAOylC,SAAS/1F,KAAKusD,OAAO,GAAKvoD,EAAIhE,KAAK0oC,SAAW,EAAG1oC,KAAKusD,OAAO,GAAKt6B,EAAIjyB,KAAK0oC,SAAW,KAEtH1oC,KAAKusD,OAAO,IAAMvsD,KAAK4vG,SAASr0G,OAGlCyE,KAAKovD,MAAMjkB,OAAOme,YAAY/iD,KAAK2qD,GAAK,EAAGlxD,KAAKo+C,OAAOpuB,MAAQhwB,KAAKo+C,OAAO7xB,OAAQvsB,KAAK2pC,YAAc,EAAsB,EAAnB3pC,KAAK4pC,aAC9G5pC,KAAKovD,MAAMjkB,OAAOsf,wBAAwBzqD,KAAKq5F,IAAKr5F,KAAKypC,MAAOzpC,KAAKusD,OAAQvsD,KAAK0oC,UAElF1oC,KAAKswD,OAAO6G,oBACbn3D,KAmFDs3F,SAAW,MACLt3F,KAAKswD,QACPtwD,KAAKswD,OAAOgnC,WAEdt3F,KAAK8O,SAAS,CAACwzF,UAAW,OA3N1B,MAAM0N,EAAW,sBACbniG,EAAQuI,QAAQ45F,GAClBhwG,KAAKkuG,SAAW90G,QAAQC,QAAQwU,EAAQtO,KAAKywG,IAE7ChwG,KAAKkuG,SAAWzxG,MAAMoR,EAAQmE,MAAMvX,OAAOu1G,IAAWrzG,KAAKgB,GAAKA,EAAE+U,QAEpE1S,KAAKkuG,SAAWluG,KAAKkuG,SAASvxG,KAAK+V,GAAQ,IAAI2hD,GAAYvW,QAAQhsB,IAAIP,QAAQ7e,IAGjFhD,uBACM1P,KAAK4vC,QACP+qD,qBAAqB36F,KAAK4vC,cACnB5vC,KAAK4vC,OAEd5vC,KAAK85F,eAmFPA,eACEthG,SAASmX,oBAAoB,YAAa3P,KAAKu5F,aAAa,GAC5D/gG,SAASmX,oBAAoB,UAAW3P,KAAKw5F,WAAW,GAmC1D9pF,uBACM1P,KAAK4vC,QACP+qD,qBAAqB36F,KAAK4vC,cACnB5vC,KAAK4vC,OAEd5vC,KAAKiR,WAAY,EAGnBg/F,gBAAgBv9F,EAAMxQ,EAAMguG,GAC1BlwG,KAAK8O,SAASqhG,IAAqB,IAApBnB,cAACA,GAAcmB,EACxB7qG,EAAO,CAACoN,OAAMxQ,QA6BlB,OA5BA8sG,EAAgB,IAAIA,EAAe1pG,GAC/B4qG,EAAU,IACZ1lG,WAAW,KACLxK,KAAKiR,WACTjR,KAAK8O,SAASshG,IAAqB,IAApBpB,cAACA,GAAcoB,EACxBpvG,EAAMguG,EAAcrwF,QAAQrZ,GAMhC,OALItE,GAAO,IACTguG,EAAgBA,EAAcvzG,QAC9B6J,EAAO,IAAIA,EAAM+qG,UAAU,GAC3BrB,EAAchuG,GAAOsE,GAEhB,CAAC0pG,oBAETkB,EAAU,KAEb5qG,EAAK+qG,UAAW,EAElB7lG,WAAW,KACLxK,KAAKiR,WACTjR,KAAK8O,SAASwhG,IAAqB,IAApBtB,cAACA,GAAcsB,EACxBtvG,EAAMguG,EAAcrwF,QAAQrZ,GAKhC,OAJItE,GAAO,IACTguG,EAAgBA,EAAcvzG,SAChBmjB,OAAO5d,EAAK,GAErB,CAACguG,oBAETkB,GACI,CAAClB,mBAIZx/F,oBACE,IAAKxP,KAAKo+C,OACR,OAEF,MAAMA,EAASp+C,KAAKo+C,OAEd/iD,EAAO2E,KAAK6N,QAelB7N,KAAKswD,OAAS,IAAI+D,GAAY/D,OAAOqE,SAASlqB,IAAIu8C,UAAU5oC,EAdxC28C,CAAC37F,EAAMic,KACzB,MAAMomC,EAAsB,kBAATriD,EAAoBA,EAAKrD,OAAOqD,EAAKpD,YAAY,MAAMie,cAAgB,OAC1F,GAAI,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,OAAQ,QAAQ0E,QAAQ8iC,IAAQ,EAC5E,MAAO,CAACpmD,EAAKqf,MAAMtb,EAAMic,GAAU,QAAQ,GACtC,CACL,MAAM2/E,EAAM3/F,EAAKZ,OAAO2E,GACxB,OAAI47F,EACK,CAACA,EAAI3/F,KAAKN,OAAQ0mD,GAAK,GAEvB,CAACpmD,EAAK2W,MAAMvX,OAAO2E,EAAMic,GAAUomC,GAAK,KAK4BpmD,GACjF2E,KAAKswD,OAAO5Q,GAAGm7C,WAAW,EAAG,EAAG,EAAG,GACnC76F,KAAKswD,OAAOwE,GAAG,QAAS,CAACxlD,EAAQjS,EAAOyC,KACxB,kBAAVzC,GACF2C,KAAKiwG,gBAAe,kBAAAn+F,OAAmBxC,EAAOlQ,MAAQ,QAAS,OAGnEY,KAAKswD,OAAOwE,GAAG,OAAQ,KACrB90D,KAAKiwG,gBAAgB,oBAAqB,UAAW,OAEvDjwG,KAAKovD,MAAQpvD,KAAKswD,OAAOlB,MAEzBpvD,KAAKswD,OAAO9yC,QAAQniB,GAEpB2E,KAAK4vC,MAAQyqD,sBAAsBr6F,KAAKm6F,SAU1CpvF,SACE,MAAMikG,cAAEA,EAAa1M,UAAEA,GAActiG,KAAKuP,MAC1C,OACE1E,IAAAgB,cAAA,OAAKT,UAAU,aACbP,IAAAgB,cAAA,OAAKT,UAAU,aACbP,IAAAgB,cAACikB,KAAS,KACPygF,IAAA,IAACvgF,MAACA,EAAKzD,OAAEA,GAAOgkF,EAAA,OACf1lG,IAAAgB,cAAA,UACAytF,YAAat5F,KAAKs5F,YAClB2V,cAAejvG,KAAKivG,cACpB/T,QAASl7F,KAAK+5F,aACd5pF,IAAKhH,GAAKnJ,KAAKo+C,OAASj1C,EACxB6mB,MAAOzpB,KAAKG,IAAIspB,EAAO,KACvBzD,OAAQhmB,KAAKG,IAAI6lB,EAAQ,SAI7B1hB,IAAAgB,cAAA,OAAKT,UAAU,UAAU+E,IAAKhH,GAAKnJ,KAAKsvG,QAAUnmG,IAClD0B,IAAAgB,cAAA,MAAIT,UAAU,OACX4jG,EAAcl2F,IAAI,CAAA03F,EAAyBxvG,KAAG,IAA3B0R,KAACA,EAAIxQ,KAAEA,EAAImuG,SAAEA,GAASG,EAAA,OAAU3lG,IAAAgB,cAAA,MAAIgL,IAAK7V,EAAKoK,UAAWlJ,GAAQmuG,EAAW,YAAc,KAAM39F,MAEtH7H,IAAAgB,cAAA,OAAKT,UAAU,WAAU,mBACPP,IAAAgB,cAAA,KAAGhQ,KAAK,6CAA6CyT,OAAO,UAAS,qBAEvFzE,IAAAgB,cAACkjG,GAAoB,CAACb,SAAUluG,KAAKkuG,SAAUvxE,MAAO2lE,EAAWhyC,OAAQtwD,KAAKswD,OAAQgnC,SAAUt3F,KAAKs3F,cAtQ1FmU,GACZzsF,YAAcxD,GAAS6C,YCjOjB6jB,OAzBEA,IACfr3B,IAAAgB,cAAC2P,GAAS6C,YAAYsC,SAAQ,KAC3BtlB,IACC,IAAIq9D,EACF7tD,IAAAgB,cAAC4kG,IAAM,KACL5lG,IAAAgB,cAACC,IAAK,CAAC1M,KAAI,YAAA0S,OAAc/X,OAAOgX,KAAKqP,IAAalU,KAAK,KAAI,KAAKuU,UAAW89E,KAC3E1zF,IAAAgB,cAACC,IAAK,CAAC1M,KAAK,iBAAiBqhB,UAAWwsF,KACxCpiG,IAAAgB,cAACC,IAAK,CAAC1M,KAAK,cAAcqhB,UAAWiwF,KACrC7lG,IAAAgB,cAACC,IAAK,CAAC1M,KAAK,gBAAgBqhB,UAAW+qF,KACvC3gG,IAAAgB,cAACC,IAAK,CAAC1M,KAAK,UAAU6L,OAAK,EAACwV,UAAWgrF,MAG3C,OAAIpwG,EAAK4f,MAELpQ,IAAAgB,cAAC2S,GAAK,CAACjO,MAAOlV,EAAK4E,MAChBy4D,GAIEA,qBCvBf,MAAMi4C,GAAU5kG,IAAsB,IAArBnC,GAACA,EAAE3J,KAAEA,EAAI8c,KAAEA,GAAKhR,EAG/B,OAFA9L,EAAOA,GAAQA,EAAKzE,QAAQ,2BAA4B,KACxDuhB,EAAOA,GAAQA,EAAKvhB,QAAQ,2BAA4B,KAE/CqP,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMlI,IAAO3J,EAAK,IAAC4K,IAAAgB,cAAA,QAAMT,UAAU,QAAQ2R,IAEnDlS,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMlI,IAAO3J,IAIhC,MAAM2wG,WAAgB/lG,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KACpCuP,MAAQ,CAACshG,WAAW,GAAK7wG,KACzB8sB,OAAS,MACP9sB,KAAK8O,SAASgO,IAAA,IAAC+zF,UAACA,GAAU/zF,EAAA,MAAM,CAAC+zF,WAAYA,OAE/C9lG,SACE,MAAMmiB,MAACA,EAAM,EAACjtB,KAAEA,EAAIu3B,MAAEA,EAAKs5E,MAAEA,EAAKC,MAAEA,EAAKC,KAAEA,EAAO,OAAShxG,KAAKyL,OAC1DolG,UAACA,GAAa7wG,KAAKuP,MACnB0b,EAAUiC,EAAQ,KAAO,KACzB+jF,EAAW,GACXC,EAAY,GAelB,OAdAn3G,OAAOgX,KAAKymB,GAAOzwB,QAAQ6C,IACzB,IAAIxK,EAAO0xG,EAAMlnG,GACZxK,GAAkC,IAA1BA,EAAKuf,QAAQ,YAG1Bvf,EAAOA,EAAKrD,OAAO,GAAG+tB,MAAM,MACnBvuB,OAAS2xB,EAAQ,GACxB+jF,EAAS7xG,EAAK8tB,IAAW+jF,EAAS7xG,EAAK8tB,KAAW,GAClD+jF,EAAS7xG,EAAK8tB,IAAQtjB,GAAM4tB,EAAM5tB,IAElCsnG,EAAUjtG,KAAK2F,MAGnBsnG,EAAUlpF,KAAK,CAAC3f,EAAG1K,IAAM65B,EAAMnvB,GAAG8f,cAAcqP,EAAM75B,KAEpDkN,IAAAgB,cAACmlG,EAAI,CAAC5lG,UAAWylG,EAAY,qBAAuB,YAClDhmG,IAAAgB,cAACof,EAAM,CAAC3a,QAAStQ,KAAK8sB,QAAQjiB,IAAAgB,cAAC2E,IAAS,CAACC,MAAOogG,EAAY,gBAAkB,iBAAiB,IAAE5wG,GACjG4K,IAAAgB,cAAA,UACG9R,OAAOgX,KAAKkgG,GAAUjpF,OAAOlP,IAAI8U,GAAO/iB,IAAAgB,cAAC+kG,GAAO,CAACI,KAAK,KAAKn6F,IAAK+W,EAAKV,MAAOA,EAAM,EAAGjtB,KAAM2tB,EAAK4J,MAAOy5E,EAASrjF,GAAMkjF,MAAOA,EAAOC,MAAOA,KAC3IG,EAAUp4F,IAAIlP,GAAMiB,IAAAgB,cAAA,MAAIgL,IAAKjN,GAAIiB,IAAAgB,cAAC8kG,GAAO,CAAC/mG,GAAIA,EAAI3J,KAAMu3B,EAAM5tB,GAAKmT,KAAM+zF,EAAMlnG,GAAIoC,MAAM,aAAe+kG,EAAMnnG,GAAM,YAOhH,MAAMunG,WAAiBtmG,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KAEpDuP,MAAQ,CAACrP,QAAS,KAAMkxG,YAAa,QAAOpxG,KAa5CqxG,UAAYvyG,KACV,MAAM6/F,EAAQ7/F,EAAEwQ,OAAOqvF,MACnBA,EAAMpjG,OAAS,GACjByE,KAAK6N,QAAQ2P,QAAQmhF,EAAM,MAd/BjlF,gBAAgBxZ,EAASkxG,GACvBpxG,KAAK8O,SAAS,CAAC5O,UAASkxG,gBAG1B5hG,oBACEgK,EAAmBxZ,MAErB0P,uBACE8J,EAAmB,MAUrBzO,SACE,MAAMiH,EAAQhS,KAAK6N,QAEnB,OADAmE,EAAM2K,OAAS3K,EAAM2K,QAAU,GAE7B9R,IAAAgB,cAAA,OAAKT,UAAU,YACU,MAAtBpL,KAAKuP,MAAMrP,SACV2K,IAAAgB,cAAC6jB,IAAK,CAAC5D,QAAS9rB,KAAKuP,MAAM6hG,aACzBvmG,IAAAgB,cAAC6jB,IAAM4hF,QAAO,KAACzmG,IAAAgB,cAAC6jB,IAAMlR,MAAK,KAAExe,KAAKuP,MAAMrP,WAG5C2K,IAAAgB,cAAA,UAAI,qBACJhB,IAAAgB,cAAA,UACG9R,OAAO8iB,QAAQ7K,EAAMpY,UAAUouB,KAAK,CAAC3f,EAAG1K,IAAMmV,SAASnV,EAAE,GAAI,IAAMmV,SAASzK,EAAE,GAAI,KAAKyQ,IAAIoW,IAAA,IAAEtlB,EAAI3J,GAAKivB,EAAA,OACrGrkB,IAAAgB,cAAA,MAAIgL,IAAKjN,GAAIiB,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMlI,IAAM,SAAO3J,OAG5C4K,IAAAgB,cAAC2P,GAAS8C,YAAYqC,SAAQ,KAC3B9E,GACChR,IAAAgB,cAAC+kG,GAAO,CAAC3wG,KAAK,gBAAgBu3B,MAAO3b,EAAMi1F,MAAO9+F,EAAM2K,QAAU,GAAIo0F,MAAO/+F,EAAM4K,YAAc,MAGrG/R,IAAAgB,cAAA,UAAI,eACJhB,IAAAgB,cAAC2P,GAAS8C,YAAYqC,SAAQ,KAC3B9E,GACChR,IAAAgB,cAAA,UACG9R,OAAO8iB,QAAQhB,GAAM3O,OAAO6iB,IAAA,IAAEnmB,GAAGmmB,EAAA,OAAM/d,EAAM2K,OAAO/S,KAAQoI,EAAM2K,OAAO/S,GAAIoC,MAAM,aAC5Egc,KAAK,CAAC3f,EAAG1K,IAAM0K,EAAE,GAAG8f,cAAc9f,EAAE,KAAKyQ,IAAIikF,IAAgB,IAAdnzF,EAAI3J,GAAK88F,EAC1DhqC,EAAS,KAIb,OAHI/gD,EAAMkL,QAAQtT,KAChBmpD,EAASloD,IAAAgB,cAAA,QAAMT,UAAU,SAASkF,QAASA,IAAM0B,EAAMiM,UAAUrU,IAAK,aAEjEiB,IAAAgB,cAAA,MAAIgL,IAAKjN,GAAIiB,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAE,IAAAxO,OAAMlI,IAAO3J,GAAa8yD,OAK9DloD,IAAAgB,cAAA,YACEhB,IAAAgB,cAACuf,KAAS,CAACC,UAAU,YACnBxgB,IAAAgB,cAACyf,KAAY,CAAClgB,UAAU,YAAW,kCACnCP,IAAAgB,cAAC0f,KAAW,CAACjgB,MAAO,CAACoJ,QAAS,QAASxS,KAAK,OAAOmN,SAAUrP,KAAKqxG,UAAWE,OAAO,iBAAiBnrG,UAAU,EAAO6I,MAAM,KAC5HpE,IAAAgB,cAAC2lG,KAAS,KACR3mG,IAAAgB,cAAA,SAAG,6CACHhB,IAAAgB,cAAA,SAAG,6HAhEIslG,GACZnyF,YAAcxD,GAAS2C,QCzChC,MAAMszF,GAAUA,IAAM5mG,IAAAgB,cAAA,OAAKT,UAAU,YAE/BsmG,GAAWhhG,EAAU,CACzBrV,KAAMA,CAAA0Q,EAASiG,KAAK,IAAbpI,GAAEA,GAAImC,EAAA,OAAYiG,EAAM3W,KAAKuO,KACnCkT,IAAA,IAACzhB,KAAEA,EAAI2P,SAAEA,GAAU8R,EAAA,OACpBjS,IAAAgB,cAAC2P,GAAS6C,YAAYU,SAAQ,CAAC9P,MAAO5T,GACnC2P,SAEFrS,EAAW,IAAMkS,IAAAgB,cAAC8lG,IAAQ,CAACrxF,GAAG,OACjCoxF,GAAS1yF,YAAcxD,GAAS2C,QA0BhC,MAAMyzF,WAAY/mG,IAAM4T,cAAc7Q,cAAAE,SAAAhB,WAAA9M,KAOpCuP,MAAQ,CACNotF,QAAS,EACTkV,SAAU,GACX7xG,KAED8xG,UAAYnV,KACV38F,KAAK8O,SAAS,CAAE6tF,cACjB38F,KAsBD+xG,OAASjzG,KACP,MAAMS,EAjDV,SAAqBT,GACnB,GAAIA,EAAEkzG,aAAax6E,MACjB,IAAK,IAAIvwB,EAAI,EAAGA,EAAInI,EAAEkzG,aAAax6E,MAAMj8B,SAAU0L,EACjD,GAAqC,SAAjCnI,EAAEkzG,aAAax6E,MAAMvwB,GAAGgrG,KAC1B,OAAOnzG,EAAEkzG,aAAax6E,MAAMvwB,GAAGirG,YAGnC,GAAIpzG,EAAEkzG,aAAarT,MAAMpjG,OACzB,OAAOuD,EAAEkzG,aAAarT,MAAM,GAyCfwT,CAAYrzG,GACrBS,IACFT,EAAEuP,iBACFrO,KAAK6N,QAAQ2P,QAAQje,IAEvBS,KAAK8O,SAAS,CAAE+iG,SAAU,MAC3B7xG,KACDoyG,YAActzG,KACZA,EAAEuP,iBACFrO,KAAKqyG,YAAY,KAClBryG,KACDsyG,WAAaxzG,MAxEf,SAAoBA,GAClB,GAAIA,EAAEkzG,aAAax6E,MACjB,IAAK,IAAIvwB,EAAI,EAAGA,EAAInI,EAAEkzG,aAAax6E,MAAMj8B,SAAU0L,EACjD,GAAqC,SAAjCnI,EAAEkzG,aAAax6E,MAAMvwB,GAAGgrG,KAC1B,OAAO,EAGX,QAAInzG,EAAEkzG,aAAarT,MAAMpjG,QAkErBg3G,CAAWzzG,IACbA,EAAEuP,mBAELrO,KACDwyG,YAAc1zG,KACZkB,KAAKqyG,aAAa,KAnDpB93F,YACE,OAAOva,KAAKyL,MAAMO,MAAMiU,OAAO1F,MAYjC/K,oBACExP,KAAK6N,QAAQsE,UAAUnS,KAAK8xG,WAC5Bt5G,SAASiX,iBAAiB,OAAQzP,KAAK+xG,QAAQ,GAC/Cv5G,SAASiX,iBAAiB,WAAYzP,KAAKsyG,YAAY,GACvD95G,SAASiX,iBAAiB,YAAazP,KAAKoyG,aAAa,GACzD55G,SAASiX,iBAAiB,YAAazP,KAAKwyG,aAAa,GAE3D9iG,uBACE1P,KAAK6N,QAAQuE,YAAYpS,KAAK8xG,WAE9Bt5G,SAASmX,oBAAoB,OAAQ3P,KAAK+xG,QAAQ,GAClDv5G,SAASmX,oBAAoB,WAAY3P,KAAKsyG,YAAY,GAC1D95G,SAASmX,oBAAoB,YAAa3P,KAAKoyG,aAAa,GAC5D55G,SAASmX,oBAAoB,YAAa3P,KAAKwyG,aAAa,GAG9DH,YAAYI,GACVzyG,KAAK8O,SAASogB,IAAA,IAAC2iF,SAAEA,GAAU3iF,EAAA,MAAM,CAAE2iF,SAAUtrG,KAAKG,IAAImrG,EAAWY,EAAK,MAwBxE1nG,SAEE,MAAMwP,EAAQva,KAAKua,MACnB,OAAIA,IAAUva,KAAK6N,QAAQuP,QAAQ7C,IACjCZ,GAAa,eAAA7H,OAAgByI,GAAS,WAC/B1P,IAAAgB,cAAC8lG,IAAQ,CAACrxF,GAAG,OAGpBzV,IAAAgB,cAAChB,IAAM+V,SAAQ,KACZ5gB,KAAKuP,MAAMsiG,SAAW,GAAKhnG,IAAAgB,cAAA,OAAKT,UAAU,cAC3CP,IAAAgB,cAACygG,IAAM,CAAClhG,UAAU,aAAamhG,OAAK,GAClC1hG,IAAAgB,cAACygG,IAAOrhF,OAAM,KAEZpgB,IAAAgB,cAACygG,IAAOoG,MAAK,KAEX7nG,IAAAgB,cAACqgB,OAAI,CAAC5L,GAAG,KAAIzV,IAAAgB,cAAA,QAAMT,UAAU,YAAY,IACtCmP,EAA6D1P,IAAAgB,cAAA,aAArDhB,IAAAgB,cAAA,QAAMP,MAAO,CAAC65F,QAAQ,aAAa,gBAG7C5qF,GACD1P,IAAAgB,cAAC6lG,GAAQ,CAAC9nG,GAAI2Q,GACZ1P,IAAAgB,cAAC8mG,GAAQ,SAIhBp4F,EACC1P,IAAAgB,cAAC6lG,GAAQ,CAAC9nG,GAAI2Q,GACZ1P,IAAAgB,cAACq2B,GAAQ,OAGXr3B,IAAAgB,cAACslG,GAAQ,MAEVnxG,KAAKuP,MAAMotF,QAAU,GAAK9xF,IAAAgB,cAAC4lG,GAAO,QAzFrCG,GACG5yF,YAAcxD,GAAS2C,QA8FhC,MAAMy0F,GAAYliG,EAAU,CAC1BwL,MAAOA,CAACzQ,EAAOuG,IAAUA,EAAMkK,OAC9B01F,QAAKj5G,OAAWA,GACnBi6G,GAAU5zF,YAAcxD,GAAS2C,QAEjC,MAAM00F,WAAkBhoG,IAAMC,UAC5BgoG,WAAWxqG,EAAOrI,GAChB,MAAM8Y,SAAEA,EAAQ5e,OAAEA,GAAW6F,KAAKyL,MAClC,OAAIsN,GAAYzQ,GAAoB,MAAVnO,IAA6B,IAAXA,EACnC0Q,IAAAgB,cAAA,MAAIT,UAAU,WAAUP,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,OAAQxQ,GACrC,MAAV9F,EACF0Q,IAAAgB,cAAA,MAAIT,UAAU,WAAUP,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,WAAYxQ,GACnD8Y,IAAazQ,EAAQ,EACvBuC,IAAAgB,cAAA,MAAIT,UAAU,WAAUP,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,OAAQxQ,EAAK,OAEtD4K,IAAAgB,cAAA,MAAIT,UAAU,WAAUP,IAAAgB,cAAC2E,IAAS,CAACC,MAAM,OAAQxQ,GAG5D8K,SACE,MAAM9K,KAAEA,EAAI9F,OAAEA,EAAMkD,MAAEA,EAAKwtB,OAAEA,GAAW7qB,KAAKyL,MAC7C,OACEZ,IAAAgB,cAACmf,IAAK,CAAC+nF,gBAAgB,YAAY3kG,KAAc,MAARnO,EAAc4qB,OAAQA,GAC7DhgB,IAAAgB,cAACmf,IAAMC,OAAM,CAACC,aAAW,GACvBrgB,IAAAgB,cAACmf,IAAMxM,MAAK,KAAC,cAAYve,IAE3B4K,IAAAgB,cAACmf,IAAMG,KAAI,KACTtgB,IAAAgB,cAAA,MAAIT,UAAU,iBACXpL,KAAK8yG,WAAW,EAAG,yBACnB9yG,KAAK8yG,WAAW,EAAG,mBACnB9yG,KAAK8yG,WAAW,EAAG,mBACnB9yG,KAAK8yG,WAAW,EAAG,qBACnB9yG,KAAK8yG,WAAW,EAAG,iBACnB9yG,KAAK8yG,WAAW,EAAG,cAEZ,MAATz1G,GACCwN,IAAAgB,cAAC6jB,IAAK,CAAC5D,QAAQ,UACbjhB,IAAAgB,cAAC6jB,IAAM4hF,QAAO,KAACzmG,IAAAgB,cAAC6jB,IAAMlR,MAAK,KAAEnhB,MAInCwN,IAAAgB,cAACmf,IAAMY,OAAM,KACA,MAAVzxB,GAAkB0Q,IAAAgB,cAACggB,IAAM,CAACC,QAAQ,UAAUxb,QAASua,GAAQ,UACnD,MAAV1wB,IAA6B,IAAXA,GACjB0Q,IAAAgB,cAACwU,gBAAa,CAACC,GAAE,IAAAxO,OAAM3X,IACrB0Q,IAAAgB,cAACggB,IAAM,CAACC,QAAQ,OAAOxb,QAASua,GAAQ,SAGjC,MAAV1wB,GAAkB0Q,IAAAgB,cAACggB,IAAM,CAACC,QAAQ,OAAOxb,QAASua,GAAQ,SAkEtDmoF,OA3Df,cAAmBnoG,IAAMC,UAAU8C,cAAAE,SAAAhB,WAAA9M,KACjCgS,MAAQ,IAAIwJ,GAASxb,MAAKA,KAC1BuP,MAAQ,CACN0jG,YAAa,KACbC,iBAAkB,EAClBC,cAAe,KACfC,aAAc,MACfpzG,KAqBDqzG,iBAAmB,MACjBrzG,KAAKgS,MAAMyL,WACXzd,KAAK8O,SAAS,CACZmkG,YAAa,KACbC,iBAAkB,EAClBC,cAAe,KACfC,aAAc,SAzBlBE,WAAWr3G,GACL+D,KAAKqM,QACPrM,KAAKqM,OAAOG,QAAQvI,KAAKhI,GAI7B4hB,aAAa5d,GACXD,KAAK8O,SAAS,CAAEmkG,YAAahzG,EAAMizG,iBAAkB,EAAGC,cAAe,KAAMC,aAAc,OAE7Fx1F,cAAcD,GACZ3d,KAAK8O,SAAS,CAAEokG,gBAAiBv1F,IAEnCI,cAAcnU,GACZ5J,KAAK8O,SAAS,CAAEqkG,cAAevpG,IAEjCoU,YAAY3gB,GACV2C,KAAK8O,SAAS,CAAEqkG,eAAe,EAAOC,aAAc/1G,IAatD0N,SACE,MAAMkoG,YAAEA,EAAWC,gBAAEA,EAAeC,cAAEA,EAAaC,aAAEA,GAAiBpzG,KAAKuP,MAC3E,OACE1E,IAAAgB,cAAC0nG,gBAAM,CAACC,SAAS,IAAIrjG,IAAKrR,GAAKkB,KAAKqM,OAASvN,GAC3C+L,IAAAgB,cAAC2S,GAAK,CAACjO,MAAM,YACX1F,IAAAgB,cAACqT,GAAO,KACNrU,IAAAgB,cAAC2P,GAAS2C,QAAQY,SAAQ,CAAC9P,MAAOjP,KAAKgS,OACrCnH,IAAAgB,cAAC2P,GAAS8C,YAAYS,SAAQ,CAAC9P,MAAOjP,KAAKgS,MAAM6J,MAC/ChR,IAAAgB,cAAA,OAAKT,UAAU,OACbP,IAAAgB,cAACgnG,GAAS,CAAC5yG,KAAMgzG,EAAa94G,OAAQg5G,EAAep6F,SAAUm6F,EAAiB71G,MAAO+1G,EAAcvoF,OAAQ7qB,KAAKqzG,mBAClHxoG,IAAAgB,cAACC,IAAK,CAAC1M,KAAK,WAAWqhB,UAAWmyF,aChPpDtX,IAASvwF,OAAOF,IAAAgB,cAAC+lG,GAAG,MAAKp5G,SAASi7G,eAAe","file":"static/js/main.4b98b19b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ArchiveLoader.2fdd1a3c.wasm\";","/* eslint-disable */\nvar ArchiveLoader = (() => {\n  var _scriptName = typeof document != 'undefined' ? (document.currentScript && document.currentScript.src) : undefined;\n  if (typeof __filename != 'undefined') _scriptName || (_scriptName= __filename);\n  return (\nfunction(moduleArg = {}) {\n  var moduleRtn;\n\nvar Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=typeof window==\"object\";var ENVIRONMENT_IS_WORKER=typeof importScripts==\"function\";var ENVIRONMENT_IS_NODE=typeof process==\"object\"&&typeof process.versions==\"object\"&&typeof process.versions.node==\"string\";if(ENVIRONMENT_IS_NODE){}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary;if(ENVIRONMENT_IS_NODE){var fs=require(\"fs\");var nodePath=require(\"path\");scriptDirectory=__dirname+\"/\";read_=(filename,binary)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return fs.readFileSync(filename,binary?undefined:\"utf8\")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}return ret};readAsync=(filename,onload,onerror,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);fs.readFile(filename,binary?undefined:\"utf8\",(err,data)=>{if(err)onerror(err);else onload(binary?data.buffer:data)})};if(!Module[\"thisProgram\"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\\\/g,\"/\")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith(\"blob:\")){scriptDirectory=\"\"}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{if(isFileURI(url)){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null);return}fetch(url,{credentials:\"same-origin\"}).then(response=>{if(response.ok){return response.arrayBuffer()}return Promise.reject(new Error(response.status+\" : \"+response.url))}).then(onload,onerror)}}}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module[\"monitorRunDependencies\"]&&Module[\"monitorRunDependencies\"](runDependencies)}function removeRunDependency(id){runDependencies--;Module[\"monitorRunDependencies\"]&&Module[\"monitorRunDependencies\"](runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module[\"onAbort\"]&&Module[\"onAbort\"](what);what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith(\"file://\");function findWasmBinary(){var f=\"ArchiveLoader.wasm\";if(!isDataURI(f)){return locateFile(f)}return f}var wasmBinaryFile;function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}function getBinaryPromise(binaryFile){if(!wasmBinary){return new Promise((resolve,reject)=>{readAsync(binaryFile,response=>resolve(new Uint8Array(response)),error=>{try{resolve(getBinarySync(binaryFile))}catch(e){reject(e)}})})}return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&!isFileURI(binaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(`wasm streaming compile failed: ${reason}`);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}return instantiateArrayBuffer(binaryFile,imports,callback)}function getWasmImports(){return{a:wasmImports}}function createWasm(){var info=getWasmImports();function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"x\"];updateMemoryViews();wasmTable=wasmExports[\"z\"];addOnInit(wasmExports[\"y\"]);removeRunDependency(\"wasm-instantiate\");return wasmExports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}if(!wasmBinaryFile)wasmBinaryFile=findWasmBinary();instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}function write_output(ptr,size){window.postResult(HEAPU8.slice(ptr,ptr+size))}function ExitStatus(status){this.name=\"ExitStatus\";this.message=`Program terminated with exit(${status})`;this.status=status}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var noExitRuntime=Module[\"noExitRuntime\"]||true;var stackRestore=val=>__emscripten_stack_restore(val);var stackSave=()=>_emscripten_stack_get_current();var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;var UTF8ArrayToString=(heapOrArray,idx,maxBytesToRead)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\";var ___assert_fail=(condition,filename,line,func)=>{abort(`Assertion failed: ${UTF8ToString(condition)}, at: `+[filename?UTF8ToString(filename):\"unknown filename\",line,func?UTF8ToString(func):\"unknown function\"])};class ExceptionInfo{constructor(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24}set_type(type){HEAPU32[this.ptr+4>>2]=type}get_type(){return HEAPU32[this.ptr+4>>2]}set_destructor(destructor){HEAPU32[this.ptr+8>>2]=destructor}get_destructor(){return HEAPU32[this.ptr+8>>2]}set_caught(caught){caught=caught?1:0;HEAP8[this.ptr+12]=caught}get_caught(){return HEAP8[this.ptr+12]!=0}set_rethrown(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13]=rethrown}get_rethrown(){return HEAP8[this.ptr+13]!=0}init(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor)}set_adjusted_ptr(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr}get_adjusted_ptr(){return HEAPU32[this.ptr+16>>2]}get_exception_ptr(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr}}var exceptionLast=0;var uncaughtExceptionCount=0;var ___cxa_throw=(ptr,type,destructor)=>{var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw exceptionLast};var __abort_js=()=>{abort(\"\")};var __emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var __emscripten_throw_longjmp=()=>{throw Infinity};var getHeapMax=()=>2147483648;var growMemory=size=>{var b=wasmMemory.buffer;var pages=(size-b.byteLength+65535)/65536;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};var ENV={};var getExecutableName=()=>thisProgram||\"./this.program\";var getEnvStrings=()=>{if(!getEnvStrings.strings){var lang=(typeof navigator==\"object\"&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\";var env={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:lang,_:getExecutableName()};for(var x in ENV){if(ENV[x]===undefined)delete env[x];else env[x]=ENV[x]}var strings=[];for(var x in env){strings.push(`${x}=${env[x]}`)}getEnvStrings.strings=strings}return getEnvStrings.strings};var stringToAscii=(str,buffer)=>{for(var i=0;i<str.length;++i){HEAP8[buffer++]=str.charCodeAt(i)}HEAP8[buffer]=0};var _environ_get=(__environ,environ_buf)=>{var bufSize=0;getEnvStrings().forEach((string,i)=>{var ptr=environ_buf+bufSize;HEAPU32[__environ+i*4>>2]=ptr;stringToAscii(string,ptr);bufSize+=string.length+1});return 0};var _environ_sizes_get=(penviron_count,penviron_buf_size)=>{var strings=getEnvStrings();HEAPU32[penviron_count>>2]=strings.length;var bufSize=0;strings.forEach(string=>bufSize+=string.length+1);HEAPU32[penviron_buf_size>>2]=bufSize;return 0};var runtimeKeepaliveCounter=0;var keepRuntimeAlive=()=>noExitRuntime||runtimeKeepaliveCounter>0;var _proc_exit=code=>{EXITSTATUS=code;if(!keepRuntimeAlive()){Module[\"onExit\"]&&Module[\"onExit\"](code);ABORT=true}quit_(code,new ExitStatus(code))};var exitJS=(status,implicit)=>{EXITSTATUS=status;_proc_exit(status)};var _exit=exitJS;var _fd_close=fd=>52;var convertI32PairToI53Checked=(lo,hi)=>hi+2097152>>>0<4194305-!!lo?(lo>>>0)+hi*4294967296:NaN;function _fd_seek(fd,offset_low,offset_high,whence,newOffset){var offset=convertI32PairToI53Checked(offset_low,offset_high);return 70}var printCharBuffers=[null,[],[]];var printChar=(stream,curr)=>{var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}};var _fd_write=(fd,iov,iovcnt,pnum)=>{var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0};var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var wasmImports={d:___assert_fail,k:___cxa_throw,o:__abort_js,u:__emscripten_memcpy_js,p:__emscripten_throw_longjmp,q:_emscripten_resize_heap,s:_environ_get,t:_environ_sizes_get,v:_exit,r:_fd_close,l:_fd_seek,j:_fd_write,a:invoke_ii,b:invoke_iii,e:invoke_iiii,g:invoke_iiiii,c:invoke_iiiiii,m:invoke_ji,f:invoke_vi,w:invoke_vii,i:invoke_viii,n:invoke_viji,h:write_output};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports[\"y\"])();var _malloc=Module[\"_malloc\"]=a0=>(_malloc=Module[\"_malloc\"]=wasmExports[\"A\"])(a0);var _free=Module[\"_free\"]=a0=>(_free=Module[\"_free\"]=wasmExports[\"B\"])(a0);var _openArchive=Module[\"_openArchive\"]=(a0,a1)=>(_openArchive=Module[\"_openArchive\"]=wasmExports[\"C\"])(a0,a1);var _hasFile=Module[\"_hasFile\"]=(a0,a1)=>(_hasFile=Module[\"_hasFile\"]=wasmExports[\"D\"])(a0,a1);var _loadFile=Module[\"_loadFile\"]=(a0,a1,a2)=>(_loadFile=Module[\"_loadFile\"]=wasmExports[\"E\"])(a0,a1,a2);var _loadImage=Module[\"_loadImage\"]=(a0,a1)=>(_loadImage=Module[\"_loadImage\"]=wasmExports[\"F\"])(a0,a1);var _loadJASS=Module[\"_loadJASS\"]=a0=>(_loadJASS=Module[\"_loadJASS\"]=wasmExports[\"G\"])(a0);var _setThrew=(a0,a1)=>(_setThrew=wasmExports[\"H\"])(a0,a1);var __emscripten_stack_restore=a0=>(__emscripten_stack_restore=wasmExports[\"I\"])(a0);var _emscripten_stack_get_current=()=>(_emscripten_stack_get_current=wasmExports[\"J\"])();var ___cxa_is_pointer_type=a0=>(___cxa_is_pointer_type=wasmExports[\"K\"])(a0);var dynCall_ji=Module[\"dynCall_ji\"]=(a0,a1)=>(dynCall_ji=Module[\"dynCall_ji\"]=wasmExports[\"L\"])(a0,a1);var dynCall_viji=Module[\"dynCall_viji\"]=(a0,a1,a2,a3,a4)=>(dynCall_viji=Module[\"dynCall_viji\"]=wasmExports[\"M\"])(a0,a1,a2,a3,a4);function invoke_iiii(index,a1,a2,a3){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ii(index,a1){var sp=stackSave();try{return getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iii(index,a1,a2){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vi(index,a1){var sp=stackSave();try{getWasmTableEntry(index)(a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viii(index,a1,a2,a3){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2,a3)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){var sp=stackSave();try{return getWasmTableEntry(index)(a1,a2,a3,a4,a5)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_vii(index,a1,a2){var sp=stackSave();try{getWasmTableEntry(index)(a1,a2)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_viji(index,a1,a2,a3,a4){var sp=stackSave();try{dynCall_viji(index,a1,a2,a3,a4)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}function invoke_ji(index,a1){var sp=stackSave();try{return dynCall_ji(index,a1)}catch(e){stackRestore(sp);if(e!==e+0)throw e;_setThrew(1,0)}}var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();Module[\"ready\"]=new Promise(function(resolve,reject){delete Module[\"then\"];Module[\"onAbort\"]=function(what){reject(what)};addOnPostRun(function(){resolve(Module)})});moduleRtn=readyPromise;\n\n\n  return moduleRtn;\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ArchiveLoader;\nelse if (typeof define === 'function' && define['amd'])\n  define([], () => ArchiveLoader);\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"604ee34ce8efa1c49074.worker.js\");\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\nclass ActiveContainer extends React.Component {\n  static contextTypes = {\n    router: PropTypes.shape({\n      history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n        replace: PropTypes.func.isRequired,\n        createHref: PropTypes.func.isRequired,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  static propTypes = {\n    children: PropTypes.element.isRequired,\n    path: PropTypes.string.isRequired,\n    exact: PropTypes.bool,\n    strict: PropTypes.bool,\n    className: PropTypes.string,\n    activeClassName: PropTypes.string,\n    style: PropTypes.object,\n    activeStyle: PropTypes.object,\n    isActive: PropTypes.func,\n  };\n\n  static defaultProps = {\n    exact: false,\n    strict: false,\n    activeClassName: 'active',\n  };\n\n  render() {\n    const {\n      children,\n      path,\n      exact,\n      strict,\n      activeClassName,\n      className,\n      activeStyle,\n      style,\n      isActive: getIsActive,\n      ...props\n    } = this.props;\n\n    const child = React.Children.only(children);\n\n    return (\n      <Route\n        path={path}\n        exact={exact}\n        strict={strict}\n        children={({ location, match }) => {\n          const isActive = !!(getIsActive ? getIsActive(match, location) : match);\n\n          return React.cloneElement(\n            child,\n            {\n              ...props,\n              className: [className, child.props.className, isActive ? activeClassName : null]\n                .join(' ').trim(),\n              style: isActive ? { ...style, ...activeStyle } : style,\n            }\n          );\n        }}\n      />\n    );\n  }\n}\n\nexport { ActiveContainer };\nexport default ActiveContainer;","function createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (acc === null) return f;\n\n    return function chainedFunction(...args) {\n      acc.apply(this, args);\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport { createChainedFunction };\nexport default createChainedFunction;\n","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nconst ErrorView = ({type, ...props}) => {\n  let error = \"Unknown error.\";\n  Object.keys(props).some(id => {\n    if (props[id] && props[id].error) {\n      error = props[id].error;\n      return true;\n    }\n    return false;\n  });\n  return (\n    <div className=\"app-body\">\n      <Alert bsStyle={type || \"danger\"}>\n        <strong>Error:</strong> {error}\n      </Alert>\n    </div>\n  );\n};\n\nexport { ErrorView };\nexport default ErrorView;\n","function scrollParent(element, includeHidden) {\n  // from jQuery UI\n  const position = window.getComputedStyle(element).position;\n  if (position === \"fixed\") {\n    return element.ownerDocument || document;\n  }\n  const excludeStaticParent = (position === \"absolute\");\n  const overflowRegex = (includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/);\n\n  let parent = element.parentNode;\n  while (parent && parent.nodeType !== 9) {\n    if (parent.nodeType === 1) {\n      const style = window.getComputedStyle(parent);\n      if (excludeStaticParent && style.position === \"static\") {\n        // no\n      } else if (overflowRegex.test(style.overflow + style.overflowX + style.overflowY)) {\n        return parent;\n      }\n    }\n    parent = parent.parentNode;\n  }\n  return element.ownerDocument || document;\n}\n\nfunction scrollIntoView(element, padding=60) {\n  const parent = scrollParent(element);\n  const rect = element.getBoundingClientRect();\n  const parentRect = parent.getBoundingClientRect();\n  const parentStyle = window.getComputedStyle(parent);\n\n  const parentLeft = parentRect.left + parseFloat(parentStyle.borderLeftWidth);\n  const parentTop = parentRect.top + parseFloat(parentStyle.borderTopWidth);\n  const left = rect.left - parentLeft;\n  const top = rect.top - parentTop;\n  const right = rect.right - parentLeft;\n  const bottom = rect.bottom - parentTop;\n\n  const deltaLeft = Math.min(left - padding, left >= parent.clientWidth ?\n    (left + right - parent.clientWidth) / 2 : Math.max(right + padding - parent.clientWidth, 0));\n  const deltaTop = Math.min(top - padding, top >= parent.clientHeight ?\n    (top + bottom - parent.clientHeight) / 2 : Math.max(bottom + padding - parent.clientHeight, 0));\n  if (deltaLeft) parent.scrollLeft += deltaLeft;\n  if (deltaTop) parent.scrollTop += deltaTop;\n}\n\nexport { scrollParent, scrollIntoView };\nexport default scrollIntoView;\n","import React from 'react';\nimport keycode from 'keycode';\nimport classNames from 'classnames';\nimport { Glyphicon } from 'react-bootstrap';\n\nimport './SearchBox.scss';\n\nclass SearchBox extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {results: null, show: false};\n  }\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onGlobalKeyDown);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onGlobalKeyDown);\n  }\n  onGlobalKeyDown = (e) => {\n    switch (e.which) {\n    case keycode.codes.f:\n      if (e.ctrlKey) {\n        this.show();\n        e.preventDefault();\n      }\n      break;\n    case keycode.codes.f3:\n      this.show();\n      if (e.shiftKey) {\n        this.findPrev();\n      } else {\n        this.findNext();        \n      }\n      if (this._input) {\n        this._input.focus();\n        this._input.select();\n      }\n      e.preventDefault();\n      break;\n    default:\n    }\n  }\n  show() {\n    this.setState({show: true});\n    if (this._input) {\n      this._input.focus();\n      this._input.select();\n    }\n  }\n  hide = () => {\n    this.setState({results: this.props.onSearch(\"\", 0)});\n    this.setState({show: false});\n  }\n  findNext = () => {\n    if (this._input) this.setState({results: this.props.onSearch(this._input.value, 1)});\n  }\n  findPrev = () => {\n    if (this._input) this.setState({results: this.props.onSearch(this._input.value, -1)});\n  }\n  onKeyDown = (e) => {\n    switch (e.which) {\n    case keycode.codes.esc:\n      this.hide();\n      break;\n    case keycode.codes.enter:\n      this.findNext();\n      break;\n    default:\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.show && !prevState.show && this._input) {\n      this._input.select();\n      this._input.focus();\n    }\n  }\n  onChange = (e) => {\n    this.setState({results: this.props.onSearch(e.target.value, 0)});\n  }\n  render() {\n    const { show, results } = this.state;\n    const found = (results && results.count);\n    return (\n      <div className={classNames(\"SearchBox\", {\"search-hidden\": !show})} onKeyDown={this.onKeyDown}>\n        <input type=\"text\" ref={node => this._input = node} onChange={this.onChange}/>\n        {!!results && <span className=\"count\">{(results.pos + 1) + \"/\" + results.count}</span>}\n        <span className=\"separator\"/>\n        <button disabled={!found} onClick={this.findPrev} title=\"Previous\"><Glyphicon glyph=\"chevron-up\"/></button>\n        <button disabled={!found} onClick={this.findNext} title=\"Next\"><Glyphicon glyph=\"chevron-down\"/></button>\n        <button onClick={this.hide} title=\"Close find bar\"><Glyphicon glyph=\"remove\"/></button>\n      </div>\n    );\n  }\n}\n\nexport { SearchBox };\nexport default SearchBox;\n","import React from 'react';\n\nexport function withAsync(requests, Component, Loading, Error) {\n  const requestNames = Object.keys(requests);\n  return class WithAsync extends React.Component {\n    static displayName = `WithAsync(${Component.displayName || Component.name || \"Component\"})`\n\n    constructor(props, context) {\n      super(props, context);\n      const state = {};\n      requestNames.forEach(name => state[name] = {});\n      this.state = state;\n    }\n\n    setStateChecked(...args) {\n      if (!this.unmounted) {\n        this.setState(...args);\n      }\n    }\n\n    updateRequests(props, context) {\n      requestNames.forEach(name => {\n        const request = (typeof requests[name] === \"function\" ? requests[name](props, context) : requests[name]);\n        if (this.state[name].request !== request) {\n          if (request.then) {\n            this.setState({[name]: {request}}, () => {\n              request.then(result => this.setStateChecked(prevState => {\n                if (prevState[name].request === request) return {[name]: {request, result}};\n              }), error => this.setStateChecked(prevState => {\n                if (prevState[name].request === request) return {[name]: {request, error}};\n              }));\n            });\n          } else {\n            this.setState({[name]: {request, result: request}});\n          }\n        }\n      });\n    }\n\n    componentDidMount() {\n      this.updateRequests(this.props, this.context);\n    }\n    componentDidUpdate() {\n      this.updateRequests(this.props, this.context);\n    }\n\n    componentWillUnmount() {\n      this.unmounted = true;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n      return requestNames.some(name => \"error\" in nextState[name]) ||\n             requestNames.every(name => \"result\" in nextState[name]);\n    }\n\n    render() {\n      const success = {}, failure = {}, props = {...this.props};\n      let loaded = true, errors = false;\n      requestNames.forEach(name => {\n        delete props[name];\n        const data = this.state[name];\n        if (\"result\" in data) {\n          success[name] = data.result;\n        } else if (\"error\" in data) {\n          failure[name] = data.error;\n          errors = true;\n        } else {\n          loaded = false;\n        }\n      });\n      if (errors) {\n        return Error ? <Error {...props} {...failure}/> : null;\n      } else if (loaded) {\n        return <Component {...props} {...success}/>;\n      } else {\n        return Loading ? <Loading {...props}/> : null;\n      }\n    }\n  }\n}\n\nexport function withAsyncLoading(requests, Component, Error) {\n  return withAsync(requests, Component, Component, Error);\n}\n\nexport default withAsync;\n","class Cache {\n  constructor() {\n    this.cache = {};\n    this.counter = 0;\n    this.subs = [];\n  }\n  subscribe(func) {\n    this.subs.push(func);\n    func(this.counter);\n  }\n  unsubscribe(func) {\n    this.subs = this.subs.filter(f => f !== func);\n  }\n  _start() {\n    this.counter += 1;\n    this.subs.forEach(func => func(this.counter));\n  }\n  _stop() {\n    this.counter -= 1;\n    this.subs.forEach(func => func(this.counter));\n  }\n  fetch(url, opt) {\n    opt = opt || {};\n    const type = (opt.type || \"json\");\n    let curl = `${url}$${type}`;\n    if (opt.info) curl += \"$info\";\n    if (!opt.refresh && this.cache[curl]) return this.cache[curl];\n    const get = this.cache[curl] = fetch(url).then(response => {\n      if (response.ok) {\n        if (type === \"binary\") {\n          return response.arrayBuffer();\n        } else if (type === \"text\") {\n          return response.text();\n        } else {\n          if (!opt.info) {\n            let res = response.json();\n            if (opt.process) {\n              res = res.then(v => opt.process(v));\n            }\n            return res;\n          }\n          return response.text().then(text => ({\n            compressed: parseInt(response.headers.get(\"Content-Length\"), 10),\n            uncompressed: text.length,\n            json: JSON.parse(text)\n          }));\n        }\n      } else {\n        return response.json().then(err => Promise.reject(err));\n      }\n    });\n    if (opt.global) {\n      this._start();\n      get.then(() => this._stop(), () => this._stop());\n    }\n    return get;\n  }\n  refresh(url, opt) {\n    return this.fetch(url, {...opt, refresh: true});\n  }\n}\n\nexport { Cache };\nexport default Cache;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route } from 'react-router-dom';\nimport { scrollIntoView } from './scrollIntoView';\n\nfunction scrollView(Component, params) {\n  const $history = \"$history\";\n  const $hash = \"$hash\";\n\n  class ScrollView extends React.Component {\n    static displayName = `ScrollView(${Component.displayName || Component.name || \"Component\"})`\n\n    onScroll = () => {\n      if (this.scrollTimeout) clearTimeout(this.scrollTimeout);\n      this.scrollTimeout = setTimeout(() => {\n        const history = this.props[$history];\n        if (this.node) history.replace(history.location.pathname + history.location.hash, {scrollTop: this.node.scrollTop});\n      }, 500);\n    }\n\n    nodeRef(node) {\n      node = ReactDOM.findDOMNode(node);\n      if (node === this.node) return;\n      if (this.node) this.node.removeEventListener(\"scroll\", this.onScroll);\n      this.node = node;\n      if (node) node.addEventListener(\"scroll\", this.onScroll);\n    }\n    nodeRefRef = node => {\n      if (this.props.nodeRef) this.props.nodeRef(node);\n      if (this.betterRef) return;\n      this.nodeRef(node);\n    }\n    nodeRefParam = node => {\n      if (!node) this.betterRef = false;\n      this.nodeRef(node);\n      if (node) this.betterRef = true;\n    }\n\n    onHashChanged(highlight, props) {\n      const { [$hash]: hash, onHashLink } = (props || this.props);\n      if (!hash) return false;\n      const element = document.getElementById(hash.substr(1));\n      if (!element) return false;\n      scrollIntoView(element);\n      if (highlight && onHashLink) onHashLink(element);\n      return true;\n    }\n    onParamsChanged() {\n      const state = this.props[$history].location.state;\n      if (this.node && state && state.scrollTop != null) {\n        this.node.scrollTop = state.scrollTop;\n      } else if (!this.onHashChanged(true) && this.node) {\n        this.node.scrollTop = 0;\n      }\n    }\n\n    componentDidMount() {\n      this.onParamsChanged();\n    }\n\n    shouldComponentUpdate(nextProps) {\n      if (Object.keys(nextProps).some(key => (\n        key !== $hash && key !== $history && key !== \"viewRef\" && nextProps[key] !== this.props[key]\n      ))) {\n        return true;\n      }\n      if (nextProps[$hash] !== this.props[$hash]) {\n        this.onHashChanged(false, nextProps);\n      }\n      return false;\n    }\n\n    componentDidUpdate(prevProps) {\n      if (params && params.some(key => this.props[key] !== prevProps[key])) {\n        this.onParamsChanged();\n      } else if (this.props[$hash] !== prevProps[$hash]) {\n        this.onHashChanged(false);\n      }\n    }\n  \n    render() {\n      const {[$history]: history, [$hash]: hash, nodeRef, onHashLink, ...props} = this.props;\n      return <Component ref={this.nodeRefRef} nodeRef={this.nodeRefParam} {...props}/>;\n    }\n  };\n\n  return props => <Route render={({location: {hash}, history}) => <ScrollView {...props} {...{[$hash]: hash, [$history]: history}}/>}/>;\n}\n\nexport { scrollView };\nexport default scrollView;\n","import React from 'react';\nimport { OverlayTrigger } from 'react-bootstrap';\n\nclass PopupWrap extends React.Component {\n  componentDidMount() {\n    this.props.setActive(true);\n  }\n  componentWillUnmount() {\n    this.props.setActive(false);\n  }\n  render() {\n    const {setActive, children, ...props} = this.props;\n    const child = React.Children.only(children);\n    return React.cloneElement(child, props);\n  }\n}\n\nexport default class OverlayNav extends React.Component {\n  state = {active: false}\n\n  setActive = active => this.setState({active})\n\n  render() {\n    const {children, overlay, ...props} = this.props;\n    const child = React.Children.only(children);\n    return (\n      <OverlayTrigger overlay={<PopupWrap setActive={this.setActive}>{overlay}</PopupWrap>} {...props}>\n        {React.cloneElement(child, {active: this.state.active})}\n      </OverlayTrigger>\n    )\n  }\n}\n\nexport { OverlayNav };\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst $history = \"$history\";\n\nclass ScrollSaverComponent extends React.Component {\n  onScroll = scrollTop => {\n    if (this.scrollTimeout) {\n      clearTimeout(this.scrollTimeout);\n    }\n    this.scrollTimeout = setTimeout(() => {\n      delete this.scrollTimeout;\n      const history = this.props[$history];\n      history.replace(history.location.pathname + history.location.hash, {scrollTop});\n    }, 500);\n  }\n\n  componentDidMount() {\n    const state = this.props[$history].location.state;\n    if (state && state.scrollTop != null) {\n      this.props.callback(state.scrollTop);\n    }\n    if (this.props.onRef) {\n      this.props.onRef(this);\n    }\n  }\n  componentWillUnmount() {\n    if (this.props.onRef) {\n      this.props.onRef(null);\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport const ScrollSaver = props => <Route render={({history}) => <ScrollSaverComponent {...props} {...{[$history]: history}}/>}/>;\nexport default ScrollSaver;\n","export default function downloadBlob(blob, name) {\n  const url = URL.createObjectURL(blob);\n  const el = document.createElement(\"a\");\n  el.setAttribute(\"href\", url);\n  el.setAttribute(\"download\", name);\n  el.style.display = \"none\";\n  document.body.appendChild(el);\n  el.click();\n  setTimeout(() => {\n    document.body.removeChild(el);\n    URL.revokeObjectURL(url);\n  });\n}\n\nexport { downloadBlob };\n","let cryptTable = null;\n\nexport function pathHashTyped(name, hashType = 1) {\n  if (!cryptTable) {\n    cryptTable = new Uint32Array(1280);\n    let seed = 0x00100001;\n    for (let i = 0; i < 256; i++) {\n      for (let j = i; j < 1280; j += 256) {\n        seed = (seed * 125 + 3) % 0x2AAAAB;\n        const a = (seed & 0xFFFF) << 16;\n        seed = (seed * 125 + 3) % 0x2AAAAB;\n        const b = (seed & 0xFFFF);\n        cryptTable[j] = a | b;\n      }\n    }\n  }\n  let seed1 = 0x7FED7FED;\n  let seed2 = 0xEEEEEEEE;\n  for (let i = 0; i < name.length; ++i) {\n    let ch = name.charCodeAt(i);\n    if (ch >= 0x61 && ch <= 0x7A) {\n      ch -= 0x20;\n    }\n    if (ch === 0x2F) {\n      ch = 0x5C;\n    }\n    seed1 = cryptTable[hashType * 256 + ch] ^ (seed1 + seed2);\n    seed2 = (ch + seed1 + seed2 * 33 + 3) | 0;\n  }\n  return seed1;\n}\n\nexport default function pathHash(name, imExt) {\n  let m;\n  if (imExt && (m = name.match(/^(.*)\\.(?:blp|dds|gif|jpg|jpeg|png|tga)$/i))) {\n    name = m[1];\n  }\n  let delta = 0;\n  if (m = name.match(/^([A-Z])\\.w3mod:(.*)$/)) {\n    delta = m[1].charCodeAt(0) - 64;\n    name = m[2];\n  }\n  const u32 = new Uint32Array(2);\n  u32[0] = pathHashTyped(name, 1);\n  u32[1] = pathHashTyped(name, 2);\n  if (delta) {\n    let org = u32[0];\n    u32[0] += delta;\n    if (u32[0] < org) {\n      u32[1] += 1;\n    }\n  }\n  return u32;\n}\n\nexport function makeUid(id) {\n  return id[1].toString(16).padStart(8, '0') + id[0].toString(16).padStart(8, '0');\n}\n\nexport function parseUid(id) {\n  const u32 = new Uint32Array(2);\n  u32[0] = parseInt(id.substr(8, 8), 16);\n  u32[1] = parseInt(id.substr(0, 8), 16);\n  if (isNaN(u32[0]) || isNaN(u32[1])) {\n    return null;\n  }\n  return u32;\n}\n\nexport function equalUid(a, b) {\n  if (!a !== !b) return false;\n  if (!a) return true;\n  return a[0] === b[0] && a[1] === b[1];\n}\n","import LoaderBinary from './ArchiveLoader.wasm';\nimport LoaderModule from './ArchiveLoader.jscc';\nimport pathHash, { makeUid } from 'data/hash';\nimport encoding from 'text-encoding';\n\nclass ArchiveLoader {\n  images_ = {}\n\n  constructor(wasm) {\n    this.wasm = wasm;\n  }\n\n  fileId(name) {\n    if (typeof name === \"string\") {\n      return pathHash(name);\n    } else if (name != null && typeof name[0] === \"number\") {\n      return name;\n    } else {\n      return null;\n    }\n  }\n\n  hasFile(name) {\n    const id = this.fileId(name);\n    if (id == null) return false;\n    return this.wasm._hasFile(id[0], id[1]) !== 0;\n  }\n\n  loadBinary(name) {\n    const id = this.fileId(name);\n    if (id == null) return null;\n    let result = null;\n    window.postResult = buf => result = buf;\n    const res = this.wasm._loadFile(id[0], id[1], 1);\n    delete window.postResult;\n    if (!result) {\n      return null;\n    }\n    return {data: result, flags: res};\n  }\n\n  loadFile(name) {\n    const id = this.fileId(name);\n    if (id == null) return null;\n    let result = null;\n    window.postResult = buf => result = buf;\n    this.wasm._loadFile(id[0], id[1]);\n    delete window.postResult;\n    if (!result) {\n      return null;\n    }\n    return new encoding.TextDecoder().decode(result);\n  }\n\n  loadImage(name) {\n    const id = this.fileId(name);\n    if (id == null) return null;\n    const key = makeUid(id);\n\n    if (this.images_[key]) return this.images_[key];\n\n    let result = null;\n    window.postResult = buf => result = buf;\n    this.wasm._loadImage(id[0], id[1]);\n    delete window.postResult;\n    if (!result) {\n      return null;\n    }\n\n    const blob = new Blob([result], {type: \"image/png\"});\n    return this.images_[key] = URL.createObjectURL(blob);\n  }\n\n  loadJASS(options) {\n    options = options || {};\n    const opt = this.wasm._malloc(10);\n    const mem = this.wasm.HEAPU8;\n    mem[opt + 0] = options.indent || 0;\n    mem[opt + 1] = options.restoreInt || 0;\n    mem[opt + 2] = options.restoreId || 0;\n    mem[opt + 3] = options.insertLines || 0;\n    mem[opt + 4] = options.restoreStrings || 0;\n    mem[opt + 5] = options.renameGlobals || 0;\n    mem[opt + 6] = options.renameFunctions || 0;\n    mem[opt + 7] = options.renameLocals || 0;\n    mem[opt + 8] = options.inlineFunctions || 0;\n    mem[opt + 9] = options.getObjectName || 0;\n    let result = null;\n    window.postResult = buf => result = buf;\n    this.wasm._loadJASS(opt);\n    delete window.postResult;\n    this.wasm._free(opt);\n\n    if (!result) {\n      return null;\n    }\n\n    const lines = [];\n    const dec = new encoding.TextDecoder();\n    let prev = 0;\n    for (let i = 0; i < result.length; ++i) {\n      if (result[i] === 0) {\n        lines.push(dec.decode(result.subarray(prev, i)));\n        prev = i + 1;\n      }\n    }\n    return lines;\n  }\n}\n\nexport default function loadArchive(data) {\n  const u32 = new Uint32Array(data.buffer || data, 0, 1);\n  if (u32[0] !== 0x31585A47) {\n    return Promise.reject(\"Outdated archive format. Try parsing the map again.\");\n  }\n  return LoaderModule({\n    locateFile(name) {\n      if (name === \"ArchiveLoader.wasm\") {\n        return LoaderBinary;\n      } else {\n        return name;\n      }\n    }\n  }).then(wasm => {\n    const array = new Uint8Array(data);\n    const addr = wasm._malloc(array.length);\n    wasm.HEAPU8.set(array, addr);\n    wasm._openArchive(addr, array.length);\n    wasm._free(addr);\n\n    return new ArchiveLoader(wasm);\n  });\n}\n","import encoding from 'text-encoding';\nimport Worker from './parser.worker.js';\n\nconst parseMapPromise = (worker, meta, map, progress) => new Promise((resolve, reject) => {\n  worker.addEventListener(\"message\", e => {\n    if (e.data.progress) {\n      if (progress) progress(e.data.progress);\n    } else if (e.data.result) {\n      worker.terminate();\n      resolve(e.data.result);\n    } else {\n      let error = e.data.error;\n      if (error instanceof ArrayBuffer || ArrayBuffer.isView(error)) {\n        error = new encoding.TextDecoder().decode(error);\n      }\n      worker.terminate();\n      reject(error);\n    }\n  });\n  worker.postMessage({meta, map});\n});\n\nexport default class MapParser {\n  worker = new Worker();\n\n  onProgress = () => undefined;\n\n  async parse(meta, map) {\n    meta = await meta;\n    this.onProgress(0);\n    return await parseMapPromise(this.worker, meta, map, this.onProgress);\n  }\n\n  terminate() {\n    this.worker.terminate();\n  }\n}\n","let notifyComp = null;\nlet pendingNotify = null;\n\nexport function setNotifyComponent(comp) {\n  notifyComp = comp;\n  if (comp && pendingNotify) {\n    comp.setNotification(pendingNotify.message, pendingNotify.type);\n    pendingNotify = null;\n  }\n}\nexport function notifyMessage(message, type=\"info\") {\n  if (notifyComp) {\n    notifyComp.setNotification(message, type);\n  } else {\n    pendingNotify = {message, type};\n  }\n}\n","import React from 'react';\nimport { Cache } from 'utils';\nimport pathHash, { makeUid } from './hash';\nimport loadArchive from 'maps/archive';\nimport MapParser from 'maps/parser';\nimport { notifyMessage } from 'notify';\nimport IdbKvStore from 'idb-kv-store';\n\nconst postProcess = data => {\n  Object.values(data.objects).forEach(obj => {\n    const repl = {};\n    Object.keys(obj.data).forEach(key => repl[key.toLowerCase()] = obj.data[key]);\n    obj.data = repl;\n  });\n  return data;\n};\n\nconst readFile = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = () => reject(reader.error);\n  reader.onabort = () => reject();\n  reader.readAsArrayBuffer(file);\n});\n\nclass BaseData {\n  constructor(cache, build, name) {\n    this.cache = cache;\n    this.id = build;\n    this.name = name;\n    this.core = true;\n  }\n\n  objects() {\n    return this.cache.fetch(`/api/${this.id}.json`, {global: true, process: postProcess});\n  }\n\n  listFile() {\n    return this.cache.fetch(`/api/rootlist.txt`, {global: true, type: \"text\"});\n  }\n\n  hasFile() {\n    return false;\n  }\n\n  file() {\n    return null;\n  }\n  binary() {\n    return null;\n  }\n  image(name) {\n    return this.cache.image(name);\n  }\n\n  jass() {\n    return null;\n  }\n\n  icon(id) {\n    return this.cache.icon(id);\n  }\n  iconByName(name) {\n    return this.cache.iconByName(name);\n  }\n}\n\nconst fileId = (name, imExt) => {\n  if (typeof name === \"string\") {\n    return pathHash(name, imExt);\n  } else if (name != null && typeof name[0] === \"number\") {\n    return name;\n  } else {\n    return null;\n  }\n};\n\nclass MapData {\n  files_ = {};\n  images_ = {};\n\n  constructor(cache, archive, id, name) {\n    this.cache = cache;\n    this.archive = archive;\n    this.id = id;\n    this.name = name.replace(/\\|(c[0-9a-fA-F]{6,8}|r)/g, \"\");\n    this.isMap = true;\n  }\n\n  objects() {\n    if (this.objects_) {\n      return this.objects_;\n    }\n    const text = this.archive.loadFile(\"objects.json\");\n    if (!text) {\n      const version = Math.max(...Object.keys(this.cache.versions));\n      const data = this.cache.data(version);\n      return this.objects_ = (data ? data.then(v => v.objects()) : Promise.resolve(null));\n    }\n    return this.objects_ = Promise.resolve(text ? postProcess(JSON.parse(text)) : null);\n  }\n\n  listFile() {\n    return this.file(\"listfile.txt\");\n  }\n\n  hasFile(name) {\n    return this.archive.hasFile(fileId(name));\n  }\n\n  file(name) {\n    if (this.files_.hasOwnProperty(name)) {\n      return this.files_[name];\n    }\n    return this.files_[name] = this.archive.loadFile(name);\n  }\n  binary(name) {\n    return this.archive.loadBinary(name);\n  }\n\n  jass(options) {\n    return this.archive.loadJASS(options);\n  }\n\n  image(name, tileset) {\n    return this.archive.loadImage(name) || this.cache.image(name, tileset);\n  }\n\n  icon(id) {\n    const image = this.archive.loadImage(id);\n    if (image) {\n      return {\n        backgroundImage: `url(${image})`,\n        backgroundSize: \"100%\",\n      };\n    } else {\n      return this.cache.icon(id);\n    }\n  }\n\n  iconByName(name) {\n    return this.icon(pathHash(name));\n  }\n}\n\nexport default class AppCache extends Cache {\n  static Context = React.createContext(null);\n  static DataContext = React.createContext(null);\n  static MapsContext = React.createContext({});\n\n  constructor(root) {\n    super();\n    this.root = root;\n\n    try {\n      this.dataStore = new IdbKvStore(\"mapData\");\n      this.nameStore = new IdbKvStore(\"mapNames\");\n    } catch (e) {\n      this.dataStore = null;\n      this.nameStore = null;\n    }\n\n    const proms = [\n      this.fetch('/api/images.dat', {type: \"binary\"}),\n      this.fetch('/api/versions.json'),\n    ];\n    if (this.nameStore) {\n      proms.push(this.nameStore.json());\n    }\n    this.ready = Promise.all(proms).then(([images, versions, names]) => {\n      this.icons_ = new Map();\n      const imageList = new Uint32Array(images);\n      for (let i = 0; i < imageList.length; i += 2) {\n        // this will cause precision loss but we have to deal with it\n        const uid = makeUid(imageList.subarray(i, i + 2));\n        this.icons_.set(uid, (i / 2) + 1000 * 256);\n      }\n  \n      this.versions = versions.versions;\n\n      if (names) {\n        this.maps = names;\n        this.root.forceUpdate();\n      }\n\n      if (versions.custom) {\n        this.custom = {};\n        this.customDesc = {};\n        Object.entries(versions.custom).forEach(([id, info]) => {\n          this.maps[id] = info.name;\n          this.custom[id] = info.data;\n          this.customDesc[id] = info.desc;\n        });\n      }\n    });\n  }\n\n  baseData_ = {};\n  mapNames_ = {};\n  mapData_ = {};\n  maps = {};\n\n  metaRaw() {\n    return this.fetch('/api/meta.gzx', {type: \"binary\", global: true});\n  }\n  meta() {\n    if (this.meta_) {\n      return this.meta_;\n    }\n    return this.meta_ = this.metaRaw().then(data => loadArchive(data));\n  }\n\n  isLocal(build) {\n    return !!(this.maps[build] && !this.custom[build]);\n  }\n\n  data(build) {\n    if (this.maps[build]) {\n      if (this.mapData_[build]) {\n        return this.mapData_[build];\n      }\n      if (this.custom && this.custom[build]) {\n        return this.mapData_[build] = this.fetch(`/api/${this.custom[build]}`, {type: \"binary\", global: true})\n          .then(data => loadArchive(data))\n          .then(arc => new MapData(this, arc, build, this.maps[build]));\n      } else {\n        return this.mapData_[build] = this.dataStore.get(build)\n          .then(blob => readFile(blob))\n          .then(data => loadArchive(data))\n          .then(arc => new MapData(this, arc, build, this.maps[build]))\n          .catch(err => Promise.reject(notifyMessage(err.toString(), \"danger\")));\n      }\n    } else if (this.versions[build]) {\n      if (this.baseData_[build]) {\n        return this.baseData_[build];\n      }\n      return this.baseData_[build] = Promise.resolve(new BaseData(this, build, this.versions[build]));\n    }\n    return null;\n  }\n  hasData(build) {\n    return !!(this.maps[build] || this.versions[build]);\n  }\n\n  icon(id) {\n    const index = this.icons_.get(makeUid(id));\n    if (index) {\n      const col = index % 16;\n      const row = ((index / 16) | 0) % 16;\n      const image = (index / 256) | 0;\n      return {\n        backgroundImage: `url(/api/icons${image}.png)`,\n        backgroundPosition: `-${col * 16}px -${row * 16}px`,\n      };\n    } else {\n      return null;\n    }\n  }\n  iconByName(name) {\n    return this.icon(pathHash(name));\n  }\n\n  image(name, tileset) {\n    let id = fileId(name, true);\n    const uid = makeUid(id);\n    let path = `/api/images/${uid}`;\n    if (tileset) {\n      path += `?tileset=${tileset}`;\n    }\n    return path;\n  }\n\n  binary(name, tileset) {\n    let id = fileId(name, true);\n    const uid = makeUid(id);\n    let path = `/api/files/${uid}`;\n    if (tileset) {\n      path += `?tileset=${tileset}`;\n    }\n    return path;\n  }\n\n  loadMap(file) {\n    this.abortMap();\n    const meta = this.metaRaw();\n    readFile(file).then(map => {\n      this.parser = new MapParser();\n      this.parser.onProgress = stage => this.root.onMapProgress(stage);\n      this.root.beginMapLoad(file.name);\n      this.parser.parse(meta, map)\n        .then(data => {\n          delete this.parser;\n\n          let id = 1;\n          while (this.maps.hasOwnProperty(`map${id}`)) {\n            id += 1;\n          }\n          id = `map${id}`;\n    \n          if (this.dataStore) {\n            Promise.all([\n              this.nameStore.set(id, file.name),\n              this.dataStore.set(id, new Blob([data], {type: \"application/octet-stream\"}))\n            ]).catch(() => {\n              this.nameStore.remove(id);\n              this.dataStore.remove(id);\n            });\n          }\n\n          this.maps = {...this.maps, [id]: file.name};\n          this.mapData_[id] = loadArchive(data).then(arc => new MapData(this, arc, id, file.name))\n            .catch(err => Promise.reject(notifyMessage(err.toString(), \"danger\")));\n\n          this.root.finishMapLoad(id);\n        })\n        .catch(err => {\n          delete this.parser;\n\n          this.root.failMapLoad(typeof err === \"string\" ? err : false);\n          console.error(err);\n        });\n    });\n  }\n  abortMap() {\n    if (this.parser) {\n      this.parser.terminate();\n      delete this.parser;\n    }\n  }\n\n  unloadMap(id) {\n    if (this.maps[id]) {\n      if (window.confirm(`Are you sure you want to unload ${this.maps[id]}?`)) {\n        this.maps = {...this.maps};\n        delete this.maps[id];\n        delete this.mapData_[id];\n        if (this.dataStore) {\n          this.dataStore.remove(id);\n          this.nameStore.remove(id);\n        }\n        this.root.forceUpdate();\n      }\n    }\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TitleContext = React.createContext(null);\n\nexport default class Title extends React.PureComponent {\n  static contextType = TitleContext;\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    combiner: PropTypes.func,\n  }\n  static defaultProps = {\n    combiner: (prev, current) => `${prev} - ${current}`,\n  }\n\n  children = []\n\n  componentDidMount() {\n    if (this.context) {\n      this.context.children.push(this);\n      this.context.updateTitle();\n    }\n  }\n  componentDidUpdate() {\n    this.updateTitle();\n  }\n  componentWillUnmount() {\n    if (this.context) {\n      let index = this.context.children.indexOf(this);\n      if (index >= 0) {\n        this.context.children.splice(index, 1);\n        if (index >= this.context.children.length) {\n          this.context.updateTitle();\n        }\n      }\n    }\n  }\n\n  updateTitle() {\n    let root = this;\n    while (root.context) {\n      root = root.context;\n    }\n    document.title = root.getTitle();\n  }\n  getTitle(prev) {\n    let {title, combiner} = this.props;\n    if (prev) {\n      title = combiner(prev, title);\n    }\n    if (this.children.length) {\n      title = this.children[this.children.length - 1].getTitle(title);\n    }\n    return title;\n  }\n\n  render() {\n    const {children} = this.props;\n    if (!children) {\n      return null;\n    }\n    return (\n      <TitleContext.Provider value={this}>\n        {children}\n      </TitleContext.Provider>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Options extends React.Component {\n  static Context = React.createContext({});\n\n  constructor(props) {\n    super(props);\n\n    const state = {};\n    if (window.localStorage) {\n      const value = window.localStorage.getItem(\"options\");\n      if (value) {\n        try {\n          Object.assign(state, JSON.parse(value));\n        } catch (e) {\n        }\n      }\n    }\n    state.update = (name, value) => this.setState({[name]: value});\n    this.state = state;\n  }\n\n  componentDidUpdate() {\n    if (window.localStorage) {\n      const opt = {...this.state};\n      delete opt.update;\n      window.localStorage.setItem(\"options\", JSON.stringify(opt));\n    }\n  }\n\n  render() {\n    return (\n      <Options.Context.Provider value={this.state}>\n        {this.props.children}\n      </Options.Context.Provider>\n    );\n  }\n}\n","export default {\n  \"unit\": \"Units\",\n  \"item\": \"Items\",\n  \"destructible\": \"Destructibles\",\n  \"doodad\": \"Doodads\",\n  \"ability\": \"Abilities\",\n  \"buff\": \"Buffs/Effects\",\n  \"upgrade\": \"Upgrades\",\n};\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Nav, NavItem, NavDropdown, MenuItem } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport './DataMenu.scss'\n\nimport AppCache from 'data/cache';\nimport objectTypes from 'objects/types';\n\nconst ObjectMenuInner = ({ match: { params: { build, type } } }) => (\n  <NavDropdown eventKey=\"objects\" title={objectTypes[type] || \"Objects\"} active={objectTypes[type] != null} id=\"objects-menu\">\n    {Object.keys(objectTypes).map(t => (\n      <LinkContainer key={t} to={`/${build}/${t}`}>\n        <MenuItem eventKey={`objects.${t}`}>\n          <span className={`ObjectIcon ${t}`} />{objectTypes[t]}\n        </MenuItem>\n      </LinkContainer>\n    ))}\n  </NavDropdown>\n);\n\nconst ObjectMenu = () => <Route path=\"/:build/:type?\" component={ObjectMenuInner} />;\n\nconst DataMenu = () => (\n  <AppCache.DataContext.Consumer>\n    {data => (\n      <Nav>\n        <LinkContainer to={`/${data.id}`} exact>\n          <NavItem eventKey=\"build\">{data.name}</NavItem>\n        </LinkContainer>\n        <LinkContainer to={`/${data.id}/files`}>\n          <NavItem eventKey=\"files\">Files</NavItem>\n        </LinkContainer>\n        {(!data.isMap || data.hasFile(\"objects.json\")) && <ObjectMenu />}\n        {(!!data.isMap) && (\n          <LinkContainer to={`/${data.id}/map`}>\n            <NavItem eventKey=\"map\">Map</NavItem>\n          </LinkContainer>\n        )}\n        {(data.hasFile(\"war3map.j\") || data.hasFile(\"Scripts\\\\war3map.j\")) && (\n          <LinkContainer to={`/${data.id}/script`}>\n            <NavItem eventKey=\"script\">Script</NavItem>\n          </LinkContainer>\n        )}\n      </Nav>\n    )}\n  </AppCache.DataContext.Consumer>\n);\nconst DataMenu2 = () => (\n  <AppCache.DataContext.Consumer>\n    {data => (\n      <React.Fragment>\n\n        <ul className='DataMenu'>\n          <LinkContainer className='title' to={`/${data.id}`} exact>\n            <NavItem eventKey=\"build\">{data.name}</NavItem>\n          </LinkContainer>\n\n          <LinkContainer to={`/${data.id}/files`}>\n            <NavItem eventKey=\"files\">Files</NavItem>\n          </LinkContainer>\n\n          {(!data.isMap || data.hasFile(\"objects.json\")) &&\n            <React.Fragment>\n              <li className='sep'> | </li>\n              <ObjectMenu />\n            </React.Fragment>\n          }\n          {(!!data.isMap) && (\n            <React.Fragment>\n              <li className='sep'> | </li>\n              <LinkContainer to={`/${data.id}/map`}>\n                <NavItem eventKey=\"map\">Map</NavItem>\n              </LinkContainer>\n            </React.Fragment>\n          )}\n          {(data.hasFile(\"war3map.j\") || data.hasFile(\"Scripts\\\\war3map.j\")) && (\n            <React.Fragment>\n              <li className='sep'> | </li>\n              <LinkContainer to={`/${data.id}/script`}>\n                <NavItem eventKey=\"script\">Script</NavItem>\n              </LinkContainer>\n            </React.Fragment>\n          )}\n        </ul>\n      </React.Fragment>\n    )}\n  </AppCache.DataContext.Consumer>\n);\n\nexport default DataMenu2;\n","import React from 'react';\nimport { withAsync } from 'utils';\nimport AppCache from 'data/cache';\n\nexport const RawNames = React.createContext(false);\nexport const SortNames = React.createContext(true);\nexport const BuildCtx = React.createContext(0);\nexport const TypeCtx = React.createContext(\"\");\nexport const IdCtx = React.createContext(\"\");\nexport const RawNamesSwitch = React.createContext(undefined); \n\nexport const ObjectIcon = ({object}) => (\n  <AppCache.DataContext.Consumer>\n    {cache => {\n      if (!object || object.icon == null) {\n        return null;\n      }\n      const icon = cache.icon(object.icon);\n      return <span className=\"Icon\" style={icon}/>;\n    }}\n  </AppCache.DataContext.Consumer>\n);\n\nexport function nextComma(str, c) {\n  if (c >= str.length) return -1;\n  let instr = false;\n  for (++c; c < str.length; ++c) {\n    if (str[c] === '\"') {\n      instr = !instr;\n    }\n    if (str[c] === ',' && !instr) {\n      return c;\n    }\n  }\n  return c;\n}\n\nexport const UpgradeData = {\n  \"atdb\": \"Attack Dice Bonus - Base\",\n  \"atdm\": \"Attack Dice Bonus - Increment\",\n  \"levb\": \"Ability Level Bonus - Base\",\n  \"levm\": \"Ability Level Bonus - Increment\",\n  \"levc\": \"Ability Affected\",\n  \"hpxb\": \"Hit Point Bonus - Base\",\n  \"hpxm\": \"Hit Point Bonus - Increment\",\n  \"mnxb\": \"Mana Point Bonus - Base\",\n  \"mnxm\": \"Mana Point Bonus - Increment\",\n  \"mvxb\": \"Movement Speed Bonus - Base\",\n  \"mvxm\": \"Movement Speed Bonus - Increment\",\n  \"mnrb\": \"Mana Regeneration Bonus (%) - Base\",\n  \"mnrm\": \"Mana Regeneration Bonus (%) - Increment\",\n  \"hpob\": \"Hit Point Bonus (%) - Base\",\n  \"hpom\": \"Hit Point Bonus (%) - Increment\",\n  \"manb\": \"Mana Point Bonus (%) - Base\",\n  \"manm\": \"Mana Point Bonus (%) - Increment\",\n  \"movb\": \"Movement Speed Bonus (%) - Base\",\n  \"movm\": \"Movement Speed Bonus (%) - Increment\",\n  \"atxb\": \"Attack Damage Bonus - Base\",\n  \"atxm\": \"Attack Damage Bonus - Increment\",\n  \"lumb\": \"Lumber Harvest Bonus - Base\",\n  \"lumm\": \"Lumber Harvest Bonus - Increment\",\n  \"atrb\": \"Attack Range Bonus - Base\",\n  \"atrm\": \"Attack Range Bonus - Increment\",\n  \"atsb\": \"Attack Speed Bonus (%) - Base\",\n  \"atsm\": \"Attack Speed Bonus (%) - Increment\",\n  \"spib\": \"Spike Damage - Base\",\n  \"spim\": \"Spike Damage - Increment\",\n  \"hprb\": \"Hit Point Regeneration Bonus (%) - Base\",\n  \"hprm\": \"Hit Point Regeneration Bonus (%) - Increment\",\n  \"sigb\": \"Sight Range Bonus - Base\",\n  \"sigm\": \"Sight Range Bonus - Increment\",\n  \"atcb\": \"Attack Target Count Bonus - Base\",\n  \"atcm\": \"Attack Target Count Bonus - Increment\",\n  \"adlb\": \"Attack Damage Loss Bonus - Base\",\n  \"adlm\": \"Attack Damage Loss Bonus - Increment\",\n  \"minb\": \"Gold Harvest Bonus - Base\",\n  \"minm\": \"Gold Harvest Bonus - Increment\",\n  \"raib\": \"Raise Dead Duration Bonus - Base\",\n  \"raim\": \"Raise Dead Duration Bonus - Increment\",\n  \"entb\": \"Gold Harvest Bonus (Entangle) - Base\",\n  \"entm\": \"Gold Harvest Bonus (Entangle) - Increment\",\n  \"enwb\": \"Attacks to Enable\",\n  \"audb\": \"Aura Data Bonus - Base\",\n  \"audm\": \"Aura Data Bonus - Increment\",\n  \"asdb\": \"Attack Spill Distance Bonus - Base\",\n  \"asdm\": \"Attack Spill Distance Bonus - Increment\",\n  \"asrb\": \"Attack Spill Radius Bonus - Base\",\n  \"asrm\": \"Attack Spill Radius Bonus - Increment\",\n  \"roob\": \"Attacks to Enable (Rooted)\",\n  \"urob\": \"Attacks to Enable (Uprooted)\",\n  \"uart\": \"New Defense Type\",\n  \"utma\": \"New Availability\",\n  \"ttma\": \"Unit Type Affected\",\n};\n\nexport const TileSets = {\n  \"A\": \"Ashenvale\",\n  \"B\": \"Barrens\",\n  \"K\": \"Black Citadel\",\n  \"Y\": \"Cityscape\",\n  \"X\": \"Dalaran\",\n  \"J\": \"Dalaran Ruins\",\n  \"D\": \"Dungeon\",\n  \"C\": \"Felwood\",\n  \"I\": \"Icecrown Glacier\",\n  \"F\": \"Lordaeron Fall\",\n  \"L\": \"Lordaeron Summer\",\n  \"W\": \"Lordaeron Winter\",\n  \"N\": \"Northrend\",\n  \"O\": \"Outland\",\n  \"Z\": \"Sunken Ruins\",\n  \"G\": \"Underground\",\n  \"V\": \"Village\",\n  \"Q\": \"Village Fall\",\n  \"*\": \"All\",\n};\nexport const DestructableCategory = {\n  \"D\": \"Trees/Destructibles\",\n  \"P\": \"Pathing Blockers\",\n  \"B\": \"Bridges/Ramps\",\n};\nexport const DoodadCategory = {\n  \"O\": \"Props\",\n  \"S\": \"Structures\",\n  \"W\": \"Water\",\n  \"C\": \"Cliff/Terrain\",\n  \"E\": \"Environment\",\n  \"Z\": \"Cinematic\",\n};\nexport const TechList = {\n  \"HERO\": \"Any Hero\",\n  \"TALT\": \"Any Altar\",\n  \"TWN1\": \"Any Tier 1 Hall\",\n  \"TWN2\": \"Any Tier 2 Hall\",\n  \"TWN3\": \"Any Tier 3 Hall\",\n  \"TWN4\": \"Any Tier 4 Hall\",\n  \"TWN5\": \"Any Tier 5 Hall\",\n  \"TWN6\": \"Any Tier 6 Hall\",\n  \"TWN7\": \"Any Tier 7 Hall\",\n  \"TWN8\": \"Any Tier 8 Hall\",\n  \"TWN9\": \"Any Tier 9 Hall\",\n};\n\nexport function getString(object, col, index=-1) {\n  const text = object.data[col.toLowerCase()] || \"\";\n  if (index < 0) {\n    const cmp = nextComma(text, -1);\n    if (cmp >= 2 && cmp >= text.length && text[0] === '\"' && text[cmp - 1] === '\"') {\n      return text.substr(1, cmp - 2);\n    } else {\n      return text;\n    }\n  } else {\n    let pos = -1;\n    let cur = 0;\n    let prev = 0;\n    while ((pos = nextComma(text, pos)) >= 0) {\n      if (cur === index) {\n        if (pos - prev >= 2 && text[prev] === '\"' && text[pos - 1] === '\"') {\n          return text.substr(prev + 1, pos - prev - 2);\n        } else {\n          return text.substr(prev, pos - prev);\n        }\n      }\n      prev = pos + 1;\n      cur++;\n    }\n    return \"\";\n  }\n}\n\nexport function listObjectData(object, data, rawNames, callback) {\n  const type = object.type === \"item\" ? \"unit\" : object.type;\n  const meta = data.meta[type] || [];\n\n  const getName = meta => {\n    if (object.type !== \"upgrade\") return meta.display;\n    const m = meta.field.match(/^(base|mod|code)(\\d)$/);\n    if (!m) return meta.display;\n    const effect = object.data[`effect${m[2]}`] || \"\";\n    const m2 = effect.match(/^r([a-z][a-z][a-z])$/);\n    if (!m2) return null;\n    const name = UpgradeData[m2[1] + m[1][0]];\n    if (!name) return null;\n    return meta.display.replace(\"%s\", name);\n  };\n\n  const getInt = col => {\n    col = col.toLowerCase();\n    return object.data[col] && parseInt(object.data[col], 10) || 0;\n  }\n\n  let use = 0;\n  let levels = 0;\n  switch (object.type) {\n  case \"unit\":\n    if (getInt(\"isbldg\")) {\n      use = 4;\n    } else if (object.id.match(/^[A-Z]/)) {\n      use = 2;\n    } else {\n      use = 1;\n    }\n    break;\n  case \"item\":\n    use = 8;\n    break;\n  case \"ability\":\n    levels = getInt(\"levels\");\n    if (object.data.code) {\n      callback(\"code\", rawNames ? \"code\" : \"Ability Code\", object.data.code, {type: \"abilCode\"});\n    }\n    break;\n  case \"doodad\":\n    levels = getInt(\"numVar\");\n    break;\n  case \"upgrade\":\n    levels = getInt(\"maxlevel\");\n    break;\n  default:\n  }\n\n  const metaNames = new Map();\n  meta.forEach(row => metaNames.set(row, getName(row)));\n  meta.filter(row => metaNames.get(row)).sort((a, b) => {\n    if ((a.flags & 16) !== (b.flags & 16)) return (a.flags & 16) - (b.flags & 16);\n    if (a.category !== b.category) return data.categories[a.category].localeCompare(data.categories[b.category]);\n    return metaNames.get(a).localeCompare(metaNames.get(b));\n  }).forEach(row => {\n    if ((row.flags & use) !== use) {\n      return;\n    }\n    if (row.specific && row.specific.indexOf(object.type === \"ability\" ? object.data.code : object.id) < 0) {\n      return;\n    }\n\n    if ((row.flags & 16) && !levels) {\n      return;\n    }\n\n    let field = row.field;\n    if (row.data) {\n      field += String.fromCharCode(65 + row.data - 1);\n    }\n    if (row.flags & 16) {\n      for (let i = 0; i < levels; ++i) {\n        let fname = field;\n        if (row.index < 0) {\n          if (row.flags & 32) {\n            if (i > 0) fname += i;\n          } else {\n            fname += (i + 1);\n          }\n        }\n        const value = (row.index < 0 ? getString(object, fname, -1) : getString(object, field, i));\n        callback(`${field}${i}`, rawNames ? fname : `Level ${i + 1} - ${data.categories[row.category]} - ${metaNames.get(row)}`, value, row);\n      }\n    } else {\n      const value = getString(object, field, row.index);\n      callback(`${field}${row.index}`, rawNames ? field : `${data.categories[row.category]} - ${metaNames.get(row)}`, value, row);\n    }\n  });\n};\n\nconst ObjectFilters = {};\n\nObjectFilters.unit = [\n  {\n    name: obj => obj.base ? \"Custom Units\" : \"Standard Units\",\n    order: [\"Standard Units\", \"Custom Units\"],\n  },\n  {\n    name: obj => {\n      switch (obj.data.race) {\n      case \"human\": return \"Human\";\n      case \"orc\": return \"Orc\";\n      case \"undead\": return \"Undead\";\n      case \"nightelf\": return \"Night Elf\";\n      case \"naga\": return \"Neutral - Naga\";\n      default:\n        if (parseInt(obj.data.hostilepal, 10)) {\n          return \"Neutral Hostile\";\n        } else {\n          return \"Neutral Passive\";\n        }\n      }\n    },\n    order: [\"Human\", \"Orc\", \"Undead\", \"Night Elf\", \"Neutral - Naga\", \"Neutral Hostile\", \"Neutral Passive\"],\n  },\n  {\n    name: obj => parseInt(obj.data.campaign, 10) ? \"Campaign\" : \"Melee\",\n    order: [\"Melee\", \"Campaign\"],\n  },\n  {\n    name: obj => {\n      if (parseInt(obj.data.special, 10)) {\n        return \"Special\";\n      } else if (parseInt(obj.data.isbldg, 10)) {\n        return \"Buildings\";\n      } else if (obj.id.match(/^[A-Z]/)) {\n        return \"Heroes\";\n      } else {\n        return \"Units\";\n      }\n    },\n    order: [\"Units\", \"Buildings\", \"Heroes\", \"Special\"],\n  },\n];\n\nObjectFilters.item = [\n  {\n    name: obj => obj.base ? \"Custom Items\" : \"Standard Items\",\n    order: [\"Standard Items\", \"Custom Items\"],\n  },\n  {\n    name: obj => {\n      switch (obj.data.class) {\n      case \"PowerUp\": return \"Power Up\";\n      default: return obj.data.class;\n      }\n    },\n    order: [\"Permanent\", \"Charged\", \"Power Up\", \"Artifact\", \"Purchasable\", \"Campaign\", \"Miscellaneous\"],\n  },\n];\n\nObjectFilters.destructible = [\n  {\n    name: obj => obj.base ? \"Custom Destructibles\" : \"Standard Destructibles\",\n    order: [\"Standard Destructibles\", \"Custom Destructibles\"],\n  },\n  {\n    name: obj => {\n      switch (obj.data.category) {\n      case \"D\": return \"Trees/Destructibles\";\n      case \"P\": return \"Pathing Blockers\";\n      case \"B\": return \"Bridges/Ramps\";\n      default: return \"Others\";\n      }\n    },\n    order: [\"Trees/Destructibles\", \"Pathing Blockers\", \"Bridges/Ramps\", \"Others\"],\n  },\n];\n\nObjectFilters.doodad = [\n  {\n    name: obj => obj.base ? \"Custom Doodads\" : \"Standard Doodads\",\n    order: [\"Standard Doodads\", \"Custom Doodads\"],\n  },\n  {\n    name: obj => {\n      switch (obj.data.category) {\n      case \"O\": return \"Props\";\n      case \"S\": return \"Structures\";\n      case \"W\": return \"Water\";\n      case \"C\": return \"Cliff/Terrain\";\n      case \"E\": return \"Environment\";\n      case \"Z\": return \"Cinematic\";\n      default: return \"Others\";\n      }\n    },\n    order: [\"Props\", \"Structures\", \"Water\", \"Cliff/Terrain\", \"Environment\", \"Cinematic\", \"Others\"],\n  },\n];\n\nObjectFilters.ability = [\n  {\n    name: obj => obj.base ? \"Custom Abilities\" : \"Standard Abilities\",\n    order: [\"Standard Abilities\", \"Custom Abilities\"],\n  },\n  {\n    name: obj => {\n      switch (obj.data.race) {\n      case \"human\": return \"Human\";\n      case \"orc\": return \"Orc\";\n      case \"undead\": return \"Undead\";\n      case \"nightelf\": return \"Night Elf\";\n      case \"creeps\": return \"Neutral Hostile\";\n      case \"naga\": return \"Neutral Passive\";\n      case \"demon\": return \"Neutral Passive\";\n      default: return \"Special\";\n      }\n    },\n    order: [\"Human\", \"Orc\", \"Undead\", \"Night Elf\", \"Neutral Hostile\", \"Neutral Passive\", \"Special\"],\n  },\n  {\n    name: obj => {\n      if (parseInt(obj.data.hero, 10)) {\n        return \"Heroes\";\n      } else if (parseInt(obj.data.item, 10)) {\n        return \"Items\";\n      } else {\n        return \"Units\";\n      }\n    },\n    order: [\"Units\", \"Heroes\", \"Items\"],\n  },\n];\n\nObjectFilters.buff = [\n  {\n    name: obj => obj.base ? \"Custom Buffs/Effects\" : \"Standard Buffs/Effects\",\n    order: [\"Standard Buffs/Effects\", \"Custom Buffs/Effects\"],\n  },\n  {\n    name: obj => {\n      switch (obj.data.race) {\n      case \"human\": return \"Human\";\n      case \"orc\": return \"Orc\";\n      case \"undead\": return \"Undead\";\n      case \"nightelf\": return \"Night Elf\";\n      default: return \"Special\";\n      }\n    },\n    order: [\"Human\", \"Orc\", \"Undead\", \"Night Elf\", \"Special\"],\n  },\n  {\n    name: obj => {\n      if (parseInt(obj.data.isEffect, 10)) {\n        return \"Effect\";\n      } else {\n        return \"Buff\";\n      }\n    },\n    order: [\"Buff\", \"Effect\"],\n  },\n];\n\nObjectFilters.upgrade = [\n  {\n    name: obj => obj.base ? \"Custom Upgrades\" : \"Standard Upgrades\",\n    order: [\"Standard Upgrades\", \"Custom Upgrades\"],\n  },\n  {\n    name: obj => {\n      switch (obj.data.race) {\n      case \"human\": return \"Human\";\n      case \"orc\": return \"Orc\";\n      case \"undead\": return \"Undead\";\n      case \"nightelf\": return \"Night Elf\";\n      default: return \"Special\";\n      }\n    },\n    order: [\"Human\", \"Orc\", \"Undead\", \"Night Elf\", \"Special\"],\n  },\n];\n\nexport { ObjectFilters };\n","import React from 'react';\nimport encoding from 'text-encoding';\nimport { Modal, Button, Radio, FormGroup, ControlLabel, FormControl, Checkbox } from 'react-bootstrap';\nimport objectTypes from './types';\nimport { listObjectData, TileSets, DestructableCategory, DoodadCategory, TechList } from './ObjectCtx';\nimport { downloadBlob } from 'utils';\nimport Options from 'data/options';\n\nclass DataCompiler {\n  constructor(type, json, names) {\n    this.type = type;\n    this.json = json;\n    this.names = names;\n\n    if (this.json) {\n      this.outJs = {};\n    } else {\n      this.outLines = [];\n    }\n  }\n\n  onObject(id) {\n    if (this.json) {\n      this.curJs = {};\n      this.outJs[id] = this.curJs;\n    } else {\n      this.outLines.push(`[${id}]`);\n    }\n  }\n\n  onValue(key, value) {\n    if (this.json) {\n      this.curJs[key] = value;\n    } else {\n      this.outLines.push(`${key}=${value}`);\n    }\n  }\n\n  translateSub(value, meta, data) {\n    let type = meta.type;\n    if (type === \"lightningList\") {\n      type = \"lightningEffect\";\n    }\n    if (data.types[type]) {\n      if (!value || value === \"_\") return \"None\";\n      return data.types[type][value] || \"value\";\n    }\n    switch (type) {\n    case \"bool\": return parseInt(value, 10) ? \"True\" : \"False\";\n    case \"string\": return value === \"_\" ? \"\" : value;\n    case \"char\": return value;\n    case \"int\": return parseInt(value, 10) || 0;\n    case \"real\":\n    case \"unreal\": return (parseFloat(value) || 0).toFixed(meta.stringExt || 2);\n    case \"destructableCategory\": return DestructableCategory[value] || value;\n    case \"tilesetList\": return TileSets[value] || value;\n    case \"doodadCategory\": return DoodadCategory[value] || value;\n  \n    case \"techList\":\n      if (TechList[value]) return TechList[value];\n      // fall through\n    case \"buffCode\": case \"buffList\":\n    case \"effectCode\": case \"effectList\":\n    case \"unitCode\": case \"unitList\":\n    case \"abilCode\": case \"abilityList\": case \"heroAbilityList\":\n    case \"itemCode\": case \"itemList\":\n    case \"upgradeCode\": case \"upgradeList\":\n      if (value === \"_\") return \"\";\n      const obj = data.objects.find(obj => obj.id === value);\n      return obj ? obj.name : value;\n    default:\n      return value !== \"_\" && value || \"None\";\n    }\n  }\n\n  translate(value, meta, data) {\n    if (meta.type.indexOf(\"List\") >= 0) {\n      if (value === \"_\" || value === \"\") {\n        return \"\";\n      }\n      return value.split(\",\").map(part => this.translateSub(part, meta, data)).join(\", \");\n    } else if (meta.type.indexOf(\"Flags\") >= 0) {\n      const iValue = parseInt(value, 10);\n      return [...Array(31)].map((v, i) => i).filter(i => ((1 << i) & iValue) !== 0).map(flag => this.translateSub(flag, meta, data)).join(\", \");\n    } else if (meta.type === \"string\") {\n      if (value === \"_\") {\n        return \"\";\n      }\n      return value;\n    } else {\n      return this.translateSub(value, meta, data);\n    }\n  }\n\n  processObject(obj, data) {\n    this.onObject(obj.id);\n    if (this.names < 2) {\n      listObjectData(obj, data, this.names === 1, (key, name, value, meta) => {\n        if (this.names === 0) {\n          value = this.translate(value, meta, data);\n        }\n        this.onValue(name, value);\n      });\n    } else {\n      Object.keys(obj.data).sort().forEach(key => this.onValue(key, obj.data[key]));\n    }\n  }\n\n  process(data) {\n    data.objects.forEach(obj => {\n      if (this.type !== \"all\" && this.type !== obj.type) {\n        return;\n      }\n      this.processObject(obj, data);\n    });\n  }\n  processSingle(data) {\n    const obj = this.type === \"all\" ? data.objects[0] : data.objects.find(obj => obj.type === this.type);\n    if (obj) {\n      this.processObject(obj, data);\n    }\n  }\n\n  get output() {\n    if (this.json === 0) {\n      return this.outLines.join(\"\\r\\n\");\n    } else if (this.json === 1) {\n      return JSON.stringify(this.outJs).replace(/\\n/g, \"\\r\\n\");\n    } else {\n      return JSON.stringify(this.outJs, null, 2).replace(/\\n/g, \"\\r\\n\");\n    }\n  }\n\n  get preview() {\n    let out;\n    if (this.json === 0) {\n      out = this.outLines.join(\"\\n\");\n    } else if (this.json === 1) {\n      out = JSON.stringify(this.outJs);\n    } else if (this.json === 2) {\n      out = JSON.stringify(this.outJs, null, 2);\n    }\n    return out.slice(0, 1000);\n  }\n}\n\nexport default class DataDownload extends React.PureComponent {\n  static contextType = Options.Context;\n  static defaultState = {type: \"all\", json: 0, names: 0};\n  state = {}\n\n  get options() {\n    return this.context.dataDownload || DataDownload.defaultState;\n  }\n  setOption = (name, value) => {\n    const opt = {...this.options};\n    opt[name] = value;\n    this.context.update(\"dataDownload\", opt);\n  }\n\n  componentDidUpdate() {\n    if (this.props.show !== this.state.show) {\n      this.setState({show: this.props.show}, () => this.setOption(\"type\", this.props.show));\n    }\n  }\n\n  setType = e => this.setOption(\"type\", e.target.value);\n\n  onDownload = () => {\n    const { type, json, names } = this.options;\n\n    const comp = new DataCompiler(type, json, names);\n    comp.process(this.props.data);\n\n    const encoded = new encoding.TextEncoder().encode(comp.output);\n    const blob = new Blob([encoded], {type: \"text/plain\"});\n    downloadBlob(blob, type + \".txt\");\n\n    this.props.onHide();\n  }\n\n  render() {\n    const { show, onHide } = this.props;\n    const { type, json, names } = this.options;\n\n    const comp = new DataCompiler(type, json, names);\n    comp.processSingle(this.props.data);\n\n    return (\n      <Modal show={!!show} onHide={onHide}>\n        <Modal.Header closeButton>\n          <Modal.Title>Download data</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form>\n            <FormGroup controlId=\"formType\">\n              <ControlLabel>Object type</ControlLabel>\n              <FormControl componentClass=\"select\" value={type} onChange={this.setType}>\n                {Object.keys(objectTypes).map(t => <option key={t} value={t}>{objectTypes[t]}</option>)}\n                <option value=\"all\">All (Combined)</option>\n              </FormControl>\n            </FormGroup>\n            <FormGroup>\n              <Radio name=\"json\" inline checked={json === 0} onChange={() => this.setOption(\"json\", 0)}>\n                Text\n              </Radio>{' '}\n              <Radio name=\"json\" inline checked={json === 1} onChange={() => this.setOption(\"json\", 1)}>\n                JSON\n              </Radio>\n              <Radio name=\"json\" inline checked={json === 2} onChange={() => this.setOption(\"json\", 2)}>\n                Indented JSON\n              </Radio>\n            </FormGroup>\n            <FormGroup>\n              <Radio name=\"names\" inline checked={names === 0} onChange={() => this.setOption(\"names\", 0)}>\n                Editor names\n              </Radio>{' '}\n              <Radio name=\"names\" inline checked={names === 1} onChange={() => this.setOption(\"names\", 1)}>\n                Code names\n              </Radio>\n              <Radio name=\"names\" inline checked={names === 2} onChange={() => this.setOption(\"names\", 2)}>\n                Raw data\n              </Radio>\n            </FormGroup>\n          </form>\n          <div className=\"dataPreview\">\n            {comp.preview}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button bsStyle=\"info\" onClick={this.onDownload}>Download</Button>\n          <Button onClick={onHide}>Cancel</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { RawNames, RawNamesSwitch, SortNames, BuildCtx, TypeCtx, IdCtx, ObjectFilters, ObjectIcon } from './ObjectCtx';\nimport { FormControl, Button, Glyphicon } from 'react-bootstrap';\nimport { AutoSizer, List } from 'react-virtualized';\nimport DataDownload from './DataDownload';\n\nimport Panel from 'react-flex-panel';\n\nimport './ObjectList.scss';\n\nconst ObjectName = ({ object }) => (\n  <RawNames.Consumer>\n    {raw => {\n      if (raw) {\n        if (object.base) {\n          return `${object.id}:${object.base} (${object.name})`;\n        } else {\n          return `${object.id} (${object.name})`;\n        }\n      } else {\n        return object.name;\n      }\n    }}\n  </RawNames.Consumer>\n);\n\nconst ObjectLink = ({ object }) => (\n  <BuildCtx.Consumer>\n    {build => (\n      <TypeCtx.Consumer>\n        {type => (\n          <IdCtx.Consumer>\n            {id => (\n              <Link to={`/${build}/${type}/${object.id}`}\n                className={classNames(\"ObjectLink\", { selected: id === object.id, searched: object.searched })}>\n                <ObjectIcon object={object} />\n                <span className=\"ObjectName\"><ObjectName object={object} /></span>\n              </Link>\n            )}\n          </IdCtx.Consumer>\n        )}\n      </TypeCtx.Consumer>\n    )}\n  </BuildCtx.Consumer>\n);\n\nclass ObjectItem {\n  constructor(object, parent) {\n    this.object = object;\n    this.object.parent = this;\n    this.object.upVisit = (fn) => {\n      fn(this.object);\n      this.object.parent.upVisit(fn);\n    }\n    this.parent = parent;\n  }\n  height = 1;\n  upVisit(fn) {\n    fn(this);\n    this.parent.upVisit(fn);\n  }\n  downVisit(fn) {\n    fn(this);\n    fn(this.object);\n  }\n  render() {\n    return <ObjectLink object={this.object} />;\n  }\n  renderLine(index) {\n    return this.render();\n  }\n}\n\nclass ObjectGroup {\n  constructor(objects, filters, parent, title) {\n    this.parent = parent;\n    this.level = (parent ? parent.level + 1 : 0);\n    this.count = objects.length;\n    this._title = title;\n    if (title) {\n      this.title = `${title} (${this.count})`;\n    }\n\n    if (filters && filters.length) {\n      this.filter = filters[0];\n      const subs = {};\n      objects.forEach(obj => {\n        const cat = filters[0].name(obj);\n        subs[cat] = (subs[cat] || []);\n        subs[cat].push(obj);\n      });\n      const rest = filters.slice(1);\n      this.childrenByName = {};\n      this.children = filters[0].order.filter(cat => !parent || subs[cat]).map(cat => {\n        return this.childrenByName[cat] = new ObjectGroup(subs[cat] || [], rest, this, cat);\n      });\n    } else {\n      this.children = objects.map(obj => new ObjectItem(obj, this)).sort((a, b) => a.object.name.localeCompare(b.object.name));\n    }\n    this.openHeight = parent ? 1 : 0;\n    this.children.forEach(c => {\n      c.top = this.openHeight;\n      this.openHeight += c.height;\n    });\n    if (!parent) {\n      this.expanded = true;\n    } else if (this.level > 1) {\n      this.expanded = false;\n    } else {\n      this.expanded = this.count > 0;\n    }\n  }\n  upVisit(fn) {\n    fn(this);\n    this.parent && this.parent.upVisit(fn);\n  }\n  downVisit(fn) {\n    fn(this);\n    this.children.forEach(x => x.downVisit(fn));\n\n  }\n  modHeight(delta, child) {\n    let index = child ? this.children.indexOf(child) : -1;\n    if (index >= 0) {\n      while (++index < this.children.length) {\n        this.children[index].top += delta;\n      }\n    }\n    this.openHeight += delta;\n    if (this.parent && this.expanded) {\n      this.parent.modHeight(delta, this);\n    } else if (this.onResize) {\n      this.onResize(this.height);\n    }\n  }\n\n  get height() {\n    return this.expanded ? this.openHeight : 1;\n  }\n\n  expandItem(object) {\n    if (this.filter) {\n      const name = this.filter.name(object);\n      const sub = this.childrenByName[name];\n      if (sub) {\n        sub.expand();\n        return sub.expandItem(object) + sub.top;\n      }\n    } else {\n      const sub = this.children.find(obj => obj.object === object);\n      if (sub) {\n        return sub.top;\n      }\n    }\n    return 0;\n  }\n\n  expand() {\n    if (!this.expanded && this.count > 0) {\n      this.expanded = true;\n      if (this.parent) {\n        this.parent.modHeight(this.openHeight - 1, this);\n      }\n    }\n  }\n\n  collapse() {\n    if (this.expanded && this.parent) {\n      this.expanded = false;\n      this.parent.modHeight(1 - this.openHeight, this);\n    }\n  }\n\n  toggle = () => {\n    if (this.expanded) {\n      this.collapse();\n    } else {\n      this.expand();\n    }\n  }\n\n  render() {\n    let n = 0;\n    this.downVisit(node => n += ((node.__proto__.constructor.name == 'ObjectItem' && node.searched) ? 1 : 0));\n    if (n) {\n      this.title = `${this._title} (${n}/${this.count})`;\n    }\n    if (!this.parent) {\n      return null;\n    }\n    return (\n      <div className={classNames(\"ObjectGroup\", { expanded: this.expanded, searched: this.searched })}>\n        <span className=\"toggle\" onClick={this.toggle} />\n        <span onDoubleClick={this.toggle}><span className=\"Icon\" />\n          <span className='title'>{this.title}</span>\n        </span>\n      </div>\n    );\n  }\n  firstLevelChild(index) {\n    if (this.expanded) {\n      let left = 0, right = this.children.length - 1;\n      while (left < right) {\n        const mid = (left + right + 1) >> 1;\n        if (this.children[mid].top > index) {\n          right = mid - 1;\n        } else {\n          left = mid;\n        }\n      }\n      return this.children[left]\n    }\n    return null;\n  }\n  renderLine(index) {\n    if (this.parent && !index) {\n      return this.render();\n    }\n    if (this.expanded) {\n      let left = 0, right = this.children.length - 1;\n      while (left < right) {\n        const mid = (left + right + 1) >> 1;\n        if (this.children[mid].top > index) {\n          right = mid - 1;\n        } else {\n          left = mid;\n        }\n      }\n      const subIndex = index - this.children[left].top;\n      const line = this.children[left].renderLine(subIndex);\n      let lineStyle = null;\n      if (left < this.children.length - 1) {\n        if (subIndex === 0) {\n          lineStyle = \"tLine\";\n        } else {\n          lineStyle = \"line\";\n        }\n      } else if (subIndex === 0) {\n        lineStyle = \"halfLine\";\n      }\n      if (this.parent) {\n        return (\n          <div className={classNames(\"indent\", lineStyle)}>\n            {line}\n          </div>\n        );\n      } else {\n        return line;\n      }\n    }\n  }\n}\n\nexport class ObjectList extends React.PureComponent {\n  state = { search: \"\", searchResults: null };\n\n  static contextType = RawNames;\n\n  onSearchKeyDown = (e) => {\n    if (e.which === 27) {\n      this.setState({ search: \"\", searchResults: null });\n      if (this._list) {\n        this._list.forceUpdateGrid();\n      }\n    }\n  }\n  onSearch = (e) => {\n    const { data, type } = this.props;\n    const search = e.target.value.trim();\n    console.log(search)\n    let found = 0;\n\n     // reset\n     this.group.downVisit((node) => {\n      node.searched = false;\n    });\n    if (search) {\n      const re = new RegExp(\"\\\\b\" + search.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\"), \"i\");\n      const isMatch = obj => {\n        if (obj.type !== type) return false;\n        if (this.context && obj.id.match(re)) return true;\n        if (obj.name.match(re)) return true;\n        if (obj.data.propernames && obj.data.propernames.match(re)) return true;\n        if (obj.name.indexOf(search) != -1) {\n          // console.log('matching', search, obj)\n          return true;\n        }\n        return false;\n      };\n     \n      data.objects.forEach(obj => {\n        const matched = isMatch(obj);\n        if (matched) {\n          obj.upVisit((node) => {\n            node.searched = node.searched | matched;\n            if (node.searched) {\n              found++;\n              // console.log('found', found, node);\n            }\n          })\n        }\n      });\n\n    }\n    // console.log('forceUpdateGrid')\n    if (this._list) {\n      this._list.forceUpdateGrid();\n    }\n    this.setState({ search: e.target.value, searchResults: found });\n  }\n\n\n  onResize = () => {\n    this.forceUpdate();\n  }\n\n  rowRenderer = ({ index, ...options }) => {\n    const { key, style } = options;\n    const flNode = this.group.firstLevelChild(index);\n    return (\n      <div className={classNames(\"TreeRow\", { searched: flNode && flNode.searched })} key={key} style={style}>\n        {this.group.renderLine(index)}\n      </div>\n    );\n  }\n\n  onDownload = () => {\n    this.setState({ showDownload: this.props.type });\n  }\n  onCloseDownload = () => {\n    this.setState({ showDownload: false });\n  }\n\n  render() {\n    const { data, type, id, className, ...props } = this.props;\n    const { search, searchResults, showDownload } = this.state;\n    if (!this.group || this.group._data !== data || this.group._type !== type) {\n      const filters = ObjectFilters[type];\n      if (!filters) {\n        return null;\n      }\n      this.group = new ObjectGroup(data.objects.filter(obj => obj.type === type), filters);\n      this.group._data = data;\n      this.group._type = type;\n      this.group.onResize = this.onResize;\n      setTimeout(() => {\n        if (this._list) {\n          this._list.forceUpdateGrid();\n        }\n      });\n    }\n    if (!searchResults && this.group._id !== id) {\n      const object = data.objects.find(obj => obj.type === type && obj.id === id);\n      if (object) {\n        this.group.onResize = null;\n        const index = this.group.expandItem(object);\n        this.group.onResize = this.onResize;\n        this.group._id = id;\n        setTimeout(() => {\n          if (this._list) {\n            this._list.scrollToRow(index);\n          }\n        });\n      }\n    }\n    return (\n      <Panel className={classNames(className, \"ObjectList\")} {...props}>\n        <DataDownload data={data} show={showDownload} onHide={this.onCloseDownload} />\n        <div className=\"search-box\">\n          <FormControl type=\"text\" value={search} placeholder=\"Search\" onKeyDown={this.onSearchKeyDown} onChange={this.onSearch} />\n          <Button active={!!showDownload} onClick={this.onDownload} bsSize=\"small\"><Glyphicon glyph=\"download-alt\" /></Button>\n          <RawNames.Consumer>\n            {rawNames => (\n              <RawNamesSwitch.Consumer>\n                {onSwitch => <Button active={rawNames} onClick={onSwitch} bsSize=\"small\"><Glyphicon glyph=\"cog\" /></Button>}\n              </RawNamesSwitch.Consumer>\n            )}\n          </RawNames.Consumer>\n        </div>\n        <div className=\"ObjectListItems\">\n          <AutoSizer>\n            {({ width, height }) => (\n              <List className=\"ObjectLines\"\n                ref={node => this._list = node}\n                width={width}\n                height={height}\n                rowCount={this.group.height}\n                rowHeight={18}\n                rowRenderer={this.rowRenderer}\n              />\n            )}\n          </AutoSizer>\n        </div>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\n\nfunction ColorGroup(arr, color) {\n  return key => <span style={{color}} key={key}>{arr}</span>;\n}\n\nexport default function tagString(value, data) {\n  const result = [];\n  let color = null;\n  let top = result;\n  value = value.split(\"\\n\").join(\"|n\");\n  const regex = /<(\\w+),(\\w+)(,%)?>|\\|([rn])|\\|c[0-9a-zA-Z]{2}([0-9a-zA-Z]{6})/gi;\n  let prev = 0, match;\n  while (match = regex.exec(value)) {\n    if (match.index > prev) {\n      top.push(value.substring(prev, match.index));\n    }\n    if (match[1]) {\n      const object = data && data.objects.find(obj => obj.id === match[1]);\n      const key = match[2].toLowerCase();\n      if (object && object.data[key]) {\n        top.push(parseFloat(object.data[key]) * (match[3] ? 100 : 1));\n      } else {\n        top.push(match[0]);\n      }\n    } else if (match[4] === \"n\" || match[4] === \"N\") {\n      top.push(<br key={top.length}/>);\n    } else if (match[4] === \"r\" || match[4] === \"R\" || match[5]) {\n      if (color) {\n        result.push(color(result.length));\n        top = result;\n        color = null;\n      }\n      if (match[5]) {\n        top = [];\n        color = ColorGroup(top, \"#\" + match[5]);\n      }\n    }\n    prev = match.index + match[0].length;\n  }\n  if (prev < value.length) {\n    top.push(value.substring(prev));\n  }\n  if (color) {\n    result.push(color(result.length));\n  }\n  return result;\n}\n","import React, { useState, useEffect } from 'react';\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport AppCache from 'data/cache';\nimport { tagString } from 'data/tagString';\n\n// 假定已经存在的辅助函数或组件\nimport { ObjectIcon } from './ObjectCtx';\n// import { getObjectById } from './dataUtils'; // 假定这是一个实用函数，用于根据ID获取对象详情\n\nconst TooltipContent = ({ objectId }) => {\n  const [object, setObject] = useState(null);\n\n  useEffect(() => {\n    async function fetchObject() {\n      const data = objectId; //await getObjectById(objectId);\n      setObject(data);\n    }\n    if (objectId) {\n      fetchObject();\n    }\n  }, [objectId]);\n\n  if (!object) return <Popover.Title>Loading...</Popover.Title>;\n\n  return (\n    <div>\n      <Popover.Title>{object.name}</Popover.Title>\n      <Popover.Content>\n        {object.description || \"No description available.\"}\n        {object.icon && (\n          <img\n            src={AppCache.image(object.icon)}\n            alt={`${object.name} Icon`}\n            className=\"object-icon\"\n          />\n        )}\n      </Popover.Content>\n    </div>\n  );\n};\n\nconst Tooltip = ({ objectId, children }) => {\n  return (\n    <OverlayTrigger\n      overlay={\n        <Popover id='objectId'>\n          <TooltipContent objectId={objectId} />\n        </Popover>\n      }>\n      {typeof children === 'string' ? (\n        <span>{children}</span>\n      ) : (\n        children\n      )}\n    </OverlayTrigger>\n  );\n};\n\nexport default Tooltip;","/**\n * An INI file.\n */\nexport default class IniFile {\n  /**\n   * @param {?string} buffer\n   */\n  constructor(buffer) {\n    /** @member {Map<string, string>} */\n    this.properties = new Map();\n    /** @member {Map<string, Map<string, string>>} */\n    this.sections = new Map();\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {string} buffer\n   */\n  load(buffer) {\n    // All properties added until a section is reached are added to the properties map.\n    // Once a section is reached, any further properties will be added to it until matching another section, etc.\n    let section = this.properties;\n    let sections = this.sections;\n\n    for (let line of buffer.split(/\\r\\n?|\\n/)) {\n      // INI defines comments as starting with a semicolon ';'.\n      // However, Warcraft 3 INI files use normal C comments '//'.\n      // In addition, Warcraft 3 files have empty lines.\n      // Therefore, ignore any line matching any of these conditions.\n      if (line.length && !line.startsWith('//') && !line.startsWith(';')) {\n        let match = line.match(/^\\[(.+?)\\]/);\n\n        if (match) {\n          let name = match[1].trim().toLowerCase();\n\n          section = sections.get(name);\n\n          if (!section) {\n            section = new Map();\n\n            sections.set(name, section);\n          }\n        } else {\n          match = line.match(/^(.+?)=(.*?)$/);\n\n          if (match) {\n            section.set(match[1].toLowerCase(), match[2]);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @return {string}\n   */\n  save() {\n    let lines = [];\n\n    for (let [key, value] of this.properties) {\n      lines.push(`${key}=${value}`);\n    }\n\n    for (let [name, section] of this.sections) {\n      lines.push(`[${name}]`);\n\n      for (let [key, value] of section) {\n        lines.push(`${key}=${value}`);\n      }\n    }\n\n    return lines.join('\\r\\n');\n  }\n\n  /**\n   * @param {string} name\n   * @return {Map<string, string>}\n   */\n  getSection(name) {\n    return this.sections.get(name.toLowerCase());\n  }\n}\n","import IniFile from './file';\n\nexport default {\n  IniFile,\n};\n","/**\n * A SLK table file.\n */\nexport default class SlkFile {\n  /**\n   * @param {?string} buffer\n   */\n  constructor(buffer) {\n    /** @member {Array<Array<string>>} */\n    this.rows = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {string} buffer\n   */\n  load(buffer) {\n    if (!buffer.startsWith('ID')) {\n      throw new Error('WrongMagicNumber');\n    }\n\n    let rows = this.rows;\n    let x = 0;\n    let y = 0;\n\n    for (let line of buffer.split('\\n')) {\n      // The B command is supposed to define the total number of columns and rows, however in UbetSplatData.slk it gives wrong information\n      // Therefore, just ignore it, since JavaScript arrays grow as they want either way\n      if (line[0] !== 'B') {\n        for (let token of line.split(';')) {\n          let op = token[0];\n          let valueString = token.substring(1).trim();\n          let value;\n\n          if (op === 'X') {\n            x = parseInt(valueString, 10) - 1;\n          } else if (op === 'Y') {\n            y = parseInt(valueString, 10) - 1;\n          } else if (op === 'K') {\n            if (!rows[y]) {\n              rows[y] = [];\n            }\n\n            if (valueString[0] === '\"') {\n              value = valueString.substring(1, valueString.length - 1);\n            } else if (valueString === 'TRUE') {\n              value = true;\n            } else if (valueString === 'FALSE') {\n              value = false;\n            } else {\n              value = parseFloat(valueString);\n            }\n\n            rows[y][x] = value;\n          } else if (op === 'A') {\n            if (!this.comments) {\n              this.comments = [];\n            }\n            if (!this.comments[y]) {\n              this.comments[y] = [];\n            }\n            this.comments[y][x] = valueString;\n          }\n        }\n      }\n    }\n\n    this.cols = this.rows.reduce((m, r) => Math.max(m, r.length), 0);\n  }\n}\n","import SlkFile from './file';\n\nexport default {\n  SlkFile,\n};\n","let buffer = new ArrayBuffer(8);\nlet int8 = new Int8Array(buffer);\nlet int16 = new Int16Array(buffer);\nlet int32 = new Int32Array(buffer);\nlet uint8 = new Uint8Array(buffer);\nlet uint16 = new Uint16Array(buffer);\nlet uint32 = new Uint32Array(buffer);\nlet float32 = new Float32Array(buffer);\nlet float64 = new Float64Array(buffer);\n\n/**\n * Type cast a 8 bit unsigned integer to a 8 bits signed integer.\n *\n * @param {number} a\n * @return {number}\n */\nexport function uint8ToInt8(a) {\n  uint8[0] = a;\n\n  return int8[0];\n}\n\n/**\n * Type cast two 8 bit unsigned integers to a 16 bits signed integer.\n *\n * @param {number} a\n * @param {number} b\n * @return {number}\n */\nexport function uint8ToInt16(a, b) {\n  uint8[0] = a;\n  uint8[1] = b;\n\n  return int16[0];\n}\n\n/**\n * Type cast four 8 bit unsigned integers to a 32 bits signed integer.\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @param {number} d\n * @return {number}\n */\nexport function uint8ToInt32(a, b, c, d) {\n  uint8[0] = a;\n  uint8[1] = b;\n  uint8[2] = c;\n  uint8[3] = d;\n\n  return int32[0];\n}\n\n/**\n * Type cast two 8 bit unsigned integers to a 16 bits unsigned integer.\n *\n * @param {number} a\n * @param {number} b\n * @return {number}\n */\nexport function uint8ToUint16(a, b) {\n  uint8[0] = a;\n  uint8[1] = b;\n\n  return uint16[0];\n}\n\n/**\n * Type cast three 8 bit unsigned integers to a 24 bits unsigned integer.\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @return {number}\n */\nexport function uint8ToUint24(a, b, c) {\n  uint8[0] = a;\n  uint8[1] = b;\n  uint8[2] = c;\n  uint8[3] = 0;\n\n  return uint32[0];\n}\n\n/**\n * Type cast four 8 bit unsigned integers to a 32 bits unsigned integer.\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @param {number} d\n * @return {number}\n */\nexport function uint8ToUint32(a, b, c, d) {\n  uint8[0] = a;\n  uint8[1] = b;\n  uint8[2] = c;\n  uint8[3] = d;\n\n  return uint32[0];\n}\n\n/**\n * Type cast four 8 bit unsigned integers to a 32 bits IEEE float.\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @param {number} d\n * @return {number}\n */\nexport function uint8ToFloat32(a, b, c, d) {\n  uint8[0] = a;\n  uint8[1] = b;\n  uint8[2] = c;\n  uint8[3] = d;\n\n  return float32[0];\n}\n\n/**\n * Type cast eight 8 bit unsigned integers to a 64 bits IEEE float.\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @param {number} d\n * @param {number} e\n * @param {number} f\n * @param {number} g\n * @param {number} h\n * @return {number}\n */\nexport function uint8ToFloat64(a, b, c, d, e, f, g, h) {\n  uint8[0] = a;\n  uint8[1] = b;\n  uint8[2] = c;\n  uint8[3] = d;\n  uint8[4] = e;\n  uint8[5] = f;\n  uint8[6] = g;\n  uint8[7] = h;\n\n  return float64[0];\n}\n\n/**\n * Type cast a 8 bit signed integer to a 8 bit unsigned integer.\n *\n * @param {number} a\n * @return {number}\n */\nexport function int8ToUint8(a) {\n  uint8[0] = a;\n\n  return int8[0];\n}\n\n/**\n * Type cast a 16 bit signed integer to two 8 bit unsigned integers.\n * The result is stored in out.\n *\n * @param {Uint8Array} out\n * @param {number} a\n * @return {Uint8Array}\n */\nexport function int16ToUint8(out, a) {\n  int16[0] = a;\n\n  out[0] = uint8[0];\n  out[1] = uint8[1];\n\n  return out;\n}\n\n/**\n * Type cast a 24 bit signed integer to three 8 bit unsigned integers.\n * The result is stored in out.\n *\n * @param {Uint8Array} out\n * @param {number} a\n * @return {Uint8Array}\n */\nexport function int24ToUint8(out, a) {\n  int32[0] = a;\n\n  out[0] = uint8[0];\n  out[1] = uint8[1];\n  out[2] = uint8[2];\n\n  return out;\n}\n\n/**\n * Type cast a 32 bit signed integer to four 8 bit unsigned integers.\n * The result is stored in out.\n *\n * @param {Uint8Array} out\n * @param {number} a\n * @return {Uint8Array}\n */\nexport function int32ToUint8(out, a) {\n  int32[0] = a;\n\n  out[0] = uint8[0];\n  out[1] = uint8[1];\n  out[2] = uint8[2];\n  out[3] = uint8[3];\n\n  return out;\n}\n\n/**\n * Type cast a 16 bit unsigned integer to two 8 bit unsigned integers.\n * The result is stored in out.\n *\n * @param {Uint8Array} out\n * @param {number} a\n * @return {Uint8Array}\n */\nexport function uint16ToUint8(out, a) {\n  uint16[0] = a;\n\n  out[0] = uint8[0];\n  out[1] = uint8[1];\n\n  return out;\n}\n\n/**\n * Type cast a 24 bit unsigned integer to three 8 bit unsigned integers.\n * The result is stored in out.\n *\n * @param {Uint8Array} out\n * @param {number} a\n * @return {Uint8Array}\n */\nexport function uint24ToUint8(out, a) {\n  uint32[0] = a;\n\n  out[0] = uint8[0];\n  out[1] = uint8[1];\n  out[2] = uint8[2];\n\n  return out;\n}\n\n/**\n * Type cast a 32 bit unsigned integer to four 8 bit unsigned integers.\n * The result is stored in out.\n *\n * @param {Uint8Array} out\n * @param {number} a\n * @return {Uint8Array}\n */\nexport function uint32ToUint8(out, a) {\n  uint32[0] = a;\n\n  out[0] = uint8[0];\n  out[1] = uint8[1];\n  out[2] = uint8[2];\n  out[3] = uint8[3];\n\n  return out;\n}\n\n/**\n * Type cast a 32 bit IEEE float to four 8 bit unsigned integers.\n * The result is stored in out.\n *\n * @param {Uint8Array} out\n * @param {number} a\n * @return {Uint8Array}\n */\nexport function float32ToUint8(out, a) {\n  float32[0] = a;\n\n  out[0] = uint8[0];\n  out[1] = uint8[1];\n  out[2] = uint8[2];\n  out[3] = uint8[3];\n\n  return out;\n}\n\n/**\n * Type cast a 64 bit IEEE float to eight 8 bit unsigned integers.\n * The result is stored in out.\n *\n * @param {Uint8Array} out\n * @param {number} a\n * @return {Uint8Array}\n */\nexport function float64ToUint8(out, a) {\n  float64[0] = a;\n\n  out[0] = uint8[0];\n  out[1] = uint8[1];\n  out[2] = uint8[2];\n  out[3] = uint8[3];\n  out[4] = uint8[4];\n  out[5] = uint8[5];\n  out[6] = uint8[6];\n  out[7] = uint8[7];\n\n  return out;\n}\n\n/**\n * Type cast a normal JavaScript number to a 32 bits unsigned integer.\n *\n * @param {number} number\n * @return {number}\n */\nexport function numberToUint32(number) {\n  uint32[0] = number;\n\n  return uint32[0];\n}\n\n/**\n * Interperts a string as a base 256 number.\n *\n * @param {string} string\n * @return {number}\n */\nexport function stringToBase256(string) {\n  let number = 0;\n\n  for (let c of string) {\n    number = number * 256 + c.charCodeAt(0);\n  }\n\n  return number;\n}\n\n/**\n * Interperts a number as a base 256 string.\n *\n * @param {number} number\n * @return {string}\n */\nexport function base256ToString(number) {\n  let array = [];\n\n  while (number > 0) {\n    array.push(String.fromCharCode(number % 256));\n    number = Math.floor(number / 256);\n  }\n\n  return array.reverse().join('');\n}\n","import {uint8ToInt8, uint8ToInt16, uint8ToInt32, uint8ToUint16, uint8ToUint32, uint8ToFloat32, uint8ToFloat64, int8ToUint8, int16ToUint8, int32ToUint8, uint16ToUint8, uint32ToUint8, float32ToUint8, float64ToUint8} from './typecast';\n\n// Memory for all of the xxxToUint type casts.\nlet uint8 = new Uint8Array(8);\n\n/**\n * A binary stream.\n */\nexport default class BinaryStream {\n  /**\n   * @param {ArrayBuffer|ArrayBufferView} buffer\n   * @param {number=} byteOffset\n   * @param {number=} byteLength\n   */\n  constructor(buffer, byteOffset, byteLength) {\n    // If given a view, use its properties.\n    if (ArrayBuffer.isView(buffer)) {\n      buffer = buffer.buffer;\n      byteOffset = buffer.byteOffset;\n      byteLength = buffer.byteLength;\n    }\n\n    if (!(buffer instanceof ArrayBuffer)) {\n      throw new TypeError(`BinaryStream: expected ArrayBuffer or ArrayBufferView, got ${buffer}`);\n    }\n\n    /** @member {ArrayBuffer} */\n    this.buffer = buffer;\n    /** @member {Uint8Array} */\n    this.uint8array = new Uint8Array(buffer, byteOffset, byteLength);\n    /** @member {number} */\n    this.index = 0;\n    /** @member {number} */\n    this.byteLength = buffer.byteLength;\n  }\n\n  /**\n   * Create a subreader of this reader, at its position, with the given byte length\n   *\n   * @param {number} byteLength\n   * @return {BinaryStream}\n   */\n  substream(byteLength) {\n    return new BinaryStream(this.buffer, this.index, byteLength);\n  }\n\n  /**\n   * Get the remaining bytes\n   *\n   * @return {number}\n   */\n  remaining() {\n    return this.byteLength - this.index;\n  }\n\n  /**\n   * Skip a number of bytes\n   *\n   * @param {number} bytes\n   */\n  skip(bytes) {\n    this.index += bytes;\n  }\n\n  /**\n   * Set the reader's index\n   *\n   * @param {number} index\n   */\n  seek(index) {\n    this.index = index;\n  }\n\n  /**\n   * Get the reader's index\n   *\n   * @return {number}\n   */\n  tell() {\n    return this.index;\n  }\n\n  /**\n   * Peek a string\n   *\n   * @param {number} size\n   * @param {boolean=} allowNulls\n   * @return {string}\n   */\n  peek(size, allowNulls) {\n    let uint8array = this.uint8array;\n    let index = this.index;\n    let codes = [];\n\n    if (index + size > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0; i < size; i++) {\n      let b = uint8array[index + i];\n\n      // Avoid \\0\n      if (allowNulls || b > 0) {\n        codes.push(b);\n      }\n    }\n\n    return String.fromCharCode(...codes);\n  }\n\n  /**\n   * Read a string\n   *\n   * @param {number} size\n   * @param {boolean=} allowNulls\n   * @return {string}\n   */\n  read(size, allowNulls) {\n    // If the size isn't specified, default to everything\n    size = size || this.remaining();\n\n    let data = this.peek(size, allowNulls);\n\n    this.index += size;\n\n    return data;\n  }\n\n  /**\n   * Peeks a string until finding a null byte\n   *\n   * @return {string}\n   */\n  peekUntilNull() {\n    let uint8array = this.uint8array;\n    let index = this.index;\n    let b = uint8array[index];\n    let i = 0;\n\n    while (b !== 0 && index + i < uint8array.length) {\n      i += 1;\n      b = uint8array[index + i];\n    }\n\n    return String.fromCharCode(...uint8array.subarray(index, index + i));\n  }\n\n  /**\n   * Read a string until finding a null byte\n   *\n   * @param {number} size\n   * @return {string}\n   */\n  readUntilNull() {\n    let data = this.peekUntilNull();\n\n    this.index += data.length + 1; // +1 for the \\0 itself\n\n    return data;\n  }\n\n  /**\n   * Peek a character array.\n   *\n   * @param {number} size\n   * @return {Array<string>}\n   */\n  peekCharArray(size) {\n    let uint8array = this.uint8array;\n    let index = this.index;\n    let data = [];\n\n    if (index + size > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0; i < size; i++) {\n      data[i] = String.fromCharCode(uint8array[index + i]);\n    }\n\n    return data;\n  }\n\n  /**\n   * Read a character array.\n   *\n   * @param {number} size\n   * @return {Array<string>}\n   */\n  readCharArray(size) {\n    let data = this.peekCharArray(size);\n\n    this.index += size;\n\n    return data;\n  }\n\n  /**\n   * Read a 8 bit signed integer\n   *\n   * @return {number}\n   */\n  readInt8() {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    if (index + 1 > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    let data = uint8ToInt8(uint8array[index]);\n\n    this.index += 1;\n\n    return data;\n  }\n\n  /**\n   * Read a 16 bit signed integer\n   *\n   * @return {number}\n   */\n  readInt16() {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    if (index + 2 > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    let data = uint8ToInt16(uint8array[index], uint8array[index + 1]);\n\n    this.index += 2;\n\n    return data;\n  }\n\n  /**\n   * Read a 32 bit signed integer\n   *\n   * @return {number}\n   */\n  readInt32() {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    if (index + 4 > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    let data = uint8ToInt32(uint8array[index], uint8array[index + 1], uint8array[index + 2], uint8array[index + 3]);\n\n    this.index += 4;\n\n    return data;\n  }\n\n  /**\n   * Read a 8 bit unsigned integer\n   *\n   * @return {number}\n   */\n  readUint8() {\n    if (this.index + 1 > this.uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    let data = this.uint8array[this.index];\n\n    this.index += 1;\n\n    return data;\n  }\n\n  /**\n   * Read a 16 bit unsigned integer\n   *\n   * @return {number}\n   */\n  readUint16() {\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + 2 > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    let data = uint8ToUint16(uint8array[index], uint8array[index + 1]);\n\n    this.index += 2;\n\n    return data;\n  }\n\n  /**\n   * Read a 32 bit unsigned integer\n   *\n   * @return {number}\n   */\n  readUint32() {\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + 4 > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    let data = uint8ToUint32(uint8array[index], uint8array[index + 1], uint8array[index + 2], uint8array[index + 3]);\n\n    this.index += 4;\n\n    return data;\n  }\n\n  /**\n   * Read a 32 bit float\n   *\n   * @return {number}\n   */\n  readFloat32() {\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + 4 > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    let data = uint8ToFloat32(uint8array[index], uint8array[index + 1], uint8array[index + 2], uint8array[index + 3]);\n\n    this.index += 4;\n\n    return data;\n  }\n\n  /**\n   * Read a 64 bit float\n   *\n   * @return {number}\n   */\n  readFloat64() {\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + 8 > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    let data = uint8ToFloat64(uint8array[index], uint8array[index + 1], uint8array[index + 2], uint8array[index + 3], uint8array[index + 4], uint8array[index + 5], uint8array[index + 6], uint8array[index + 7]);\n\n    this.index += 8;\n\n    return data;\n  }\n\n  /**\n   * Read an array of 8 bit signed integers into the given view\n   *\n   * @param {Int8Array|number} view\n   * @return {Int8Array}\n   */\n  readInt8Array(view) {\n    if (!ArrayBuffer.isView(view)) {\n      view = new Int8Array(view);\n    }\n\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + view.byteLength > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      view[i] = uint8ToInt8(uint8array[index + i]);\n    }\n\n    this.index += view.byteLength;\n\n    return view;\n  }\n\n  /**\n   * Read an array of 16 bit signed integers into the given view\n   *\n   * @param {Int16Array|number} view\n   * @return {Int16Array}\n   */\n  readInt16Array(view) {\n    if (!ArrayBuffer.isView(view)) {\n      view = new Int16Array(view);\n    }\n\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + view.byteLength > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 2;\n\n      view[i] = uint8ToInt16(uint8array[offset], uint8array[offset + 1]);\n    }\n\n    this.index += view.byteLength;\n\n    return view;\n  }\n\n  /**\n   * Read an array of 32 bit signed integers into the given view\n   *\n   * @param {Int32Array|number} view\n   * @return {Int32Array}\n   */\n  readInt32Array(view) {\n    if (!ArrayBuffer.isView(view)) {\n      view = new Int32Array(view);\n    }\n\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + view.byteLength > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 4;\n\n      view[i] = uint8ToInt16(uint8array[offset], uint8array[offset + 1], uint8array[offset + 2], uint8array[offset + 3]);\n    }\n\n    this.index += view.byteLength;\n\n    return view;\n  }\n\n  /**\n   * Read an array of 8 bit unsigned integers into the given view\n   *\n   * @param {Uint8Array|number} view\n   * @return {Uint8Array}\n   */\n  readUint8Array(view) {\n    if (!ArrayBuffer.isView(view)) {\n      view = new Uint8Array(view);\n    }\n\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + view.byteLength > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      view[i] = uint8array[index + i];\n    }\n\n    this.index += view.byteLength;\n\n    return view;\n  }\n\n  /**\n   * Read an array of 16 bit unsigned integers into the given view\n   *\n   * @param {Uint16Array|number} view\n   * @return {Uint16Array}\n   */\n  readUint16Array(view) {\n    if (!ArrayBuffer.isView(view)) {\n      view = new Uint16Array(view);\n    }\n\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + view.byteLength > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 2;\n\n      view[i] = uint8ToUint16(uint8array[offset], uint8array[offset + 1]);\n    }\n\n    this.index += view.byteLength;\n\n    return view;\n  }\n\n  /**\n   * Read an array of 32 bit unsigned integers into the given view\n   *\n   * @param {Uint32Array|number} view\n   * @return {Uint32Array}\n   */\n  readUint32Array(view) {\n    if (!ArrayBuffer.isView(view)) {\n      view = new Uint32Array(view);\n    }\n\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + view.byteLength > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 4;\n\n      view[i] = uint8ToUint32(uint8array[offset], uint8array[offset + 1], uint8array[offset + 2], uint8array[offset + 3]);\n    }\n\n    this.index += view.byteLength;\n\n    return view;\n  }\n\n  /**\n   * Read an array of 32 bit floats into the given view\n   *\n   * @param {Float32Array|number} view\n   * @return {Float32Array}\n   */\n  readFloat32Array(view) {\n    if (!ArrayBuffer.isView(view)) {\n      view = new Float32Array(view);\n    }\n\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + view.byteLength > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 4;\n\n      view[i] = uint8ToFloat32(uint8array[offset], uint8array[offset + 1], uint8array[offset + 2], uint8array[offset + 3]);\n    }\n\n    this.index += view.byteLength;\n\n    return view;\n  }\n\n  /**\n   * Read an array of 64 bit floats into the given view\n   *\n   * @param {Float64Array|number} view\n   * @return {Float64Array}\n   */\n  readFloat64Array(view) {\n    if (!ArrayBuffer.isView(view)) {\n      view = new Float64Array(view);\n    }\n\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + view.byteLength > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 8;\n\n      view[i] = uint8ToFloat64(uint8array[offset], uint8array[offset + 1], uint8array[offset + 2], uint8array[offset + 3], uint8array[offset + 4], uint8array[offset + 5], uint8array[offset + 6], uint8array[offset + 7]);\n    }\n\n    this.index += view.byteLength;\n\n    return view;\n  }\n\n  /**\n   * Read into a typed array.\n   *\n   * @param {ArrayBufferView} view\n   */\n  readTypedArray(view) {\n    let buffer = new Uint8Array(view.buffer, view.byteOffset, view.byteLength);\n    let index = this.index;\n    let uint8array = this.uint8array;\n    if (index + buffer.length > uint8array.length) {\n      throw new RangeError(`BinaryStream: read outside of range`);\n    }\n\n    for (let i = 0, l = buffer.length; i < l; i++) {\n      buffer[i] = uint8array[index + i];\n    }\n\n    this.index += buffer.length;\n  }\n\n  /**\n   * Write a string\n   *\n   * @param {string} value\n   */\n  write(value) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n    let count = value.length;\n\n    for (let i = 0; i < count; i++) {\n      uint8array[index + i] = value.charCodeAt(i);\n    }\n\n    this.index += count;\n  }\n\n  /**\n   * Write a 8 bit signed integer\n   *\n   * @param {number} value\n   */\n  writeInt8(value) {\n    this.uint8array[this.index] = int8ToUint8(value);\n    this.index += 1;\n  }\n\n  /**\n   * Write a 16 bit signed integer\n   *\n   * @param {number} value\n   */\n  writeInt16(value) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    int16ToUint8(uint8, value);\n\n    uint8array[index] = uint8[0];\n    uint8array[index + 1] = uint8[1];\n\n    this.index += 2;\n  }\n\n  /**\n   * Write a 32 bit signed integer\n   *\n   * @param {number} value\n   */\n  writeInt32(value) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    int32ToUint8(uint8, value);\n\n    uint8array[index] = uint8[0];\n    uint8array[index + 1] = uint8[1];\n    uint8array[index + 2] = uint8[2];\n    uint8array[index + 3] = uint8[3];\n\n    this.index += 4;\n  }\n\n  /**\n   * Write a 8 bit unsigned integer\n   *\n   * @param {number} value\n   */\n  writeUint8(value) {\n    this.uint8array[this.index] = value;\n    this.index += 1;\n  }\n\n  /**\n   * Write a 16 bit unsigned integer\n   *\n   * @param {number} value\n   */\n  writeUint16(value) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    uint16ToUint8(uint8, value);\n\n    uint8array[index] = uint8[0];\n    uint8array[index + 1] = uint8[1];\n\n    this.index += 2;\n  }\n\n  /**\n   * Write a 32 bit unsigned integer\n   *\n   * @param {number} value\n   */\n  writeUint32(value) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    uint32ToUint8(uint8, value);\n\n    uint8array[index] = uint8[0];\n    uint8array[index + 1] = uint8[1];\n    uint8array[index + 2] = uint8[2];\n    uint8array[index + 3] = uint8[3];\n\n    this.index += 4;\n  }\n\n  /**\n   * Write a 32 bit float\n   *\n   * @param {number} value\n   */\n  writeFloat32(value) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    float32ToUint8(uint8, value);\n\n    uint8array[index] = uint8[0];\n    uint8array[index + 1] = uint8[1];\n    uint8array[index + 2] = uint8[2];\n    uint8array[index + 3] = uint8[3];\n\n    this.index += 4;\n  }\n\n  /**\n   * Write a 64 bit float\n   *\n   * @param {number} value\n   */\n  writeFloat64(value) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    float64ToUint8(uint8, value);\n\n    uint8array[index] = uint8[0];\n    uint8array[index + 1] = uint8[1];\n    uint8array[index + 2] = uint8[2];\n    uint8array[index + 3] = uint8[3];\n    uint8array[index + 4] = uint8[4];\n    uint8array[index + 5] = uint8[5];\n    uint8array[index + 6] = uint8[6];\n    uint8array[index + 7] = uint8[7];\n\n    this.index += 8;\n  }\n\n  /**\n   * Write an array of 8 bit signed integers\n   *\n   * @param {Int8Array} view\n   */\n  writeInt8Array(view) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      uint8array[index + i] = int8ToUint8(view[i]);\n    }\n\n    this.index += view.byteLength;\n  }\n\n  /**\n   * Write an array of 16 bit signed integers\n   *\n   * @param {Int16Array} view\n   */\n  writeInt16Array(view) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 2;\n\n      int16ToUint8(uint8, view[i]);\n\n      uint8array[offset] = uint8[0];\n      uint8array[offset + 1] = uint8[1];\n    }\n\n    this.index += view.byteLength;\n  }\n\n  /**\n   * Write an array of 32 bit signed integers\n   *\n   * @param {Int32Array} view\n   */\n  writeInt32Array(view) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 4;\n\n      int32ToUint8(uint8, view[i]);\n\n      uint8array[offset] = uint8[0];\n      uint8array[offset + 1] = uint8[1];\n      uint8array[offset + 2] = uint8[2];\n      uint8array[offset + 3] = uint8[3];\n    }\n\n    this.index += view.byteLength;\n  }\n\n  /**\n   * Write an array of 8 bit unsigned integers\n   *\n   * @param {Uint8Array} view\n   */\n  writeUint8Array(view) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      uint8array[index + i] = view[i];\n    }\n\n    this.index += view.byteLength;\n  }\n\n  /**\n   * Write an array of 16 bit unsigned integers\n   *\n   * @param {Uint16Array} view\n   */\n  writeUint16Array(view) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 2;\n\n      uint16ToUint8(uint8, view[i]);\n\n      uint8array[offset] = uint8[0];\n      uint8array[offset + 1] = uint8[1];\n    }\n\n    this.index += view.byteLength;\n  }\n\n  /**\n   * Write an array of 32 bit unsigned integers\n   *\n   * @param {Uint32Array} view\n   */\n  writeUint32Array(view) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 4;\n\n      uint32ToUint8(uint8, view[i]);\n\n      uint8array[offset] = uint8[0];\n      uint8array[offset + 1] = uint8[1];\n      uint8array[offset + 2] = uint8[2];\n      uint8array[offset + 3] = uint8[3];\n    }\n\n    this.index += view.byteLength;\n  }\n\n  /**\n   * Write an array of 32 bit floats\n   *\n   * @param {Float32Array} view\n   */\n  writeFloat32Array(view) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 4;\n\n      float32ToUint8(uint8, view[i]);\n\n      uint8array[offset] = uint8[0];\n      uint8array[offset + 1] = uint8[1];\n      uint8array[offset + 2] = uint8[2];\n      uint8array[offset + 3] = uint8[3];\n    }\n\n    this.index += view.byteLength;\n  }\n\n  /**\n   * Write an array of 64 bit floats\n   *\n   * @param {Float64Array} view\n   */\n  writeFloat64Array(view) {\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      let offset = index + i * 8;\n\n      float64ToUint8(uint8, view[i]);\n\n      uint8array[offset] = uint8[0];\n      uint8array[offset + 1] = uint8[1];\n      uint8array[offset + 2] = uint8[2];\n      uint8array[offset + 3] = uint8[3];\n      uint8array[offset + 4] = uint8[4];\n      uint8array[offset + 5] = uint8[5];\n      uint8array[offset + 6] = uint8[6];\n      uint8array[offset + 7] = uint8[7];\n    }\n\n    this.index += view.byteLength;\n  }\n\n  /**\n   * Write a typed array.\n   *\n   * @param {ArrayBufferView} view\n   */\n  writeTypedArray(view) {\n    let buffer = new Uint8Array(view.buffer);\n    let index = this.index;\n    let uint8array = this.uint8array;\n\n    for (let i = 0, l = buffer.length; i < l; i++) {\n      uint8array[index + i] = buffer[i];\n    }\n  }\n}\n","/**\n * A random item.\n */\nexport default class RandomItem {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.chance = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.id = stream.read(4, true);\n    this.chance = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.write(this.id);\n    stream.writeInt32(this.chance);\n  }\n}\n","import RandomItem from './randomitem';\n\n/**\n * A random item set.\n */\nexport default class RandomItemSet {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {Array<RandomItem>} */\n    this.items = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let item = new RandomItem();\n\n      item.load(stream);\n\n      this.items.push(item);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeUint32(this.items.length);\n\n    for (let item of this.items) {\n      item.save(stream);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 4 + this.items.length * 8;\n  }\n}\n","import RandomItemSet from './randomitemset';\n\n/**\n * A doodad.\n */\nexport default class Doodad {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.variation = 0;\n    /** @member {Float32Array} */\n    this.location = new Float32Array(3);\n    /** @member {number} */\n    this.angle = 0;\n    /** @member {Float32Array} */\n    this.scale = new Float32Array([1, 1, 1]);\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {number} */\n    this.life = 0;\n    /** @member {number} */\n    this.itemTable = -1;\n    /** @member {Array<RandomItemSet>} */\n    this.itemSets = [];\n    /** @member {number} */\n    this.editorId = 0;\n    /** @member {Uint8Array} */\n    this.u1 = new Uint8Array(8);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  load(stream, version) {\n    this.id = stream.read(4, true);\n    this.variation = stream.readInt32();\n    this.location = stream.readFloat32Array(3);\n    this.angle = stream.readFloat32();\n    this.scale = stream.readFloat32Array(3);\n    this.flags = stream.readUint8();\n    this.life = stream.readUint8();\n\n    if (version > 7) {\n      this.itemTable = stream.readUint32();\n\n      for (let i = 0, l = stream.readUint32(); i < l; i++) {\n        let itemSet = new RandomItemSet();\n\n        itemSet.load(stream);\n\n        this.itemSets.push(itemSet);\n      }\n    }\n\n    this.editorId = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.write(this.id);\n    stream.writeInt32(this.variation);\n    stream.writeFloat32Array(this.location);\n    stream.writeFloat32(this.angle);\n    stream.writeFloat32Array(this.scale);\n    stream.writeUint8(this.flags);\n    stream.writeUint8(this.life);\n\n    if (version > 7) {\n      stream.writeUint32(this.itemTable);\n      stream.writeUint32(this.itemSets.length);\n\n      for (let itemSet of this.itemSets) {\n        itemSet.save(stream);\n      }\n    }\n\n    stream.writeInt32(this.editorId);\n  }\n\n  /**\n   * @param {number} version\n   * @return {number}\n   */\n  getByteLength(version) {\n    let size = 42;\n\n    if (version > 7) {\n      size += 8;\n\n      for (let itemSet of this.itemSets) {\n        size += itemSet.getByteLength();\n      }\n    }\n\n    return size;\n  }\n}\n","/**\n * A terrain doodad.\n *\n * This type of doodad works much like cliffs.\n * It uses the height of the terrain, and gets affected by the ground heightmap.\n * It cannot be manipulated in any way in the World Editor once placed.\n * Indeed, the only way to change it is to remove it by changing cliffs around it.\n */\nexport default class TerrainDoodad {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.variation = 0;\n    /** @member {Uint32Array} */\n    this.location = new Uint32Array(2);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  load(stream, version) {\n    this.id = stream.read(4, true);\n    this.variation = stream.readUint32();\n    this.location = stream.readUint32Array(2);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.write(this.id);\n    stream.writeUint32(this.variation);\n    stream.writeUint32Array(this.location);\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport Doodad from './doodad';\nimport TerrainDoodad from './terraindoodad';\n\n/**\n * war3map.doo - the doodad and destructible file.\n */\nexport default class War3MapDoo {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {Uint8Array} */\n    this.u1 = new Uint8Array(4);\n    /** @member {Array<Doodad>} */\n    this.doodads = [];\n    /** @member {Uint8Array} */\n    this.u2 = new Uint8Array(4);\n    /** @member {Array<TerrainDoodad>} */\n    this.terrainDoodads = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   * @return {boolean}\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    if (stream.read(4) !== 'W3do') {\n      return false;\n    }\n\n    this.version = stream.readInt32();\n    this.u1 = stream.readUint8Array(4);\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let doodad = new Doodad();\n\n      doodad.load(stream, this.version);\n\n      this.doodads.push(doodad);\n    }\n\n    this.u2 = stream.readUint8Array(4);\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let terrainDoodad = new TerrainDoodad();\n\n      terrainDoodad.load(stream, this.version);\n\n      this.terrainDoodads.push(terrainDoodad);\n    }\n\n    return true;\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.write('W3do');\n    stream.writeInt32(this.version);\n    stream.writeUint8Array(this.u1);\n    stream.writeUint32(this.doodads.length);\n\n    for (let doodad of this.doodads) {\n      doodad.save(stream, this.version);\n    }\n\n    stream.writeUint8Array(this.u2);\n    stream.writeUint32(this.terrainDoodads.length);\n\n    for (let terrainDoodad of this.terrainDoodads) {\n      terrainDoodad.save(stream, this.version);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 24 + this.terrainDoodads.length * 16;\n\n    for (let doodad of this.doodads) {\n      size += doodad.getByteLength(this.version);\n    }\n\n    return size;\n  }\n}\n","\n/**\n * An import.\n */\nexport default class Import {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.isCustom = 0;\n    /** @member {string} */\n    this.name = '';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.isCustom = stream.readUint8();\n    this.name = stream.readUntilNull();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeUint8(this.isCustom);\n    stream.write(`${this.name}\\0`);\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 2 + this.name.length;\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport Import from './import';\n\n/**\n * war3map.imp - the import file.\n */\nexport default class War3MapImp {\n  /**\n   *\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 1;\n    /** @member {Map<string, Import>} */\n    this.entries = new Map();\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readUint32();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let entry = new Import();\n\n      entry.load(stream);\n\n      if (entry.isCustom) {\n        this.entries.set(entry.name, entry);\n      } else {\n        this.entries.set(`war3mapimported\\\\${entry.name}`, entry);\n      }\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeUint32(this.version);\n    stream.writeUint32(this.entries.size);\n\n    for (let entry of this.entries.values()) {\n      entry.save(stream);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 8;\n\n    for (let entry of this.entries.values()) {\n      size += entry.getByteLength();\n    }\n\n    return size;\n  }\n\n  /**\n   * @param {string} name\n   * @return {boolean}\n   */\n  set(name) {\n    if (!this.entries.has(name)) {\n      let entry = new Import();\n\n      entry.isCustom = 10;\n      entry.path = name;\n\n      this.entries.set(name, entry);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} name\n   * @return {boolean}\n   */\n  has(name) {\n    return this.entries.has(name);\n  }\n\n  /**\n   * @param {string} name\n   * @return {boolean}\n   */\n  delete(name) {\n    return this.entries.delete(name);\n  }\n\n  /**\n   * @param {string} name\n   * @param {string} newName\n   * @return {boolean}\n   */\n  rename(name, newName) {\n    let entry = this.entries.get(name);\n\n    if (entry) {\n      entry.isCustom = 10;\n      entry.path = newName;\n\n      return true;\n    }\n\n    return false;\n  }\n}\n","/**\n * A modification.\n */\nexport default class Modification {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.variableType = 0;\n    /** @member {number} */\n    this.levelOrVariation = 0;\n    /** @member {number} */\n    this.dataPointer = 0;\n    /** @member {number} */\n    this.value = 0;\n    /** @member {number} */\n    this.u1 = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} useOptionalInts\n   */\n  load(stream, useOptionalInts) {\n    this.id = stream.read(4, true);\n    this.variableType = stream.readInt32();\n\n    if (useOptionalInts) {\n      this.levelOrVariation = stream.readInt32();\n      this.dataPointer = stream.readInt32();\n    }\n\n    if (this.variableType === 0) {\n      this.value = stream.readInt32();\n    } else if (this.variableType === 1 || this.variableType === 2) {\n      this.value = stream.readFloat32();\n    } else if (this.variableType === 3) {\n      this.value = stream.readUntilNull();\n    } else {\n      throw new Error(`Modification: unknown variable type ${this.variableType}`);\n    }\n\n    this.u1 = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} useOptionalInts\n   */\n  save(stream, useOptionalInts) {\n    stream.write(this.id);\n    stream.writeInt32(this.variableType);\n\n    if (useOptionalInts) {\n      stream.writeInt32(this.levelOrVariation);\n      stream.writeInt32(this.dataPointer);\n    }\n\n    if (this.variableType === 0) {\n      stream.writeInt32(this.value);\n    } else if (this.variableType === 1 || this.variableType === 2) {\n      stream.writeFloat32(this.value);\n    } else if (this.variableType === 3) {\n      stream.write(`${this.value}\\0`);\n    } else {\n      throw new Error(`Modification: unknown variable type ${this.variableType}`);\n    }\n\n    stream.writeInt32(this.u1);\n  }\n\n  /**\n   * @param {number} useOptionalInts\n   * @return {number}\n   */\n  getByteLength(useOptionalInts) {\n    let size = 12;\n\n    if (useOptionalInts) {\n      size += 8;\n    }\n\n    if (this.variableType === 3) {\n      size += 1 + this.value.length;\n    } else {\n      size += 4;\n    }\n\n    return size;\n  }\n}\n","import Modification from './modification';\n\n/**\n * A modified object.\n */\nexport default class ModifiedObject {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.oldId = '\\0\\0\\0\\0';\n    /** @member {string} */\n    this.newId = '\\0\\0\\0\\0';\n    /** @member {Array<Modification>} */\n    this.modifications = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} useOptionalInts\n   */\n  load(stream, useOptionalInts) {\n    this.oldId = stream.read(4, true);\n    this.newId = stream.read(4, true);\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let modification = new Modification();\n\n      modification.load(stream, useOptionalInts);\n\n      this.modifications[i] = modification;\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} useOptionalInts\n   */\n  save(stream, useOptionalInts) {\n    if (this.oldId) {\n      stream.write(this.oldId);\n    } else {\n      stream.writeUint32(0);\n    }\n\n    if (this.newId) {\n      stream.write(this.newId);\n    } else {\n      stream.writeUint32(0);\n    }\n\n    stream.writeUint32(this.modifications.length);\n\n    for (let modification of this.modifications) {\n      modification.save(stream, useOptionalInts);\n    }\n  }\n\n  /**\n   * @param {number} useOptionalInts\n   * @return {number}\n   */\n  getByteLength(useOptionalInts) {\n    let size = 12;\n\n    for (let modification of this.modifications) {\n      size += modification.getByteLength(useOptionalInts);\n    }\n\n    return size;\n  }\n}\n","import ModifiedObject from './modifiedobject';\n\n/**\n * A modification table.\n */\nexport default class ModificationTable {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {Array<ModifiedObject>} */\n    this.objects = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} useOptionalInts\n   */\n  load(stream, useOptionalInts) {\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let object = new ModifiedObject();\n\n      object.load(stream, useOptionalInts);\n\n      this.objects[i] = object;\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} useOptionalInts\n   */\n  save(stream, useOptionalInts) {\n    stream.writeUint32(this.objects.length);\n\n    for (let object of this.objects) {\n      object.save(stream, useOptionalInts);\n    }\n  }\n\n  /**\n   * @param {number} useOptionalInts\n   * @return {number}\n   */\n  getByteLength(useOptionalInts) {\n    let size = 4;\n\n    for (let object of this.objects) {\n      size += object.getByteLength(useOptionalInts);\n    }\n\n    return size;\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport ModificationTable from '../w3u/modificationtable';\n\n/**\n * war3map.w3d - the doodad modification file.\n *\n * Also used for war3map.w3a (abilities), and war3map.w3q (upgrades).\n */\nexport default class War3MapW3d {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {ModificationTable} */\n    this.originalTable = new ModificationTable();\n    /** @member {ModificationTable} */\n    this.customTable = new ModificationTable();\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n    this.originalTable.load(stream, true);\n    this.customTable.load(stream, true);\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n    this.originalTable.save(stream, true);\n    this.customTable.save(stream, true);\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 4 + this.originalTable.getByteLength(true) + this.customTable.getByteLength(true);\n  }\n}\n","/**\n * A tile corner.\n */\nexport default class Corner {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.groundHeight = 0;\n    /** @member {number} */\n    this.waterHeight = 0;\n    /** @member {number} */\n    this.mapEdge = 0;\n    /** @member {number} */\n    this.ramp = 0;\n    /** @member {number} */\n    this.blight = 0;\n    /** @member {number} */\n    this.water = 0;\n    /** @member {number} */\n    this.boundary = 0;\n    /** @member {number} */\n    this.groundTexture = 0;\n    /** @member {number} */\n    this.cliffVariation = 0;\n    /** @member {number} */\n    this.groundVariation = 0;\n    /** @member {number} */\n    this.cliffTexture = 0;\n    /** @member {number} */\n    this.layerHeight = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.groundHeight = (stream.readInt16() - 8192) / 512;\n\n    let waterAndEdge = stream.readInt16();\n\n    this.waterHeight = ((waterAndEdge & 0x3FFF) - 8192) / 512;\n    this.mapEdge = waterAndEdge & 0x4000;\n\n    let textureAndFlags = stream.readUint8();\n\n    this.ramp = textureAndFlags & 0b00010000;\n    this.blight = textureAndFlags & 0b00100000;\n    this.water = textureAndFlags & 0b01000000;\n    this.boundary = textureAndFlags & 0b10000000;\n\n    this.groundTexture = textureAndFlags & 0b00001111;\n\n    let variation = stream.readUint8();\n\n    this.cliffVariation = (variation & 0b11100000) >>> 5;\n    this.groundVariation = variation & 0b00011111;\n\n    let cliffTextureAndLayer = stream.readUint8();\n\n    this.cliffTexture = (cliffTextureAndLayer & 0b11110000) >>> 4;\n    this.layerHeight = cliffTextureAndLayer & 0b00001111;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt16(this.groundHeight * 512 + 8192);\n    stream.writeInt16(this.waterHeight * 512 + 8192 + this.mapEdge << 14);\n    stream.writeUint8((this.ramp << 4) | (this.blight << 5) | (this.water << 6) | (this.boundary << 7) | this.groundTexture);\n    stream.writeUint8((this.cliffVariation << 5) | this.groundVariation);\n    stream.writeUint8((this.cliffTexture << 4) + this.layerHeight);\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport Corner from './corner';\n\n/**\n * war3map.w3e - the environment file.\n */\nexport default class War3MapW3e {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {string} */\n    this.tileset = 'A';\n    /** @member {number} */\n    this.haveCustomTileset = 0;\n    /** @member {Array<string>} */\n    this.groundTilesets = [];\n    /** @member {Array<string>} */\n    this.cliffTilesets = [];\n    /** @member {Int32Array} */\n    this.mapSize = new Int32Array(2);\n    /** @member {Float32Array} */\n    this.centerOffset = new Float32Array(2);\n    /** @member {Array<Array<Corner>>} */\n    this.corners = [];\n\n    if (buffer instanceof ArrayBuffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   * @return {boolean}\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    if (stream.read(4) !== 'W3E!') {\n      return false;\n    }\n\n    this.version = stream.readInt32();\n    this.tileset = stream.read(1);\n    this.haveCustomTileset = stream.readInt32();\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      this.groundTilesets[i] = stream.read(4);\n    }\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      this.cliffTilesets[i] = stream.read(4);\n    }\n\n    this.mapSize = stream.readInt32Array(2);\n    this.centerOffset = stream.readFloat32Array(2);\n\n    let [columns, rows] = this.mapSize;\n\n    for (let row = 0; row < rows; row++) {\n      this.corners[row] = [];\n\n      for (let column = 0; column < columns; column++) {\n        let corner = new Corner();\n\n        corner.load(stream);\n\n        this.corners[row][column] = corner;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.write('W3E!');\n    stream.writeInt32(this.version);\n    stream.write(this.tileset);\n    stream.writeInt32(this.haveCustomTileset);\n    stream.writeUint32(this.groundTilesets.length);\n\n    for (let groundTileset of this.groundTilesets) {\n      stream.write(groundTileset);\n    }\n\n    stream.writeUint32(this.cliffTilesets.length);\n\n    for (let cliffTileset of this.cliffTilesets) {\n      stream.write(cliffTileset);\n    }\n\n    stream.writeInt32Array(this.mapSize);\n    stream.writeFloat32Array(this.centerOffset);\n\n    for (let row of this.corners) {\n      for (let corner of row) {\n        corner.save(stream);\n      }\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 37 + (this.groundTilesets.length * 4) + (this.cliffTilesets.length * 4) + (this.mapSize[0] * this.mapSize[1] * 7);\n  }\n}\n","/**\n * A player.\n */\nexport default class Player {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.id = 0;\n    /** @member {number} */\n    this.type = 0;\n    /** @member {number} */\n    this.race = 0;\n    /** @member {number} */\n    this.isFixedStartPosition = 0;\n    /** @member {string} */\n    this.name = '';\n    /** @member {Float32Array} */\n    this.startLocation = new Float32Array(2);\n    /** @member {number} */\n    this.allyLowPriorities = 0;\n    /** @member {number} */\n    this.allyHighPriorities = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.id = stream.readInt32();\n    this.type = stream.readInt32();\n    this.race = stream.readInt32();\n    this.isFixedStartPosition = stream.readInt32();\n    this.name = stream.readUntilNull();\n    this.startLocation = stream.readFloat32Array(2);\n    this.allyLowPriorities = stream.readUint32();\n    this.allyHighPriorities = stream.readUint32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.id);\n    stream.writeInt32(this.type);\n    stream.writeInt32(this.race);\n    stream.writeInt32(this.isFixedStartPosition);\n    stream.write(`${this.name}\\0`);\n    stream.writeFloat32Array(this.startLocation);\n    stream.writeUint32(this.allyLowPriorities);\n    stream.writeUint32(this.allyHighPriorities);\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 33 + this.name.length;\n  }\n}\n","/**\n * A force.\n */\nexport default class Force {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {number} */\n    this.playerMasks = 0;\n    /** @member {string} */\n    this.name = '';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.flags = stream.readUint32();\n    this.playerMasks = stream.readUint32();\n    this.name = stream.readUntilNull();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeUint32(this.flags);\n    stream.writeUint32(this.playerMasks);\n    stream.write(`${this.name}\\0`);\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 9 + this.name.length;\n  }\n}\n","/**\n * An upgrade availability change.\n */\nexport default class UpgradeAvailabilityChange {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.playerFlags = 0;\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.levelAffected = 0;\n    /** @member {number} */\n    this.availability = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.playerFlags = stream.readUint32();\n    this.id = stream.read(4, true);\n    this.levelAffected = stream.readInt32();\n    this.availability = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeUint32(this.playerFlags);\n    stream.write(this.id);\n    stream.writeInt32(this.levelAffected);\n    stream.writeInt32(this.availability);\n  }\n}\n","/**\n * A tech availablity change.\n */\nexport default class TechAvailabilityChange {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.playerFlags = 0;\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.playerFlags = stream.readUint32();\n    this.id = stream.read(4, true);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeUint32(this.playerFlags);\n    stream.write(this.id);\n  }\n}\n","/**\n * A random unit.\n */\nexport default class RandomUnit {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.chance = 0;\n    /** @member {Array<string>} */\n    this.ids = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} positions\n   */\n  load(stream, positions) {\n    this.chance = stream.readInt32();\n\n    for (let i = 0; i < positions; i++) {\n      this.ids[i] = stream.read(4, true);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.chance);\n\n    for (let id of this.ids) {\n      stream.write(id);\n    }\n  }\n}\n","import RandomUnit from './randomunit';\n\n/**\n * A random unit table.\n */\nexport default class RandomUnitTable {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.id = 0;\n    /** @member {string} */\n    this.name = '';\n    /** @member {number} */\n    this.positions = 0;\n    /** @member {Int32Array} */\n    this.columnTypes = new Int32Array(1);\n    /** @member {Array<RandomUnit>} */\n    this.units = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.id = stream.readInt32();\n    this.name = stream.readUntilNull();\n    this.positions = stream.readInt32();\n    this.columnTypes = stream.readInt32Array(this.positions);\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let unit = new RandomUnit();\n\n      unit.load(stream, this.positions);\n\n      this.units[i] = unit;\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.id);\n    stream.write(`${this.name}\\0`);\n    stream.writeInt32(this.positions);\n    stream.writeInt32Array(this.columnTypes);\n    stream.writeUint32(this.units.length);\n\n    for (let unit of this.units) {\n      unit.save(stream);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 13 + this.name.length + this.columnTypes.byteLength + (this.units.length * (4 + 4 * this.positions));\n  }\n}\n","/**\n * A random item.\n */\nexport default class RandomItem {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.chance = 0;\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.chance = stream.readInt32();\n    this.id = stream.read(4, true);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.chance);\n    stream.write(this.id);\n  }\n}\n","import RandomItem from './randomitem';\n\n/**\n * A random item set.\n */\nexport default class RandomItemSet {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {Array<RandomItem>} */\n    this.items = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let item = new RandomItem();\n\n      item.load(stream);\n\n      this.items[i] = item;\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeUint32(this.items.length);\n\n    for (let item of this.items) {\n      item.save(stream);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 4 + this.items.length * 8;\n  }\n}\n","import RandomItemSet from './randomitemset';\n\n/**\n * A random item table.\n */\nexport default class RandomItemTable {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.id = 0;\n    /** @member {string} */\n    this.name = '';\n    /** @member {Array<RandomItemSet>} */\n    this.sets = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.id = stream.readInt32();\n    this.name = stream.readUntilNull();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let set = new RandomItemSet();\n\n      set.load(stream);\n\n      this.sets[i] = set;\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.id);\n    stream.write(`${this.name}\\0`);\n    stream.writeUint32(this.sets.length);\n\n    for (let set of this.sets) {\n      set.save(stream);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 9 + this.name.length;\n\n    for (let set of this.sets) {\n      size += set.getByteLength();\n    }\n\n    return size;\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport Player from './player';\nimport Force from './force';\nimport UpgradeAvailabilityChange from './upgradeavailabilitychange';\nimport TechAvailabilityChange from './techavailabilitychange';\nimport RandomUnitTable from './randomunittable';\nimport RandomItemTable from './randomitemtable';\n\n/**\n * war3map.w3i - the general information file.\n */\nexport default class War3MapW3i {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {number} */\n    this.saves = 0;\n    /** @member {number} */\n    this.editorVersion = 0;\n    /** @member {string} */\n    this.name = '';\n    /** @member {string} */\n    this.author = '';\n    /** @member {string} */\n    this.description = '';\n    /** @member {string} */\n    this.recommendedPlayers = '';\n    /** @member {Float32Array} */\n    this.cameraBounds = new Float32Array(8);\n    /** @member {Int32Array} */\n    this.cameraBoundsComplements = new Int32Array(4);\n    /** @member {Int32Array} */\n    this.playableSize = new Int32Array(2);\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {string} */\n    this.tileset = '\\0';\n    /** @member {number} */\n    this.campaignBackground = 0;\n    /** @member {string} */\n    this.loadingScreenModel = '';\n    /** @member {string} */\n    this.loadingScreenText = '';\n    /** @member {string} */\n    this.loadingScreenTitle = '';\n    /** @member {string} */\n    this.loadingScreenSubtitle = '';\n    /** @member {number} */\n    this.loadingScreen = 0;\n    /** @member {string} */\n    this.prologueScreenModel = '';\n    /** @member {string} */\n    this.prologueScreenText = '';\n    /** @member {string} */\n    this.prologueScreenTitle = '';\n    /** @member {string} */\n    this.prologueScreenSubtitle = '';\n    /** @member {number} */\n    this.useTerrainFog = 0;\n    /** @member {Float32Array} */\n    this.fogHeight = new Float32Array(2);\n    /** @member {number} */\n    this.fogDensity = 0;\n    /** @member {Uint8Array} */\n    this.fogColor = new Uint8Array(4);\n    /** @member {number} */\n    this.globalWeather = 0;\n    /** @member {string} */\n    this.soundEnvironment = '';\n    /** @member {string} */\n    this.lightEnvironmentTileset = '\\0';\n    /** @member {Uint8Array} */\n    this.waterVertexColor = new Uint8Array(4);\n    /** @member {Array<Player>} */\n    this.players = [];\n    /** @member {Array<Force>} */\n    this.forces = [];\n    /** @member {Array<UpgradeAvailabilityChange>} */\n    this.upgradeAvailabilityChanges = [];\n    /** @member {Array<TechAvailabilityChange>} */\n    this.techAvailabilityChanges = [];\n    /** @member {Array<RandomUnitTable>} */\n    this.randomUnitTables = [];\n    /** @member {Array<RandomItemTable>} */\n    this.randomItemTables = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n    this.saves = stream.readInt32();\n    this.editorVersion = stream.readInt32();\n    if (this.version >= 27) {\n      this.gameVersionMajor = stream.readInt32();\n      this.gameVersionMinor = stream.readInt32();\n      this.gameVersionPatch = stream.readInt32();\n      this.gameVersionBuild = stream.readInt32();\n    }\n    this.name = stream.readUntilNull();\n    this.author = stream.readUntilNull();\n    this.description = stream.readUntilNull();\n    this.recommendedPlayers = stream.readUntilNull();\n    this.cameraBounds = stream.readFloat32Array(8);\n    this.cameraBoundsComplements = stream.readInt32Array(4);\n    this.playableSize = stream.readInt32Array(2);\n    this.flags = stream.readUint32();\n    this.tileset = stream.read(1);\n    this.campaignBackground = stream.readInt32();\n\n    if (this.version > 24) {\n      this.loadingScreenModel = stream.readUntilNull();\n    }\n\n    this.loadingScreenText = stream.readUntilNull();\n    this.loadingScreenTitle = stream.readUntilNull();\n    this.loadingScreenSubtitle = stream.readUntilNull();\n    this.loadingScreen = stream.readInt32();\n\n    if (this.version > 24) {\n      this.prologueScreenModel = stream.readUntilNull();\n    }\n\n    this.prologueScreenText = stream.readUntilNull();\n    this.prologueScreenTitle = stream.readUntilNull();\n    this.prologueScreenSubtitle = stream.readUntilNull();\n\n    if (this.version > 24) {\n      this.useTerrainFog = stream.readInt32();\n      this.fogHeight = stream.readFloat32Array(2);\n      this.fogDensity = stream.readFloat32();\n      this.fogColor = stream.readUint8Array(4);\n      this.globalWeather = stream.readInt32();\n      this.soundEnvironment = stream.readUntilNull();\n      this.lightEnvironmentTileset = stream.read(1, true);\n      this.waterVertexColor = stream.readUint8Array(4);\n    }\n\n    if (this.version >= 27) {\n      this.lua = stream.readInt32();\n    }\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let player = new Player();\n\n      player.load(stream);\n\n      this.players[i] = player;\n    }\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let force = new Force();\n\n      force.load(stream);\n\n      this.forces[i] = force;\n    }\n    if (stream.index == stream.byteLength - 1) { return; }\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let upgradeAvailabilityChange = new UpgradeAvailabilityChange();\n\n      upgradeAvailabilityChange.load(stream);\n\n      this.upgradeAvailabilityChanges[i] = upgradeAvailabilityChange;\n    }\n    if (stream.index >= stream.byteLength - 1) {\n      return;\n    }\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let techAvailabilityChange = new TechAvailabilityChange();\n\n      techAvailabilityChange.load(stream);\n\n      this.techAvailabilityChanges[i] = techAvailabilityChange;\n    }\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let randomUnitTable = new RandomUnitTable();\n\n      randomUnitTable.load(stream);\n\n      this.randomUnitTables[i] = randomUnitTable;\n    }\n\n    if (this.version > 24) {\n      for (let i = 0, l = stream.readInt32(); i < l; i++) {\n        let randomItemTable = new RandomItemTable();\n\n        randomItemTable.load(stream);\n\n        this.randomItemTables[i] = randomItemTable;\n      }\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n    stream.writeInt32(this.saves);\n    stream.writeInt32(this.editorVersion);\n    stream.write(`${this.name}\\0`);\n    stream.write(`${this.author}\\0`);\n    stream.write(`${this.description}\\0`);\n    stream.write(`${this.recommendedPlayers}\\0`);\n    stream.writeFloat32Array(this.cameraBounds);\n    stream.writeInt32Array(this.cameraBoundsComplements);\n    stream.writeInt32Array(this.playableSize);\n    stream.writeUint32(this.flags);\n    stream.write(this.tileset);\n    stream.writeInt32(this.campaignBackground);\n\n    if (this.version > 24) {\n      stream.write(`${this.loadingScreenModel}\\0`);\n    }\n\n    stream.write(`${this.loadingScreenText}\\0`);\n    stream.write(`${this.loadingScreenTitle}\\0`);\n    stream.write(`${this.loadingScreenSubtitle}\\0`);\n    stream.writeInt32(this.loadingScreen);\n\n    if (this.version > 24) {\n      stream.write(`${this.prologueScreenModel}\\0`);\n    }\n\n    stream.write(`${this.prologueScreenText}\\0`);\n    stream.write(`${this.prologueScreenTitle}\\0`);\n    stream.write(`${this.prologueScreenSubtitle}\\0`);\n\n    if (this.version > 24) {\n      stream.writeInt32(this.useTerrainFog);\n      stream.writeFloat32Array(this.fogHeight);\n      stream.writeFloat32(this.fogDensity);\n      stream.writeUint8Array(this.fogColor);\n      stream.writeInt32(this.globalWeather);\n      stream.write(`${this.soundEnvironment}\\0`);\n      stream.write(this.lightEnvironmentTileset);\n      stream.writeUint8Array(this.waterVertexColor);\n    }\n\n    stream.writeUint32(this.players.length);\n\n    for (let player of this.players) {\n      player.save(stream);\n    }\n\n    stream.writeUint32(this.forces.length);\n\n    for (let force of this.forces) {\n      force.save(stream);\n    }\n\n    stream.writeUint32(this.upgradeAvailabilityChanges.length);\n\n    for (let change of this.upgradeAvailabilityChanges) {\n      change.save(stream);\n    }\n\n    stream.writeUint32(this.techAvailabilityChanges.length);\n\n    for (let change of this.techAvailabilityChanges) {\n      change.save(stream);\n    }\n\n    stream.writeUint32(this.randomUnitTables.length);\n\n    for (let table of this.randomUnitTables) {\n      table.save(stream);\n    }\n\n    if (this.version > 24) {\n      stream.writeUint32(this.randomItemTables.length);\n\n      for (let table of this.randomItemTables) {\n        table.save(stream);\n      }\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 111 + this.name.length + this.author.length + this.description.length + this.recommendedPlayers.length + this.loadingScreenText.length + this.loadingScreenTitle.length + this.loadingScreenSubtitle.length + this.prologueScreenText.length + this.prologueScreenTitle.length + this.prologueScreenSubtitle.length;\n\n    for (let player of this.players) {\n      size += player.getByteLength();\n    }\n\n    for (let force of this.forces) {\n      size += force.getByteLength();\n    }\n\n    size += this.upgradeAvailabilityChanges.length * 16;\n\n    size += this.techAvailabilityChanges.length * 8;\n\n    for (let table of this.randomUnitTables) {\n      size += table.getByteLength();\n    }\n\n    if (this.version > 24) {\n      size += 36 + this.loadingScreenModel.length + this.prologueScreenModel.length + this.soundEnvironment.length;\n\n      for (let table of this.randomItemTables) {\n        size += table.getByteLength();\n      }\n    }\n\n    return size;\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport ModificationTable from './modificationtable';\n\n/**\n * war3map.w3u - the unit modification file.\n *\n * Also used for war3map.w3t (items), war3map.w3b (destructibles), and war3map.w3h (buffs).\n */\nexport default class War3MapW3u {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {ModificationTable} */\n    this.originalTable = new ModificationTable();\n    /** @member {ModificationTable} */\n    this.customTable = new ModificationTable();\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n    this.originalTable.load(stream, false);\n    this.customTable.load(stream, false);\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n    this.originalTable.save(stream, false);\n    this.customTable.save(stream, false);\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 4 + this.originalTable.getByteLength(false) + this.customTable.getByteLength(false);\n  }\n}\n","/**\n * A custom text trigger.\n */\nexport default class CustomTextTrigger {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.text = '';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    let textLength = stream.readInt32();\n\n    if (textLength) {\n      this.text = stream.read(textLength - 1);\n      stream.skip(1);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    let text = this.text;\n\n    if (text.length) {\n      stream.writeInt32(this.text.length + 1);\n      stream.write(`${this.text}\\0`);\n    } else {\n      stream.writeInt32(0);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 4;\n\n    if (this.text.length) {\n      size += this.text.length + 1;\n    }\n\n    return size;\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport CustomTextTrigger from './customtexttrigger';\n\n/**\n * war3map.wct - the custom text (jass) trigger file.\n */\nexport default class War3MapWct {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {string} */\n    this.comment = '';\n    /** @member {?CustomTextTrigger} */\n    this.trigger = null;\n    /** @member {Array<CustomTextTrigger>} */\n    this.triggers = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n\n    if (this.version === 1) {\n      this.comment = stream.readUntilNull();\n\n      let trigger = new CustomTextTrigger();\n\n      trigger.load(stream);\n\n      this.trigger = trigger;\n    }\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let trigger = new CustomTextTrigger();\n\n      trigger.load(stream);\n\n      this.triggers[i] = trigger;\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n\n    if (this.version === 1) {\n      stream.write(`${this.comment}\\0`);\n      this.trigger.save(stream);\n    }\n\n    stream.writeUint32(this.triggers.length);\n\n    for (let trigger of this.triggers) {\n      trigger.save(stream);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 8;\n\n    if (this.version === 1) {\n      size += this.comment.length + 1 + this.trigger.getByteLength();\n    }\n\n    for (let trigger of this.triggers) {\n      size += trigger.getByteLength();\n    }\n\n    return size;\n  }\n}\n","/**\n * A Trigger category.\n * Used to scope triggers together in a Folder-like hierarchy.\n */\nexport default class TriggerCategory {\n  /**\n   *\n   */\n  constructor() {\n    this.id = 0;\n    this.name = '';\n    this.isComment = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  load(stream, version) {\n    this.id = stream.readInt32();\n    this.name = stream.readUntilNull();\n\n    if (version === 7) {\n      this.isComment = stream.readInt32();\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.writeInt32(this.id);\n    stream.write(`${this.name}\\0`);\n\n    if (version === 7) {\n      stream.writeInt32(this.isComment);\n    }\n  }\n\n  /**\n   * @param {number} version\n   * @return {number}\n   */\n  getByteLength(version) {\n    let size = 5 + this.name.length;\n\n    if (version === 7) {\n      size += 4;\n    }\n\n    return size;\n  }\n}\n","/**\n * A global variable.\n */\nexport default class Variable {\n  /**\n   *\n   */\n  constructor() {\n    this.name = '';\n    this.type = '';\n    this.u1 = 0;\n    this.isArray = 0;\n    this.arraySize = 0;\n    this.isInitialized = 0;\n    this.initialValue = '';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  load(stream, version) {\n    this.name = stream.readUntilNull();\n    this.type = stream.readUntilNull();\n    this.u1 = stream.readInt32();\n    this.isArray = stream.readInt32();\n\n    if (version === 7) {\n      this.arraySize = stream.readInt32();\n    }\n\n    this.isInitialized = stream.readInt32();\n    this.initialValue = stream.readUntilNull();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.write(`${this.name}\\0`);\n    stream.write(`${this.type}\\0`);\n    stream.writeInt32(this.u1);\n    stream.writeInt32(this.isArray);\n\n    if (version === 7) {\n      stream.writeInt32(this.arraySize);\n    }\n\n    stream.writeInt32(this.isInitialized);\n    stream.write(`${this.initialValue}\\0`);\n  }\n\n  /**\n   * @param {number} version\n   * @return {number}\n   */\n  getByteLength(version) {\n    let size = 15 + this.name.length + this.type.length + this.initialValue.length;\n\n    if (version === 7) {\n      size += 4;\n    }\n\n    return size;\n  }\n}\n","import Parameter from './parameter';\n\n/**\n * A function call in an expression.\n */\nexport default class SubParameters {\n  /**\n   *\n   */\n  constructor() {\n    this.type = 0;\n    this.name = '';\n    this.beginParameters = 0;\n    this.parameters = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   * @param {TriggerData} triggerData\n   */\n  load(stream, version, triggerData) {\n    this.type = stream.readInt32();\n    this.name = stream.readUntilNull();\n    this.beginParameters = stream.readInt32();\n\n    if (this.beginParameters) {\n      let args = triggerData.getFunction(this.type, this.name).args;\n\n      for (let i = 0, l = args.length; i < l; i++) {\n        let parameter = new Parameter();\n\n        parameter.load(stream, version, triggerData);\n\n        this.parameters[i] = parameter;\n      }\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.writeInt32(this.type);\n    stream.write(`${this.name}\\0`);\n    stream.writeInt32(this.beginParameters);\n\n    for (let parameter of this.parameters) {\n      parameter.save(stream, version);\n    }\n  }\n\n  /**\n   * @param {number} version\n   * @return {number}\n   */\n  getByteLength(version) {\n    let size = 9 + this.name.length;\n\n    if (this.parameters.length) {\n      for (let parameter of this.parameters) {\n        size += parameter.getByteLength(version);\n      }\n    }\n\n    return size;\n  }\n}\n","import SubParameters from './subparameters';\n\n/**\n * A function parameter. Can be a function itself, in which case it will have a SubParameters structure.\n */\nexport default class Parameter {\n  /**\n   *\n   */\n  constructor() {\n    this.type = 0;\n    this.value = '';\n    this.subParameters = null;\n    this.u1 = 0;\n    this.isArray = 0;\n    this.arrayIndex = null;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   * @param {TriggerData} triggerData\n   */\n  load(stream, version, triggerData) {\n    this.type = stream.readInt32();\n    this.value = stream.readUntilNull();\n\n    if (stream.readInt32()) {\n      let subParameters = new SubParameters();\n\n      subParameters.load(stream, version, triggerData);\n\n      this.subParameters = subParameters;\n    }\n\n    if ((version === 4 && this.type === 2) || (version === 7 && this.subParameters)) {\n      this.u1 = stream.readInt32();\n    }\n\n    if ((version === 4 && this.type !== 2) || version === 7) {\n      this.isArray = stream.readInt32();\n    }\n\n    if (this.isArray) {\n      let arrayIndex = new Parameter();\n\n      arrayIndex.load(stream, version, triggerData);\n\n      this.arrayIndex = arrayIndex;\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.writeInt32(this.type);\n    stream.write(`${this.value}\\0`);\n\n    if (this.subParameters) {\n      stream.writeInt32(1);\n      this.subParameters.save(stream, version);\n    } else {\n      stream.writeInt32(0);\n    }\n\n    if ((version === 4 && this.type === 2) || (version === 7 && this.subParameters)) {\n      stream.writeInt32(this.u1);\n    }\n\n    if ((version === 4 && this.type !== 2) || version === 7) {\n      stream.writeInt32(this.isArray);\n    }\n\n    if (this.isArray) {\n      this.arrayIndex.save(stream, version);\n    }\n  }\n\n  /**\n   * @param {number} version\n   * @return {number}\n   */\n  getByteLength(version) {\n    let size = 9 + this.value.length;\n\n    if (this.subParameters) {\n      size += this.subParameters.getByteLength(version);\n    }\n\n    if ((version === 4 && this.type === 2) || (version === 7 && this.subParameters)) {\n      size += 4;\n    }\n\n    if ((version === 4 && this.type !== 2) || version === 7) {\n      size += 4;\n    }\n\n    if (this.isArray) {\n      size += this.arrayIndex.getByteLength(version);\n    }\n\n    return size;\n  }\n}\n","import Parameter from './parameter';\n\n/**\n * An Event/Condition/Action.\n */\nexport default class ECA {\n  /**\n   *\n   */\n  constructor() {\n    this.type = -1;\n    this.group = -1;\n    this.name = '';\n    this.isEnabled = 0;\n    this.parameters = [];\n    this.ecas = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   * @param {boolean} isChildECA\n   * @param {TriggerData} triggerData\n   */\n  load(stream, version, isChildECA, triggerData) {\n    this.type = stream.readInt32();\n\n    if (isChildECA) {\n      this.group = stream.readUint32();\n    }\n\n    this.name = stream.readUntilNull();\n    this.isEnabled = stream.readInt32();\n\n    let args = triggerData.getFunction(this.type, this.name).args;\n\n    for (let i = 0, l = args.length; i < l; i++) {\n      let parameter = new Parameter();\n\n      parameter.load(stream, version, triggerData);\n\n      this.parameters[i] = parameter;\n    }\n\n    if (version === 7) {\n      for (let i = 0, l = stream.readUint32(); i < l; i++) {\n        let eca = new ECA();\n\n        eca.load(stream, version, true, triggerData);\n\n        this.ecas[i] = eca;\n      }\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.writeInt32(this.type);\n\n    if (this.group !== -1) {\n      stream.writeInt32(this.group);\n    }\n\n    stream.write(`${this.name}\\0`);\n    stream.writeInt32(this.isEnabled);\n\n    for (let parameter of this.parameters) {\n      parameter.save(stream, version);\n    }\n\n    if (version === 7) {\n      stream.writeUint32(this.ecas.length);\n\n      for (let eca of this.ecas) {\n        eca.save(stream, version);\n      }\n    }\n  }\n\n  /**\n   * @param {number} version\n   * @return {number}\n   */\n  getByteLength(version) {\n    let size = 9 + this.name.length;\n\n    if (this.group !== -1) {\n      size += 4;\n    }\n\n    for (let parameter of this.parameters) {\n      size += parameter.getByteLength(version);\n    }\n\n    if (version === 7) {\n      size += 4;\n\n      for (let eca of this.ecas) {\n        size += eca.getByteLength(version);\n      }\n    }\n\n    return size;\n  }\n}\n","import ECA from './eca';\n\n/**\n * A GUI Trigger.\n */\nexport default class Trigger {\n  /**\n   *\n   */\n  constructor() {\n    this.name = '';\n    this.description = '';\n    this.isComment = 0;\n    this.isEnabled = 0;\n    this.isCustom = 0;\n    this.isInitiallyOff = 0;\n    this.runOnInitialization = 0;\n    this.category = 0;\n    this.ecas = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   * @param {TriggerData} triggerData\n   */\n  load(stream, version, triggerData) {\n    this.name = stream.readUntilNull();\n    this.description = stream.readUntilNull();\n\n    if (version === 7) {\n      this.isComment = stream.readInt32();\n    }\n\n    this.isEnabled = stream.readInt32();\n    this.isCustomText = stream.readInt32();\n    this.isInitiallyOff = stream.readInt32();\n    this.runOnInitialization = stream.readInt32();\n    this.category = stream.readInt32();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let eca = new ECA();\n\n      eca.load(stream, version, false, triggerData);\n\n      this.ecas[i] = eca;\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.write(`${this.name}\\0`);\n    stream.write(`${this.description}\\0`);\n\n    if (version === 7) {\n      stream.writeInt32(this.isComment);\n    }\n\n    stream.writeInt32(this.isEnabled);\n    stream.writeInt32(this.isCustomText);\n    stream.writeInt32(this.isInitiallyOff);\n    stream.writeInt32(this.runOnInitialization);\n    stream.writeInt32(this.category);\n    stream.writeUint32(this.ecas.length);\n\n    for (let eca of this.ecas) {\n      eca.save(stream, version);\n    }\n  }\n\n  /**\n   * @param {number} version\n   * @return {number}\n   */\n  getByteLength(version) {\n    let size = 26 + this.name.length + this.description.length;\n\n    if (version === 7) {\n      size += 4;\n    }\n\n    for (let eca of this.ecas) {\n      size += eca.getByteLength(version);\n    }\n\n    return size;\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport TriggerCategory from './triggercategory';\nimport Variable from './variable';\nimport Trigger from './trigger';\n\n/**\n * war3map.wtg - the trigger file.\n */\nexport default class War3MapWtg {\n  /**\n   * @param {?ArrayBuffer} buffer\n   * @param {?TriggerData} triggerData\n   */\n  constructor(buffer, triggerData) {\n    this.version = 0;\n    this.categories = [];\n    this.u1 = 0;\n    this.variables = [];\n    this.triggers = [];\n\n    if (buffer) {\n      this.load(buffer, triggerData);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   * @param {TriggerData} triggerData\n   */\n  load(buffer, triggerData) {\n    let stream = new BinaryStream(buffer);\n\n    if (stream.read(4) !== 'WTG!') {\n      throw new Error('Not a WTG file');\n    }\n\n    this.version = stream.readInt32();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let category = new TriggerCategory();\n\n      category.load(stream, this.version);\n\n      this.categories[i] = category;\n    }\n\n    this.u1 = stream.readInt32();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let variable = new Variable();\n\n      variable.load(stream, this.version);\n\n      this.variables[i] = variable;\n    }\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let trigger = new Trigger();\n\n      trigger.load(stream, this.version, triggerData);\n\n      this.triggers[i] = trigger;\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.write('WTG!');\n    stream.writeInt32(this.version);\n    stream.writeUint32(this.categories.length);\n\n    for (let category of this.categories) {\n      category.save(stream, this.version);\n    }\n\n    stream.writeInt32(this.u1);\n    stream.writeUint32(this.variables.length);\n\n    for (let variable of this.variables) {\n      variable.save(stream, this.version);\n    }\n\n    stream.writeUint32(this.triggers.length);\n\n    for (let trigger of this.triggers) {\n      trigger.save(stream, this.version);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 24;\n\n    for (let category of this.categories) {\n      size += category.getByteLength(this.version);\n    }\n\n    for (let variable of this.variables) {\n      size += variable.getByteLength(this.version);\n    }\n\n    for (let trigger of this.triggers) {\n      size += trigger.getByteLength(this.version);\n    }\n\n    return size;\n  }\n}\n","/**\n * Used to read and write structured text formats.\n */\nexport default class TokenStream {\n  /**\n   * @param {?string} buffer\n   */\n  constructor(buffer) {\n    this.buffer = buffer || '';\n    this.index = 0;\n    this.ident = 0; // Used for writing blocks nicely.\n    this.fractionDigits = 6; // The number of fraction digits when writing floats.\n    this.decoder = new TextDecoder('utf-8');\n    if (this.buffer instanceof ArrayBuffer) {\n      let view = new DataView(buffer);\n      this.length = buffer.byteLength / 4;\n      this.accessPosition = (index) => {\n        return view.getUint8(index)\n      }\n    }\n    else {\n      this.length = buffer.length;\n      this.accessPosition = (index) => {\n        return buffer[index];\n      }\n    }\n  }\n\n  readUntil(ch, fromIndex) {\n    this.index = fromIndex;\n    let token = '';\n    let d = [];\n    while (this.index < this.length) {\n      let c = this.accessPosition(this.index++);\n      let cc = String.fromCharCode(c);\n      if(cc==ch){\n        return this.decoder.decode(new Uint8Array(d))\n      }\n      token+=cc;\n      d.push(c)\n    }\n    return this.decoder.decode(new Uint8Array(d))\n  }\n\n  /**\n   * Reads the next token in the stream.\n   * Whitespaces are ignored outside of strings in the form of \"\".\n   * Comments in the form of // are ignored.\n   * Commas and colons are ignored as well.\n   * Curly braces are used as separators, generally to denote text blocks.\n   *\n   * For example, given the following string:\n   *\n   *     Header \"A String\" {\n   *         Name Value, // A Comment\n   *     }\n   *\n   * Read will return the values in order:\n   *\n   *     Header\n   *     \"A String\"\n   *     {\n   *     Name\n   *     Value\n   *     }\n   *\n   * There are wrappers around read, below, that help to read structured code, check them out!\n   *\n   * @return {?string}\n   */\n  read() {\n    let length = this.length;\n    let inComment = false;\n    let inString = false;\n    let token = '';\n\n\n    while (this.index < length) {\n      let c = this.accessPosition(this.index++);\n      c = String.fromCharCode(c);\n      if (inComment) {\n        if (c === '\\n') {\n          inComment = false;\n        }\n      } else if (inString) {\n        if (c === '\"') {\n          return token;\n        } else {\n          token += c;\n        }\n      } else if (c === ' ' || c === ',' || c === '\\t' || c === '\\n' || c === ':' || c === '\\r') {\n        if (token.length) {\n          return token;\n        }\n      } else if (c === '{' || c === '}') {\n        if (token.length) {\n          this.index--;\n          return token;\n        } else {\n          return c;\n        }\n      } else if (c === '/' && this.accessPosition(this.index) === '/') {\n        if (token.length) {\n          this.index--;\n          return token;\n        } else {\n          inComment = true;\n        }\n      } else if (c === '\"') {\n        if (token.length) {\n          this.index--;\n          return token;\n        } else {\n          inString = true;\n        }\n      } else {\n        token += c;\n      }\n    }\n  }\n\n  /**\n   * Reads the next token without advancing the stream.\n   *\n   * @return {string}\n   */\n  peek() {\n    let index = this.index;\n    let value = this.read();\n\n    this.index = index;\n\n    return value;\n  }\n\n  /**\n   * Reads the next token, and parses it as an integer.\n   *\n   * @return {number}\n   */\n  readInt() {\n    return parseInt(this.read());\n  }\n\n  /**\n   * Reads the next token, and parses it as a float.\n   *\n   * @return {number}\n   */\n  readFloat() {\n    return parseFloat(this.read());\n  }\n\n  /**\n   * Read an MDL keyframe value.\n   * If the value is a scalar, it us just the number.\n   * If the value is a vector, it is enclosed with curly braces.\n   * @param {Float32Array|Uint32Array} value\n   */\n  readKeyframe(value) {\n    if (value.length === 1) {\n      if (value instanceof Float32Array) {\n        value[0] = this.readFloat();\n      } else {\n        value[0] = this.readInt();\n      }\n    } else {\n      this.readTypedArray(value);\n    }\n  }\n\n  /**\n   * Reads an array of integers in the form:\n   *     { Value1, Value2, ..., ValueN }\n   *\n   * @param {ArrayBufferView} view\n   * @return {ArrayBufferView}\n   */\n  readIntArray(view) {\n    this.read(); // {\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      view[i] = this.readInt();\n    }\n\n    this.read(); // }\n\n    return view;\n  }\n\n  /**\n   * Reads an array of floats in the form:\n   *     { Value1, Value2, ..., ValueN }\n   *\n   * @param {ArrayBufferView} view\n   * @return {ArrayBufferView}\n   */\n  readFloatArray(view) {\n    this.read(); // {\n\n    for (let i = 0, l = view.length; i < l; i++) {\n      view[i] = this.readFloat();\n    }\n\n    this.read(); // }\n\n    return view;\n  }\n\n  /**\n   * Reads into a uint or float typed array.\n   *\n   * @param {Uint32Array|Float32Array} view\n   */\n  readTypedArray(view) {\n    if (view instanceof Float32Array) {\n      this.readFloatArray(view);\n    } else {\n      this.readIntArray(view);\n    }\n  }\n\n  /**\n   * Reads a color in the form:\n   *\n   *      { R, G, B }\n   *\n   * The color is sizzled to BGR.\n   *\n   * @param {Float32Array} view\n   */\n  readColor(view) {\n    this.read(); // {\n\n    view[2] = this.readFloat();\n    view[1] = this.readFloat();\n    view[0] = this.readFloat();\n\n    this.read(); // }\n  }\n\n  /**\n   * {\n   *     { Value1, Value2, ..., ValueSize },\n   *     { Value1, Value2, ..., ValueSize },\n   *     ...\n   * }\n   *\n   * @param {ArrayBufferView} view\n   * @param {number} size\n   * @return {ArrayBufferView}\n   */\n  readVectorArray(view, size) {\n    this.read(); // {\n\n    for (let i = 0, l = view.length / size; i < l; i++) {\n      this.read(); // {\n\n      for (let j = 0; j < size; j++) {\n        view[i * size + j] = this.readFloat();\n      }\n\n      this.read(); // }\n    }\n\n    this.read(); // }\n\n    return view;\n  }\n\n  /**\n   * Helper generator for block reading.\n   * Let's say we have a block like so:\n   *     {\n   *         Key1 Value1\n   *         Key2 Value2\n   *         ...\n   *         KeyN ValueN\n   *     }\n   * The generator yields the keys one by one, and the caller needs to read the values based on the keys.\n   * It is used for most MDL blocks.\n   */\n  * readBlock() {\n    this.read(); // {\n\n    let token = this.read();\n\n    while (token !== '}') {\n      yield token;\n\n      token = this.read();\n    }\n  }\n\n  /**\n   * Writes a color in the form:\n   *\n   *      { B, G, R }\n   *\n   * The color is sizzled to RGB.\n   *\n   * @param {string} name 'Color' or 'static Color'.\n   * @param {Float32Array} view\n   */\n  writeColor(name, view) {\n    this.writeLine(`${name} { ${view[2]}, ${view[1]}, ${view[0]} },`);\n  }\n\n  /**\n   * Flag,\n   *\n   * @param {string} flag\n   */\n  writeFlag(flag) {\n    this.writeLine(`${flag},`);\n  }\n\n  /**\n   * Name Value,\n   *\n   * @param {string} name\n   * @param {number|string} value\n   */\n  writeAttrib(name, value) {\n    this.writeLine(`${name} ${value},`);\n  }\n\n  /**\n   * Same as writeAttrib, but formats the given number.\n   *\n   * @param {string} name\n   * @param {number} value\n   */\n  writeFloatAttrib(name, value) {\n    this.writeLine(`${name} ${this.formatFloat(value)},`);\n  }\n\n  /**\n   * Name \"Value\",\n   *\n   * @param {string} name\n   * @param {string} value\n   */\n  writeStringAttrib(name, value) {\n    this.writeLine(`${name} \"${value}\",`);\n  }\n\n  /**\n   * Name { Value0, Value1, ..., ValueN },\n   *\n   * @param {string} name\n   * @param {TypedArray} value\n   */\n  writeArrayAttrib(name, value) {\n    this.writeLine(`${name} { ${value.join(', ')} },`);\n  }\n\n  /**\n   * Name { Value0, Value1, ..., ValueN },\n   *\n   * @param {string} name\n   * @param {Float32Array} value\n   */\n  writeFloatArrayAttrib(name, value) {\n    this.writeLine(`${name} { ${this.formatFloatArray(value)} },`);\n  }\n\n  /**\n   * @param {string} name\n   * @param {Uint32Array|Float32Array} value\n   */\n  writeTypedArrayAttrib(name, value) {\n    if (value instanceof Float32Array) {\n      this.writeFloatArrayAttrib(name, value);\n    } else {\n      this.writeArrayAttrib(name, value);\n    }\n  }\n\n  /**\n   * Write an MDL keyframe.\n   *\n   * @param {string} start\n   * @param {Float32Array|Uint32Array} value\n   */\n  writeKeyframe(start, value) {\n    if (value.length === 1) {\n      if (value instanceof Float32Array) {\n        this.writeFloatAttrib(start, value[0]);\n      } else {\n        this.writeAttrib(start, value[0]);\n      }\n    } else {\n      this.writeTypedArrayAttrib(start, value);\n    }\n\n  }\n\n  /**\n   * { Value0, Value1, ..., ValueN },\n   *\n   * @param {TypedArray} value\n   */\n  writeArray(value) {\n    this.writeLine(`{ ${value.join(', ')} },`);\n  }\n\n  /**\n   * { Value0, Value1, ..., ValueN },\n   *\n   * @param {Float32Array} value\n   */\n  writeFloatArray(value) {\n    this.writeLine(`{ ${this.formatFloatArray(value)} },`);\n  }\n\n  /**\n   * Name Entries {\n   *     { Value1, Value2, ..., valueSize },\n   *     { Value1, Value2, ..., valueSize },\n   *     ...\n   * }\n   *\n   * @param {string} name\n   * @param {TypedArray} view\n   * @param {number} size\n   */\n  writeVectorArray(name, view, size) {\n    this.startBlock(name, view.length / size);\n\n    for (let i = 0, l = view.length; i < l; i += size) {\n      this.writeFloatArray(view.subarray(i, i + size));\n    }\n\n    this.endBlock();\n  }\n\n  /**\n   * Adds the given string to the buffer.\n   *\n   * @param {string} s\n   */\n  write(s) {\n    this.buffer += s;\n  }\n\n  /**\n   * Adds the given string to the buffer.\n   * The current indentation level is prepended, and the stream goes to the next line after the write.\n   *\n   * @param {string} line\n   */\n  writeLine(line) {\n    this.buffer += `${'\\t'.repeat(this.ident)}${line}\\n`;\n  }\n\n  /**\n   * Starts a new block in the form:\n   *\n   *      Header1 Header2 ... HeaderN {\n   *          ...\n   *      }\n   *\n   * @param {...string} headers\n   */\n  startBlock(...headers) {\n    if (headers.length) {\n      this.writeLine(`${headers.join(' ')} {`);\n    } else {\n      this.writeLine('{');\n    }\n\n    this.ident += 1;\n  }\n\n  /**\n   * Starts a new block in the form:\n   *\n   *      Header \"Name\" {\n   *          ...\n   *      }\n   *\n   * @param {string} header\n   * @param {string} name\n   */\n  startObjectBlock(header, name) {\n    this.writeLine(`${header} \"${name}\" {`);\n    this.ident += 1;\n  }\n\n  /**\n   * Ends a previously started block, and handles the indentation.\n   */\n  endBlock() {\n    this.ident -= 1;\n    this.writeLine('}');\n  }\n\n  /**\n   * Ends a previously started block, and handles the indentation.\n   * Adds a comma after the block end.\n   */\n  endBlockComma() {\n    this.ident -= 1;\n    this.writeLine('},');\n  }\n\n  /**\n   * Increases the indentation level for following line writes.\n   */\n  indent() {\n    this.ident += 1;\n  }\n\n  /**\n   * Decreases the indentation level for following line writes.\n   */\n  unindent() {\n    this.ident -= 1;\n  }\n\n  /**\n   * Formats a given float to the shorter of either its string representation, or its fixed point representation with the stream's fraction digits.\n   *\n   * @param {number} value\n   * @return {string}\n   */\n  formatFloat(value) {\n    let s = value.toString();\n    let f = value.toFixed(this.fractionDigits);\n\n    if (s.length > f.length) {\n      return f;\n    } else {\n      return s;\n    }\n  }\n\n  /**\n   * Uses formatFloat to format a whole array, and returns it as a comma separated string.\n   *\n   * @param {Float32Array} value\n   * @return {string}\n   */\n  formatFloatArray(value) {\n    let result = [];\n\n    for (let i = 0, l = value.length; i < l; i++) {\n      result[i] = this.formatFloat(value[i]);\n    }\n\n    return result.join(', ');\n  }\n}\n","import TokenStream from '../../../common/tokenstream';\n\nlet newLineRegex = /\\n/g;\nlet newLineLiteralRegex = /\\\\n/g;\n\n/**\n * war3map.wts - the string table file.\n *\n * Contains a map of number->string.\n * When other map data like triggers use the string TRIGSTR_XXX, where XXX is a number, the value will be fetched from the table.\n */\nexport default class War3MapWts {\n  /**\n   * @param {?string} buffer\n   */\n  constructor(buffer) {\n    /** @member {Map<number, string>} */\n    this.stringMap = new Map();\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {string} buffer\n   */\n  load(buffer) {\n    let stream = new TokenStream(buffer);\n    let token;\n\n    stream.index += 3; // ï»¿???\n\n    while ((token = stream.read())) {\n      if (token === 'STRING') {\n        let index = stream.readInt();\n\n        stream.read(); // {\n\n        let content = stream.readUntil('}',stream.index).trim();\n\n        this.stringMap.set(index, content);\n      }\n    }\n  }\n\n  /**\n   * @return {string}\n   */\n  save() {\n    let buffer = 'ï»¿'; // ï»¿???\n\n    for (let [key, value] of this.stringMap) {\n      buffer += `STRING ${key}\\n{\\n${value}\\n}\\n`;\n    }\n\n    return buffer;\n  }\n}\n","/**\n * A dropped item.\n */\nexport default class DroppedItem {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.chance = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.id = stream.read(4, true);\n    this.chance = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.write(this.id);\n    stream.writeInt32(this.chance);\n  }\n}\n","import DroppedItem from './droppeditem';\n\n/**\n * A dropped item set.\n */\nexport default class DroppedItemSet {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {Array<DroppedItem>} */\n    this.items = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let item = new DroppedItem();\n\n      item.load(stream);\n\n      this.items[i] = item;\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.items.length);\n\n    for (let item of this.items) {\n      item.save(stream);\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 4 + this.items.length * 8;\n  }\n}\n","/**\n * An inventory item.\n */\nexport default class InventoryItem {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.slot = 0;\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.slot = stream.readInt32();\n    this.id = stream.read(4, true);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.slot);\n    stream.write(this.id);\n  }\n}\n","/**\n * A modified ability.\n */\nexport default class ModifiedAbility {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.activeForAutocast = 0;\n    /** @member {number} */\n    this.heroLevel = 1;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.id = stream.read(4, true);\n    this.activeForAutocast = stream.readInt32();\n    this.heroLevel = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.write(this.id);\n    stream.writeInt32(this.activeForAutocast);\n    stream.writeInt32(this.heroLevel);\n  }\n}\n","/**\n * A random unit.\n */\nexport default class RandomUnit {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.chance = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.id = stream.read(4, true);\n    this.chance = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.write(this.id);\n    stream.writeInt32(this.chance);\n  }\n}\n","import DroppedItemSet from './droppeditemset';\nimport InventoryItem from './inventoryitem';\nimport ModifiedAbility from './modifiedability';\nimport RandomUnit from './randomunit';\n\n/**\n * A unit.\n */\nexport default class Unit {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.id = '\\0\\0\\0\\0';\n    /** @member {number} */\n    this.variation = 0;\n    /** @member {Float32Array} */\n    this.location = new Float32Array(3);\n    /** @member {number} */\n    this.angle = 0;\n    /** @member {Float32Array} */\n    this.scale = new Float32Array([1, 1, 1]);\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {number} */\n    this.player = 0;\n    /** @member {number} */\n    this.unknown = 0;\n    /** @member {number} */\n    this.hitpoints = -1;\n    /** @member {number} */\n    this.mana = -1;\n    /** @member {number} */\n    this.droppedItemTable = -1; // VERSION 8\n    /** @member {Array<DroppedItemSet>} */\n    this.droppedItemSets = [];\n    /** @member {number} */\n    this.goldAmount = 0;\n    /** @member {number} */\n    this.targetAcquisition = 0;\n    /** @member {number} */\n    this.heroLevel = 0;\n    /** @member {number} */\n    this.heroStrength = 0; // VERSION 8\n    /** @member {number} */\n    this.heroAgility = 0; // VERSION 8\n    /** @member {number} */\n    this.heroIntelligence = 0; // VERSION 8\n    /** @member {Array<InventoryItem>} */\n    this.itemsInInventory = [];\n    /** @member {Array<ModifiedAbility>} */\n    this.modifiedAbilities = [];\n    /** @member {number} */\n    this.randomFlag = 0;\n    /** @member {Uint8Array} */\n    this.level = new Uint8Array(3);\n    /** @member {number} */\n    this.itemClass = 0;\n    /** @member {number} */\n    this.unitGroup = 0;\n    /** @member {number} */\n    this.positionInGroup = 0;\n    /** @member {Array<RandomUnit>} */\n    this.randomUnitTables = [];\n    /** @member {number} */\n    this.customTeamColor = 0;\n    /** @member {number} */\n    this.waygate = 0;\n    /** @member {number} */\n    this.creationNumber = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  load(stream, version) {\n    this.id = stream.read(4, true);\n    this.variation = stream.readInt32();\n    this.location = stream.readFloat32Array(3);\n    this.angle = stream.readFloat32();\n    this.scale = stream.readFloat32Array(3);\n    this.flags = stream.readUint8();\n    this.player = stream.readInt32();\n    this.unknown = stream.readUint16();\n    this.hitpoints = stream.readInt32();\n    this.mana = stream.readInt32();\n\n    if (version > 7) {\n      this.droppedItemTable = stream.readInt32();\n    }\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let set = new DroppedItemSet();\n\n      set.load(stream);\n\n      this.droppedItemSets[i] = set;\n    }\n\n    this.goldAmount = stream.readInt32();\n    this.targetAcquisition = stream.readFloat32();\n    this.heroLevel = stream.readInt32();\n\n    if (version > 7) {\n      this.heroStrength = stream.readInt32();\n      this.heroAgility = stream.readInt32();\n      this.heroIntelligence = stream.readInt32();\n    }\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let item = new InventoryItem();\n\n      item.load(stream);\n\n      this.itemsInInventory[i] = item;\n    }\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let modifiedAbility = new ModifiedAbility();\n\n      modifiedAbility.load(stream);\n\n      this.modifiedAbilities[i] = modifiedAbility;\n    }\n\n    this.randomFlag = stream.readInt32();\n\n    if (this.randomFlag === 0) {\n      this.level = stream.readUint8Array(3); // 24bit number\n      this.itemClass = stream.readUint8();\n    } else if (this.randomFlag === 1) {\n      this.unitGroup = stream.readUint32();\n      this.positionInGroup = stream.readUint32();\n    } else if (this.randomFlag === 2) {\n      for (let i = 0, l = stream.readInt32(); i < l; i++) {\n        let randomUnit = new RandomUnit();\n\n        randomUnit.load(stream);\n\n        this.randomUnitTables[i] = randomUnit;\n      }\n    }\n\n    this.customTeamColor = stream.readInt32();\n    this.waygate = stream.readInt32();\n    this.creationNumber = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} version\n   */\n  save(stream, version) {\n    stream.write(this.id);\n    stream.writeInt32(this.variation);\n    stream.writeFloat32Array(this.location);\n    stream.writeFloat32(this.angle);\n    stream.writeFloat32Array(this.scale);\n    stream.writeUint8(this.flags);\n    stream.writeInt32(this.player);\n    stream.writeUint16(this.unknown);\n    stream.writeInt32(this.hitpoints);\n    stream.writeInt32(this.mana);\n\n    if (version > 7) {\n      stream.writeInt32(this.droppedItemTable);\n    }\n\n    stream.writeInt32(this.droppedItemSets.length);\n\n    for (let droppedItemSet of this.droppedItemSets) {\n      droppedItemSet.save(stream);\n    }\n\n    stream.writeInt32(this.goldAmount);\n    stream.writeFloat32(this.targetAcquisition);\n    stream.writeInt32(this.heroLevel);\n\n    if (version > 7) {\n      stream.writeInt32(this.heroStrength);\n      stream.writeInt32(this.heroAgility);\n      stream.writeInt32(this.heroIntelligence);\n    }\n\n    stream.writeInt32(this.itemsInInventory.length);\n\n    for (let itemInInventory of this.itemsInInventory) {\n      itemInInventory.save(stream);\n    }\n\n    stream.writeInt32(this.modifiedAbilities.length);\n\n    for (let modifiedAbility of this.modifiedAbilities) {\n      modifiedAbility.save(stream);\n    }\n\n    stream.writeInt32(this.randomFlag);\n\n    if (this.randomFlag === 0) {\n      stream.writeUint8Array(this.level);\n      stream.writeUint8(this.itemClass);\n    } else if (this.randomFlag === 1) {\n      stream.writeUint32(this.unitGroup);\n      stream.writeUint32(this.positionInGroup);\n    } else if (this.randomFlag === 2) {\n      stream.writeInt32(this.randomUnitTables.length);\n\n      for (let randomUnitTable of this.randomUnitTables) {\n        randomUnitTable.save(stream);\n      }\n    }\n\n    stream.writeInt32(this.customTeamColor);\n    stream.writeInt32(this.waygate);\n    stream.writeInt32(this.creationNumber);\n  }\n\n  /**\n   * @param {number} version\n   * @return {number}\n   */\n  getByteLength(version) {\n    let size = 91;\n\n    if (version > 7) {\n      size += 16;\n    }\n\n    for (let droppedItemSet of this.droppedItemSets) {\n      size += droppedItemSet.getByteLength();\n    }\n\n    size += this.itemsInInventory.length * 8;\n\n    size += this.modifiedAbilities.length * 12;\n\n    if (this.randomFlag === 0) {\n      size += 4;\n    } else if (this.randomFlag === 1) {\n      size += 8;\n    } else if (this.randomFlag === 2) {\n      size += 4 + this.randomUnitTables.length * 8;\n    }\n\n    return size;\n  }\n}\n","import BinaryStream from '../../../common/binarystream';\nimport Unit from './unit';\n\n/**\n * war3mapUnits.doo - the units and items file.\n */\nexport default class War3MapUnitsDoo {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 8;\n    /** @member {number} */\n    this.unknown = 11;\n    /** @member {Array<Unit>} */\n    this.units = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   * @return {boolean}\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    if (stream.read(4) !== 'W3do') {\n      return false;\n    }\n\n    this.version = stream.readInt32();\n    this.unknown = stream.readUint32();\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let unit = new Unit();\n\n      unit.load(stream, this.version);\n\n      this.units[i] = unit;\n    }\n    let types = new Set();\n    this.units.forEach(u => {\n      u.droppedItemSets.forEach(s => s.items.forEach(it => types.add(it.id)));\n    });\n    console.log(types);\n\n    return true;\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.write('W3do');\n    stream.writeInt32(this.version);\n    stream.writeUint32(this.unknown);\n    stream.writeInt32(this.units.length);\n\n    for (let unit of this.units) {\n      unit.save(stream, this.version);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 16;\n\n    for (let unit of this.units) {\n      size += unit.getByteLength(this.version);\n    }\n\n    return size;\n  }\n}\n","import BinaryStream from '../../common/binarystream';\nimport War3MapDoo from './doo/file';\nimport War3MapImp from './imp/file';\n// import War3MapMmp from './mmp/file';\n// import War3MapShd from './shd/file';\n// import War3MapW3c from './w3c/file';\nimport War3MapW3d from './w3d/file';\nimport War3MapW3e from './w3e/file';\nimport War3MapW3i from './w3i/file';\n// import War3MapW3o from './w3o/file';\n// import War3MapW3r from './w3r/file';\n// import War3MapW3s from './w3s/file';\nimport War3MapW3u from './w3u/file';\nimport War3MapWct from './wct/file';\n// import War3MapWpm from './wpm/file';\nimport War3MapWtg from './wtg/file';\nimport War3MapWts from './wts/file';\nimport War3MapUnitsDoo from './unitsdoo/file';\n\n/**\n * Warcraft 3 map (W3X and W3M).\n */\nexport default class War3Map {\n  /**\n   * @param {?ArrayBuffer} buffer If given an ArrayBuffer, load() will be called immediately\n   * @param {?boolean} readonly If true, disables editing and saving the map (and the internal archive), allowing to optimize other things\n   */\n  constructor(buffer, readonly) {\n    /** @member {number} */\n    this.unknown = 0;\n    /** @member {string} */\n    this.name = '';\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {number} */\n    this.maxPlayers = 0;\n    /** @member {War3MapImp} */\n    this.imports = new War3MapImp();\n    /** @member {boolean} */\n    this.readonly = !!readonly;\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * Load an existing map.\n   * Note that this clears the map from whatever it had in it before.\n   *\n   * @param {ArrayBuffer} buffer\n   * @return {boolean}\n   */\n  load(buffer) {\n    this.name = buffer.name;\n    this.archive = {\n      getFileNames() {\n        return buffer.listFile().split(\"\\n\").filter(n => n.length > 0);\n      },\n      get(name) {\n        const data = buffer.binary(name);\n        if (!data) {\n          return data;\n        }\n        return {\n          name,\n          arrayBuffer() {\n            return data.data.buffer;\n          }\n        };\n      },\n    };\n    return true;\n  }\n\n  /**\n   * Save this map.\n   * If the archive is in readonly mode, returns null.\n   *\n   * @return {?ArrayBuffer}\n   */\n  save() {\n    if (this.readonly) {\n      return null;\n    }\n\n    // Update the imports if needed.\n    this.setImportsFile();\n\n    let headerSize = 512;\n    let archiveBuffer = this.archive.save();\n    let buffer = new ArrayBuffer(headerSize + archiveBuffer.byteLength);\n    let typedArray = new Uint8Array(buffer);\n    let writer = new BinaryStream(buffer);\n\n    // Write the header.\n    writer.write('HM3W');\n    writer.writeUint32(this.u1);\n    writer.write(`${this.name}\\0`);\n    writer.writeUint32(this.flags);\n    writer.writeUint32(this.maxPlayers);\n\n    // Writer the archive.\n    typedArray.set(new Uint8Array(archiveBuffer), headerSize);\n\n    return buffer;\n  }\n\n  /**\n   * A shortcut to the internal archive function.\n   *\n   * @return {Array<string>}\n   */\n  getFileNames() {\n    return this.archive.getFileNames();\n  }\n\n  /**\n   * Gets a list of the file names imported in this map.\n   *\n   * @return {Array<string>}\n   */\n  getImportNames() {\n    let names = [];\n\n    for (let entry of this.imports.entries.values()) {\n      let isCustom = entry.isCustom;\n\n      if (isCustom === 10 || isCustom === 13) {\n        names.push(entry.name);\n      } else {\n        names.push(`war3mapImported\\\\${entry.name}`);\n      }\n    }\n\n    return names;\n  }\n\n  /**\n   * Sets the imports file with all of the imports.\n   * Does nothing if the archive is in readonly mode.\n   *\n   * @return {boolean}\n   */\n  setImportsFile() {\n    if (this.readonly) {\n      return false;\n    }\n\n    if (this.imports.entries.size > 0) {\n      return this.set('war3map.imp', this.imports.save());\n    }\n\n    return false;\n  }\n\n  /**\n   * Imports a file to this archive.\n   * If the file already exists, its buffer will be set.\n   * Files added to the archive but not to the imports list will be deleted by the World Editor automatically.\n   * This of course doesn't apply to internal map files.\n   * Does nothing if the archive is in readonly mode.\n   *\n   * @param {string} name\n   * @param {ArrayBuffer} buffer\n   * @return {boolean}\n   */\n  import(name, buffer) {\n    if (this.readonly) {\n      return false;\n    }\n\n    if (this.archive.set(name, buffer)) {\n      this.imports.set(name);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * A shortcut to the internal archive function.\n   *\n   * @param {string} name\n   * @param {ArrayBuffer} buffer\n   * @return {boolean}\n   */\n  set(name, buffer) {\n    if (this.readonly) {\n      return false;\n    }\n\n    return this.archive.set(name, buffer);\n  }\n\n  /**\n   * A shortcut to the internal archive function.\n   *\n   * @param {string} name\n   * @return {?MpqFile}\n   */\n  get(name) {\n    return this.archive.get(name);\n  }\n\n  /**\n   * Get the map's script file.\n   *\n   * @return {?MpqFile}\n   */\n  getScript() {\n    let file = this.get('war3map.j') || this.get('scripts\\\\war3map.j');\n\n    return file.text();\n  }\n\n  /**\n   * A shortcut to the internal archive function.\n   *\n   * @param {string} name\n   * @return {boolean}\n   */\n  has(name) {\n    return this.archive.has(name);\n  }\n\n  /**\n   * Deletes a file from the internal archive.\n   * Note that if the file is in the imports list, it will be removed from it too.\n   * Use this rather than the internal archive's delete.\n   *\n   * @param {string} name\n   * @return {boolean}\n   */\n  delete(name) {\n    if (this.readonly) {\n      return false;\n    }\n\n    // If this file is in the import list, remove it.\n    this.imports.delete(name);\n\n    return this.archive.delete(name);\n  }\n\n  /**\n   * A shortcut to the internal archive function.\n   *\n   * @param {string} name\n   * @param {string} newName\n   * @return {boolean}\n   */\n  rename(name, newName) {\n    if (this.readonly) {\n      return false;\n    }\n\n    if (this.archive.rename(name, newName)) {\n      // If the file was actually renamed, and it is an import, rename also the import entry.\n      this.imports.rename(name, newName);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {string} path\n   * @param {Constructor} Constructor\n   * @return {Constructor|null|undefined}\n   */\n  readHelper(path, Constructor) {\n    let file = this.archive.get(path);\n\n    if (file) {\n      let buffer = file.arrayBuffer();\n\n      if (buffer) {\n        return new Constructor(buffer);\n      }\n\n      return null;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Read the imports file.\n   */\n  readImports() {\n    let file = this.archive.get('war3map.imp');\n\n    if (file) {\n      let buffer = file.arrayBuffer();\n\n      if (buffer) {\n        this.imports.load(buffer);\n      }\n    }\n  }\n\n  /**\n   * Read the map information file.\n   *\n   * @return {?War3MapW3i}\n   */\n  readMapInformation() {\n    return this.readHelper('war3map.w3i', War3MapW3i);\n  }\n\n  /**\n   * Read the environment file.\n   *\n   * @return {?War3MapW3e}\n   */\n  readEnvironment() {\n    return this.readHelper('war3map.w3e', War3MapW3e);\n  }\n\n  /**\n   * Read and parse the doodads file.\n   *\n   * @return {?War3MapDoo}\n   */\n  readDoodads() {\n    let file = this.archive.get('war3map.doo');\n\n    if (file) {\n      return new War3MapDoo(file.arrayBuffer());\n    }\n  }\n\n  /**\n   * Read and parse the units file.\n   *\n   * @return {?War3MapUnitsDoo}\n   */\n  readUnits() {\n    let file = this.archive.get('war3mapUnits.doo');\n\n    if (file) {\n      return new War3MapUnitsDoo(file.arrayBuffer());\n    }\n  }\n\n  /**\n   * Read and parse the trigger file.\n   *\n   * @param {TriggerData} triggerData\n   * @return {?War3MapWtg}\n   */\n  readTriggers(triggerData) {\n    let file = this.archive.get('war3map.wtg');\n\n    if (file) {\n      return new War3MapWtg(file.arrayBuffer(), triggerData);\n    }\n  }\n\n  /**\n   * Read and parse the custom text trigger file.\n   *\n   * @return {?War3MapWct}\n   */\n  readCustomTextTriggers() {\n    let file = this.archive.get('war3map.wct');\n\n    if (file) {\n      return new War3MapWct(file.arrayBuffer());\n    }\n  }\n\n  /**\n   * Read and parse the string table file.\n   *\n   * @return {?War3MapWts}\n   */\n  readStringTable() {\n    let file = this.archive.get('war3map.wts');\n\n    if (file) {\n      return new War3MapWts(file.text());\n    }\n  }\n\n  /**\n   * Read and parse all of the modification tables.\n   *\n   * @return {Map}\n   */\n  readModifications() {\n    let modifications = {};\n\n    // useOptionalInts:\n    //      w3u: no (units)\n    //      w3t: no (items)\n    //      w3b: no (destructables)\n    //      w3d: yes (doodads)\n    //      w3a: yes (abilities)\n    //      w3h: no (buffs)\n    //      w3q: yes (upgrades)\n    let fileNames = ['w3u', 'w3t', 'w3b', 'w3d', 'w3a', 'w3h', 'w3q'];\n    let useOptionalInts = [false, false, false, true, true, false, true];\n\n    for (let i = 0, l = fileNames.length; i < l; i++) {\n      let file = this.archive.get(`war3map.${fileNames[i]}`);\n\n      if (file) {\n        let buffer = file.arrayBuffer();\n        let modification;\n\n        if (useOptionalInts[i]) {\n          modification = new War3MapW3d(buffer);\n        } else {\n          modification = new War3MapW3u(buffer);\n        }\n\n        modifications[fileNames[i]] = modification;\n      }\n    }\n\n    return modifications;\n  }\n}\n\n","/**\n * A minimap icon.\n */\nexport default class MinimapIcon {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.type = 0;\n    /** @member {Int32Array} */\n    this.location = new Int32Array(2);\n    /** @member {Uint8Array} */\n    this.color = new Uint8Array(4); // BGRA\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.type = stream.readInt32();\n    this.location = stream.readInt32Array(2);\n    this.color = stream.readUint8Array(4);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.type);\n    stream.writeInt32Array(this.location);\n    stream.writeUint8Array(this.color);\n  }\n}\n","/**\n * A camera.\n */\nexport default class Camera {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {Float32Array} */\n    this.targetLocation = new Float32Array(3);\n    /** @member {number} */\n    this.rotation = 0;\n    /** @member {number} */\n    this.angleOfAttack = 0;\n    /** @member {number} */\n    this.distance = 0;\n    /** @member {number} */\n    this.roll = 0;\n    /** @member {number} */\n    this.fieldOfView = 0;\n    /** @member {number} */\n    this.farClippingPlane = 0;\n    /** @member {number} */\n    this.nearClippingPlane = 0;\n    /** @member {string} */\n    this.cinematicName = '';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.targetLocation = stream.readFloat32Array(3);\n    this.rotation = stream.readFloat32(); // in degrees\n    this.angleOfAttack = stream.readFloat32(); // in degrees\n    this.distance = stream.readFloat32();\n    this.roll = stream.readFloat32();\n    this.fieldOfView = stream.readFloat32(); // in degrees\n    this.farClippingPlane = stream.readFloat32();\n    this.nearClippingPlane = stream.readFloat32(); // probably near clipping plane\n    this.cinematicName = stream.readUntilNull();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeFloat32Array(this.targetLocation);\n    stream.writeFloat32(this.rotation);\n    stream.writeFloat32(this.angleOfAttack);\n    stream.writeFloat32(this.distance);\n    stream.writeFloat32(this.roll);\n    stream.writeFloat32(this.fieldOfView);\n    stream.writeFloat32(this.farClippingPlane);\n    stream.writeFloat32(this.nearClippingPlane);\n    stream.write(`${this.cinematicName}\\0`);\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 41 + this.cinematicName.length;\n  }\n}\n","/**\n * A region.\n */\nexport default class Region {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.left = 0;\n    /** @member {number} */\n    this.right = 0;\n    /** @member {number} */\n    this.bottom = 0;\n    /** @member {number} */\n    this.top = 0;\n    /** @member {string} */\n    this.name = '';\n    /** @member {number} */\n    this.creationNumber = 0;\n    /** @member {string} */\n    this.weatherEffectId = '\\0\\0\\0\\0';\n    /** @member {string} */\n    this.ambientSound = '';\n    /** @member {Uint8Array} */\n    this.color = new Uint8Array(4);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.left = stream.readFloat32();\n    this.right = stream.readFloat32();\n    this.bottom = stream.readFloat32();\n    this.top = stream.readFloat32();\n    this.name = stream.readUntilNull();\n    this.creationNumber = stream.readUint32();\n    this.weatherEffectId = stream.read(4, true);\n    this.ambientSound = stream.readUntilNull();\n    this.color = stream.readUint8Array(4);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeFloat32(this.left);\n    stream.writeFloat32(this.right);\n    stream.writeFloat32(this.bottom);\n    stream.writeFloat32(this.top);\n    stream.write(`${this.name}\\0`);\n    stream.writeUint32(this.creationNumber);\n\n    if (this.weatherEffectId) {\n      stream.write(this.weatherEffectId);\n    } else {\n      stream.writeUint32(0);\n    }\n\n    stream.write(`${this.ambientSound}\\0`);\n    stream.writeUint8Array(this.color);\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 30 + this.name.length + this.ambientSound.length;\n  }\n}\n","/**\n * A sound.\n */\nexport default class Sound {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.name = '';\n    /** @member {string} */\n    this.file = '';\n    /** @member {string} */\n    this.eaxEffect = '';\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {number} */\n    this.fadeInRate = 0;\n    /** @member {number} */\n    this.fadeOutRate = 0;\n    /** @member {number} */\n    this.volume = 0;\n    /** @member {number} */\n    this.pitch = 0;\n    /** @member {number} */\n    this.u1 = 0;\n    /** @member {number} */\n    this.u2 = 0;\n    /** @member {number} */\n    this.channel = 0;\n    /** @member {number} */\n    this.minDistance = 0;\n    /** @member {number} */\n    this.maxDistance = 0;\n    /** @member {number} */\n    this.distanceCutoff = 0;\n    /** @member {number} */\n    this.u3 = 0;\n    /** @member {number} */\n    this.u4 = 0;\n    /** @member {number} */\n    this.u5 = 0;\n    /** @member {number} */\n    this.u6 = 0;\n    /** @member {number} */\n    this.u7 = 0;\n    /** @member {number} */\n    this.u8 = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.name = stream.readUntilNull();\n    this.file = stream.readUntilNull();\n    this.eaxEffect = stream.readUntilNull();\n    this.flags = stream.readUint32();\n    this.fadeInRate = stream.readInt32();\n    this.fadeOutRate = stream.readInt32();\n    this.volume = stream.readInt32();\n    this.pitch = stream.readFloat32();\n    this.u1 = stream.readFloat32();\n    this.u2 = stream.readInt32();\n    this.channel = stream.readInt32();\n    this.minDistance = stream.readFloat32();\n    this.maxDistance = stream.readFloat32();\n    this.distanceCutoff = stream.readFloat32();\n    this.u3 = stream.readFloat32();\n    this.u4 = stream.readFloat32();\n    this.u5 = stream.readInt32();\n    this.u6 = stream.readFloat32();\n    this.u7 = stream.readFloat32();\n    this.u8 = stream.readFloat32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.write(`${this.name}\\0`);\n    stream.write(`${this.file}\\0`);\n    stream.write(`${this.eaxEffect}\\0`);\n    stream.writeUint32(this.flags);\n    stream.writeUint32(this.fadeInRate);\n    stream.writeUint32(this.fadeOutRate);\n    stream.writeUint32(this.volume);\n    stream.writeFloat32(this.pitch);\n    stream.writeFloat32(this.u1);\n    stream.writeInt32(this.u2);\n    stream.writeInt32(this.channel);\n    stream.writeFloat32(this.minDistance);\n    stream.writeFloat32(this.maxDistance);\n    stream.writeFloat32(this.distanceCutoff);\n    stream.writeFloat32(this.u3);\n    stream.writeFloat32(this.u4);\n    stream.writeInt32(this.u5);\n    stream.writeFloat32(this.u6);\n    stream.writeFloat32(this.u7);\n    stream.writeFloat32(this.u8);\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 71 + this.name.length + this.file.length + this.eaxEffect.length;\n  }\n}\n","\n/**\n * A map title.\n */\nexport default class MapTitle {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.visible = 0;\n    /** @member {string} */\n    this.chapterTitle = '';\n    /** @member {string} */\n    this.mapTitle = '';\n    /** @member {string} */\n    this.path = '';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.visible = stream.readInt32();\n    this.chapterTitle = stream.readUntilNull();\n    this.mapTitle = stream.readUntilNull();\n    this.path = stream.readUntilNull();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt32(this.visible);\n    stream.write(`${this.chapterTitle}\\0`);\n    stream.write(`${this.mapTitle}\\0`);\n    stream.write(`${this.path}\\0`);\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 7 + this.chapterTitle.length + this.mapTitle.length + this.path.length;\n  }\n}\n","\n/**\n * A map order.\n */\nexport default class MapOrder {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.u1 = 0;\n    /** @member {string} */\n    this.path = '';\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  load(stream) {\n    this.u1 = stream.readInt8();\n    this.path = stream.readUntilNull();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  save(stream) {\n    stream.writeInt8(this.u1);\n    stream.write(`${this.path}\\0`);\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 2 + this.path.length;\n  }\n}\n","import File from './file';\n\nexport default {\n  File,\n};\n","import Map from './map';\nimport doo from './doo';\nimport imp from './imp';\nimport mmp from './mmp';\nimport shd from './shd';\nimport w3c from './w3c';\nimport w3d from './w3d';\nimport w3e from './w3e';\nimport w3i from './w3i';\nimport w3o from './w3o';\nimport w3r from './w3r';\nimport w3s from './w3s';\nimport w3u from './w3u';\nimport wct from './wct';\nimport wpm from './wpm';\nimport wtg from './wtg';\nimport wts from './wts';\nimport unitsdoo from './unitsdoo';\nimport w3f from './w3f';\n\nexport default {\n  Map,\n  doo,\n  imp,\n  mmp,\n  shd,\n  w3c,\n  w3d,\n  w3e,\n  w3i,\n  w3o,\n  w3r,\n  w3s,\n  w3u,\n  wct,\n  wpm,\n  wtg,\n  wts,\n  unitsdoo,\n  w3f,\n};\n","import Doodad from './doodad';\nimport TerrainDoodad from './terraindoodad';\nimport File from './file';\n\nexport default {\n  Doodad,\n  TerrainDoodad,\n  File,\n};\n","import Import from './import';\nimport File from './file';\n\nexport default {\n  Import,\n  File,\n};\n","import MinimapIcon from './minimapicon';\nimport File from './file';\n\nexport default {\n  MinimapIcon,\n  File,\n};\n","import BinaryStream from '../../../common/binarystream';\nimport MinimapIcon from './minimapicon';\n\n/**\n * war3map.mmp - the minimap icon file.\n */\nexport default class War3MapMmp {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.u1 = 0;\n    /** @member {Array<MinimapIcon>} */\n    this.icons = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.u1 = stream.readInt32();\n\n    for (let i = 0, l = stream.readInt32(); i < l; i++) {\n      let icon = new MinimapIcon();\n\n      icon.load(stream);\n\n      this.icons[i] = icon;\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.u1);\n    stream.writeUint32(this.icons.length);\n\n    for (let icon of this.icons) {\n      icon.save(stream);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 8 + this.icons.length * 16;\n  }\n}\n","import File from './file';\n\nexport default {\n  File,\n};\n","/**\n * war3map.shd - the shadow file.\n */\nexport default class War3MapShd {\n  /**\n   * @param {?ArrayBuffer} buffer\n   * @param {?number} width\n   * @param {?number} height\n   */\n  constructor(buffer, width, height) {\n    /** @member {Uint8Array} */\n    this.shadows = new Uint8Array(0);\n\n    if (buffer) {\n      this.load(buffer, width, height);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   * @param {number} width\n   * @param {number} height\n   */\n  load(buffer, width, height) {\n    this.shadows = new Uint8Array(buffer.slice(0, width * height * 16));\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    return this.shadows.slice().buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return this.shadows.length;\n  }\n}\n","import Camera from './camera';\nimport File from './file';\n\nexport default {\n  Camera,\n  File,\n};\n","import BinaryStream from '../../../common/binarystream';\nimport Camera from './camera';\n\n/**\n * war3map.w3c - the camera file.\n */\nexport default class War3MapW3c {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {Array<Camera>} */\n    this.cameras = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let camera = new Camera();\n\n      camera.load(stream);\n\n      this.cameras[i] = camera;\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n    stream.writeUint32(this.cameras.length);\n\n    for (let camera of this.cameras) {\n      camera.save(stream);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 8;\n\n    for (let camera of this.cameras) {\n      size += camera.getByteLength();\n    }\n\n    return size;\n  }\n}\n","import File from './file';\n\nexport default {\n  File,\n};\n","import Corner from './corner';\nimport File from './file';\n\nexport default {\n  Corner,\n  File,\n};\n","import Player from './player';\nimport Force from './force';\nimport UpgradeAvailabilityChange from './upgradeavailabilitychange';\nimport TechAvailabilityChange from './techavailabilitychange';\nimport RandomUnitTable from './randomunittable';\nimport RandomUnit from './randomunit';\nimport RandomItemTable from './randomitemtable';\nimport RandomItemSet from './randomitemset';\nimport RandomItem from './randomitem';\nimport File from './file';\n\nexport default {\n  Player,\n  Force,\n  UpgradeAvailabilityChange,\n  TechAvailabilityChange,\n  RandomUnitTable,\n  RandomUnit,\n  RandomItemTable,\n  RandomItemSet,\n  RandomItem,\n  File,\n};\n","import File from './file';\n\nexport default {\n  File,\n};\n","import BinaryStream from '../../../common/binarystream';\nimport War3MapW3u from '../w3u/file';\nimport War3MapW3d from '../w3d/file';\n\n/**\n * war3map.w3o - the combined modification file.\n *\n * Contains all of the modifications of a map.\n * Can be exported and imported via the World Editor.\n */\nexport default class War3MapW3o {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {?War3MapW3u} */\n    this.units = null;\n    /** @member {?War3MapW3u} */\n    this.items = null;\n    /** @member {?War3MapW3u} */\n    this.destructables = null;\n    /** @member {?War3MapW3d} */\n    this.doodads = null;\n    /** @member {?War3MapW3d} */\n    this.abilities = null;\n    /** @member {?War3MapW3u} */\n    this.buffs = null;\n    /** @member {?War3MapW3d} */\n    this.upgrades = null;\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n\n    if (stream.readInt32()) {\n      this.units = new War3MapW3u(stream);\n    }\n\n    if (stream.readInt32()) {\n      this.items = new War3MapW3u(stream);\n    }\n\n    if (stream.readInt32()) {\n      this.destructables = new War3MapW3u(stream);\n    }\n\n    if (stream.readInt32()) {\n      this.doodads = new War3MapW3d(stream);\n    }\n\n    if (stream.readInt32()) {\n      this.abilities = new War3MapW3d(stream);\n    }\n\n    if (stream.readInt32()) {\n      this.buffs = new War3MapW3u(stream);\n    }\n\n    if (stream.readInt32()) {\n      this.upgrades = new War3MapW3d(stream);\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n\n    if (this.units) {\n      stream.writeInt32(1);\n      this.units.save(stream);\n    } else {\n      stream.writeInt32(0);\n    }\n\n    if (this.items) {\n      stream.writeInt32(1);\n      this.items.save(stream);\n    } else {\n      stream.writeInt32(0);\n    }\n\n    if (this.destructables) {\n      stream.writeInt32(1);\n      this.destructables.save(stream);\n    } else {\n      stream.writeInt32(0);\n    }\n\n    if (this.doodads) {\n      stream.writeInt32(1);\n      this.doodads.save(stream);\n    } else {\n      stream.writeInt32(0);\n    }\n\n    if (this.abilities) {\n      stream.writeInt32(1);\n      this.abilities.save(stream);\n    } else {\n      stream.writeInt32(0);\n    }\n\n    if (this.buffs) {\n      stream.writeInt32(1);\n      this.buffs.save(stream);\n    } else {\n      stream.writeInt32(0);\n    }\n\n    if (this.upgrades) {\n      stream.writeInt32(1);\n      this.upgrades.save(stream);\n    } else {\n      stream.writeInt32(0);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 32;\n\n    if (this.units) {\n      size += this.units.getByteLength();\n    }\n\n    if (this.items) {\n      size += this.items.getByteLength();\n    }\n\n    if (this.destructables) {\n      size += this.destructables.getByteLength();\n    }\n\n    if (this.doodads) {\n      size += this.doodads.getByteLength();\n    }\n\n    if (this.abilities) {\n      size += this.abilities.getByteLength();\n    }\n\n    if (this.buffs) {\n      size += this.buffs.getByteLength();\n    }\n\n    if (this.upgrades) {\n      size += this.upgrades.getByteLength();\n    }\n\n    return size;\n  }\n}\n","import Region from './region';\nimport File from './file';\n\nexport default {\n  Region,\n  File,\n};\n","import BinaryStream from '../../../common/binarystream';\nimport Region from './region';\n\n/**\n * war3map.w3r - the region file.\n */\nexport default class War3MapW3r {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {Array<Region>} */\n    this.regions = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      this.regions[i] = new Region(stream);\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n    stream.writeUint32(this.regions.length);\n\n    for (let region of this.regions) {\n      region.save(stream);\n    }\n\n    return buffer;\n  }\n\n  /**\n    * @return {number}\n    */\n  getByteLength() {\n    let size = 8;\n\n    for (let regions of this.regions) {\n      size += regions.calcSize();\n    }\n\n    return size;\n  }\n}\n","import Sound from './sound';\nimport File from './file';\n\nexport default {\n  Sound,\n  File,\n};\n","import BinaryStream from '../../../common/binarystream';\nimport Sound from './sound';\n\n/**\n * war3map.w3s - the sound file.\n */\nexport default class War3MapW3s {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {Array<Sound>} */\n    this.sounds = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let sound = new Sound();\n\n      sound.load(stream);\n\n      this.sounds[i] = sound;\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.calcSize());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n    stream.writeUint32(this.sounds.length);\n\n    for (let sound of this.sounds) {\n      sound.save(stream);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 8;\n\n    for (let sound of this.sounds) {\n      size += sound.getByteLength();\n    }\n\n    return size;\n  }\n}\n","import Modification from './modification';\nimport ModifiedObject from './modifiedobject';\nimport ModificationTable from './modificationtable';\nimport File from './file';\n\nexport default {\n  Modification,\n  ModifiedObject,\n  ModificationTable,\n  File,\n};\n","import CustomTextTrigger from './customtexttrigger';\nimport File from './file';\n\nexport default {\n  CustomTextTrigger,\n  File,\n};\n","import File from './file';\n\nexport default {\n  File,\n};\n","import BinaryStream from '../../../common/binarystream';\n\n/**\n * war3map.wpm - the pathing file.\n */\nexport default class War3MapWpm {\n  /**\n   * @param {?ArrayBuffer} buffer\n   */\n  constructor(buffer) {\n    /** @member {number} */\n    this.version = 0;\n    /** @member {number} */\n    this.size = new Int32Array(2);\n    /** @member {Uint8Array} */\n    this.pathing = new Uint8Array(1);\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   * @return {boolean}\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    if (stream.read(4) !== 'MP3W') {\n      return false;\n    }\n\n    this.version = stream.readInt32();\n    this.size = stream.readInt32Array(2);\n    this.pathing = stream.readUint8Array(this.size[0] * this.size[1]);\n\n    return true;\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.write('MP3W');\n    stream.writeInt32(this.version);\n    stream.writeInt32Array(this.size);\n    stream.writeUint8Array(this.pathing);\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 16 + (this.size[0] * this.size[1]);\n  }\n}\n","import ECA from './eca';\nimport Parameter from './parameter';\nimport SubParameters from './subparameters';\nimport Trigger from './trigger';\nimport TriggerCategory from './triggercategory';\nimport Variable from './variable';\nimport File from './file';\nimport TriggerData from './triggerdata';\n\nexport default {\n  ECA,\n  Parameter,\n  SubParameters,\n  Trigger,\n  TriggerCategory,\n  Variable,\n  File,\n  TriggerData,\n};\n","import IniFile from '../../ini/file';\n\n/**\n * Trigger data needed to load a WTG file.\n */\nexport default class TriggerData {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {Object<string, string>} */\n    this.types = {};\n    /** @member {Array<Object>} */\n    this.functions = [{}, {}, {}, {}];\n    /** @member {Object<string, string>} */\n    this.presets = {};\n    /** @member {Object<string, string>} */\n    this.externalTypes = {};\n    /** @member {Array<Object>} */\n    this.externalFunctions = [{}, {}, {}, {}];\n    /** @member {Object<string, string>} */\n    this.externalPresets = {};\n  }\n\n  /**\n   * @param {string} buffer\n   * @param {boolean} isExternal\n   */\n  addTriggerData(buffer, isExternal) {\n    let types = this.types;\n    let functions = this.functions;\n    let presets = this.presets;\n\n    if (isExternal) {\n      types = this.externalTypes;\n      functions = this.externalFunctions;\n      presets = this.externalPresets;\n    }\n\n    let triggerData = new IniFile();\n\n    triggerData.load(buffer);\n\n    this.addTriggerTypes(types, triggerData.getSection('TriggerTypes'));\n    this.addTriggerDataFunctions(functions[0], triggerData.getSection('TriggerEvents'), 1);\n    this.addTriggerDataFunctions(functions[1], triggerData.getSection('TriggerConditions'), 1);\n    this.addTriggerDataFunctions(functions[2], triggerData.getSection('TriggerActions'), 1);\n    this.addTriggerDataFunctions(functions[3], triggerData.getSection('TriggerCalls'), 3);\n    this.addTriggerDataPresets(presets, triggerData.getSection('TriggerParams'));\n  }\n\n  /**\n   * @param {Object} types\n   * @param {Map<string, string>} section\n   */\n  addTriggerTypes(types, section) {\n    for (let [key, value] of section) {\n      let tokens = value.split(',');\n\n      types[key] = tokens[4] || '';\n    }\n  }\n\n  /**\n   * @param {Object} functions\n   * @param {Map<string, string>} section\n   * @param {number} skipped\n   */\n  addTriggerDataFunctions(functions, section, skipped) {\n    for (let [key, value] of section) {\n      // We don't care about metadata lines.\n      if (key[0] !== '_') {\n        let tokens = value.split(',').slice(skipped);\n        let args = [];\n\n        // Can be used by actions to make aliases.\n        let scriptName = section.get(`_${key}_scriptname`) || null;\n\n        for (let argument of tokens) {\n          // We don't care about constants.\n          if (isNaN(argument) && argument !== 'nothing' && argument !== '') {\n            args.push(argument);\n          }\n        }\n\n        functions[key] = {args, scriptName};\n      }\n    }\n  }\n\n  /**\n   * @param {Object} presets\n   * @param {Map<string, string>} section\n   */\n  addTriggerDataPresets(presets, section) {\n    for (let [key, value] of section) {\n      let tokens = value.split(',');\n\n      // Note that the operators are enclosed by \"\" for some reason.\n      // Note that string literals are enclosed by backticks.\n      presets[key] = tokens[2].replace(/\"/g, '').replace(/`/g, '\"');\n    }\n  }\n\n  /**\n   * Given a type, return its base type.\n   * Returns the given type if its not a child type.\n   *\n   * @param {string} type\n   * @return {string}\n   */\n  getBaseType(type) {\n    type = type.toLowerCase();\n\n    let base = this.types[type];\n\n    if (base === undefined) {\n      base = this.externalTypes[type];\n    }\n\n    // Same as !base, but be explicit to be clearer.\n    if (base === '' || base === undefined) {\n      return type;\n    }\n\n    return base;\n  }\n\n  /**\n   * @param {number} type\n   * @param {string} name\n   * @return {boolean}\n   */\n  isBaseFunction(type, name) {\n    name = name.toLowerCase();\n\n    if (this.functions[type][name]) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Gets the signature of the given function.\n   *\n   * @param {number} type\n   * @param {string} name\n   * @return {Array<string>}\n   */\n  getFunction(type, name) {\n    name = name.toLowerCase();\n\n    let args = this.functions[type][name];\n\n    if (!args) {\n      args = this.externalFunctions[type][name];\n\n      if (!args) {\n        throw new Error(`Tried to get signature for unknown function \"${name}\"`);\n      }\n    }\n\n    return args;\n  }\n\n  /**\n  * Gets a preset value.\n  *\n  * @param {string} name\n  * @return {string}\n  */\n  getPreset(name) {\n    name = name.toLowerCase();\n\n    let preset = this.presets[name];\n\n    if (preset === undefined) {\n      preset = this.externalPresets[name];\n\n      if (preset === undefined) {\n        throw new Error(`Failed to find a preset: ${name}`);\n      }\n    }\n\n    return preset;\n  }\n\n  /**\n   * Is the given preset a custom or standard one?\n   *\n   * @param {string} name\n   * @return {boolean}\n   */\n  isCustomPreset(name) {\n    name = name.toLowerCase();\n\n    if (this.presets[name] !== undefined) {\n      return false;\n    }\n\n    if (this.externalPresets[name] !== undefined) {\n      return true;\n    }\n\n    throw new Error(`Failed to find a preset: ${name}`);\n  }\n}\n","import File from './file';\n\nexport default {\n  File,\n};\n","import DroppedItem from './droppeditem';\nimport DroppedItemSet from './droppeditemset';\nimport InventoryItem from './inventoryitem';\nimport ModifiedAbility from './modifiedability';\nimport RandomUnit from './randomunit';\nimport Unit from './unit';\nimport File from './file';\n\nexport default {\n  DroppedItem,\n  DroppedItemSet,\n  InventoryItem,\n  ModifiedAbility,\n  RandomUnit,\n  Unit,\n  File,\n};\n","import BinaryStream from '../../../common/binarystream';\nimport MapTitle from './maptitle';\nimport MapOrder from './maporder';\n\n/**\n * war3campaign.w3f - the campaign information file.\n */\nexport default class War3CampaignW3f {\n  /**\n   *\n   */\n  constructor() {\n    this.version = 0;\n    this.campaignVersion = 0;\n    this.editorVersion = 0;\n    this.name = '';\n    this.difficulty = '';\n    this.author = '';\n    this.description = '';\n    this.mode = -1; // 0: fixed difficulty, only w3m maps, 1: variable difficulty, only w3m maps, 1: fixed..., contains w3x maps, 2: variable..., contains w3xm maps.\n    this.backgroundScreen = -1; // -1 = none or custom path\n    this.backgroundScreenPath = '';\n    this.minimapImagePath = '';\n    this.ambientSound = 0; // -1 = imported, 0 = none, >0 = preset index\n    this.ambientSoundPath = '';\n    this.terrainFog = 0; // 0 = not used, >0 = index of terrain fog style\n    this.fogStartZ = 0;\n    this.fogEndZ = 0;\n    this.fogDensity = 0;\n    this.fogColor = new Uint8Array(4);\n    this.userInterface = -1; // 0 = human\n    this.mapTitles = [];\n    this.mapOrders = [];\n  }\n\n  /**\n   * @param {ArrayBuffer} buffer\n   */\n  load(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    this.version = stream.readInt32();\n    this.campaignVersion = stream.readInt32();\n    this.editorVersion = stream.readInt32();\n    this.name = stream.readUntilNull();\n    this.difficulty = stream.readUntilNull();\n    this.author = stream.readUntilNull();\n    this.description = stream.readUntilNull();\n    this.mode = stream.readInt32();\n    this.backgroundScreen = stream.readInt32();\n    this.backgroundScreenPath = stream.readUntilNull();\n    this.minimapImagePath = stream.readUntilNull();\n    this.ambientSound = stream.readInt32();\n    this.ambientSoundPath = stream.readUntilNull();\n    this.terrainFog = stream.readInt32();\n    this.fogStartZ = stream.readFloat32();\n    this.fogEndZ = stream.readFloat32();\n    this.fogDensity = stream.readFloat32();\n    stream.readUint8Array(this.fogColor);\n    this.userInterface = stream.readInt32();\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let mapTitle = new MapTitle();\n\n      mapTitle.load(stream);\n\n      this.mapTitles[i] = mapTitle;\n    }\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let mapOrder = new MapOrder();\n\n      mapOrder.load(stream);\n\n      this.mapOrders[i] = mapOrder;\n    }\n  }\n\n  /**\n   * @return {ArrayBuffer}\n   */\n  save() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.writeInt32(this.version);\n    stream.writeInt32(this.campaignVersion);\n    stream.writeInt32(this.editorVersion);\n    stream.write(`${this.name}\\0`);\n    stream.write(`${this.difficulty}\\0`);\n    stream.write(`${this.author}\\0`);\n    stream.write(`${this.description}\\0`);\n    stream.writeInt32(this.mode);\n    stream.writeInt32(this.backgroundScreen);\n    stream.write(`${this.backgroundScreenPath}\\0`);\n    stream.write(`${this.minimapImagePath}\\0`);\n    stream.writeInt32(this.ambientSound);\n    stream.write(`${this.ambientSoundPath}\\0`);\n    stream.writeInt32(this.terrainFog);\n    stream.writeFloat32(this.fogStartZ);\n    stream.writeFloat32(this.fogEndZ);\n    stream.writeFloat32(this.fogDensity);\n    stream.writeUint8Array(this.fogColor);\n    stream.writeInt32(this.userInterface);\n    stream.writeUint32(this.mapTitles.length);\n\n    for (let title of this.mapTitles) {\n      title.save(stream);\n    }\n\n    stream.writeUint32(this.mapOrders.length);\n\n    for (let order of this.mapOrders) {\n      order.save(stream);\n    }\n\n    return buffer;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 63 + this.name.length + this.difficulty.length + this.author.length + this.description.length + this.backgroundScreenPath.length + this.minimapImagePath.length + this.ambientSoundPath.length;\n\n    for (let title of this.mapTitles) {\n      size += title.getByteLength();\n    }\n\n    for (let order of this.mapOrders) {\n      size += order.getByteLength();\n    }\n\n    return size;\n  }\n}\n","/**\n * An extent.\n */\nexport default class Extent {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.boundsRadius = 0;\n    /** @member {Float32Array} */\n    this.min = new Float32Array(3);\n    /** @member {Float32Array} */\n    this.max = new Float32Array(3);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    this.boundsRadius = stream.readFloat32();\n    stream.readFloat32Array(this.min);\n    stream.readFloat32Array(this.max);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeFloat32(this.boundsRadius);\n    stream.writeFloat32Array(this.min);\n    stream.writeFloat32Array(this.max);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    if (this.min[0] !== 0 || this.min[1] !== 0 || this.min[2] !== 0) {\n      stream.writeFloatArrayAttrib('MinimumExtent', this.min);\n    }\n\n    if (this.max[0] !== 0 || this.max[1] !== 0 || this.max[2] !== 0) {\n      stream.writeFloatArrayAttrib('MaximumExtent', this.max);\n    }\n\n    if (this.boundsRadius !== 0) {\n      stream.writeFloatAttrib('BoundsRadius', this.boundsRadius);\n    }\n  }\n}\n","import Extent from './extent';\n\n/**\n * A sequence.\n */\nexport default class Sequence {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.name = '';\n    /** @member {Uint32Array} */\n    this.interval = new Uint32Array(2);\n    /** @member {number} */\n    this.moveSpeed = 0;\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {number} */\n    this.rarity = 0;\n    /** @member {number} */\n    this.syncPoint = 0;\n    /** @member {Extent} */\n    this.extent = new Extent();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    this.name = stream.read(80);\n    stream.readUint32Array(this.interval);\n    this.moveSpeed = stream.readFloat32();\n    this.flags = stream.readUint32();\n    this.rarity = stream.readFloat32();\n    this.syncPoint = stream.readUint32();\n    this.extent.readMdx(stream);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.write(this.name);\n    stream.skip(80 - this.name.length);\n    stream.writeUint32Array(this.interval);\n    stream.writeFloat32(this.moveSpeed);\n    stream.writeUint32(this.flags);\n    stream.writeFloat32(this.rarity);\n    stream.writeUint32(this.syncPoint);\n    this.extent.writeMdx(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    this.name = stream.read();\n\n    for (let token of stream.readBlock()) {\n      if (token === 'Interval') {\n        stream.readIntArray(this.interval);\n      } else if (token === 'NonLooping') {\n        this.flags = 1;\n      } else if (token === 'MoveSpeed') {\n        this.moveSpeed = stream.readFloat();\n      } else if (token === 'Rarity') {\n        this.rarity = stream.readFloat();\n      } else if (token === 'MinimumExtent') {\n        stream.readFloatArray(this.extent.min);\n      } else if (token === 'MaximumExtent') {\n        stream.readFloatArray(this.extent.max);\n      } else if (token === 'BoundsRadius') {\n        this.extent.boundsRadius = stream.readFloat();\n      } else {\n        throw new Error(`Unknown token in Sequence: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('Anim', this.name);\n    stream.writeArrayAttrib('Interval', this.interval);\n\n    if (this.flags === 1) {\n      stream.writeFlag('NonLooping');\n    }\n\n    if (this.moveSpeed !== 0) {\n      stream.writeFloatAttrib('MoveSpeed', this.moveSpeed);\n    }\n\n    if (this.rarity !== 0) {\n      stream.writeFloatAttrib('Rarity', this.rarity);\n    }\n\n    this.extent.writeMdl(stream);\n    stream.endBlock();\n  }\n}\n","/**\n * A templated animation track.\n *\n * @param {Uint32Array|Float32Array} DataType\n * @param {number} size\n * @return {class}\n */\nconst templatedTrack = (DataType, size) => class {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.frame = 0;\n    /** @member {Uint32Array|Float32Array} */\n    this.value = new DataType(size);\n    /** @member {Uint32Array|Float32Array} */\n    this.inTan = new DataType(size);\n    /** @member {Uint32Array|Float32Array} */\n    this.outTan = new DataType(size);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} interpolationType\n   */\n  readMdx(stream, interpolationType) {\n    this.frame = stream.readUint32();\n    stream.readTypedArray(this.value);\n\n    if (interpolationType > 1) {\n      stream.readTypedArray(this.inTan);\n      stream.readTypedArray(this.outTan);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} interpolationType\n   */\n  writeMdx(stream, interpolationType) {\n    stream.writeUint32(this.frame);\n    stream.writeTypedArray(this.value);\n\n    if (interpolationType > 1) {\n      stream.writeTypedArray(this.inTan);\n      stream.writeTypedArray(this.outTan);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   * @param {number} interpolationType\n   */\n  readMdl(stream, interpolationType) {\n    this.frame = stream.readInt();\n    stream.readKeyframe(this.value);\n\n    if (interpolationType > 1) {\n      stream.read(); // InTan\n      stream.readKeyframe(this.inTan);\n      stream.read(); // OutTan\n      stream.readKeyframe(this.outTan);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   * @param {number} interpolationType\n   */\n  writeMdl(stream, interpolationType) {\n    stream.writeKeyframe(`${this.frame}:`, this.value);\n\n    if (interpolationType > 1) {\n      stream.indent();\n      stream.writeKeyframe('InTan', this.inTan);\n      stream.writeKeyframe('OutTan', this.outTan);\n      stream.unindent();\n    }\n  }\n\n  /**\n   * @param {number} interpolationType\n   * @return {number}\n   */\n  getByteLength(interpolationType) {\n    let valueSize = this.value.byteLength;\n    let size = 4 + valueSize;\n\n    if (interpolationType > 1) {\n      size += valueSize * 2;\n    }\n\n    return size;\n  }\n};\n\n/**\n * A uint track.\n */\nexport const UintTrack = templatedTrack(Uint32Array, 1);\n\n/**\n * A float track.\n */\nexport const FloatTrack = templatedTrack(Float32Array, 1);\n\n/**\n * A vector 3 track.\n */\nexport const Vector3Track = templatedTrack(Float32Array, 3);\n\n/**\n * A vector 4 track.\n */\nexport const Vector4Track = templatedTrack(Float32Array, 4);\n","import {UintTrack, FloatTrack, Vector3Track, Vector4Track} from './tracks';\n\n/**\n * A templated animation.\n *\n * @param {UintTrack|FloatTrack|Vector3Track|Vector4Track} TrackType\n * @return {class}\n */\nconst templatedAnimation = (TrackType) => class {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {string} */\n    this.name = '';\n    /** @member {number} */\n    this.interpolationType = 0;\n    /** @member {number} */\n    this.globalSequenceId = -1;\n    /** @member {Array<Track>} */\n    this.tracks = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {string} name\n   */\n  readMdx(stream, name) {\n    this.name = name;\n\n    const tracksCount = stream.readUint32();\n\n    this.interpolationType = stream.readUint32();\n    this.globalSequenceId = stream.readInt32();\n\n    for (let i = 0; i < tracksCount; i++) {\n      const track = new TrackType();\n\n      track.readMdx(stream, this.interpolationType);\n\n      this.tracks.push(track);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.write(this.name);\n    stream.writeUint32(this.tracks.length);\n    stream.writeUint32(this.interpolationType);\n    stream.writeInt32(this.globalSequenceId);\n\n    for (const track of this.tracks) {\n      track.writeMdx(stream, this.interpolationType);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   * @param {string} name\n   */\n  readMdl(stream, name) {\n    this.name = name;\n\n    const numberOfTracks = stream.readInt();\n\n    stream.read(); // {\n\n    const token = stream.read();\n\n    if (token === 'DontInterp') {\n      this.interpolationType = 0;\n    } else if (token === 'Linear') {\n      this.interpolationType = 1;\n    } else if (token === 'Hermite') {\n      this.interpolationType = 2;\n    } else if (token === 'Bezier') {\n      this.interpolationType = 3;\n    }\n\n    // GlobalSeqId only exists if it's not -1.\n    if (stream.peek() === 'GlobalSeqId') {\n      stream.read();\n\n      this.globalSequenceId = stream.readInt();\n    }\n\n    for (let i = 0; i < numberOfTracks; i++) {\n      const track = new TrackType();\n\n      track.readMdl(stream, this.interpolationType);\n\n      this.tracks[i] = track;\n    }\n\n    stream.read(); // }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   * @param {string} name\n   */\n  writeMdl(stream, name) {\n    stream.startBlock(name, this.tracks.length);\n\n    let token;\n\n    if (this.interpolationType === 0) {\n      token = 'DontInterp';\n    } else if (this.interpolationType === 1) {\n      token = 'Linear';\n    } else if (this.interpolationType === 2) {\n      token = 'Hermite';\n    } else if (this.interpolationType === 3) {\n      token = 'Bezier';\n    }\n\n    stream.writeFlag(token);\n\n    if (this.globalSequenceId !== -1) {\n      stream.writeAttrib('GlobalSeqId', this.globalSequenceId);\n    }\n\n    for (const track of this.tracks) {\n      track.writeMdl(stream, this.interpolationType);\n    }\n\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let tracks = this.tracks;\n    let size = 16;\n\n    if (tracks.length) {\n      size += tracks[0].getByteLength(this.interpolationType) * tracks.length;\n    }\n\n    return size;\n  }\n};\n\n/**\n * A uint animation.\n */\nexport const UintAnimation = templatedAnimation(UintTrack);\n\n/**\n * A float animation\n */\nexport const FloatAnimation = templatedAnimation(FloatTrack);\n\n/**\n * A vector 3 animation.\n */\nexport const Vector3Animation = templatedAnimation(Vector3Track);\n\n/**\n * A vector 4 animation.\n */\nexport const Vector4Animation = templatedAnimation(Vector4Track);\n","import {UintAnimation, FloatAnimation, Vector3Animation, Vector4Animation} from './animations';\n\n// A map from MDX animation tags to their equivalent MDL tokens, and the implementation objects.\nexport default {\n  // Layer\n  KMTF: ['TextureId', UintAnimation],\n  KMTA: ['Alpha', FloatAnimation],\n  // TextureAnimation\n  KTAT: ['Translation', Vector3Animation],\n  KTAR: ['Rotation', Vector4Animation],\n  KTAS: ['Scaling', Vector3Animation],\n  // GeosetAnimation\n  KGAO: ['Alpha', FloatAnimation],\n  KGAC: ['Color', Vector3Animation],\n  // Light\n  KLAS: ['AttenuationStart', FloatAnimation],\n  KLAE: ['AttenuationEnd', FloatAnimation],\n  KLAC: ['Color', Vector3Animation],\n  KLAI: ['Intensity', FloatAnimation],\n  KLBI: ['AmbientIntensity', FloatAnimation],\n  KLBC: ['AmbientColor', Vector3Animation],\n  KLAV: ['Visibility', FloatAnimation],\n  // Attachment\n  KATV: ['Visibility', FloatAnimation],\n  // ParticleEmitter\n  KPEE: ['EmissionRate', FloatAnimation],\n  KPEG: ['Gravity', FloatAnimation],\n  KPLN: ['Longitude', FloatAnimation],\n  KPLT: ['Latitude', FloatAnimation],\n  KPEL: ['LifeSpan', FloatAnimation],\n  KPES: ['Speed', FloatAnimation],\n  KPEV: ['Visibility', FloatAnimation],\n  // ParticleEmitter2\n  KP2S: ['Speed', FloatAnimation],\n  KP2R: ['Variation', FloatAnimation],\n  KP2L: ['Latitude', FloatAnimation],\n  KP2G: ['Gravity', FloatAnimation],\n  KP2E: ['EmissionRate', FloatAnimation],\n  KP2N: ['Length', FloatAnimation],\n  KP2W: ['Width', FloatAnimation],\n  KP2V: ['Visibility', FloatAnimation],\n  // RibbonEmitter\n  KRHA: ['HeightAbove', FloatAnimation],\n  KRHB: ['HeightBelow', FloatAnimation],\n  KRAL: ['Alpha', FloatAnimation],\n  KRCO: ['Color', Vector3Animation],\n  KRTX: ['TextureSlot', UintAnimation],\n  KRVS: ['Visibility', FloatAnimation],\n  // Camera\n  KCTR: ['Translation', Vector3Animation],\n  KTTR: ['Translation', Vector3Animation],\n  KCRL: ['Rotation', UintAnimation],\n  // GenericObject\n  KGTR: ['Translation', Vector3Animation],\n  KGRT: ['Rotation', Vector4Animation],\n  KGSC: ['Scaling', Vector3Animation],\n};\n","import animationMap from './animationmap';\n\n/**\n * The parent class for all objects that have animated data in them.\n */\nexport default class AnimatedObject {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {Array<Animation>} */\n    this.animations = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} size\n   */\n  readAnimations(stream, size) {\n    while (size > 0) {\n      let name = stream.read(4, true);\n      let animation = new animationMap[name][1]();\n\n      animation.readMdx(stream, name);\n\n      size -= animation.getByteLength();\n\n      this.animations.push(animation);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeAnimations(stream) {\n    for (let animation of this.animations) {\n      animation.writeMdx(stream);\n    }\n  }\n\n  /**\n   * A wrapper around readBlock() which merges static tokens.\n   * E.g.: static Color\n   * This makes the condition blocks in the parent objects linear and simple.\n   *\n   * @param {BinaryStream} stream\n   */\n  * readAnimatedBlock(stream) {\n    for (let token of stream.readBlock()) {\n      if (token === 'static') {\n        yield `static ${stream.read()}`;\n      } else {\n        yield token;\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   * @param {string} name\n   */\n  readAnimation(stream, name) {\n    let animation = new animationMap[name][1]();\n\n    animation.readMdl(stream, name);\n\n    this.animations.push(animation);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   * @param {string} name\n   * @return {boolean}\n   */\n  writeAnimation(stream, name) {\n    for (let animation of this.animations) {\n      if (animation.name === name) {\n        animation.writeMdl(stream, animationMap[name][0]);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 0;\n\n    for (let animation of this.animations) {\n      size += animation.getByteLength();\n    }\n\n    return size;\n  }\n}\n","import AnimatedObject from './animatedobject';\n\nlet filterModeToMdx = {\n  None: 0,\n  Transparent: 1,\n  Blend: 2,\n  Additive: 3,\n  AddAlpha: 4,\n  Modulate: 5,\n  Modulate2x: 6,\n};\n\nlet filterModeToMdl = {\n  0: 'None',\n  1: 'Transparent',\n  2: 'Blend',\n  3: 'Additive',\n  4: 'AddAlpha',\n  5: 'Modulate',\n  6: 'Modulate2x',\n};\n\n/**\n * A layer.\n */\nexport default class Layer extends AnimatedObject {\n  /**\n   *\n   */\n  constructor() {\n    super();\n\n    /** @member {number} */\n    this.filterMode = 0;\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {number} */\n    this.textureId = -1;\n    /** @member {number} */\n    this.textureAnimationId = -1;\n    /** @member {number} */\n    this.coordId = 0;\n    /** @member {number} */\n    this.alpha = 1;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    this.filterMode = stream.readUint32();\n    this.flags = stream.readUint32();\n    this.textureId = stream.readInt32();\n    this.textureAnimationId = stream.readInt32();\n    this.coordId = stream.readUint32();\n    this.alpha = stream.readFloat32();\n\n    this.readAnimations(stream, size - 28);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n    stream.writeUint32(this.filterMode);\n    stream.writeUint32(this.flags);\n    stream.writeInt32(this.textureId);\n    stream.writeInt32(this.textureAnimationId);\n    stream.writeUint32(this.coordId);\n    stream.writeFloat32(this.alpha);\n\n    this.writeAnimations(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of this.readAnimatedBlock(stream)) {\n      if (token === 'FilterMode') {\n        this.filterMode = filterModeToMdx[stream.read()];\n      } else if (token === 'Unshaded') {\n        this.flags |= 0x1;\n      } else if (token === 'SphereEnvMap') {\n        this.flags |= 0x2;\n      } else if (token === 'TwoSided') {\n        this.flags |= 0x10;\n      } else if (token === 'Unfogged') {\n        this.flags |= 0x20;\n      } else if (token === 'NoDepthTest') {\n        this.flags |= 0x40;\n      } else if (token === 'NoDepthSet') {\n        this.flags |= 0x100;\n      } else if (token === 'static TextureID') {\n        this.textureId = stream.readInt();\n      } else if (token === 'TextureID') {\n        this.readAnimation(stream, 'KMTF');\n      } else if (token === 'TVertexAnimId') {\n        this.textureAnimationId = stream.readInt();\n      } else if (token === 'CoordId') {\n        this.coordId = stream.readInt();\n      } else if (token === 'static Alpha') {\n        this.alpha = stream.readFloat();\n      } else if (token === 'Alpha') {\n        this.readAnimation(stream, 'KMTA');\n      } else {\n        throw new Error(`Unknown token in Layer: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startBlock('Layer');\n\n    stream.writeAttrib('FilterMode', filterModeToMdl[this.filterMode]);\n\n    if (this.flags & 0x1) {\n      stream.writeFlag('Unshaded');\n    }\n\n    if (this.flags & 0x2) {\n      stream.writeFlag('SphereEnvMap');\n    }\n\n    if (this.flags & 0x10) {\n      stream.writeFlag('TwoSided');\n    }\n\n    if (this.flags & 0x20) {\n      stream.writeFlag('Unfogged');\n    }\n\n    if (this.flags & 0x40) {\n      stream.writeFlag('NoDepthTest');\n    }\n\n    if (this.flags & 0x100) {\n      stream.writeFlag('NoDepthSet');\n    }\n\n    if (!this.writeAnimation(stream, 'KMTF')) {\n      stream.writeAttrib('static TextureID', this.textureId);\n    }\n\n    if (this.textureAnimationId !== -1) {\n      stream.writeAttrib('TVertexAnimId', this.textureAnimationId);\n    }\n\n    if (this.coordId !== 0) {\n      stream.writeAttrib('CoordId', this.coordId);\n    }\n\n    if (!this.writeAnimation(stream, 'KMTA') && this.alpha !== 1) {\n      stream.writeFloatAttrib('static Alpha', this.alpha);\n    }\n\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 28 + super.getByteLength();\n  }\n}\n","import Layer from './layer';\n\n/**\n * A material.\n */\nexport default class Material {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.priorityPlane = 0;\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {Array<Layer>} */\n    this.layers = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    stream.readUint32(); // Don't care about the size.\n\n    this.priorityPlane = stream.readUint32();\n    this.flags = stream.readUint32();\n\n    stream.skip(4); // LAYS\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let layer = new Layer();\n\n      layer.readMdx(stream);\n\n      this.layers.push(layer);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n    stream.writeUint32(this.priorityPlane);\n    stream.writeUint32(this.flags);\n    stream.write('LAYS');\n    stream.writeUint32(this.layers.length);\n\n    for (let layer of this.layers) {\n      layer.writeMdx(stream);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of stream.readBlock()) {\n      if (token === 'ConstantColor') {\n        this.flags |= 0x1;\n      } else if (token === 'SortPrimsNearZ') {\n        this.flags |= 0x8;\n      } else if (token === 'SortPrimsFarZ') {\n        this.flags |= 0x10;\n      } else if (token === 'FullResolution') {\n        this.flags |= 0x20;\n      } else if (token === 'PriorityPlane') {\n        this.priorityPlane = stream.readInt();\n      } else if (token === 'Layer') {\n        let layer = new Layer();\n\n        layer.readMdl(stream);\n\n        this.layers.push(layer);\n      } else {\n        throw new Error(`Unknown token in Material: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startBlock('Material');\n\n    if (this.flags & 0x1) {\n      stream.writeFlag('ConstantColor');\n    }\n\n    if (this.flags & 0x8) {\n      stream.writeFlag('SortPrimsNearZ');\n    }\n\n    if (this.flags & 0x10) {\n      stream.writeFlag('SortPrimsFarZ');\n    }\n\n    if (this.flags & 0x20) {\n      stream.writeFlag('FullResolution');\n    }\n\n    if (this.priorityPlane !== 0) {\n      stream.writeAttrib('PriorityPlane', this.priorityPlane);\n    }\n\n    for (let layer of this.layers) {\n      layer.writeMdl(stream);\n    }\n\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 20;\n\n    for (let layer of this.layers) {\n      size += layer.getByteLength();\n    }\n\n    return size;\n  }\n}\n","/**\n * A texture.\n */\nexport default class Texture {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {number} */\n    this.replaceableId = 0;\n    /** @member {string} */\n    this.path = '';\n    /** @member {number} */\n    this.flags = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    this.replaceableId = stream.readUint32();\n    this.path = stream.read(260);\n    this.flags = stream.readUint32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.replaceableId);\n    stream.write(this.path);\n    stream.skip(260 - this.path.length);\n    stream.writeUint32(this.flags);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of stream.readBlock()) {\n      if (token === 'Image') {\n        this.path = stream.read();\n      } else if (token === 'ReplaceableId') {\n        this.replaceableId = stream.readInt();\n      } else if (token === 'WrapWidth') {\n        this.flags |= 0x1;\n      } else if (token === 'WrapHeight') {\n        this.flags |= 0x2;\n      } else {\n        throw new Error(`Unknown token in Texture: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startBlock('Bitmap');\n    stream.writeStringAttrib('Image', this.path);\n\n    if (this.replaceableId !== 0) {\n      stream.writeAttrib('ReplaceableId', this.replaceableId);\n    }\n\n    if (this.flags & 0x1) {\n      stream.writeFlag(`WrapWidth`);\n    }\n\n    if (this.flags & 0x2) {\n      stream.writeFlag(`WrapHeight`);\n    }\n\n    stream.endBlock();\n  }\n}\n","import AnimatedObject from './animatedobject';\n\n/**\n * A texture animation.\n */\nexport default class TextureAnimation extends AnimatedObject {\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    this.readAnimations(stream, size - 4);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n    this.writeAnimations(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of stream.readBlock()) {\n      if (token === 'Translation') {\n        this.readAnimation(stream, 'KTAT');\n      } else if (token === 'Rotation') {\n        this.readAnimation(stream, 'KTAR');\n      } else if (token === 'Scaling') {\n        this.readAnimation(stream, 'KTAS');\n      } else {\n        throw new Error(`Unknown token in TextureAnimation: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startBlock('TVertexAnim ');\n    this.writeAnimation(stream, 'KTAT');\n    this.writeAnimation(stream, 'KTAR');\n    this.writeAnimation(stream, 'KTAS');\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 4 + super.getByteLength();\n  }\n}\n","import Extent from './extent';\n\n/**\n * A geoset.\n */\nexport default class Geoset {\n  /**\n   *\n   */\n  constructor() {\n    /** @member {Float32Array} */\n    this.vertices = new Float32Array(0);\n    /** @member {Float32Array} */\n    this.normals = new Float32Array(0);\n    /** @member {Uint32Array} */\n    this.faceTypeGroups = new Uint32Array(0);\n    /** @member {Uint32Array} */\n    this.faceGroups = new Uint32Array(0);\n    /** @member {Uint16Array} */\n    this.faces = new Uint16Array(0);\n    /** @member {Uint8Array} */\n    this.vertexGroups = new Uint8Array(0);\n    /** @member {Uint32Array} */\n    this.matrixGroups = new Uint32Array(0);\n    /** @member {Uint32Array} */\n    this.matrixIndices = new Uint32Array(0);\n    /** @member {number} */\n    this.materialId = 0;\n    /** @member {number} */\n    this.selectionGroup = 0;\n    /** @member {number} */\n    this.selectionFlags = 0;\n    /** @member {Extent} */\n    this.extent = new Extent();\n    /** @member {Array<Extent>} */\n    this.sequenceExtents = [];\n    /** @member {Array<Float32Array>} */\n    this.uvSets = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    stream.readUint32(); // Don't care about the size.\n    stream.skip(4); // VRTX\n    this.vertices = stream.readFloat32Array(stream.readUint32() * 3);\n    stream.skip(4); // NRMS\n    this.normals = stream.readFloat32Array(stream.readUint32() * 3);\n    stream.skip(4); // PTYP\n    this.faceTypeGroups = stream.readUint32Array(stream.readUint32());\n    stream.skip(4); // PCNT\n    this.faceGroups = stream.readUint32Array(stream.readUint32());\n    stream.skip(4); // PVTX\n    this.faces = stream.readUint16Array(stream.readUint32());\n    stream.skip(4); // GNDX\n    this.vertexGroups = stream.readUint8Array(stream.readUint32());\n    stream.skip(4); // MTGC\n    this.matrixGroups = stream.readUint32Array(stream.readUint32());\n    stream.skip(4); // MATS\n    this.matrixIndices = stream.readUint32Array(stream.readUint32());\n    this.materialId = stream.readUint32();\n    this.selectionGroup = stream.readUint32();\n    this.selectionFlags = stream.readUint32();\n    this.extent.readMdx(stream);\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      let extent = new Extent();\n\n      extent.readMdx(stream);\n\n      this.sequenceExtents.push(extent);\n    }\n\n    stream.skip(4); // UVAS\n\n    for (let i = 0, l = stream.readUint32(); i < l; i++) {\n      stream.skip(4); // UVBS\n      this.uvSets.push(stream.readFloat32Array(stream.readUint32() * 2));\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n    stream.write('VRTX');\n    stream.writeUint32(this.vertices.length / 3);\n    stream.writeFloat32Array(this.vertices);\n    stream.write('NRMS');\n    stream.writeUint32(this.normals.length / 3);\n    stream.writeFloat32Array(this.normals);\n    stream.write('PTYP');\n    stream.writeUint32(this.faceTypeGroups.length);\n    stream.writeUint32Array(this.faceTypeGroups);\n    stream.write('PCNT');\n    stream.writeUint32(this.faceGroups.length);\n    stream.writeUint32Array(this.faceGroups);\n    stream.write('PVTX');\n    stream.writeUint32(this.faces.length);\n    stream.writeUint16Array(this.faces);\n    stream.write('GNDX');\n    stream.writeUint32(this.vertexGroups.length);\n    stream.writeUint8Array(this.vertexGroups);\n    stream.write('MTGC');\n    stream.writeUint32(this.matrixGroups.length);\n    stream.writeUint32Array(this.matrixGroups);\n    stream.write('MATS');\n    stream.writeUint32(this.matrixIndices.length);\n    stream.writeUint32Array(this.matrixIndices);\n    stream.writeUint32(this.materialId);\n    stream.writeUint32(this.selectionGroup);\n    stream.writeUint32(this.selectionFlags);\n    this.extent.writeMdx(stream);\n    stream.writeUint32(this.sequenceExtents.length);\n\n    for (let sequenceExtent of this.sequenceExtents) {\n      sequenceExtent.writeMdx(stream);\n    }\n\n    stream.write('UVAS');\n    stream.writeUint32(this.uvSets.length);\n\n    for (let uvSet of this.uvSets) {\n      stream.write('UVBS');\n      stream.writeUint32(uvSet.length / 2);\n      stream.writeFloat32Array(uvSet);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of stream.readBlock()) {\n      if (token === 'Vertices') {\n        this.vertices = stream.readVectorArray(new Float32Array(stream.readInt() * 3), 3);\n      } else if (token === 'Normals') {\n        this.normals = stream.readVectorArray(new Float32Array(stream.readInt() * 3), 3);\n      } else if (token === 'TVertices') {\n        this.uvSets.push(stream.readVectorArray(new Float32Array(stream.readInt() * 2), 2));\n      } else if (token === 'VertexGroup') {\n        // Vertex groups are stored in a block with no count, can't allocate the buffer yet.\n        let vertexGroups = [];\n\n        for (let vertexGroup of stream.readBlock()) {\n          vertexGroups.push(parseInt(vertexGroup));\n        }\n\n        this.vertexGroups = new Uint8Array(vertexGroups);\n      } else if (token === 'Faces') {\n        // For now hardcoded for triangles, until I see a model with something different.\n        this.faceTypeGroups = new Uint32Array([4]);\n\n        stream.readInt(); // number of groups, irrelevant for now\n\n        let count = stream.readInt();\n\n        stream.read(); // {\n        stream.read(); // Triangles\n        stream.read(); // {\n\n        this.faces = stream.readIntArray(new Uint16Array(count));\n\n        stream.read(); // }\n        stream.read(); // }\n      } else if (token === 'Groups') {\n        let indices = [];\n        let groups = [];\n\n        stream.readInt(); // matrices count\n        stream.readInt(); // total indices\n\n        // eslint-disable-next-line no-unused-vars\n        for (let matrix of stream.readBlock()) {\n          let size = 0;\n\n          for (let index of stream.readBlock()) {\n            indices.push(parseInt(index));\n            size += 1;\n          }\n\n          groups.push(size);\n        }\n\n        this.matrixIndices = new Uint32Array(indices);\n        this.matrixGroups = new Uint32Array(groups);\n      } else if (token === 'MinimumExtent') {\n        stream.readFloatArray(this.extent.min);\n      } else if (token === 'MaximumExtent') {\n        stream.readFloatArray(this.extent.max);\n      } else if (token === 'BoundsRadius') {\n        this.extent.boundsRadius = stream.readFloat();\n      } else if (token === 'Anim') {\n        let extent = new Extent();\n\n        for (token of stream.readBlock()) {\n          if (token === 'MinimumExtent') {\n            stream.readFloatArray(extent.min);\n          } else if (token === 'MaximumExtent') {\n            stream.readFloatArray(extent.max);\n          } else if (token === 'BoundsRadius') {\n            extent.boundsRadius = stream.readFloat();\n          }\n        }\n\n        this.sequenceExtents.push(extent);\n      } else if (token === 'MaterialID') {\n        this.materialId = stream.readInt();\n      } else if (token === 'SelectionGroup') {\n        this.selectionGroup = stream.readInt();\n      } else if (token === 'Unselectable') {\n        this.selectionFlags = 4;\n      } else {\n        throw new Error(`Unknown token in Geoset: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startBlock('Geoset');\n\n    stream.writeVectorArray('Vertices', this.vertices, 3);\n    stream.writeVectorArray('Normals', this.normals, 3);\n\n    for (let uvSet of this.uvSets) {\n      stream.writeVectorArray('TVertices', uvSet, 2);\n    }\n\n    stream.startBlock('VertexGroup');\n    for (let i = 0, l = this.vertexGroups.length; i < l; i++) {\n      stream.writeLine(`${this.vertexGroups[i]},`);\n    }\n    stream.endBlock();\n\n    // For now hardcoded for triangles, until I see a model with something different.\n    stream.startBlock('Faces', 1, this.faces.length);\n    stream.startBlock('Triangles');\n    stream.writeLine(`{ ${this.faces.join(', ')} },`);\n    stream.endBlock();\n    stream.endBlock();\n\n    stream.startBlock('Groups', this.matrixGroups.length, this.matrixIndices.length);\n    let index = 0;\n    for (let groupSize of this.matrixGroups) {\n      stream.writeArrayAttrib('Matrices', this.matrixIndices.subarray(index, index + groupSize));\n      index += groupSize;\n    }\n    stream.endBlock();\n\n    this.extent.writeMdl(stream);\n\n    for (let sequenceExtent of this.sequenceExtents) {\n      stream.startBlock('Anim');\n      sequenceExtent.writeMdl(stream);\n      stream.endBlock();\n    }\n\n    stream.writeAttrib('MaterialID', this.materialId);\n    stream.writeAttrib('SelectionGroup', this.selectionGroup);\n\n    if (this.selectionFlags === 4) {\n      stream.writeFlag('Unselectable');\n    }\n\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 120 + this.vertices.byteLength + this.normals.byteLength + this.faceTypeGroups.byteLength + this.faceGroups.byteLength + this.faces.byteLength + this.vertexGroups.byteLength + this.matrixGroups.byteLength + this.matrixIndices.byteLength + this.sequenceExtents.length * 28;\n\n    for (let uvSet of this.uvSets) {\n      size += 8 + uvSet.byteLength;\n    }\n\n    return size;\n  }\n}\n","import AnimatedObject from './animatedobject';\n\n/**\n * A geoset animation.\n */\nexport default class GeosetAnimation extends AnimatedObject {\n  /**\n   *\n   */\n  constructor() {\n    super();\n\n    /** @member {number} */\n    this.alpha = 1;\n    /** @member {number} */\n    this.flags = 0;\n    /** @member {Float32Array} */\n    this.color = new Float32Array([1, 1, 1]);\n    /** @member {number} */\n    this.geosetId = -1;\n    /** @member {Array<Animation>} */\n    this.animations = [];\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    this.alpha = stream.readFloat32();\n    this.flags = stream.readUint32();\n    stream.readFloat32Array(this.color);\n    this.geosetId = stream.readInt32();\n\n    this.readAnimations(stream, size - 28);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n    stream.writeFloat32(this.alpha);\n    stream.writeUint32(this.flags);\n    stream.writeFloat32Array(this.color);\n    stream.writeInt32(this.geosetId);\n\n    this.writeAnimations(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of this.readAnimatedBlock(stream)) {\n      if (token === 'DropShadow') {\n        this.flags |= 0x1;\n      } else if (token === 'static Alpha') {\n        this.alpha = stream.readFloat();\n      } else if (token === 'Alpha') {\n        this.readAnimation(stream, 'KGAO');\n      } else if (token === 'static Color') {\n        this.flags |= 0x2;\n        stream.readColor(this.color);\n      } else if (token === 'Color') {\n        this.flags |= 0x2;\n        this.readAnimation(stream, 'KGAC');\n      } else if (token === 'GeosetId') {\n        this.geosetId = stream.readInt();\n      } else {\n        throw new Error(`Unknown token in GeosetAnimation: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startBlock('GeosetAnim');\n\n    if (this.flags & 0x1) {\n      stream.writeFlag('DropShadow');\n    }\n\n    if (!this.writeAnimation(stream, 'KGAO')) {\n      stream.writeFloatAttrib('static Alpha', this.alpha);\n    }\n\n    if (this.flags & 0x2) {\n      if (!this.writeAnimation(stream, 'KGAC') && (this.color[0] !== 1 || this.color[1] !== 1 || this.color[2] !== 1)) {\n        stream.writeColor('static Color ', this.color);\n      }\n    }\n\n    stream.writeAttrib('GeosetId', this.geosetId);\n\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 28 + super.getByteLength();\n  }\n}\n","import AnimatedObject from './animatedobject';\n\n/**\n * A generic object.\n *\n * The parent class for all objects that exist in the world, and may contain spatial animations.\n * This includes bones, particle emitters, and many other things.\n */\nexport default class GenericObject extends AnimatedObject {\n  /**\n   * @param {number} flags\n   */\n  constructor(flags) {\n    super();\n\n    /** @member {string} */\n    this.name = '';\n    /** @member {number} */\n    this.objectId = -1;\n    /** @member {number} */\n    this.parentId = -1;\n    /** @member {number} */\n    this.flags = flags || 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    this.name = stream.read(80);\n    this.objectId = stream.readInt32();\n    this.parentId = stream.readInt32();\n    this.flags = stream.readUint32();\n\n    this.readAnimations(stream, size - 96);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getGenericByteLength());\n    stream.write(this.name);\n    stream.skip(80 - this.name.length);\n    stream.writeInt32(this.objectId);\n    stream.writeInt32(this.parentId);\n    stream.writeUint32(this.flags);\n\n    for (let animation of this.eachAnimation(true)) {\n      animation.writeMdx(stream);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeNonGenericAnimationChunks(stream) {\n    for (let animation of this.eachAnimation(false)) {\n      animation.writeMdx(stream);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  * readMdl(stream) {\n    this.name = stream.read();\n\n    for (let token of this.readAnimatedBlock(stream)) {\n      if (token === 'ObjectId') {\n        this.objectId = stream.readInt();\n      } else if (token === 'Parent') {\n        this.parentId = stream.readInt();\n      } else if (token === 'BillboardedLockZ') {\n        this.flags |= 0x40;\n      } else if (token === 'BillboardedLockY') {\n        this.flags |= 0x20;\n      } else if (token === 'BillboardedLockX') {\n        this.flags |= 0x10;\n      } else if (token === 'Billboarded') {\n        this.flags |= 0x8;\n      } else if (token === 'CameraAnchored') {\n        this.flags |= 0x80;\n      } else if (token === 'DontInherit') {\n        for (token of stream.readBlock()) {\n          if (token === 'Rotation') {\n            this.flags |= 0x2;\n          } else if (token === 'Translation') {\n            this.flags |= 0x1;\n          } else if (token === 'Scaling') {\n            this.flags |= 0x4;\n          }\n        }\n      } else if (token === 'Translation') {\n        this.readAnimation(stream, 'KGTR');\n      } else if (token === 'Rotation') {\n        this.readAnimation(stream, 'KGRT');\n      } else if (token === 'Scaling') {\n        this.readAnimation(stream, 'KGSC');\n      } else {\n        yield token;\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeGenericHeader(stream) {\n    stream.writeAttrib('ObjectId', this.objectId);\n\n    if (this.parentId !== -1) {\n      stream.writeAttrib('Parent', this.parentId);\n    }\n\n    if (this.flags & 0x40) {\n      stream.writeFlag('BillboardedLockZ');\n    }\n\n    if (this.flags & 0x20) {\n      stream.writeFlag('BillboardedLockY');\n    }\n\n    if (this.flags & 0x10) {\n      stream.writeFlag('BillboardedLockX');\n    }\n\n    if (this.flags & 0x8) {\n      stream.writeFlag('Billboarded');\n    }\n\n    if (this.flags & 0x80) {\n      stream.writeFlag('CameraAnchored');\n    }\n\n    if (this.flags & 0x2) {\n      stream.writeFlag(`DontInherit { Rotation }`);\n    }\n\n    if (this.flags & 0x1) {\n      stream.writeFlag(`DontInherit { Translation }`);\n    }\n\n    if (this.flags & 0x4) {\n      stream.writeFlag(`DontInherit { Scaling }`);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeGenericAnimations(stream) {\n    this.writeAnimation(stream, 'KGTR');\n    this.writeAnimation(stream, 'KGRT');\n    this.writeAnimation(stream, 'KGSC');\n  }\n\n  /**\n   * Allows to easily iterate either the GenericObject animations or the parent object animations.\n   *\n   * @param {boolean} wantGeneric\n   */\n  * eachAnimation(wantGeneric) {\n    for (let animation of this.animations) {\n      let name = animation.name;\n      let isGeneric = (name === 'KGTR' || name === 'KGRT' || name === 'KGSC');\n\n      if ((wantGeneric && isGeneric) || (!wantGeneric && !isGeneric)) {\n        yield animation;\n      }\n    }\n  }\n\n  /**\n   * Gets the byte length of the GenericObject part of whatever this object this.\n   * This is needed because only the KGTR, KGRT, and KGSC animations actually belong to it.\n   *\n   * @return {number}\n   */\n  getGenericByteLength() {\n    let size = 96;\n\n    for (let animation of this.eachAnimation(true)) {\n      size += animation.getByteLength();\n    }\n\n    return size;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 96 + super.getByteLength();\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * A bone.\n */\nexport default class Bone extends GenericObject {\n  /**\n   *\n   */\n  constructor() {\n    super(0x100);\n\n    /** @member {number} */\n    this.geosetId = -1;\n    /** @member {number} */\n    this.geosetAnimationId = -1;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    super.readMdx(stream);\n\n    this.geosetId = stream.readInt32();\n    this.geosetAnimationId = stream.readInt32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    super.writeMdx(stream);\n\n    stream.writeInt32(this.geosetId);\n    stream.writeInt32(this.geosetAnimationId);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of super.readMdl(stream)) {\n      if (token === 'GeosetId') {\n        token = stream.read();\n\n        if (token === 'Multiple') {\n          this.geosetId = -1;\n        } else {\n          this.geosetId = parseInt(token);\n        }\n      } else if (token === 'GeosetAnimId') {\n        token = stream.read();\n\n        if (token === 'None') {\n          this.geosetAnimationId = -1;\n        } else {\n          this.geosetAnimationId = parseInt(token);\n        }\n      } else {\n        throw new Error(`Unknown token in Bone ${this.name}: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('Bone', this.name);\n    this.writeGenericHeader(stream);\n\n    let geosetId = this.geosetId;\n    let geosetAnimationId = this.geosetAnimationId;\n\n    if (geosetId === -1) {\n      geosetId = 'Multiple';\n    }\n\n    if (geosetAnimationId === -1) {\n      geosetAnimationId = 'None';\n    }\n\n    stream.writeAttrib('GeosetId', geosetId);\n    stream.writeAttrib('GeosetAnimId', geosetAnimationId);\n\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 8 + super.getByteLength();\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * A light.\n */\nexport default class Light extends GenericObject {\n  /**\n   *\n   */\n  constructor() {\n    super(0x200);\n\n    /** @member {number} */\n    this.type = -1;\n    /** @member {Float32Array} */\n    this.attenuation = new Float32Array(2);\n    /** @member {Float32Array} */\n    this.color = new Float32Array(3);\n    /** @member {number} */\n    this.intensity = 0;\n    /** @member {Float32Array} */\n    this.ambientColor = new Float32Array(3);\n    /** @member {number} */\n    this.ambientIntensity = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    super.readMdx(stream);\n\n    this.type = stream.readUint32();\n    stream.readFloat32Array(this.attenuation);\n    stream.readFloat32Array(this.color);\n    this.intensity = stream.readFloat32();\n    stream.readFloat32Array(this.ambientColor);\n    this.ambientIntensity = stream.readFloat32();\n\n    this.readAnimations(stream, size - this.getByteLength());\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n\n    super.writeMdx(stream);\n\n    stream.writeUint32(this.type);\n    stream.writeFloat32Array(this.attenuation);\n    stream.writeFloat32Array(this.color);\n    stream.writeFloat32(this.intensity);\n    stream.writeFloat32Array(this.ambientColor);\n    stream.writeFloat32(this.ambientIntensity);\n\n    this.writeNonGenericAnimationChunks(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of super.readMdl(stream)) {\n      if (token === 'Omnidirectional') {\n        this.type = 0;\n      } else if (token === 'Directional') {\n        this.type = 1;\n      } else if (token === 'Ambient') {\n        this.type = 2;\n      } else if (token === 'static AttenuationStart') {\n        this.attenuation[0] = stream.readFloat();\n      } else if (token === 'AttenuationStart') {\n        this.readAnimation(stream, 'KLAS');\n      } else if (token === 'static AttenuationEnd') {\n        this.attenuation[1] = stream.readFloat();\n      } else if (token === 'AttenuationEnd') {\n        this.readAnimation(stream, 'KLAE');\n      } else if (token === 'static Intensity') {\n        this.intensity = stream.readFloat();\n      } else if (token === 'Intensity') {\n        this.readAnimation(stream, 'KLAI');\n      } else if (token === 'static Color') {\n        stream.readColor(this.color);\n      } else if (token === 'Color') {\n        this.readAnimation(stream, 'KLAC');\n      } else if (token === 'static AmbIntensity') {\n        this.ambientIntensity = stream.readFloat();\n      } else if (token === 'AmbIntensity') {\n        this.readAnimation(stream, 'KLBI');\n      } else if (token === 'static AmbColor') {\n        stream.readColor(this.ambientColor);\n      } else if (token === 'AmbColor') {\n        this.readAnimation(stream, 'KLBC');\n      } else if (token === 'Visibility') {\n        this.readAnimation(stream, 'KLAV');\n      } else {\n        throw new Error(`Unknown token in Light: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('Light', this.name);\n    this.writeGenericHeader(stream);\n\n    if (this.type === 0) {\n      stream.writeFlag('Omnidirectional');\n    } else if (this.type === 1) {\n      stream.writeFlag('Directional');\n    } else if (this.type === 2) {\n      stream.writeFlag('Ambient');\n    }\n\n    if (!this.writeAnimation(stream, 'KLAS')) {\n      stream.writeFloatAttrib('static AttenuationStart', this.attenuation[0]);\n    }\n\n    if (!this.writeAnimation(stream, 'KLAE')) {\n      stream.writeFloatAttrib('static AttenuationEnd', this.attenuation[1]);\n    }\n\n    if (!this.writeAnimation(stream, 'KLAI')) {\n      stream.writeFloatAttrib('static Intensity', this.intensity);\n    }\n\n    if (!this.writeAnimation(stream, 'KLAC')) {\n      stream.writeColor('static Color', this.color);\n    }\n\n    if (!this.writeAnimation(stream, 'KLBI')) {\n      stream.writeFloatAttrib('static AmbIntensity', this.ambientIntensity);\n    }\n\n    if (!this.writeAnimation(stream, 'KLBC')) {\n      stream.writeColor('static AmbColor', this.ambientColor);\n    }\n\n    this.writeAnimation(stream, 'KLAV');\n\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 48 + super.getByteLength();\n  }\n}\n\n","import GenericObject from './genericobject';\n\n/**\n * A helper.\n */\nexport default class Helper extends GenericObject {\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of super.readMdl(stream)) {\n      throw new Error(`Unknown token in Helper: \"${token}\"`);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('Helper', this.name);\n    this.writeGenericHeader(stream);\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * An attachment.\n */\nexport default class Attachment extends GenericObject {\n  /**\n   *\n   */\n  constructor() {\n    super(0x800);\n\n    /** @member {string} */\n    this.path = '';\n    /** @member {number} */\n    this.attachmentId = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    super.readMdx(stream);\n\n    this.path = stream.read(260);\n    this.attachmentId = stream.readInt32();\n\n    this.readAnimations(stream, size - this.getByteLength());\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n\n    super.writeMdx(stream);\n\n    stream.write(this.path);\n    stream.skip(260 - this.path.length);\n    stream.writeInt32(this.attachmentId);\n\n    this.writeNonGenericAnimationChunks(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of super.readMdl(stream)) {\n      if (token === 'AttachmentID') {\n        this.attachmentId = stream.readInt();\n      } else if (token === 'Path') {\n        this.path = stream.read();\n      } else if (token === 'Visibility') {\n        this.readAnimation(stream, 'KATV');\n      } else {\n        throw new Error(`Unknown token in Attachment ${this.name}: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('Attachment', this.name);\n    this.writeGenericHeader(stream);\n\n    stream.writeAttrib('AttachmentID', this.attachmentId); // Is this needed? MDX supplies it, but MdlxConv does not use it.\n\n    if (this.path.length) {\n      stream.writeStringAttrib('Path', this.path);\n    }\n\n    this.writeAnimation(stream, 'KATV');\n\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 268 + super.getByteLength();\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * A particle emitter.\n */\nexport default class ParticleEmitter extends GenericObject {\n  /**\n   *\n   */\n  constructor() {\n    super(0x1000);\n\n    /** @member {number} */\n    this.emissionRate = 0;\n    /** @member {number} */\n    this.gravity = 0;\n    /** @member {number} */\n    this.longitude = 0;\n    /** @member {number} */\n    this.latitude = 0;\n    /** @member {string} */\n    this.path = '';\n    /** @member {number} */\n    this.lifeSpan = 0;\n    /** @member {number} */\n    this.speed = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    super.readMdx(stream);\n\n    this.emissionRate = stream.readFloat32();\n    this.gravity = stream.readFloat32();\n    this.longitude = stream.readFloat32();\n    this.latitude = stream.readFloat32();\n    this.path = stream.read(260);\n    this.lifeSpan = stream.readFloat32();\n    this.speed = stream.readFloat32();\n\n    this.readAnimations(stream, size - this.getByteLength());\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n\n    super.writeMdx(stream);\n\n    stream.writeFloat32(this.emissionRate);\n    stream.writeFloat32(this.gravity);\n    stream.writeFloat32(this.longitude);\n    stream.writeFloat32(this.latitude);\n    stream.write(this.path);\n    stream.skip(260 - this.path.length);\n    stream.writeFloat32(this.lifeSpan);\n    stream.writeFloat32(this.speed);\n\n    this.writeNonGenericAnimationChunks(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of super.readMdl(stream)) {\n      if (token === 'EmitterUsesMDL') {\n        this.flags |= 0x8000;\n      } else if (token === 'EmitterUsesTGA') {\n        this.flags |= 0x10000;\n      } else if (token === 'static EmissionRate') {\n        this.emissionRate = stream.readFloat();\n      } else if (token === 'EmissionRate') {\n        this.readAnimation(stream, 'KPEE');\n      } else if (token === 'static Gravity') {\n        this.gravity = stream.readFloat();\n      } else if (token === 'Gravity') {\n        this.readAnimation(stream, 'KPEG');\n      } else if (token === 'static Longitude') {\n        this.longitude = stream.readFloat();\n      } else if (token === 'Longitude') {\n        this.readAnimation(stream, 'KPLN');\n      } else if (token === 'static Latitude') {\n        this.latitude = stream.readFloat();\n      } else if (token === 'Latitude') {\n        this.readAnimation(stream, 'KPLT');\n      } else if (token === 'Visibility') {\n        this.readAnimation(stream, 'KPEV');\n      } else if (token === 'Particle') {\n        for (token of this.readAnimatedBlock(stream)) {\n          if (token === 'static LifeSpan') {\n            this.lifeSpan = stream.readFloat();\n          } else if (token === 'LifeSpan') {\n            this.readAnimation(stream, 'KPEL');\n          } else if (token === 'static InitVelocity') {\n            this.speed = stream.readFloat();\n          } else if (token === 'InitVelocity') {\n            this.readAnimation(stream, 'KPES');\n          } else if (token === 'Path') {\n            this.path = stream.read();\n          }\n        }\n      } else {\n        throw new Error(`Unknown token in ParticleEmitter: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('ParticleEmitter', this.name);\n    this.writeGenericHeader(stream);\n\n    if (this.flags & 0x8000) {\n      stream.writeFlag('EmitterUsesMDL');\n    }\n\n    if (this.flags & 0x10000) {\n      stream.writeFlag('EmitterUsesTGA');\n    }\n\n    if (!this.writeAnimation(stream, 'KPEE')) {\n      stream.writeFloatAttrib('static EmissionRate', this.emissionRate);\n    }\n\n    if (!this.writeAnimation(stream, 'KPEG')) {\n      stream.writeFloatAttrib('static Gravity', this.gravity);\n    }\n\n    if (!this.writeAnimation(stream, 'KPLN')) {\n      stream.writeFloatAttrib('static Longitude', this.longitude);\n    }\n\n    if (!this.writeAnimation(stream, 'KPLT')) {\n      stream.writeFloatAttrib('static Latitude', this.latitude);\n    }\n\n    this.writeAnimation(stream, 'KPEV');\n\n    stream.startBlock('Particle');\n\n    if (!this.writeAnimation(stream, 'KPEL')) {\n      stream.writeFloatAttrib('static LifeSpan', this.lifeSpan);\n    }\n\n    if (!this.writeAnimation(stream, 'KPES')) {\n      stream.writeFloatAttrib('static InitVelocity', this.speed);\n    }\n\n    if ((this.flags & 0x8000) || (this.flags & 0x10000)) {\n      stream.writeAttrib('Path', this.path);\n    }\n\n    stream.endBlock();\n\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 288 + super.getByteLength();\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * A particle emitter type 2.\n */\nexport default class ParticleEmitter2 extends GenericObject {\n  /**\n   *\n   */\n  constructor() {\n    super();\n\n    /** @member {number} */\n    this.speed = 0;\n    /** @member {number} */\n    this.variation = 0;\n    /** @member {number} */\n    this.latitude = 0;\n    /** @member {number} */\n    this.gravity = 0;\n    /** @member {number} */\n    this.lifeSpan = 0;\n    /** @member {number} */\n    this.emissionRate = 0;\n    /** @member {number} */\n    this.length = 0;\n    /** @member {number} */\n    this.width = 0;\n    /** @member {number} */\n    this.filterMode = 0;\n    /** @member {number} */\n    this.rows = 0;\n    /** @member {number} */\n    this.columns = 0;\n    /** @member {number} */\n    this.headOrTail = 0;\n    /** @member {number} */\n    this.tailLength = 0;\n    /** @member {number} */\n    this.timeMiddle = 0;\n    /** @member {Array<Float32Array>} */\n    this.segmentColors = [new Float32Array(3), new Float32Array(3), new Float32Array(3)];\n    /** @member {Uint8Array} */\n    this.segmentAlphas = new Uint8Array(3);\n    /** @member {Float32Array} */\n    this.segmentScaling = new Float32Array(3);\n    /** @member {Array<Uint32Array>} */\n    this.headIntervals = [new Uint32Array(3), new Uint32Array(3)];\n    /** @member {Array<Uint32Array>} */\n    this.tailIntervals = [new Uint32Array(3), new Uint32Array(3)];\n    /** @member {number} */\n    this.textureId = -1;\n    /** @member {number} */\n    this.squirt = 0;\n    /** @member {number} */\n    this.priorityPlane = 0;\n    /** @member {number} */\n    this.replaceableId = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    const size = stream.readUint32();\n\n    super.readMdx(stream);\n\n    this.speed = stream.readFloat32();\n    this.variation = stream.readFloat32();\n    this.latitude = stream.readFloat32();\n    this.gravity = stream.readFloat32();\n    this.lifeSpan = stream.readFloat32();\n    this.emissionRate = stream.readFloat32();\n    this.length = stream.readFloat32();\n    this.width = stream.readFloat32();\n    this.filterMode = stream.readUint32();\n    this.rows = stream.readUint32();\n    this.columns = stream.readUint32();\n    this.headOrTail = stream.readUint32();\n    this.tailLength = stream.readFloat32();\n    this.timeMiddle = stream.readFloat32();\n    stream.readFloat32Array(this.segmentColors[0]);\n    stream.readFloat32Array(this.segmentColors[1]);\n    stream.readFloat32Array(this.segmentColors[2]);\n    stream.readUint8Array(this.segmentAlphas);\n    stream.readFloat32Array(this.segmentScaling);\n    stream.readUint32Array(this.headIntervals[0]);\n    stream.readUint32Array(this.headIntervals[1]);\n    stream.readUint32Array(this.tailIntervals[0]);\n    stream.readUint32Array(this.tailIntervals[1]);\n    this.textureId = stream.readInt32();\n    this.squirt = stream.readUint32();\n    this.priorityPlane = stream.readInt32();\n    this.replaceableId = stream.readUint32();\n\n    this.readAnimations(stream, size - this.getByteLength());\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n\n    super.writeMdx(stream);\n\n    stream.writeFloat32(this.speed);\n    stream.writeFloat32(this.variation);\n    stream.writeFloat32(this.latitude);\n    stream.writeFloat32(this.gravity);\n    stream.writeFloat32(this.lifeSpan);\n    stream.writeFloat32(this.emissionRate);\n    stream.writeFloat32(this.length);\n    stream.writeFloat32(this.width);\n    stream.writeUint32(this.filterMode);\n    stream.writeUint32(this.rows);\n    stream.writeUint32(this.columns);\n    stream.writeUint32(this.headOrTail);\n    stream.writeFloat32(this.tailLength);\n    stream.writeFloat32(this.timeMiddle);\n    stream.writeFloat32Array(this.segmentColors[0]);\n    stream.writeFloat32Array(this.segmentColors[1]);\n    stream.writeFloat32Array(this.segmentColors[2]);\n    stream.writeUint8Array(this.segmentAlphas);\n    stream.writeFloat32Array(this.segmentScaling);\n    stream.writeUint32Array(this.headIntervals[0]);\n    stream.writeUint32Array(this.headIntervals[1]);\n    stream.writeUint32Array(this.tailIntervals[0]);\n    stream.writeUint32Array(this.tailIntervals[1]);\n    stream.writeInt32(this.textureId);\n    stream.writeUint32(this.squirt);\n    stream.writeInt32(this.priorityPlane);\n    stream.writeUint32(this.replaceableId);\n\n    this.writeNonGenericAnimationChunks(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (const token of super.readMdl(stream)) {\n      if (token === 'SortPrimsFarZ') {\n        this.flags |= 0x10000;\n      } else if (token === 'Unshaded') {\n        this.flags |= 0x8000;\n      } else if (token === 'LineEmitter') {\n        this.flags |= 0x20000;\n      } else if (token === 'Unfogged') {\n        this.flags |= 0x40000;\n      } else if (token === 'ModelSpace') {\n        this.flags |= 0x80000;\n      } else if (token === 'XYQuad') {\n        this.flags |= 0x100000;\n      } else if (token === 'static Speed') {\n        this.speed = stream.readFloat();\n      } else if (token === 'Speed') {\n        this.readAnimation(stream, 'KP2S');\n      } else if (token === 'static Variation') {\n        this.variation = stream.readFloat();\n      } else if (token === 'Variation') {\n        this.readAnimation(stream, 'KP2R');\n      } else if (token === 'static Latitude') {\n        this.latitude = stream.readFloat();\n      } else if (token === 'Latitude') {\n        this.readAnimation(stream, 'KP2L');\n      } else if (token === 'static Gravity') {\n        this.gravity = stream.readFloat();\n      } else if (token === 'Gravity') {\n        this.readAnimation(stream, 'KP2G');\n      } else if (token === 'Visibility') {\n        this.readAnimation(stream, 'KP2V');\n      } else if (token === 'Squirt') {\n        this.squirt = 1;\n      } else if (token === 'LifeSpan') {\n        this.lifeSpan = stream.readFloat();\n      } else if (token === 'static EmissionRate') {\n        this.emissionRate = stream.readFloat();\n      } else if (token === 'EmissionRate') {\n        this.readAnimation(stream, 'KP2E');\n      } else if (token === 'static Width') {\n        this.width = stream.readFloat();\n      } else if (token === 'Width') {\n        this.readAnimation(stream, 'KP2W');\n      } else if (token === 'static Length') {\n        this.length = stream.readFloat();\n      } else if (token === 'Length') {\n        this.readAnimation(stream, 'KP2N');\n      } else if (token === 'Blend') {\n        this.filterMode = 0;\n      } else if (token === 'Additive') {\n        this.filterMode = 1;\n      } else if (token === 'Modulate') {\n        this.filterMode = 2;\n      } else if (token === 'Modulate2x') {\n        this.filterMode = 3;\n      } else if (token === 'AlphaKey') {\n        this.filterMode = 4;\n      } else if (token === 'Rows') {\n        this.rows = stream.readInt();\n      } else if (token === 'Columns') {\n        this.columns = stream.readInt();\n      } else if (token === 'Head') {\n        this.headOrTail = 0;\n      } else if (token === 'Tail') {\n        this.headOrTail = 1;\n      } else if (token === 'Both') {\n        this.headOrTail = 2;\n      } else if (token === 'TailLength') {\n        this.tailLength = stream.readFloat();\n      } else if (token === 'Time') {\n        this.timeMiddle = stream.readFloat();\n      } else if (token === 'SegmentColor') {\n        stream.read(); // {\n\n        for (let i = 0; i < 3; i++) {\n          stream.read(); // Color\n          stream.readColor(this.segmentColors[i]);\n        }\n\n        stream.read(); // }\n      } else if (token === 'Alpha') {\n        stream.readIntArray(this.segmentAlphas);\n      } else if (token === 'ParticleScaling') {\n        stream.readFloatArray(this.segmentScaling);\n      } else if (token === 'LifeSpanUVAnim') {\n        stream.readIntArray(this.headIntervals[0]);\n      } else if (token === 'DecayUVAnim') {\n        stream.readIntArray(this.headIntervals[1]);\n      } else if (token === 'TailUVAnim') {\n        stream.readIntArray(this.tailIntervals[0]);\n      } else if (token === 'TailDecayUVAnim') {\n        stream.readIntArray(this.tailIntervals[1]);\n      } else if (token === 'TextureID') {\n        this.textureId = stream.readInt();\n      } else if (token === 'ReplaceableId') {\n        this.replaceableId = stream.readInt();\n      } else if (token === 'PriorityPlane') {\n        this.priorityPlane = stream.readInt();\n      } else {\n        throw new Error(`Unknown token in ParticleEmitter2: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('ParticleEmitter2', this.name);\n    this.writeGenericHeader(stream);\n\n    if (this.flags & 0x10000) {\n      stream.writeFlag('SortPrimsFarZ');\n    }\n\n    if (this.flags & 0x8000) {\n      stream.writeFlag('Unshaded');\n    }\n\n    if (this.flags & 0x20000) {\n      stream.writeFlag('LineEmitter');\n    }\n\n    if (this.flags & 0x40000) {\n      stream.writeFlag('Unfogged');\n    }\n\n    if (this.flags & 0x80000) {\n      stream.writeFlag('ModelSpace');\n    }\n\n    if (this.flags & 0x100000) {\n      stream.writeFlag('XYQuad');\n    }\n\n    if (!this.writeAnimation(stream, 'KP2S')) {\n      stream.writeFloatAttrib('static Speed', this.speed);\n    }\n\n    if (!this.writeAnimation(stream, 'KP2R')) {\n      stream.writeFloatAttrib('static Variation', this.variation);\n    }\n\n    if (!this.writeAnimation(stream, 'KP2L')) {\n      stream.writeFloatAttrib('static Latitude', this.latitude);\n    }\n\n    if (!this.writeAnimation(stream, 'KP2G')) {\n      stream.writeFloatAttrib('static Gravity', this.gravity);\n    }\n\n    this.writeAnimation(stream, 'KP2V');\n\n    if (this.squirt) {\n      stream.writeFlag('Squirt');\n    }\n\n    stream.writeFloatAttrib('LifeSpan', this.lifeSpan);\n\n    if (!this.writeAnimation(stream, 'KP2E')) {\n      stream.writeFloatAttrib('static EmissionRate', this.emissionRate);\n    }\n\n    if (!this.writeAnimation(stream, 'KP2W')) {\n      stream.writeFloatAttrib('static Width', this.width);\n    }\n\n    if (!this.writeAnimation(stream, 'KP2N')) {\n      stream.writeFloatAttrib('static Length', this.length);\n    }\n\n    if (this.filterMode === 0) {\n      stream.writeFlag('Blend');\n    } else if (this.filterMode === 1) {\n      stream.writeFlag('Additive');\n    } else if (this.filterMode === 2) {\n      stream.writeFlag('Modulate');\n    } else if (this.filterMode === 3) {\n      stream.writeFlag('Modulate2x'); // Does this exist in any model?\n    } else if (this.filterMode === 4) {\n      stream.writeFlag('AlphaKey');\n    }\n\n    stream.writeAttrib('Rows', this.rows);\n    stream.writeAttrib('Columns', this.columns);\n\n    if (this.headOrTail === 0) {\n      stream.writeFlag('Head');\n    } else if (this.headOrTail === 1) {\n      stream.writeFlag('Tail');\n    } else if (this.headOrTail === 2) {\n      stream.writeFlag('Both');\n    }\n\n    stream.writeFloatAttrib('TailLength', this.tailLength);\n    stream.writeFloatAttrib('Time', this.timeMiddle);\n\n    stream.startBlock('SegmentColor');\n    stream.writeColor('Color', this.segmentColors[0]);\n    stream.writeColor('Color', this.segmentColors[1]);\n    stream.writeColor('Color', this.segmentColors[2]);\n    stream.endBlockComma();\n\n    stream.writeArrayAttrib('Alpha', this.segmentAlphas);\n    stream.writeFloatArrayAttrib('ParticleScaling', this.segmentScaling);\n    stream.writeArrayAttrib('LifeSpanUVAnim', this.headIntervals[0]);\n    stream.writeArrayAttrib('DecayUVAnim', this.headIntervals[1]);\n    stream.writeArrayAttrib('TailUVAnim', this.tailIntervals[0]);\n    stream.writeArrayAttrib('TailDecayUVAnim', this.tailIntervals[1]);\n    stream.writeAttrib('TextureID', this.textureId);\n\n    if (this.replaceableId !== 0) {\n      stream.writeAttrib('ReplaceableId', this.replaceableId);\n    }\n\n    if (this.priorityPlane !== 0) {\n      stream.writeAttrib('PriorityPlane', this.priorityPlane);\n    }\n\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 175 + super.getByteLength();\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * A ribbon emitter.\n */\nexport default class RibbonEmitter extends GenericObject {\n  /**\n   *\n   */\n  constructor() {\n    super(0x4000);\n\n    /** @member {number} */\n    this.heightAbove = 0;\n    /** @member {number} */\n    this.heightBelow = 0;\n    /** @member {number} */\n    this.alpha = 0;\n    /** @member {Float32Array} */\n    this.color = new Float32Array(3);\n    /** @member {number} */\n    this.lifeSpan = 0;\n    /** @member {number} */\n    this.textureSlot = 0;\n    /** @member {number} */\n    this.emissionRate = 0;\n    /** @member {number} */\n    this.rows = 0;\n    /** @member {number} */\n    this.columns = 0;\n    /** @member {number} */\n    this.materialId = 0;\n    /** @member {number} */\n    this.gravity = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    super.readMdx(stream);\n\n    this.heightAbove = stream.readFloat32();\n    this.heightBelow = stream.readFloat32();\n    this.alpha = stream.readFloat32();\n    stream.readFloat32Array(this.color);\n    this.lifeSpan = stream.readFloat32();\n    this.textureSlot = stream.readUint32();\n    this.emissionRate = stream.readUint32();\n    this.rows = stream.readUint32();\n    this.columns = stream.readUint32();\n    this.materialId = stream.readInt32();\n    this.gravity = stream.readFloat32();\n\n    this.readAnimations(stream, size - this.getByteLength());\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n\n    super.writeMdx(stream);\n\n    stream.writeFloat32(this.heightAbove);\n    stream.writeFloat32(this.heightBelow);\n    stream.writeFloat32(this.alpha);\n    stream.writeFloat32Array(this.color);\n    stream.writeFloat32(this.lifeSpan);\n    stream.writeUint32(this.textureSlot);\n    stream.writeUint32(this.emissionRate);\n    stream.writeUint32(this.rows);\n    stream.writeUint32(this.columns);\n    stream.writeInt32(this.materialId);\n    stream.writeFloat32(this.gravity);\n\n    this.writeNonGenericAnimationChunks(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of super.readMdl(stream)) {\n      if (token === 'static HeightAbove') {\n        this.heightAbove = stream.readFloat();\n      } else if (token === 'HeightAbove') {\n        this.readAnimation(stream, 'KRHA');\n      } else if (token === 'static HeightBelow') {\n        this.heightBelow = stream.readFloat();\n      } else if (token === 'HeightBelow') {\n        this.readAnimation(stream, 'KRHB');\n      } else if (token === 'static Alpha') {\n        this.alpha = stream.readFloat();\n      } else if (token === 'Alpha') {\n        this.readAnimation(stream, 'KRAL');\n      } else if (token === 'static Color') {\n        stream.readColor(this.color);\n      } else if (token === 'Color') {\n        this.readAnimation(stream, 'KRCO');\n      } else if (token === 'static TextureSlot') {\n        this.textureSlot = stream.readInt();\n      } else if (token === 'TextureSlot') {\n        this.readAnimation(stream, 'KRTX');\n      } else if (token === 'Visibility') {\n        this.readAnimation(stream, 'KRVS');\n      } else if (token === 'EmissionRate') {\n        this.emissionRate = stream.readInt();\n      } else if (token === 'LifeSpan') {\n        this.lifeSpan = stream.readFloat();\n      } else if (token === 'Gravity') {\n        this.gravity = stream.readFloat();\n      } else if (token === 'Rows') {\n        this.rows = stream.readInt();\n      } else if (token === 'Columns') {\n        this.columns = stream.readInt();\n      } else if (token === 'MaterialID') {\n        this.materialId = stream.readInt();\n      } else {\n        throw new Error(`Unknown token in RibbonEmitter: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('RibbonEmitter', this.name);\n    this.writeGenericHeader(stream);\n\n    if (!this.writeAnimation(stream, 'KRHA')) {\n      stream.writeFloatAttrib('static HeightAbove', this.heightAbove);\n    }\n\n    if (!this.writeAnimation(stream, 'KRHB')) {\n      stream.writeFloatAttrib('static HeightBelow', this.heightBelow);\n    }\n\n    if (!this.writeAnimation(stream, 'KRAL')) {\n      stream.writeFloatAttrib('static Alpha', this.alpha);\n    }\n\n    if (!this.writeAnimation(stream, 'KRCO')) {\n      stream.writeColor('static Color', this.color);\n    }\n\n    if (!this.writeAnimation(stream, 'KRTX')) {\n      stream.writeAttrib('static TextureSlot', this.textureSlot);\n    }\n\n    this.writeAnimation(stream, 'KPEV');\n\n    stream.writeAttrib('EmissionRate', this.emissionRate);\n    stream.writeFloatAttrib('LifeSpan', this.lifeSpan);\n\n    if (this.gravity !== 0) {\n      stream.writeFloatAttrib('Gravity', this.gravity);\n    }\n\n    stream.writeAttrib('Rows', this.rows);\n    stream.writeAttrib('Columns', this.columns);\n    stream.writeAttrib('MaterialID', this.materialId);\n\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 56 + super.getByteLength();\n  }\n}\n","import AnimatedObject from './animatedobject';\n\n/**\n * A camera.\n */\nexport default class Camera extends AnimatedObject {\n  /**\n   *\n   */\n  constructor() {\n    super();\n\n    /** @member {string} */\n    this.name = '';\n    /** @member {Float32Array} */\n    this.position = new Float32Array(3);\n    /** @member {number} */\n    this.fieldOfView = 0;\n    /** @member {number} */\n    this.farClippingPlane = 0;\n    /** @member {number} */\n    this.nearClippingPlane = 0;\n    /** @member {Float32Array} */\n    this.targetPosition = new Float32Array(3);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    let size = stream.readUint32();\n\n    this.name = stream.read(80);\n    stream.readFloat32Array(this.position);\n    this.fieldOfView = stream.readFloat32();\n    this.farClippingPlane = stream.readFloat32();\n    this.nearClippingPlane = stream.readFloat32();\n    stream.readFloat32Array(this.targetPosition);\n\n    this.readAnimations(stream, size - 120);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    stream.writeUint32(this.getByteLength());\n    stream.write(this.name);\n    stream.skip(80 - this.name.length);\n    stream.writeFloat32Array(this.position);\n    stream.writeFloat32(this.fieldOfView);\n    stream.writeFloat32(this.farClippingPlane);\n    stream.writeFloat32(this.nearClippingPlane);\n    stream.writeFloat32Array(this.targetPosition);\n\n    this.writeAnimations(stream);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    this.name = stream.read();\n\n    for (let token of stream.readBlock()) {\n      if (token === 'Position') {\n        stream.readFloatArray(this.position);\n      } else if (token === 'Translation') {\n        this.readAnimation(stream, 'KCTR');\n      } else if (token === 'Rotation') {\n        this.readAnimation(stream, 'KCRL');\n      } else if (token === 'FieldOfView') {\n        this.fieldOfView = stream.readFloat();\n      } else if (token === 'FarClip') {\n        this.farClippingPlane = stream.readFloat();\n      } else if (token === 'NearClip') {\n        this.nearClippingPlane = stream.readFloat();\n      } else if (token === 'Target') {\n        for (token of stream.readBlock()) {\n          if (token === 'Position') {\n            stream.readFloatArray(this.targetPosition);\n          } else if (token === 'Translation') {\n            this.readAnimation(stream, 'KTTR');\n          } else {\n            throw new Error(`Unknown token in Camera ${this.name}'s Target: \"${token}\"`);\n          }\n        }\n      } else {\n        throw new Error(`Unknown token in Camera ${this.name}: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('Camera', this.name);\n\n    stream.writeFloatArrayAttrib('Position', this.position);\n    this.writeAnimation(stream, 'KCTR');\n    this.writeAnimation(stream, 'KCRL');\n    stream.writeFloatAttrib('FieldOfView', this.fieldOfView);\n    stream.writeFloatAttrib('FarClip', this.farClippingPlane);\n    stream.writeFloatAttrib('NearClip', this.nearClippingPlane);\n\n    stream.startBlock('Target');\n    stream.writeFloatArrayAttrib('Position', this.targetPosition);\n    this.writeAnimation(stream, 'KTTR');\n    stream.endBlock();\n\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 120 + super.getByteLength();\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * An event object.\n */\nexport default class EventObject extends GenericObject {\n  /**\n   *\n   */\n  constructor() {\n    super(0x400);\n\n    /** @member {number} */\n    this.globalSequenceId = -1;\n    /** @member {Uint32Array} */\n    this.tracks = new Uint32Array(1);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    super.readMdx(stream);\n\n    stream.skip(4); // KEVT\n\n    let count = stream.readUint32();\n\n    this.globalSequenceId = stream.readInt32();\n    this.tracks = stream.readUint32Array(count);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    super.writeMdx(stream);\n    stream.write('KEVT');\n    stream.writeUint32(this.tracks.length);\n    stream.writeInt32(this.globalSequenceId);\n    stream.writeUint32Array(this.tracks);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of super.readMdl(stream)) {\n      if (token === 'EventTrack') {\n        this.tracks = stream.readIntArray(new Uint32Array(stream.readInt()));\n      } else {\n        throw new Error(`Unknown token in EventObject: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('EventObject', this.name);\n    this.writeGenericHeader(stream);\n\n    stream.startBlock('EventTrack', this.tracks.length);\n\n    for (let track of this.tracks) {\n      stream.writeFlag(track);\n    }\n\n    stream.endBlock();\n\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return 12 + this.tracks.byteLength + super.getByteLength();\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * A collision shape.\n */\nexport default class CollisionShape extends GenericObject {\n  /**\n   *\n   */\n  constructor() {\n    super(0x2000);\n\n    /** @member {number} */\n    this.type = -1;\n    /** @member {Array<Float32Array>} */\n    this.vertices = [new Float32Array(3), new Float32Array(3)];\n    /** @member {number} */\n    this.boundsRadius = 0;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  readMdx(stream) {\n    super.readMdx(stream);\n\n    this.type = stream.readUint32();\n\n    stream.readFloat32Array(this.vertices[0]);\n\n    if (this.type !== 2) {\n      stream.readFloat32Array(this.vertices[1]);\n    }\n\n    if (this.type === 2 || this.type === 3) {\n      this.boundsRadius = stream.readFloat32();\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  writeMdx(stream) {\n    super.writeMdx(stream);\n\n    stream.writeUint32(this.type);\n    stream.writeFloat32Array(this.vertices[0]);\n\n    if (this.type !== 2) {\n      stream.writeFloat32Array(this.vertices[1]);\n    }\n\n    if (this.type === 2 || this.type === 3) {\n      stream.writeFloat32(this.boundsRadius);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  readMdl(stream) {\n    for (let token of super.readMdl(stream)) {\n      if (token === 'Plane') {\n        this.type = 0;\n      } else if (token === 'Box') {\n        this.type = 1;\n      } else if (token === 'Sphere') {\n        this.type = 2;\n      } else if (token === 'Cylinder') {\n        this.type = 3;\n      } else if (token === 'Vertices') {\n        let count = stream.readInt();\n\n        stream.read(); // {\n\n        stream.readFloatArray(this.vertices[0]);\n\n        if (count === 2) {\n          stream.readFloatArray(this.vertices[1]);\n        }\n\n        stream.read(); // }\n      } else if (token === 'BoundsRadius') {\n        this.boundsRadius = stream.readFloat();\n      } else {\n        throw new Error(`Unknown token in CollisionShape: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  writeMdl(stream) {\n    stream.startObjectBlock('CollisionShape', this.name);\n    this.writeGenericHeader(stream);\n\n    let type;\n    let vertices = 2;\n    let boundsRadius = false;\n\n    if (this.type === 0) {\n      type = 'Plane';\n    } else if (this.type === 1) {\n      type = 'Box';\n    } else if (this.type === 2) {\n      type = 'Sphere';\n      vertices = 1;\n      boundsRadius = true;\n    } else if (this.type === 3) {\n      type = 'Cylinder';\n      boundsRadius = true;\n    }\n\n    stream.writeFlag(type);\n    stream.startBlock('Vertices', vertices);\n    stream.writeFloatArray(this.vertices[0]);\n\n    if (vertices === 2) {\n      stream.writeFloatArray(this.vertices[1]);\n    }\n\n    stream.endBlock();\n\n    if (boundsRadius) {\n      stream.writeFloatAttrib('BoundsRadius', this.boundsRadius);\n    }\n\n    this.writeGenericAnimations(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 16 + super.getByteLength();\n\n    if (this.type !== 2) {\n      size += 12;\n    }\n\n    if (this.type === 2 || this.type === 3) {\n      size += 4;\n    }\n\n    return size;\n  }\n}\n","/**\n * An unknown chunk.\n */\nexport default class UnknownChunk {\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} size\n   * @param {string} tag\n   */\n  constructor(stream, size, tag) {\n    /** @member {Uint8Array} */\n    this.chunk = stream.readUint8Array(new Uint8Array(size));\n    /** @member {string} */\n    this.tag = tag;\n  }\n\n  /**\n   * @return {number}\n   */\n  getByteLength() {\n    return this.chunk.byteLength;\n  }\n}\n","import BinaryStream from '../../common/binarystream';\nimport TokenStream from '../../common/tokenstream';\nimport Extent from './extent';\nimport Sequence from './sequence';\nimport Material from './material';\nimport Texture from './texture';\nimport TextureAnimation from './textureanimation';\nimport Geoset from './geoset';\nimport GeosetAnimation from './geosetanimation';\nimport Bone from './bone';\nimport Light from './light';\nimport Helper from './helper';\nimport Attachment from './attachment';\nimport ParticleEmitter from './particleemitter';\nimport ParticleEmitter2 from './particleemitter2';\nimport RibbonEmitter from './ribbonemitter';\nimport Camera from './camera';\nimport EventObject from './eventobject';\nimport CollisionShape from './collisionshape';\nimport UnknownChunk from './unknownchunk';\n\n/**\n * A Warcraft 3 model.\n * Supports loading from and saving to both the binary MDX and text MDL file formats.\n */\nexport default class Model {\n  /**\n   * @param {?ArrayBuffer|string} buffer\n   */\n  constructor(buffer) {\n    /**\n     * Always 800 since Warcraft 3 released.\n     *\n     * @member {number}\n     */\n    this.version = 800;\n    /** @member {string} */\n    this.name = '';\n    /**\n     * To the best of my knowledge, this should always be left empty.\n     * This is probably a leftover from the Warcraft 3 beta.\n     *\n     * @member {string}\n     */\n    this.animationFile = '';\n    /** @member {Extent} */\n    this.extent = new Extent();\n    /** @member {number} */\n    this.blendTime = 0;\n    /** @member {Array<Sequence>} */\n    this.sequences = [];\n    /** @member {Array<number>} */\n    this.globalSequences = [];\n    /** @member {Array<Material>} */\n    this.materials = [];\n    /** @member {Array<Texture>} */\n    this.textures = [];\n    /** @member {Array<TextureAnimation>} */\n    this.textureAnimations = [];\n    /** @member {Array<Geoset>} */\n    this.geosets = [];\n    /** @member {Array<GeosetAnimation>} */\n    this.geosetAnimations = [];\n    /** @member {Array<Bone>} */\n    this.bones = [];\n    /** @member {Array<Light>} */\n    this.lights = [];\n    /** @member {Array<Helper>} */\n    this.helpers = [];\n    /** @member {Array<Attachment>} */\n    this.attachments = [];\n    /** @member {Array<Float32Array>} */\n    this.pivotPoints = [];\n    /** @member {Array<ParticleEmitter>} */\n    this.particleEmitters = [];\n    /** @member {Array<ParticleEmitter2>} */\n    this.particleEmitters2 = [];\n    /** @member {Array<RibbonEmitter>} */\n    this.ribbonEmitters = [];\n    /** @member {Array<Camera>} */\n    this.cameras = [];\n    /** @member {Array<EventObject>} */\n    this.eventObjects = [];\n    /** @member {Array<CollisionShape>} */\n    this.collisionShapes = [];\n    /**\n     * The MDX format is chunk based, and Warcraft 3 does not mind there being unknown chunks in there.\n     * Some 3rd party tools use this to attach metadata to models.\n     * When an unknown chunk is encountered, it will be added here.\n     * These chunks will be saved when saving as MDX.\n     *\n     * @member {Array<UnknownChunk}\n     */\n    this.unknownChunks = [];\n\n    if (buffer) {\n      this.load(buffer);\n    }\n  }\n\n  /**\n   * Load the model from MDX or MDL.\n   * The format is detected by the buffer type: ArrayBuffer for MDX, and string for MDL.\n   *\n   * @param {ArrayBuffer|string} buffer\n   */\n  load(buffer) {\n    if (buffer instanceof ArrayBuffer) {\n      this.loadMdx(buffer);\n    } else {\n      this.loadMdl(buffer);\n    }\n  }\n\n  /**\n   * Load the model from MDX.\n   *\n   * @param {ArrayBuffer} buffer\n   */\n  loadMdx(buffer) {\n    let stream = new BinaryStream(buffer);\n\n    if (stream.read(4) !== 'MDLX') {\n      throw new Error('WrongMagicNumber');\n    }\n\n    while (stream.remaining() > 0) {\n      let tag = stream.read(4);\n      let size = stream.readUint32();\n\n      if (tag === 'VERS') {\n        this.loadVersionChunk(stream);\n      } else if (tag === 'MODL') {\n        this.loadModelChunk(stream);\n      } else if (tag === 'SEQS') {\n        this.loadStaticObjects(this.sequences, Sequence, stream, size / 132);\n      } else if (tag === 'GLBS') {\n        this.loadGlobalSequenceChunk(stream, size);\n      } else if (tag === 'MTLS') {\n        this.loadDynamicObjects(this.materials, Material, stream, size);\n      } else if (tag === 'TEXS') {\n        this.loadStaticObjects(this.textures, Texture, stream, size / 268);\n      } else if (tag === 'TXAN') {\n        this.loadDynamicObjects(this.textureAnimations, TextureAnimation, stream, size);\n      } else if (tag === 'GEOS') {\n        this.loadDynamicObjects(this.geosets, Geoset, stream, size);\n      } else if (tag === 'GEOA') {\n        this.loadDynamicObjects(this.geosetAnimations, GeosetAnimation, stream, size);\n      } else if (tag === 'BONE') {\n        this.loadDynamicObjects(this.bones, Bone, stream, size);\n      } else if (tag === 'LITE') {\n        this.loadDynamicObjects(this.lights, Light, stream, size);\n      } else if (tag === 'HELP') {\n        this.loadDynamicObjects(this.helpers, Helper, stream, size);\n      } else if (tag === 'ATCH') {\n        this.loadDynamicObjects(this.attachments, Attachment, stream, size);\n      } else if (tag === 'PIVT') {\n        this.loadPivotPointChunk(stream, size);\n      } else if (tag === 'PREM') {\n        this.loadDynamicObjects(this.particleEmitters, ParticleEmitter, stream, size);\n      } else if (tag === 'PRE2') {\n        this.loadDynamicObjects(this.particleEmitters2, ParticleEmitter2, stream, size);\n      } else if (tag === 'RIBB') {\n        this.loadDynamicObjects(this.ribbonEmitters, RibbonEmitter, stream, size);\n      } else if (tag === 'CAMS') {\n        this.loadDynamicObjects(this.cameras, Camera, stream, size);\n      } else if (tag === 'EVTS') {\n        this.loadDynamicObjects(this.eventObjects, EventObject, stream, size);\n      } else if (tag === 'CLID') {\n        this.loadDynamicObjects(this.collisionShapes, CollisionShape, stream, size);\n      } else {\n        this.unknownChunks.push(new UnknownChunk(stream, size, tag));\n      }\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  loadVersionChunk(stream) {\n    this.version = stream.readUint32();\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  loadModelChunk(stream) {\n    this.name = stream.read(80);\n    this.animationFile = stream.read(260);\n    this.extent.readMdx(stream);\n    this.blendTime = stream.readUint32();\n  }\n\n  /**\n   * @param {Array<Sequence|Texture>} out\n   * @param {constructor} constructor\n   * @param {BinaryStream} stream\n   * @param {number} count\n   */\n  loadStaticObjects(out, constructor, stream, count) {\n    for (let i = 0; i < count; i++) {\n      let object = new constructor();\n\n      object.readMdx(stream);\n\n      out.push(object);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} size\n   */\n  loadGlobalSequenceChunk(stream, size) {\n    for (let i = 0, l = size / 4; i < l; i++) {\n      this.globalSequences.push(stream.readUint32());\n    }\n  }\n\n  /**\n   * @param {Array<Material|TextureAnimation|Geoset|GeosetAnimation|GenericObject|Camera>} out\n   * @param {constructor} constructor\n   * @param {BinaryStream} stream\n   * @param {number} size\n   */\n  loadDynamicObjects(out, constructor, stream, size) {\n    let totalSize = 0;\n\n    while (totalSize < size) {\n      let object = new constructor();\n\n      object.readMdx(stream);\n\n      totalSize += object.getByteLength();\n\n      out.push(object);\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {number} size\n   */\n  loadPivotPointChunk(stream, size) {\n    for (let i = 0, l = size / 12; i < l; i++) {\n      this.pivotPoints.push(stream.readFloat32Array(new Float32Array(3)));\n    }\n  }\n\n  /**\n   * Save the model as MDX.\n   *\n   * @return {ArrayBuffer}\n   */\n  saveMdx() {\n    let buffer = new ArrayBuffer(this.getByteLength());\n    let stream = new BinaryStream(buffer);\n\n    stream.write('MDLX');\n    this.saveVersionChunk(stream);\n    this.saveModelChunk(stream);\n    this.saveStaticObjectChunk(stream, 'SEQS', this.sequences, 132);\n    this.saveGlobalSequenceChunk(stream);\n    this.saveDynamicObjectChunk(stream, 'MTLS', this.materials);\n    this.saveStaticObjectChunk(stream, 'TEXS', this.textures, 268);\n    this.saveDynamicObjectChunk(stream, 'TXAN', this.textureAnimations);\n    this.saveDynamicObjectChunk(stream, 'GEOS', this.geosets);\n    this.saveDynamicObjectChunk(stream, 'GEOA', this.geosetAnimations);\n    this.saveDynamicObjectChunk(stream, 'BONE', this.bones);\n    this.saveDynamicObjectChunk(stream, 'LITE', this.lights);\n    this.saveDynamicObjectChunk(stream, 'HELP', this.helpers);\n    this.saveDynamicObjectChunk(stream, 'ATCH', this.attachments);\n    this.savePivotPointChunk(stream);\n    this.saveDynamicObjectChunk(stream, 'PREM', this.particleEmitters);\n    this.saveDynamicObjectChunk(stream, 'PRE2', this.particleEmitters2);\n    this.saveDynamicObjectChunk(stream, 'RIBB', this.ribbonEmitters);\n    this.saveDynamicObjectChunk(stream, 'CAMS', this.cameras);\n    this.saveDynamicObjectChunk(stream, 'EVTS', this.eventObjects);\n    this.saveDynamicObjectChunk(stream, 'CLID', this.collisionShapes);\n\n    return buffer;\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  saveVersionChunk(stream) {\n    stream.write('VERS');\n    stream.writeUint32(4);\n    stream.writeUint32(this.version);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  saveModelChunk(stream) {\n    stream.write('MODL');\n    stream.writeUint32(372);\n    stream.write(this.name);\n    stream.skip(80 - this.name.length);\n    stream.write(this.animationFile);\n    stream.skip(260 - this.animationFile.length);\n    this.extent.writeMdx(stream);\n    stream.writeUint32(this.blendTime);\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {string} name\n   * @param {Array<Sequence|Texture>} objects\n   * @param {number} size\n   */\n  saveStaticObjectChunk(stream, name, objects, size) {\n    if (objects.length) {\n      stream.write(name);\n      stream.writeUint32(objects.length * size);\n\n      for (let object of objects) {\n        object.writeMdx(stream);\n      }\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  saveGlobalSequenceChunk(stream) {\n    if (this.globalSequences.length) {\n      stream.write('GLBS');\n      stream.writeUint32(this.globalSequences.length * 4);\n\n      for (let globalSequence of this.globalSequences) {\n        stream.writeUint32(globalSequence);\n      }\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   * @param {string} name\n   * @param {Array<Material|TextureAnimation|Geoset|GeosetAnimation|GenericObject|Camera>} objects\n   */\n  saveDynamicObjectChunk(stream, name, objects) {\n    if (objects.length) {\n      stream.write(name);\n      stream.writeUint32(this.getObjectsByteLength(objects));\n\n      for (let object of objects) {\n        object.writeMdx(stream);\n      }\n    }\n  }\n\n  /**\n   * @param {BinaryStream} stream\n   */\n  savePivotPointChunk(stream) {\n    if (this.pivotPoints.length) {\n      stream.write('PIVT');\n      stream.writeUint32(this.pivotPoints.length * 12);\n\n      for (let pivotPoint of this.pivotPoints) {\n        stream.writeFloat32Array(pivotPoint);\n      }\n    }\n  }\n\n  /**\n   * Load the model from MDL.\n   *\n   * @param {string} buffer\n   */\n  loadMdl(buffer) {\n    let token;\n    let stream = new TokenStream(buffer);\n\n    while (token = stream.read()) {\n      if (token === 'Version') {\n        this.loadVersionBlock(stream);\n      } else if (token === 'Model') {\n        this.loadModelBlock(stream);\n      } else if (token === 'Sequences') {\n        this.loadNumberedObjectBlock(this.sequences, Sequence, 'Anim', stream);\n      } else if (token === 'GlobalSequences') {\n        this.loadGlobalSequenceBlock(stream);\n      } else if (token === 'Textures') {\n        this.loadNumberedObjectBlock(this.textures, Texture, 'Bitmap', stream);\n      } else if (token === 'Materials') {\n        this.loadNumberedObjectBlock(this.materials, Material, 'Material', stream);\n      } else if (token === 'TextureAnims') {\n        this.loadNumberedObjectBlock(this.textureAnimations, TextureAnimation, 'TVertexAnim', stream);\n      } else if (token === 'Geoset') {\n        this.loadObject(this.geosets, Geoset, stream);\n      } else if (token === 'GeosetAnim') {\n        this.loadObject(this.geosetAnimations, GeosetAnimation, stream);\n      } else if (token === 'Bone') {\n        this.loadObject(this.bones, Bone, stream);\n      } else if (token === 'Light') {\n        this.loadObject(this.lights, Light, stream);\n      } else if (token === 'Helper') {\n        this.loadObject(this.helpers, Helper, stream);\n      } else if (token === 'Attachment') {\n        this.loadObject(this.attachments, Attachment, stream);\n      } else if (token === 'PivotPoints') {\n        this.loadPivotPointBlock(stream);\n      } else if (token === 'ParticleEmitter') {\n        this.loadObject(this.particleEmitters, ParticleEmitter, stream);\n      } else if (token === 'ParticleEmitter2') {\n        this.loadObject(this.particleEmitters2, ParticleEmitter2, stream);\n      } else if (token === 'RibbonEmitter') {\n        this.loadObject(this.ribbonEmitters, RibbonEmitter, stream);\n      } else if (token === 'Camera') {\n        this.loadObject(this.cameras, Camera, stream);\n      } else if (token === 'EventObject') {\n        this.loadObject(this.eventObjects, EventObject, stream);\n      } else if (token === 'CollisionShape') {\n        this.loadObject(this.collisionShapes, CollisionShape, stream);\n      } else {\n        throw new Error(`Unsupported block: ${token}`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  loadVersionBlock(stream) {\n    for (let token of stream.readBlock()) {\n      if (token === 'FormatVersion') {\n        this.version = stream.readInt();\n      } else {\n        throw new Error(`Unknown token in Version: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  loadModelBlock(stream) {\n    this.name = stream.read();\n\n    for (let token of stream.readBlock()) {\n      if (token.startsWith('Num')) {\n        // Don't care about the number of things, the arrays will grow as they wish.\n        // This includes:\n        //      NumGeosets\n        //      NumGeosetAnims\n        //      NumHelpers\n        //      NumLights\n        //      NumBones\n        //      NumAttachments\n        //      NumParticleEmitters\n        //      NumParticleEmitters2\n        //      NumRibbonEmitters\n        //      NumEvents\n        stream.read();\n      } else if (token === 'BlendTime') {\n        this.blendTime = stream.readInt();\n      } else if (token === 'MinimumExtent') {\n        stream.readFloatArray(this.extent.min);\n      } else if (token === 'MaximumExtent') {\n        stream.readFloatArray(this.extent.max);\n      } else if (token === 'BoundsRadius') {\n        this.extent.boundsRadius = stream.readFloat();\n      } else {\n        throw new Error(`Unknown token in Model: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Sequence|Texture|Material|TextureAnimation>} out\n   * @param {constructor} constructor\n   * @param {string} name\n   * @param {TokenStream} stream\n   */\n  loadNumberedObjectBlock(out, constructor, name, stream) {\n    stream.read(); // Don't care about the number, the array will grow.\n\n    for (let token of stream.readBlock()) {\n      if (token === name) {\n        let object = new constructor();\n\n        object.readMdl(stream);\n\n        out.push(object);\n      } else {\n        throw new Error(`Unknown token in ${name}: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  loadGlobalSequenceBlock(stream) {\n    stream.read(); // Don't care about the number, the array will grow.\n\n    for (let token of stream.readBlock()) {\n      if (token === 'Duration') {\n        this.globalSequences.push(stream.readInt());\n      } else {\n        throw new Error(`Unknown token in GlobalSequences: \"${token}\"`);\n      }\n    }\n  }\n\n  /**\n   * @param {Array<Geoset|GeosetAnimation|GenericObject|Camera>} out\n   * @param {constructor} constructor\n   * @param {TokenStream} stream\n   */\n  loadObject(out, constructor, stream) {\n    let object = new constructor();\n\n    object.readMdl(stream);\n\n    out.push(object);\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  loadPivotPointBlock(stream) {\n    let count = stream.readInt();\n\n    stream.read(); // {\n\n    for (let i = 0; i < count; i++) {\n      this.pivotPoints.push(stream.readFloatArray(new Float32Array(3)));\n    }\n\n    stream.read(); // }\n  }\n\n  /**\n   * Save the model as MDL.\n   *\n   * @return {string}\n   */\n  saveMdl() {\n    let stream = new TokenStream();\n\n    this.saveVersionBlock(stream);\n    this.saveModelBlock(stream);\n    this.saveStaticObjectsBlock(stream, 'Sequences', this.sequences);\n    this.saveGlobalSequenceBlock(stream);\n    this.saveStaticObjectsBlock(stream, 'Textures', this.textures);\n    this.saveStaticObjectsBlock(stream, 'Materials', this.materials);\n    this.saveStaticObjectsBlock(stream, 'TextureAnims', this.textureAnimations);\n    this.saveObjects(stream, this.geosets);\n    this.saveObjects(stream, this.geosetAnimations);\n    this.saveObjects(stream, this.bones);\n    this.saveObjects(stream, this.lights);\n    this.saveObjects(stream, this.helpers);\n    this.saveObjects(stream, this.attachments);\n    this.savePivotPointBlock(stream);\n    this.saveObjects(stream, this.particleEmitters);\n    this.saveObjects(stream, this.particleEmitters2);\n    this.saveObjects(stream, this.ribbonEmitters);\n    this.saveObjects(stream, this.cameras);\n    this.saveObjects(stream, this.eventObjects);\n    this.saveObjects(stream, this.collisionShapes);\n\n    return stream.buffer;\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  saveVersionBlock(stream) {\n    stream.startBlock('Version');\n    stream.writeAttrib('FormatVersion', this.version);\n    stream.endBlock();\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  saveModelBlock(stream) {\n    stream.startObjectBlock('Model', this.name);\n    stream.writeAttrib('BlendTime', this.blendTime);\n    this.extent.writeMdl(stream);\n    stream.endBlock();\n  }\n\n  /**\n   * @param {TokenStream} stream\n   * @param {string} name\n   * @param {Array<Sequence|Texture|Material|TextureAnimation>} objects\n   */\n  saveStaticObjectsBlock(stream, name, objects) {\n    if (objects.length) {\n      stream.startBlock(name, objects.length);\n\n      for (let object of objects) {\n        object.writeMdl(stream);\n      }\n\n      stream.endBlock();\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  saveGlobalSequenceBlock(stream) {\n    if (this.globalSequences.length) {\n      stream.startBlock('GlobalSequences', this.globalSequences.length);\n\n      for (let globalSequence of this.globalSequences) {\n        stream.writeAttrib('Duration', globalSequence);\n      }\n\n      stream.endBlock();\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   * @param {Array<Geoset|GeosetAnimation|GenericObject|Camera>} objects\n   */\n  saveObjects(stream, objects) {\n    for (let object of objects) {\n      object.writeMdl(stream);\n    }\n  }\n\n  /**\n   * @param {TokenStream} stream\n   */\n  savePivotPointBlock(stream) {\n    if (this.pivotPoints.length) {\n      stream.startBlock('PivotPoints', this.pivotPoints.length);\n\n      for (let pivotPoint of this.pivotPoints) {\n        stream.writeFloatArray(pivotPoint);\n      }\n\n      stream.endBlock();\n    }\n  }\n\n  /**\n   * Calculate the size of the model as MDX.\n   *\n   * @return {number}\n   */\n  getByteLength() {\n    let size = 396;\n\n    size += this.getStaticObjectsChunkByteLength(this.sequences, 132);\n    size += this.getStaticObjectsChunkByteLength(this.globalSequences, 4);\n    size += this.getDynamicObjectsChunkByteLength(this.materials);\n    size += this.getStaticObjectsChunkByteLength(this.textures, 268);\n    size += this.getDynamicObjectsChunkByteLength(this.textureAnimations);\n    size += this.getDynamicObjectsChunkByteLength(this.geosets);\n    size += this.getDynamicObjectsChunkByteLength(this.geosetAnimations);\n    size += this.getDynamicObjectsChunkByteLength(this.bones);\n    size += this.getDynamicObjectsChunkByteLength(this.lights);\n    size += this.getDynamicObjectsChunkByteLength(this.helpers);\n    size += this.getDynamicObjectsChunkByteLength(this.attachments);\n    size += this.getStaticObjectsChunkByteLength(this.pivotPoints, 12);\n    size += this.getDynamicObjectsChunkByteLength(this.particleEmitters);\n    size += this.getDynamicObjectsChunkByteLength(this.particleEmitters2);\n    size += this.getDynamicObjectsChunkByteLength(this.ribbonEmitters);\n    size += this.getDynamicObjectsChunkByteLength(this.cameras);\n    size += this.getDynamicObjectsChunkByteLength(this.eventObjects);\n    size += this.getDynamicObjectsChunkByteLength(this.collisionShapes);\n    size += 8 * this.unknownChunks.length + this.getDynamicObjectsChunkByteLength(this.unknownChunks);\n\n    return size;\n  }\n\n  /**\n   * @param {Array<Material|TextureAnimation|Geoset|GeosetAnimation|GenericObject|Camera|UnknownChunk>} objects\n   * @return {number}\n   */\n  getObjectsByteLength(objects) {\n    let size = 0;\n\n    for (let object of objects) {\n      size += object.getByteLength();\n    }\n\n    return size;\n  }\n\n  /**\n   * @param {Array<Material|TextureAnimation|Geoset|GeosetAnimation|GenericObject|Camera|UnknownChunk>} objects\n   * @return {number}\n   */\n  getDynamicObjectsChunkByteLength(objects) {\n    if (objects.length) {\n      return 8 + this.getObjectsByteLength(objects);\n    }\n\n    return 0;\n  }\n\n  /**\n   * @param {Array<Sequence|number|Texture|Float32Array>} objects\n   * @param {number} size\n   * @return {number}\n   */\n  getStaticObjectsChunkByteLength(objects, size) {\n    if (objects.length) {\n      return 8 + objects.length * size;\n    }\n\n    return 0;\n  }\n}\n","import Model from './model';\n\nexport default {\n  Model,\n};\n","import ini from './ini';\nimport slk from './slk';\nimport w3x from './w3x';\nimport mdlx from './mdlx';\n\nexport default {\n  mdlx,\n  slk,\n  w3x,\n  ini,\n};\n","/**\n * Convert from degrees to radians.\n *\n * @param {number} degrees\n * @return {number} Radians.\n */\nexport function degToRad(degrees) {\n  return degrees * (Math.PI / 180);\n}\n\n/**\n * Convert from radians to degrees.\n *\n * @param {number} radians\n * @return {number} Degrees.\n */\nexport function radToDeg(radians) {\n  return radians * (180 / Math.PI);\n}\n\n/**\n * Gets a random number in the given range.\n *\n * @param {number} a\n * @param {number} b\n * @return {number} A random number in [a, b].\n */\nexport function randomInRange(a, b) {\n  return a + Math.random() * (b - a);\n}\n\n/**\n * Clamp a number in a range.\n *\n * @param {number} x\n * @param {number} minVal\n * @param {number} maxVal\n * @return {number} Clamped number.\n */\nexport function clamp(x, minVal, maxVal) {\n  return Math.min(Math.max(x, minVal), maxVal);\n}\n\n/**\n * Linear interpolation between to numbers.\n *\n * @param {number} a First number.\n * @param {number} b Second number.\n * @param {number} t Factor.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, t) {\n  return a + t * (b - a);\n}\n\n/**\n * Hermite interpolation between to numbers.\n *\n * @param {number} a First number.\n * @param {number} b First control point.\n * @param {number} c Second control point.\n * @param {number} d Second number.\n * @param {number} t Factor.\n * @return {number} Interpolated value.\n */\nexport function hermite(a, b, c, d, t) {\n  let factorTimes2 = t * t;\n  let factor1 = factorTimes2 * (2 * t - 3) + 1;\n  let factor2 = factorTimes2 * (t - 2) + t;\n  let factor3 = factorTimes2 * (t - 1);\n  let factor4 = factorTimes2 * (3 - 2 * t);\n\n  return (a * factor1) + (b * factor2) + (c * factor3) + (d * factor4);\n}\n\n/**\n * Bezier interpolation between to numbers.\n *\n * @param {number} a First number.\n * @param {number} b First control point.\n * @param {number} c Second control point.\n * @param {number} d Second number.\n * @param {number} t Factor.\n * @return {number} Interpolated value.\n */\nexport function bezier(a, b, c, d, t) {\n  let invt = 1 - t;\n  let factorTimes2 = t * t;\n  let inverseFactorTimesTwo = invt * invt;\n  let factor1 = inverseFactorTimesTwo * invt;\n  let factor2 = 3 * t * inverseFactorTimesTwo;\n  let factor3 = 3 * factorTimes2 * invt;\n  let factor4 = factorTimes2 * t;\n\n  return (a * factor1) + (b * factor2) + (c * factor3) + (d * factor4);\n}\n\n/**\n * Copies the sign of one number onto another.\n *\n * @param {number} x Destination.\n * @param {number} y Source.\n * @return {number} Returns the destination with the source's sign.\n */\nexport function copysign(x, y) {\n  let signy = Math.sign(y);\n\n  if (signy === 0) {\n    return 0;\n  }\n\n  let signx = Math.sign(x);\n\n  if (signx !== signy) {\n    return -x;\n  }\n\n  return x;\n}\n\n/**\n * Gets the closest power of two bigger or equal to the given number.\n *\n * @param {number} x\n * @return {number} A power of two number.\n */\nexport function powerOfTwo(x) {\n  x--;\n  x |= x >> 1;\n  x |= x >> 2;\n  x |= x >> 4;\n  x |= x >> 8;\n  x |= x >> 16;\n  x++;\n\n  return x;\n}\n\n/**\n * Is this number a power of two?\n *\n * @param {number} x\n * @return {boolean}\n */\nexport function isPowerOfTwo(x) {\n  if (x === 0) {\n    return false;\n  }\n\n  return ((x & (x - 1)) === 0);\n}\n","import {powerOfTwo} from './math';\n\nlet canvas = document.createElement('canvas');\nlet ctx = canvas.getContext('2d');\n\nlet canvas2 = document.createElement('canvas');\nlet ctx2 = canvas2.getContext('2d');\n\n/**\n * @param {Blob} blob\n * @return {Promise<Image>}\n */\nexport function blobToImage(blob) {\n  return new Promise((resolve, reject) => {\n    let url = URL.createObjectURL(blob);\n    let image = new Image();\n\n    image.onload = () => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      ctx.drawImage(image, 0, 0);\n\n      resolve(image);\n    };\n\n    image.onerror = (e) => {\n      reject(e);\n    };\n\n    image.src = url;\n  });\n}\n\n/**\n * @param {Blob} blob\n * @return {Promise<ImageData>}\n */\nexport function blobToImageData(blob) {\n  return new Promise((resolve, reject) => {\n    let url = URL.createObjectURL(blob);\n    let image = new Image();\n\n    image.onload = () => {\n      URL.revokeObjectURL(url);\n\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      ctx.drawImage(image, 0, 0);\n\n      resolve(ctx.getImageData(0, 0, image.width, image.height));\n    };\n\n    image.onerror = (e) => {\n      reject(e);\n    };\n\n    image.src = url;\n  });\n}\n\n/**\n * @param {ImageData} imageData\n * @return {Promise<Blob>}\n */\nexport function imageDataToBlob(imageData) {\n  return new Promise((resolve, reject) => {\n    canvas.width = imageData.width;\n    canvas.height = imageData.height;\n\n    ctx.putImageData(imageData, 0, 0);\n\n    canvas.toBlob((blob) => {\n      resolve(blob);\n    });\n  });\n}\n\n/**\n * @param {ImageData} imageData\n * @return {string}\n */\nexport function imageDataToDataUrl(imageData) {\n  canvas.width = imageData.width;\n  canvas.height = imageData.height;\n\n  ctx.putImageData(imageData, 0, 0);\n\n  return canvas.toDataURL();\n}\n\n/**\n * @param {Image} image\n * @return {ImageData}\n */\nexport function imageToImageData(image) {\n  let width = image.width;\n  let height = image.height;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  ctx.drawImage(image, 0, 0);\n\n  return ctx.getImageData(0, 0, width, height);\n}\n\n/**\n * @param {ImageData} imageData\n * @return {ImageData}\n */\nexport function scaleNPOT(imageData) {\n  let width = imageData.width;\n  let height = imageData.height;\n  let potWidth = powerOfTwo(width);\n  let potHeight = powerOfTwo(height);\n\n  if (width !== potWidth || height !== potHeight) {\n    return resizeImageData(imageData, potWidth, potHeight);\n  }\n\n  return imageData;\n}\n\n/**\n * @param {ImageData} data\n * @param {number} width\n * @param {number} height\n * @return {ImageData}\n */\nexport function resizeImageData(data, width, height) {\n  let srcWidth = data.width;\n  let srcHeight = data.height;\n\n  // ImageData\n  if (data instanceof ImageData) {\n    canvas.width = srcWidth;\n    canvas.height = srcHeight;\n\n    ctx.putImageData(data, 0, 0);\n\n    canvas2.width = width;\n    canvas2.height = height;\n\n    ctx2.drawImage(canvas, 0, 0, width, height);\n\n    return ctx2.getImageData(0, 0, width, height);\n    // Assumed to be Image\n  } else {\n    canvas.width = width;\n    canvas.height = height;\n\n    ctx.drawImage(data, 0, 0, width, height);\n\n    return ctx.getImageData(0, 0, width, height);\n  }\n}\n\n/**\n * Given an array of Image objects, constructs a texture atlas.\n * The dimensions of each tile are the dimensions of the first Image object (that is, all images are assumed to have the same size!).\n * The resulting texture atlas is always square, and power of two.\n *\n * @param {Array<ImageData>} src\n * @return {Object}\n */\nexport function createTextureAtlas(src) {\n  let width = src[0].width;\n  let height = src[0].height;\n  let texturesPerRow = powerOfTwo(Math.ceil(Math.sqrt(src.length)));\n  let rows = powerOfTwo(Math.ceil(src.length / texturesPerRow));\n  // let pixelsPerRow = texturesPerRow * width;\n\n  canvas.width = width * texturesPerRow;\n  canvas.height = height * rows;\n  // canvas.height = canvas.width;\n\n  for (let i = 0, l = src.length; i < l; i++) {\n    ctx.putImageData(src[i], (i % texturesPerRow) * width, Math.floor(i / texturesPerRow) * height);\n  }\n\n  return {imageData: ctx.getImageData(0, 0, canvas.width, canvas.height), columns: texturesPerRow, rows: rows};\n}\n","\n/**\n * Returns a promise that will resolve with the data from the given path.\n * The data type determines the returned object:\n *     \"image\" => Image\n *     \"text\" => string\n *     \"arrayBuffer\" => ArrayBuffer\n *     \"blob\" => Blob\n *\n * @param {string} path\n * @param {string} dataType\n * @return {Promise<Object>}\n */\nexport default async function fetchDataType(path, dataType) {\n  if (dataType === 'image') {\n    // Promise wrapper for an image load.\n    return new Promise((resolve) => {\n      let image = new Image();\n\n      image.onload = () => {\n        resolve({ok: true, data: image});\n      };\n\n      image.onerror = (e) => {\n        resolve({ok: false, error: 'ImageError', data: e});\n      };\n\n      image.src = path;\n    });\n  } else {\n    let response;\n\n    // Fetch.\n    try {\n      response = await fetch(path);\n    } catch (e) {\n      return {ok: false, error: 'NetworkError', data: e};\n    }\n\n    // Fetch went ok?\n    if (!response.ok) {\n      return {ok: false, error: 'HttpError', data: response};\n    }\n\n    let data;\n\n    // Try to get the requested data type.\n    try {\n      if (dataType === 'text') {\n        data = await response.text();\n      } else if (dataType === 'arrayBuffer') {\n        data = await response.arrayBuffer();\n      } else if (dataType === 'blob') {\n        data = await response.blob();\n      }\n    } catch (e) {\n      return {ok: false, error: 'DataError', data: e};\n    }\n\n    return {ok: true, data};\n  }\n}\n","/**\n * A very simple string hashing algorithm.\n *\n * @param {string} s A string to hash.\n * @return {number} The hash.\n */\nexport default function stringHash(s) {\n  let hash = 0;\n\n  for (let i = 0, l = s.length; i < l; i++) {\n    hash = hash * 31 + s.charCodeAt(i);\n    hash = hash & hash;\n  }\n\n  return hash;\n}\n","let lineNumberReg = /:(\\d+):/g;\n\n/**\n * A wrapper around a WebGL shader unit.\n */\nexport default class ShaderUnit {\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {string} src\n   * @param {number} type\n   */\n  constructor(gl, src, type) {\n    let id = gl.createShader(type);\n\n    /** @member {boolean} */\n    this.ok = false;\n    /** @member {WebGLShader} */\n    this.webglResource = id;\n    /** @member {string} */\n    this.src = src;\n    /** @member {number} */\n    this.shaderType = type;\n\n    gl.shaderSource(id, src);\n    gl.compileShader(id);\n\n    if (gl.getShaderParameter(id, gl.COMPILE_STATUS)) {\n      this.ok = true;\n    } else {\n      let error = gl.getShaderInfoLog(id);\n      let lines = src.split('\\n');\n\n      console.error('Shader unit failed to compile!');\n      console.error(error);\n\n      let lineNumber = lineNumberReg.exec(error);\n\n      while (lineNumber) {\n        let integer = parseInt(lineNumber[1]);\n\n        console.error(integer + ': ' + lines[integer - 1]);\n\n        lineNumber = lineNumberReg.exec(error);\n      }\n    }\n  }\n}\n","/**\n * A wrapper around a WebGL shader program.\n */\nexport default class ShaderProgram {\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {ShaderUnit} vertexShader\n   * @param {ShaderUnit} fragmentShader\n   */\n  constructor(gl, vertexShader, fragmentShader) {\n    let id = gl.createProgram();\n    let uniforms = {};\n    let attribs = {};\n\n    /** @member {boolean} */\n    this.ok = false;\n    /** @member {WebGLProgram} */\n    this.webglResource = id;\n    /** @member {Array<ShaderUnit>} */\n    this.shaders = [vertexShader, fragmentShader];\n    /** @member {Map<string, WebGLUniformLocation>} */\n    this.uniforms = uniforms;\n    /** @member {Map<string, number>} */\n    this.attribs = attribs;\n    /** @member {number} */\n    this.attribsCount = 0;\n\n    gl.attachShader(id, vertexShader.webglResource);\n    gl.attachShader(id, fragmentShader.webglResource);\n    gl.linkProgram(id);\n\n    if (gl.getProgramParameter(id, gl.LINK_STATUS)) {\n      for (let i = 0, l = gl.getProgramParameter(id, gl.ACTIVE_UNIFORMS); i < l; i++) {\n        let object = gl.getActiveUniform(id, i);\n\n        if (object.size === 1) {\n          uniforms[object.name] = gl.getUniformLocation(id, object.name);\n        } else {\n          let base = object.name.substr(0, object.name.length - 3);\n\n          for (let index = 0; index < object.size; index++) {\n            let name = base + '[' + index + ']';\n\n            uniforms[name] = gl.getUniformLocation(id, name);\n          }\n        }\n      }\n\n      for (let i = 0, l = gl.getProgramParameter(id, gl.ACTIVE_ATTRIBUTES); i < l; i++) {\n        let object = gl.getActiveAttrib(id, i);\n\n        this.attribsCount += object.size;\n\n        if (object.size === 1) {\n          attribs[object.name] = gl.getAttribLocation(id, object.name);\n        } else {\n          let base = object.name.substr(0, object.name.length - 3);\n\n          for (let index = 0; index < object.size; index++) {\n            let name = base + '[' + index + ']';\n\n            attribs[name] = gl.getAttribLocation(id, name);\n          }\n        }\n      }\n\n      this.ok = true;\n    } else {\n      console.error('Shader program failed to link!');\n      console.error(gl.getProgramInfoLog(id));\n    }\n  }\n}\n","import stringHash from '../../common/stringhash';\nimport ShaderUnit from './shader';\nimport ShaderProgram from './program';\n\n/**\n * SOME_Ext_Name -> someExtName\n *\n * @param {string} ext\n * @return {string}\n */\nfunction extensionToCamelCase(ext) {\n  let tokens = ext.split('_');\n  let result = tokens[1];\n\n  for (let i = 2, l = tokens.length; i < l; i++) {\n    result += tokens[i][0].toUpperCase() + tokens[i].substr(1);\n  }\n\n  return result;\n}\n\n/**\n * A small WebGL utility class.\n * Makes it easier to generate shaders, textures, etc.\n */\nexport default class WebGL {\n  /**\n   * @param {HTMLCanvasElement} canvas\n   * @param {?Object} options\n   */\n  constructor(canvas, options) {\n    let gl = canvas.getContext(\"webgl2\", options || {alpha: false, antialias: false});\n    this.webgl2 = true;\n\n    if (!gl) {\n      gl = canvas.getContext('webgl', options || {alpha: false, antialias: false});\n      this.webgl2 = false;\n    }\n\n    if (!gl) {\n      gl = canvas.getContext('experimental-webgl', options || {alpha: false, antialias: false});\n    }\n\n    if (!gl) {\n      throw new Error('WebGL: Failed to create a WebGL context!');\n    }\n\n    let extensions = {};\n    for (let extension of gl.getSupportedExtensions()) {\n      // Firefox keeps spamming errors about MOZ_ prefixed extension strings being deprecated.\n      if (!extension.startsWith('MOZ_')) {\n        extensions[extensionToCamelCase(extension)] = gl.getExtension(extension);\n      }\n    }\n\n    if (!gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)) {\n      throw new Error('WebGL: No vertex shader texture support!');\n    }\n\n    if (!this.webgl2 && !extensions.textureFloat) {\n      throw new Error('WebGL: No floating point texture support!');\n    }\n\n    if (!this.webgl2 && !extensions.instancedArrays) {\n      throw new Error('WebGL: No instanced rendering support!');\n    } else if (this.webgl2) {\n      extensions.instancedArrays = {\n        VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: gl.VERTEX_ATTRIB_ARRAY_DIVISOR,\n        drawArraysInstancedANGLE: gl.drawArraysInstanced.bind(gl),\n        drawElementsInstancedANGLE: gl.drawElementsInstanced.bind(gl),\n        vertexAttribDivisorANGLE: gl.vertexAttribDivisor.bind(gl),\n      };\n    }\n\n    if (!this.webgl2) {\n      const texImage2D = gl.texImage2D;\n      gl.RED = gl.ALPHA;\n      gl.RG = gl.LUMINANCE_ALPHA;\n      gl.texImage2D = function(target, level, internalformat, ...args) {\n        if (args.length > 3) {\n          internalformat = args[3];\n        } else {\n          internalformat = args[0];\n        }\n        return texImage2D.call(gl, target, level, internalformat, ...args);\n      };\n    }\n\n    //if (!this.webgl2 && !extensions.compressedTextureS3tc) {\n    //  console.warn('WebGL: No compressed textures support! This might reduce performance.');\n    //}\n\n    gl.extensions = extensions;\n\n    // The only initial setup required, the rest should be handled by the handlers\n    gl.depthFunc(gl.LEQUAL);\n    gl.enable(gl.DEPTH_TEST);\n\n    /** @member {WebGLRenderingContext} */\n    this.gl = gl;\n    /** @member {array} */\n    this.extensions = extensions;\n    /** @member {Map<number, ShaderUnit>} */\n    this.shaderUnits = new Map();\n    /** @member {Map<number, ShaderProgram>} */\n    this.shaderPrograms = new Map();\n    /** @member {?ShaderProgram} */\n    this.currentShaderProgram = null;\n    /** @member {string} */\n    this.floatPrecision = 'precision mediump float;\\n';\n    this.shaderDefines = '';\n    if (this.webgl2) {\n      this.shaderDefines += `#define COMP1D r\n`;\n    } else {\n      this.shaderDefines += `#define COMP1D a\n`;\n    }\n\n    // An empty 2x2 texture that is used automatically when binding an invalid texture\n    let imageData = new ImageData(2, 2);\n\n    // Alpha fully set.\n    for (let i = 0; i < 4; i++) {\n      imageData.data[i * 4 + 3] = 255;\n    }\n\n    let emptyTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, emptyTexture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    /** @member {WebGLTexture} */\n    this.emptyTexture = emptyTexture;\n  }\n\n  /**\n   * Create a new shader unit. Uses caching.\n   *\n   * @param {string} src The shader source.\n   * @param {number} type The shader type.\n   * @return {ShaderUnit}\n   */\n  createShaderUnit(src, type) {\n    let hash = stringHash(src);\n    let shaderUnits = this.shaderUnits;\n\n    if (!shaderUnits.has(hash)) {\n      shaderUnits.set(hash, new ShaderUnit(this.gl, src, type));\n    }\n\n    return shaderUnits.get(hash);\n  }\n\n  /**\n   * Create a new shader program. Uses caching.\n   *\n   * @param {string} vertexSrc The vertex shader source.\n   * @param {string} fragmentSrc The fragment shader source.\n   * @return {ShaderProgram}\n   */\n  createShaderProgram(vertexSrc, fragmentSrc) {\n    let gl = this.gl;\n    let vertexShader = this.createShaderUnit(this.shaderDefines + vertexSrc, gl.VERTEX_SHADER);\n    let fragmentShader = this.createShaderUnit(this.floatPrecision + this.shaderDefines + fragmentSrc, gl.FRAGMENT_SHADER);\n    let shaderPrograms = this.shaderPrograms;\n\n    if (vertexShader.ok && fragmentShader.ok) {\n      let hash = stringHash(vertexSrc + fragmentSrc);\n\n      if (!shaderPrograms.has(hash)) {\n        shaderPrograms.set(hash, new ShaderProgram(gl, vertexShader, fragmentShader));\n      }\n\n      let shaderProgram = shaderPrograms.get(hash);\n\n      if (shaderProgram.ok) {\n        return shaderProgram;\n      }\n    }\n  }\n\n  /**\n   * Enables all vertex attribs between [start, end], including start and discluding end.\n   *\n   * @param {number} start\n   * @param {number} end\n   */\n  enableVertexAttribs(start, end) {\n    let gl = this.gl;\n\n    for (let i = start; i < end; i++) {\n      gl.enableVertexAttribArray(i);\n    }\n  }\n\n  /**\n   * Disables all vertex attribs between [start, end], including start and discluding end.\n   *\n   * @param {number} start\n   * @param {number} end\n   */\n  disableVertexAttribs(start, end) {\n    let gl = this.gl;\n\n    for (let i = start; i < end; i++) {\n      gl.disableVertexAttribArray(i);\n    }\n  }\n\n  /**\n   * Use a shader program.\n   *\n   * @param {ShaderProgram} shaderProgram The program.\n   */\n  useShaderProgram(shaderProgram) {\n    let currentShaderProgram = this.currentShaderProgram;\n\n    if (shaderProgram && shaderProgram.ok && shaderProgram !== currentShaderProgram) {\n      let oldAttribs = 0;\n      let newAttribs = shaderProgram.attribsCount;\n\n      if (currentShaderProgram) {\n        oldAttribs = currentShaderProgram.attribsCount;\n      }\n\n      this.gl.useProgram(shaderProgram.webglResource);\n\n      if (newAttribs > oldAttribs) {\n        this.enableVertexAttribs(oldAttribs, newAttribs);\n      } else if (newAttribs < oldAttribs) {\n        this.disableVertexAttribs(newAttribs, oldAttribs);\n      }\n\n      this.currentShaderProgram = shaderProgram;\n    }\n  }\n\n  /**\n   * Bind a texture.\n   * Note that if the given texture is invalid (null or not loaded) then a 2x2 black texture will be bound instead.\n   *\n   * @param {Texture} texture The texture to bind.\n   * @param {number} unit The texture unit to bind to.\n   */\n  bindTexture(texture, unit) {\n    let gl = this.gl;\n\n    gl.activeTexture(gl.TEXTURE0 + unit);\n\n    if (texture && texture.ok) {\n      gl.bindTexture(gl.TEXTURE_2D, texture.webglResource);\n    } else {\n      // Bind an empty texture in case an invalid one was given, to avoid WebGL errors.\n      gl.bindTexture(gl.TEXTURE_2D, this.emptyTexture);\n    }\n  }\n}\n","import EventEmitter from 'events';\n\n/**\n * This object is used to promise about future resource loads, in case they are not yet known.\n * It is needed to stop the viewer from preemtively calling whenAllLoaded.\n *\n * An example of this is MDX event objects.\n * First the SLK their data is contained in needs to be loaded, and only then can the actual objects be loaded.\n * Once the SLK loads, the viewer thinks it finished loading and calls whenAllLoaded, before starting to load the objects.\n * Adding a promise in this case acts as a barrier, which is removed by resolving the promise after the objects starts loading.\n *\n * Note that you can create a promise resource with viewer.promise(), which returns an already active promise.\n */\nexport default class PromiseResource extends EventEmitter {\n  /**\n   * Immitates a promise.\n   */\n  promise() {\n    this.emit('loadstart', this);\n  }\n\n  /**\n   * Immitates promise resolution.\n   */\n  resolve() {\n    this.emit('loadend', this);\n  }\n}\n","import {vec3, vec4, quat} from 'gl-matrix';\n\nlet VEC3_UNIT_X = vec3.fromValues(1, 0, 0);\nlet VEC3_UNIT_Y = vec3.fromValues(0, 1, 0);\nlet VEC3_UNIT_Z = vec3.fromValues(0, 0, 1);\nlet VEC3_ZERO = vec3.create();\nlet VEC3_ONE = vec3.fromValues(1, 1, 1);\nlet QUAT_ZERO = quat.fromValues(0, 0, 0, 0);\nlet QUAT_DEFAULT = quat.create();\n\nlet heap = vec4.create();\n\n/**\n * @param {vec3} out\n * @param {vec3} v\n * @param {mat4} inverseMatrix\n * @param {vec4} viewport\n * @return {vec3}\n */\nfunction unproject(out, v, inverseMatrix, viewport) {\n  let x = 2 * (v[0] - viewport[0]) / viewport[2] - 1;\n  let y = 1 - 2 * (v[1] - viewport[1]) / viewport[3];\n  let z = 2 * v[2] - 1;\n\n  vec4.set(heap, x, y, z, 1);\n  vec4.transformMat4(heap, heap, inverseMatrix);\n  vec3.set(out, heap[0] / heap[3], heap[1] / heap[3], heap[2] / heap[3]);\n\n  return out;\n}\n\n/**\n * Get the distance of a point from a plane.\n * dot(plane, vec4(point, 1))\n *\n * @param {vec4} plane\n * @param {vec3} point\n * @return {number}\n */\nfunction distanceToPlane(plane, point) {\n  return plane[0] * point[0] + plane[1] * point[1] + plane[2] * point[2] + plane[3];\n}\n\n/**\n * Normalize a plane. Note that this is not the same as normalizing a vec4.\n *\n * @param {vec4} out\n * @param {vec4} plane\n */\nfunction normalizePlane(out, plane) {\n  let len = vec3.len(plane);\n\n  out[0] = plane[0] / len;\n  out[1] = plane[1] / len;\n  out[2] = plane[2] / len;\n  out[3] = plane[3] / len;\n}\n\n/**\n * Unpacks a matrix's planes.\n *\n * @param {Array<vec4>} planes\n * @param {mat4} m\n */\nfunction unpackPlanes(planes, m) {\n  // eslint-disable-next-line one-var\n  let a00 = m[0], a01 = m[4], a02 = m[8], a03 = m[12],\n    a10 = m[1], a11 = m[5], a12 = m[9], a13 = m[13],\n    a20 = m[2], a21 = m[6], a22 = m[10], a23 = m[14],\n    a30 = m[3], a31 = m[7], a32 = m[11], a33 = m[15];\n  let plane;\n\n  // Left clipping plane\n  plane = planes[0];\n  plane[0] = a30 + a00;\n  plane[1] = a31 + a01;\n  plane[2] = a32 + a02;\n  plane[3] = a33 + a03;\n\n  // Right clipping plane\n  plane = planes[1];\n  plane[0] = a30 - a00;\n  plane[1] = a31 - a01;\n  plane[2] = a32 - a02;\n  plane[3] = a33 - a03;\n\n  // Top clipping plane\n  plane = planes[2];\n  plane[0] = a30 - a10;\n  plane[1] = a31 - a11;\n  plane[2] = a32 - a12;\n  plane[3] = a33 - a13;\n\n  // Bottom clipping plane\n  plane = planes[3];\n  plane[0] = a30 + a10;\n  plane[1] = a31 + a11;\n  plane[2] = a32 + a12;\n  plane[3] = a33 + a13;\n\n  // Near clipping plane\n  plane = planes[4];\n  plane[0] = a30 + a20;\n  plane[1] = a31 + a21;\n  plane[2] = a32 + a22;\n  plane[3] = a33 + a23;\n\n  // Far clipping plane\n  plane = planes[5];\n  plane[0] = a30 - a20;\n  plane[1] = a31 - a21;\n  plane[2] = a32 - a22;\n  plane[3] = a33 - a23;\n\n  normalizePlane(planes[0], planes[0]);\n  normalizePlane(planes[1], planes[1]);\n  normalizePlane(planes[2], planes[2]);\n  normalizePlane(planes[3], planes[3]);\n  normalizePlane(planes[4], planes[4]);\n  normalizePlane(planes[5], planes[5]);\n}\n\nlet vec3Heap = vec3.create();\n\n/**\n * @param {quat} q\n * @return {number}\n */\nfunction getRotationX(q) {\n  vec3.transformQuat(vec3Heap, VEC3_UNIT_Y, q);\n\n  return Math.atan2(vec3Heap[2], vec3Heap[1]);\n}\n\n/**\n * @param {quat} q\n * @return {number}\n */\nfunction getRotationY(q) {\n  vec3.transformQuat(vec3Heap, VEC3_UNIT_Z, q);\n\n  return Math.atan2(vec3Heap[0], vec3Heap[2]);\n}\n\n/**\n * @param {quat} q\n * @return {number}\n */\nfunction getRotationZ(q) {\n  vec3.transformQuat(vec3Heap, VEC3_UNIT_X, q);\n\n  return Math.atan2(vec3Heap[1], vec3Heap[0]);\n}\n\nexport {\n  VEC3_UNIT_X,\n  VEC3_UNIT_Y,\n  VEC3_UNIT_Z,\n  VEC3_ZERO,\n  VEC3_ONE,\n  QUAT_ZERO,\n  QUAT_DEFAULT,\n  unproject,\n  distanceToPlane,\n  normalizePlane,\n  unpackPlanes,\n  getRotationX,\n  getRotationY,\n  getRotationZ,\n};\n","import {vec3, vec4, quat, mat4} from 'gl-matrix';\nimport {unproject, distanceToPlane, unpackPlanes, VEC3_UNIT_Y, VEC3_UNIT_X, VEC3_UNIT_Z} from '../common/gl-matrix-addon';\n\nlet vectorHeap = vec3.create();\nlet vectorHeap2 = vec3.create();\nlet vectorHeap3 = vec3.create();\nlet quatHeap = quat.create();\nlet matHeap = mat4.create();\n\n/**\n * A camera.\n */\nexport default class Camera {\n  /**\n   *\n   */\n  constructor() {\n    // Rendered viewport.\n    this.rect = vec4.create();\n\n    // Perspective values.\n    this.isPerspective = true;\n    this.fov = 0;\n    this.aspect = 0;\n\n    // Orthogonal values.\n    this.isOrtho = false;\n    this.leftClipPlane = 0;\n    this.rightClipPlane = 0;\n    this.bottomClipPlane = 0;\n    this.topClipPlane = 0;\n\n    // Shared values.\n    this.nearClipPlane = 0;\n    this.farClipPlane = 0;\n\n    // World values.\n    this.location = vec3.create();\n    this.rotation = quat.create();\n\n    // Derived values.\n    this.inverseRotation = quat.create();\n    this.worldMatrix = mat4.create();\n    this.projectionMatrix = mat4.create();\n    this.worldProjectionMatrix = mat4.create();\n    this.inverseWorldMatrix = mat4.create();\n    this.inverseRotationMatrix = mat4.create();\n    this.inverseWorldProjectionMatrix = mat4.create();\n    this.directionX = vec3.create();\n    this.directionY = vec3.create();\n    this.directionZ = vec3.create();\n\n    // First four vectors are the corners of a 2x2 rectangle, the last three vectors are the unit axes\n    this.vectors = [vec3.fromValues(-1, -1, 0), vec3.fromValues(-1, 1, 0), vec3.fromValues(1, 1, 0), vec3.fromValues(1, -1, 0), vec3.fromValues(1, 0, 0), vec3.fromValues(0, 1, 0), vec3.fromValues(0, 0, 1)];\n\n    // First four vectors are the corners of a 2x2 rectangle billboarded to the camera, the last three vectors are the unit axes billboarded\n    this.billboardedVectors = [vec3.create(), vec3.create(), vec3.create(), vec3.create(), vec3.create(), vec3.create(), vec3.create()];\n\n    // Left, right, top, bottom, near, far\n    this.planes = [vec4.create(), vec4.create(), vec4.create(), vec4.create(), vec4.create(), vec4.create()];\n\n    this.dirty = true;\n  }\n\n  /**\n   * Set the camera to perspective projection mode.\n   *\n   * @param {number} fov\n   * @param {number} aspect\n   * @param {number} near\n   * @param {number} far\n   */\n  perspective(fov, aspect, near, far) {\n    this.isPerspective = true;\n    this.isOrtho = false;\n    this.fov = fov;\n    this.aspect = aspect;\n    this.nearClipPlane = near;\n    this.farClipPlane = far;\n\n    this.dirty = true;\n  }\n\n  /**\n   * Set the camera to orthogonal projection mode.\n   *\n   * @param {number} left\n   * @param {number} right\n   * @param {number} bottom\n   * @param {number} top\n   * @param {number} near\n   * @param {number} far\n   */\n  ortho(left, right, bottom, top, near, far) {\n    this.isPerspective = false;\n    this.isOrtho = true;\n    this.leftClipPlane = left;\n    this.rightClipPlane = right;\n    this.bottomClipPlane = bottom;\n    this.topClipPlane = top;\n    this.nearClipPlane = near;\n    this.farClipPlane = far;\n\n    this.dirty = true;\n  }\n\n  /**\n   * Set the camera's viewport.\n   *\n   * @param {vec4} viewport\n   */\n  viewport(viewport) {\n    vec4.copy(this.rect, viewport);\n\n    this.aspect = viewport[2] / viewport[3];\n\n    this.dirty = true;\n  }\n\n  /**\n   * Set the camera location in world coordinates.\n   *\n   * @param {vec3} location\n   */\n  setLocation(location) {\n    vec3.copy(this.location, location);\n\n    this.dirty = true;\n  }\n\n  /**\n   * Move the camera by the given offset in world coordinates.\n   *\n   * @param {vec3} offset\n   */\n  move(offset) {\n    vec3.add(this.location, this.location, offset);\n\n    this.dirty = true;\n  }\n\n  /**\n   * Set the camera rotation.\n   *\n   * @param {quat} rotation\n   */\n  setRotation(rotation) {\n    quat.copy(this.rotation, rotation);\n\n    this.dirty = true;\n  }\n\n  /**\n   * Rotate the camera by the given rotation.\n   *\n   * @param {quat} rotation\n   */\n  rotate(rotation) {\n    quat.mul(this.rotation, this.rotation, rotation);\n\n    this.dirty = true;\n  }\n\n  /**\n   * Set the camera rotation to the given horizontal and vertical angles.\n   *\n   * @param {number} horizontalAngle\n   * @param {number} verticalAngle\n   */\n  setRotationAngles(horizontalAngle, verticalAngle) {\n    quat.identity(this.rotation);\n\n    this.rotateAngles(horizontalAngle, verticalAngle);\n  }\n\n  /**\n   * Rotate around the given point.\n   * Changes both the camera location and rotation.\n   *\n   * @param {quat} rotation\n   * @param {vec3} point\n   */\n  rotateAround(rotation, point) {\n    this.rotate(rotation);\n\n    quat.conjugate(quatHeap, quatHeap);\n    vec3.sub(vectorHeap, this.location, point);\n    vec3.transformQuat(vectorHeap, vectorHeap, rotation);\n    vec3.add(this.location, vectorHeap, point);\n  }\n\n  /**\n   * Rotate around the given point.\n   * Changes both the camera location and rotation.\n   *\n   * @param {quat} rotation\n   * @param {vec3} point\n   */\n  setRotationAround(rotation, point, length) {\n    this.setRotation(rotation);\n\n    if (length == null) {\n      length = vec3.len(vec3.sub(vectorHeap, this.location, point));\n    }\n\n    quat.conjugate(quatHeap, quatHeap);\n    vec3.copy(vectorHeap, VEC3_UNIT_Z);\n    vec3.transformQuat(vectorHeap, vectorHeap, quatHeap);\n    vec3.scale(vectorHeap, vectorHeap, length);\n    vec3.add(this.location, vectorHeap, point);\n  }\n\n  /**\n   * Set the rotation around the given point.\n   * Changes both the camera location and rotation.\n   *\n   * @param {number} horizontalAngle\n   * @param {number} verticalAngle\n   * @param {vec3} point\n   */\n  setRotationAroundAngles(horizontalAngle, verticalAngle, point, length) {\n    quat.identity(quatHeap);\n    quat.rotateX(quatHeap, quatHeap, verticalAngle);\n    quat.rotateZ(quatHeap, quatHeap, horizontalAngle);\n\n    this.setRotationAround(quatHeap, point, length);\n  }\n\n  /**\n   * Face the given point. Changes only the camera's orientation.\n   *\n   * @param {vec3} point\n   * @param {vec3} worldUp\n   */\n  face(point, worldUp) {\n    mat4.lookAt(matHeap, this.location, point, worldUp);\n    mat4.getRotation(this.rotation, matHeap);\n\n    this.dirty = true;\n  }\n\n  /**\n   * Move to the given location, and look at the given target.\n   *\n   * @param {vec3} location\n   * @param {vec3} target\n   * @param {vec3} worldUp\n   */\n  moveToAndFace(location, target, worldUp) {\n    vec3.copy(this.location, location);\n    this.face(target, worldUp);\n  }\n\n  /**\n   * Reset the location and angles.\n   */\n  reset() {\n    vec3.set(this.location, 0, 0, 0);\n    quat.identity(this.rotation);\n\n    this.dirty = true;\n  }\n\n  /**\n   * Recalculate the camera's transformation.\n   */\n  update() {\n    if (this.dirty) {\n      this.dirty = false;\n\n      let location = this.location;\n      let rotation = this.rotation;\n      let inverseRotation = this.inverseRotation;\n      let worldMatrix = this.worldMatrix;\n      let projectionMatrix = this.projectionMatrix;\n      let worldProjectionMatrix = this.worldProjectionMatrix;\n      let vectors = this.vectors;\n      let billboardedVectors = this.billboardedVectors;\n\n      // Projection matrix\n      // Camera space -> NDC space\n      if (this.isPerspective) {\n        mat4.perspective(projectionMatrix, this.fov, this.aspect, this.nearClipPlane, this.farClipPlane);\n      } else {\n        mat4.ortho(projectionMatrix, this.leftClipPlane, this.rightClipPlane, this.bottomClipPlane, this.topClipPlane, this.nearClipPlane, this.farClipPlane);\n      }\n\n      mat4.fromQuat(worldMatrix, rotation);\n      mat4.translate(worldMatrix, worldMatrix, vec3.negate(vectorHeap, location));\n\n      quat.conjugate(inverseRotation, rotation);\n\n      // World projection matrix\n      // World space -> NDC space\n      mat4.mul(worldProjectionMatrix, projectionMatrix, worldMatrix);\n\n      // Recaculate the camera's frusum planes\n      unpackPlanes(this.planes, worldProjectionMatrix);\n\n      // Inverse world matrix\n      // Camera space -> World space\n      mat4.invert(this.inverseWorldMatrix, worldMatrix);\n\n      vec3.transformQuat(this.directionX, VEC3_UNIT_X, inverseRotation);\n      vec3.transformQuat(this.directionY, VEC3_UNIT_Y, inverseRotation);\n      vec3.transformQuat(this.directionZ, VEC3_UNIT_Z, inverseRotation);\n\n      // Inverse world projection matrix\n      // NDC space -> World space\n      mat4.invert(this.inverseWorldProjectionMatrix, worldProjectionMatrix);\n\n      // Cache the billboarded vectors\n      for (let i = 0; i < 7; i++) {\n        vec3.transformQuat(billboardedVectors[i], vectors[i], inverseRotation);\n      }\n    }\n  }\n\n  /**\n   * Test it a sphere with the given center and radius intersects this frustum.\n   *\n   * @param {vec3} center\n   * @param {number} radius\n   * @return {boolean}\n   */\n  testSphere(center, radius) {\n    for (let plane of this.planes) {\n      if (distanceToPlane(plane, center) <= -radius) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Given a vector in camera space, return the vector transformed to world space.\n   *\n   * @param {vec3} out\n   * @param {vec3} v\n   * @return {vec3}\n   */\n  cameraToWorld(out, v) {\n    return vec3.transformMat4(out, v, this.inverseWorldMatrix);\n  }\n\n  /**\n   * Given a vector in world space, return the vector transformed to camera space.\n   *\n   * @param {vec3} out\n   * @param {vec3} v\n   * @return {vec3}\n   */\n  worldToCamera(out, v) {\n    // return vec3.transformQuat(out, v, this.inverseWorldRotation);\n    return vec3.transformMat4(out, v, this.worldMatrix);\n  }\n\n  /**\n   * Given a vector in world space, return the vector transformed to screen space.\n   *\n   * @param {vec2} out\n   * @param {vec3} v\n   * @return {vec2}\n   */\n  worldToScreen(out, v) {\n    let viewport = this.rect;\n\n    vec3.transformMat4(vectorHeap, v, this.worldProjectionMatrix);\n\n    out[0] = Math.round(((vectorHeap[0] + 1) / 2) * viewport[2]);\n    out[1] = Math.round(((1 - vectorHeap[1]) / 2) * viewport[3]);\n\n    return out;\n  }\n\n  /**\n   * Given a vector in screen space, return a ray from the near plane to the far plane.\n   *\n   * @param {Float32Array} out\n   * @param {vec2} v\n   * @return {Float32Array}\n   */\n  screenToWorldRay(out, v) {\n    let a = vectorHeap;\n    let b = vectorHeap2;\n    let c = vectorHeap3;\n    let x = v[0];\n    let y = v[1];\n    let inverseWorldProjectionMatrix = this.inverseWorldProjectionMatrix;\n    let viewport = this.rect;\n\n    // Intersection on the near-plane\n    unproject(a, vec3.set(c, x, y, 0), inverseWorldProjectionMatrix, viewport);\n\n    // Intersection on the far-plane\n    unproject(b, vec3.set(c, x, y, 1), inverseWorldProjectionMatrix, viewport);\n\n    out.set(a, 0);\n    out.set(b, 3);\n\n    return out;\n  }\n}\n","import EventEmitter from 'events';\nimport {vec3, quat, mat4} from 'gl-matrix';\nimport {VEC3_ZERO, VEC3_ONE, QUAT_DEFAULT} from '../common/gl-matrix-addon';\n\n// Heap allocations needed for this module.\nlet locationHeap = vec3.create();\nlet rotationHeap = quat.create();\nlet scalingHeap = vec3.create();\n\n/**\n * A node mixin.\n * Used by SceneNode and EventNode.\n *\n * @param {class} superclass\n * @return {class}\n */\nlet nodeMixin = (superclass) => class extends superclass {\n  /**\n   *\n   */\n  constructor() {\n    super();\n\n    /** @member {vec3} */\n    this.pivot = vec3.create();\n    /** @member {vec3} */\n    this.localLocation = vec3.create();\n    /** @member {quat} */\n    this.localRotation = quat.create();\n    /** @member {vec3} */\n    this.localScale = vec3.fromValues(1, 1, 1);\n    /** @member {vec3} */\n    this.worldLocation = vec3.create();\n    /** @member {quat} */\n    this.worldRotation = quat.create();\n    /** @member {vec3} */\n    this.worldScale = vec3.create();\n    /** @member {vec3} */\n    this.inverseWorldLocation = vec3.create();\n    /** @member {vec4} */\n    this.inverseWorldRotation = quat.create();\n    /** @member {vec3} */\n    this.inverseWorldScale = vec3.create();\n    /** @member {mat4} */\n    this.localMatrix = mat4.create();\n    /** @member {mat4} */\n    this.worldMatrix = mat4.create();\n    /** @member {?SceneNode} */\n    this.parent = null;\n    /** @member {Array<SceneNode>} */\n    this.children = [];\n    /** @member {boolean} */\n    this.dontInheritTranslation = false;\n    /** @member {boolean} */\n    this.dontInheritRotation = false;\n    /** @member {boolean} */\n    this.dontInheritScaling = true;\n\n    this.visible = true;\n    this.wasDirty = false;\n    this.dirty = true;\n  }\n\n  /**\n   * Sets the node's pivot.\n   *\n   * @param {vec3} pivot The new pivot.\n   * @return {this}\n   */\n  setPivot(pivot) {\n    vec3.copy(this.pivot, pivot);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Sets the node's local location.\n   *\n   * @param {vec3} location The new location.\n   * @return {this}\n   */\n  setLocation(location) {\n    vec3.copy(this.localLocation, location);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Sets the node's local rotation.\n   *\n   * @param {quat} rotation The new rotation.\n   * @return {this}\n   */\n  setRotation(rotation) {\n    quat.copy(this.localRotation, rotation);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Sets the node's local scale.\n   *\n   * @param {vec3} varying The new scale.\n   * @return {this}\n   */\n  setScale(varying) {\n    vec3.copy(this.localScale, varying);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Sets the node's local scale uniformly.\n   *\n   * @param {number} uniform The new scale.\n   * @return {this}\n   */\n  setUniformScale(uniform) {\n    vec3.set(this.localScale, uniform, uniform, uniform);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Sets the node's local location, rotation, and scale.\n   *\n   * @param {vec3} location The new location.\n   * @param {quat} rotation The new rotation.\n   * @param {vec3} scale The new scale.\n   * @return {this}\n   */\n  setTransformation(location, rotation, scale) {\n    let localLocation = this.localLocation;\n    let localRotation = this.localRotation;\n    let localScale = this.localScale;\n\n    localLocation[0] = location[0];\n    localLocation[1] = location[1];\n    localLocation[2] = location[2];\n    // vec3.copy(this.localLocation, location);\n\n    localRotation[0] = rotation[0];\n    localRotation[1] = rotation[1];\n    localRotation[2] = rotation[2];\n    localRotation[3] = rotation[3];\n    // quat.copy(this.localRotation, rotation);\n\n    localScale[0] = scale[0];\n    localScale[1] = scale[1];\n    localScale[2] = scale[2];\n    // vec3.copy(this.localScale, scale);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Resets the node's local location, pivot, rotation, and scale, to the default values.\n   *\n   * @return {this}\n   */\n  resetTransformation() {\n    vec3.copy(this.pivot, VEC3_ZERO);\n    vec3.copy(this.localLocation, VEC3_ZERO);\n    quat.copy(this.localRotation, QUAT_DEFAULT);\n    vec3.copy(this.localScale, VEC3_ONE);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Moves the node's pivot.\n   *\n   * @param {vec3} offset The offset.\n   * @return {this}\n   */\n  movePivot(offset) {\n    vec3.add(this.pivot, this.pivot, offset);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Moves the node's local location.\n   *\n   * @param {vec3} offset The offset.\n   * @return {this}\n   */\n  move(offset) {\n    vec3.add(this.localLocation, this.localLocation, offset);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Rotates the node's local rotation in world space.\n   *\n   * @param {vec3} rotation The rotation.\n   * @return {this}\n   */\n  rotate(rotation) {\n    quat.mul(this.localRotation, this.localRotation, rotation);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Rotates the node's local rotation in local space.\n   *\n   * @param {vec3} rotation The rotation.\n   * @return {this}\n   */\n  rotateLocal(rotation) {\n    quat.mul(this.localRotation, rotation, this.localRotation);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Scales the node.\n   *\n   * @param {vec3} scale The scale.\n   * @return {this}\n   */\n  scale(scale) {\n    vec3.mul(this.localScale, this.localScale, scale);\n\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Scales the node uniformly.\n   *\n   * @param {number} scale The scale.\n   * @return {this}\n   */\n  uniformScale(scale) {\n    vec3.scale(this.localScale, this.localScale, scale);\n\n    this.dirty = true;\n\n    return this;\n  }\n  /*\n  orthoNormalize(vectors) {\n      for (let i = 0; i < vectors.length; i++) {\n          let accum = vec3.create(),\n              p = vec3.create();\n\n          for (let j = 0; j < i; j++) {\n              vec3.add(accum, accum, this.project(p, vectors[i], vectors[j]));\n          }\n\n          vec3.sub(vectors[i], vectors[i], accum);\n          vec3.normalize(vectors[i], vectors[i]);\n      }\n  }\n\n  project(out, u, v) {\n      let d = vec3.dot(u, v),\n          d_div = d / vec3.sqrLen(u);\n\n      return vec3.scale(out, v, d_div);\n  }\n\n  lookAt(target, upDirection) {\n      let lookAt = vec3.create();\n\n      vec3.sub(lookAt, target, this.worldLocation);\n\n      let forward = vec3.clone(lookAt);\n      let up = vec3.clone(upDirection);\n\n      this.orthoNormalize([forward, up]);\n\n      let right = vec3.create();\n      vec3.cross(right, forward, up);\n\n      // vec3.normalize(forward, forward);\n      // vec3.normalize(up, up);\n      // vec3.normalize(right, right);\n\n      quat.setAxes(this.localRotation, forward, right, up);\n      quat.conjugate(this.localRotation, this.localRotation);\n\n      this.recalculateTransformation();\n\n      return this;\n  }\n  //* /\n  /*\n  lookAt(target) {\n      let v1 = target,\n          v2 = this.worldLocation;\n\n      let angle = Math.atan2(v2[2], v2[0]) - Math.atan2(v1[2], v1[0]);\n\n      //console.log(Math.toDeg(angle))\n  },\n  */\n\n  /**\n   * Sets the node's parent.\n   *\n   * @param {Node=} parent The parent. NOTE: don't set parent to null manually, instead use setParent().\n   * @return {this}\n   */\n  setParent(parent) {\n    // If the node already had a parent, detach from it first.\n    if (this.parent) {\n      let children = this.parent.children;\n      let index = children.indexOf(this);\n\n      if (index !== -1) {\n        children.splice(index, 1);\n      }\n    }\n\n    this.parent = parent;\n\n    // If the new parent is na actual thing, add this node as a child.\n    if (parent) {\n      parent.children.push(this);\n    }\n\n    // this.recalculateTransformation();\n    this.dirty = true;\n\n    return this;\n  }\n\n  /**\n   * Recalculate this node's transformation data.\n   */\n  recalculateTransformation() {\n    let dirty = this.dirty;\n    let parent = this.parent;\n\n    // Need to update if this node is dirty, or if its parent was dirty.\n    this.wasDirty = this.dirty;\n\n    if (parent) {\n      dirty = dirty || parent.wasDirty;\n    }\n\n    this.wasDirty = dirty;\n\n    if (dirty) {\n      this.dirty = false;\n\n      let localMatrix = this.localMatrix;\n      let localLocation = this.localLocation;\n      let localRotation = this.localRotation;\n      let localScale = this.localScale;\n      let worldMatrix = this.worldMatrix;\n      let worldLocation = this.worldLocation;\n      let worldRotation = this.worldRotation;\n      let worldScale = this.worldScale;\n      let inverseWorldLocation = this.inverseWorldLocation;\n      let inverseWorldRotation = this.inverseWorldRotation;\n      let inverseWorldScale = this.inverseWorldScale;\n\n      if (parent) {\n        let computedLocation;\n        let computedScaling;\n\n        let parentPivot = parent.pivot;\n\n        computedLocation = locationHeap;\n\n        computedLocation[0] = localLocation[0] + parentPivot[0];\n        computedLocation[1] = localLocation[1] + parentPivot[1];\n        computedLocation[2] = localLocation[2] + parentPivot[2];\n        // vec3.add(computedLocation, localLocation, parentPivot);\n\n        // If this node shouldn't inherit the parent's rotation, rotate it by the inverse.\n        // if (this.dontInheritRotation) {\n        // mat4.rotateQ(worldMatrix, worldMatrix, parent.inverseWorldRotation);\n        // }\n\n        // If this node shouldn't inherit the parent's translation, translate it by the inverse.\n        // if (this.dontInheritTranslation) {\n        // mat4.translate(worldMatrix, worldMatrix, parent.inverseWorldLocation);\n        // }\n\n        if (this.dontInheritScaling) {\n          computedScaling = scalingHeap;\n\n          let parentInverseScale = parent.inverseWorldScale;\n          computedScaling[0] = parentInverseScale[0] * localScale[0];\n          computedScaling[1] = parentInverseScale[1] * localScale[1];\n          computedScaling[2] = parentInverseScale[2] * localScale[2];\n          // vec3.mul(computedScaling, parent.inverseWorldScale, localScale);\n\n          worldScale[0] = localScale[0];\n          worldScale[1] = localScale[1];\n          worldScale[2] = localScale[2];\n          // vec3.copy(worldScale, localScale);\n        } else {\n          computedScaling = localScale;\n\n          let parentScale = parent.worldScale;\n          worldScale[0] = parentScale[0] * localScale[0];\n          worldScale[1] = parentScale[1] * localScale[1];\n          worldScale[2] = parentScale[2] * localScale[2];\n          // vec3.mul(worldScale, parentScale, localScale);\n        }\n\n        mat4.fromRotationTranslationScale(localMatrix, localRotation, computedLocation, computedScaling);\n\n        mat4.mul(worldMatrix, parent.worldMatrix, localMatrix);\n\n        quat.mul(worldRotation, parent.worldRotation, localRotation);\n      } else {\n        // Local matrix\n        mat4.fromRotationTranslationScale(localMatrix, localRotation, localLocation, localScale);\n\n        // World matrix\n        worldMatrix[0] = localMatrix[0];\n        worldMatrix[1] = localMatrix[1];\n        worldMatrix[2] = localMatrix[2];\n        worldMatrix[3] = localMatrix[3];\n        worldMatrix[4] = localMatrix[4];\n        worldMatrix[5] = localMatrix[5];\n        worldMatrix[6] = localMatrix[6];\n        worldMatrix[7] = localMatrix[7];\n        worldMatrix[8] = localMatrix[8];\n        worldMatrix[9] = localMatrix[9];\n        worldMatrix[10] = localMatrix[10];\n        worldMatrix[11] = localMatrix[11];\n        worldMatrix[12] = localMatrix[12];\n        worldMatrix[13] = localMatrix[13];\n        worldMatrix[14] = localMatrix[14];\n        worldMatrix[15] = localMatrix[15];\n        // mat4.copy(worldMatrix, localMatrix);\n\n        // World rotation\n        worldRotation[0] = localRotation[0];\n        worldRotation[1] = localRotation[1];\n        worldRotation[2] = localRotation[2];\n        worldRotation[3] = localRotation[3];\n        // quat.copy(worldRotation, localRotation);\n\n        // World scale\n        worldScale[0] = localScale[0];\n        worldScale[1] = localScale[1];\n        worldScale[2] = localScale[2];\n        // vec3.copy(worldScale, localScale);\n      }\n\n      // Inverse world rotation\n      inverseWorldRotation[0] = -worldRotation[0];\n      inverseWorldRotation[1] = -worldRotation[1];\n      inverseWorldRotation[2] = -worldRotation[2];\n      inverseWorldRotation[3] = worldRotation[3];\n      // quat.conjugate(inverseWorldRotation, worldRotation);\n\n      // Inverse world scale\n      inverseWorldScale[0] = 1 / worldScale[0];\n      inverseWorldScale[1] = 1 / worldScale[1];\n      inverseWorldScale[2] = 1 / worldScale[2];\n      // vec3.inverse(this.inverseWorldScale, worldScale);\n\n      // World location\n      worldLocation[0] = worldMatrix[12];\n      worldLocation[1] = worldMatrix[13];\n      worldLocation[2] = worldMatrix[14];\n\n      // Inverse world location\n      inverseWorldLocation[0] = -worldLocation[0];\n      inverseWorldLocation[1] = -worldLocation[1];\n      inverseWorldLocation[2] = -worldLocation[2];\n      // vec3.negate(this.inverseWorldLocation, worldLocation);\n    }\n  }\n\n  /**\n   * Update this node.\n   * Also updates the object part of this node, if there is any (e.g. model instances).\n   * Continues the update hierarchy.\n   *\n   * @param {Scene} scene\n   */\n  update(scene) {\n    if (this.dirty || (this.parent && this.parent.wasDirty)) {\n      this.dirty = true; // In case this node isn't dirty, but the parent was.\n      this.wasDirty = true;\n      this.recalculateTransformation();\n    } else {\n      this.wasDirty = false;\n    }\n\n    this.updateObject(scene);\n\n    this.updateChildren(scene);\n  }\n\n  /**\n   * Update the object part of this node.\n   * Used by model instances.\n   *\n   * @param {Scene} scene\n   */\n  updateObject(scene) {\n\n  }\n\n  /**\n   * Update this node's children and continue the update hierarchy.\n   *\n   * @param {Scene} scene\n   */\n  updateChildren(scene) {\n    let children = this.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].update(scene);\n    }\n  }\n};\n\n/**\n * A scene node that can be moved, rotated, scaled, parented, etc.\n */\nexport class SceneNode extends nodeMixin(class {}) {}\n\n/**\n * A scene node that is also an event dispatcher.\n */\nexport class EventNode extends nodeMixin(EventEmitter) {}\n\n/**\n * A skeletal node used for skeletons.\n * Expected to be created with createSharedNodes() below.\n */\nexport class SkeletalNode {\n  /**\n   * @param {Array<Float32Array>} shared\n   */\n  constructor(shared) {\n    /** @member {vec3} */\n    this.pivot = shared[0];\n    /** @member {vec3} */\n    this.localLocation = shared[1];\n    /** @member {quat} */\n    this.localRotation = shared[2];\n    /** @member {vec3} */\n    this.localScale = shared[3];\n    /** @member {vec3} */\n    this.worldLocation = shared[4];\n    /** @member {quat} */\n    this.worldRotation = shared[5];\n    /** @member {vec3} */\n    this.worldScale = shared[6];\n    /** @member {vec3} */\n    this.inverseWorldLocation = shared[7];\n    /** @member {vec4} */\n    this.inverseWorldRotation = shared[8];\n    /** @member {vec3} */\n    this.inverseWorldScale = shared[9];\n    /** @member {mat4} */\n    this.localMatrix = shared[10];\n    /** @member {mat4} */\n    this.worldMatrix = shared[11];\n    /** @member {boolean} */\n    this.dontInheritTranslation = false;\n    /** @member {boolean} */\n    this.dontInheritRotation = false;\n    /** @member {boolean} */\n    this.dontInheritScaling = false;\n    /** @member {Array<SceneNode>} */\n    this.children = [];\n\n    this.visible = true;\n    this.wasDirty = false;\n\n    /**\n     * The object associated with this node, if there is any.\n     *\n     * @member {?}\n     */\n    this.object = null;\n\n    this.localRotation[3] = 1;\n\n    this.localScale.fill(1);\n\n    this.localMatrix[0] = 1;\n    this.localMatrix[5] = 1;\n    this.localMatrix[10] = 1;\n    this.localMatrix[15] = 1;\n\n    this.dirty = true;\n\n    this.billboarded = false;\n    this.billboardedX = false;\n    this.billboardedY = false;\n    this.billboardedZ = false;\n  }\n\n  /**\n   * Recalculate this skeletal node.\n   *\n   * @param {Scene} scene\n   */\n  recalculateTransformation(scene) {\n    let localMatrix = this.localMatrix;\n    let localRotation = this.localRotation;\n    let localScale = this.localScale;\n    let worldMatrix = this.worldMatrix;\n    let worldLocation = this.worldLocation;\n    let worldRotation = this.worldRotation;\n    let worldScale = this.worldScale;\n    let pivot = this.pivot;\n    let inverseWorldLocation = this.inverseWorldLocation;\n    let inverseWorldRotation = this.inverseWorldRotation;\n    let inverseWorldScale = this.inverseWorldScale;\n    let parent = this.parent;\n    let computedRotation;\n    let computedScaling;\n\n    if (this.dontInheritScaling) {\n      computedScaling = scalingHeap;\n\n      let parentInverseScale = parent.inverseWorldScale;\n      computedScaling[0] = parentInverseScale[0] * localScale[0];\n      computedScaling[1] = parentInverseScale[1] * localScale[1];\n      computedScaling[2] = parentInverseScale[2] * localScale[2];\n\n      worldScale[0] = localScale[0];\n      worldScale[1] = localScale[1];\n      worldScale[2] = localScale[2];\n    } else {\n      computedScaling = localScale;\n\n      let parentScale = parent.worldScale;\n      worldScale[0] = parentScale[0] * localScale[0];\n      worldScale[1] = parentScale[1] * localScale[1];\n      worldScale[2] = parentScale[2] * localScale[2];\n    }\n\n    if (this.billboarded) {\n      computedRotation = rotationHeap;\n\n      quat.copy(computedRotation, parent.inverseWorldRotation);\n      quat.mul(computedRotation, computedRotation, scene.camera.inverseRotation);\n\n      this.convertBasis(computedRotation);\n    } else {\n      computedRotation = localRotation;\n    }\n\n    mat4.fromRotationTranslationScaleOrigin(localMatrix, computedRotation, this.localLocation, computedScaling, pivot);\n\n    mat4.mul(worldMatrix, parent.worldMatrix, localMatrix);\n\n    quat.mul(worldRotation, parent.worldRotation, computedRotation);\n\n    // Inverse world rotation\n    inverseWorldRotation[0] = -worldRotation[0];\n    inverseWorldRotation[1] = -worldRotation[1];\n    inverseWorldRotation[2] = -worldRotation[2];\n    inverseWorldRotation[3] = worldRotation[3];\n\n    // Inverse world scale\n    inverseWorldScale[0] = 1 / worldScale[0];\n    inverseWorldScale[1] = 1 / worldScale[1];\n    inverseWorldScale[2] = 1 / worldScale[2];\n\n    // World location\n    // vec3.transformMat4(worldLocation, pivot, worldMatrix);\n    let x = pivot[0];\n    let y = pivot[1];\n    let z = pivot[2];\n    worldLocation[0] = worldMatrix[0] * x + worldMatrix[4] * y + worldMatrix[8] * z + worldMatrix[12];\n    worldLocation[1] = worldMatrix[1] * x + worldMatrix[5] * y + worldMatrix[9] * z + worldMatrix[13];\n    worldLocation[2] = worldMatrix[2] * x + worldMatrix[6] * y + worldMatrix[10] * z + worldMatrix[14];\n\n    // Inverse world location\n    inverseWorldLocation[0] = -worldLocation[0];\n    inverseWorldLocation[1] = -worldLocation[1];\n    inverseWorldLocation[2] = -worldLocation[2];\n  }\n\n  /**\n   * Update this skeletal node's children.\n   * Note that this does not update other skeletal nodes!\n   * It may be called by skeletal nodes to continue the update hierarchy.\n   *\n   * @param {Scene} scene\n   */\n  updateChildren(scene) {\n    let children = this.children;\n\n    for (let i = 0, l = children.length; i < l; i++) {\n      children[i].update(scene);\n    }\n  }\n\n  /**\n   * Allows inherited node classes to run extra transformations when billboarding.\n   * This is needed because the different model formats are in different vector spaces.\n   *\n   * @param {quat} rotation\n   */\n  convertBasis(rotation) {\n\n  }\n}\n\nconst NODE_SHARED_SIZE = 65;\n\n/**\n * Creates an array of skeletal nodes with shared memory.\n * The returned object contains the node array itself, the backing buffer, and all of the different shared arrays.\n *\n * @param {number} count\n * @param {function(new:SkeletalNode)=} Node\n * @return {Object}\n */\nexport function createSkeletalNodes(count, Node) {\n  let data = new Float32Array(count * NODE_SHARED_SIZE);\n  let nodes = [];\n  let offset = 0;\n  let count3 = count * 3;\n  let count4 = count * 4;\n  let count16 = count * 16;\n\n  // Allow to also create inherited nodes.\n  Node = Node || SkeletalNode;\n\n  let pivots = data.subarray(offset, offset + count3);\n  offset += count3;\n\n  let localLocations = data.subarray(offset, offset + count3);\n  offset += count3;\n\n  let localRotations = data.subarray(offset, offset + count4);\n  offset += count4;\n\n  let localScales = data.subarray(offset, offset + count3);\n  offset += count3;\n\n  let worldLocations = data.subarray(offset, offset + count3);\n  offset += count3;\n\n  let worldRotations = data.subarray(offset, offset + count4);\n  offset += count4;\n\n  let worldScales = data.subarray(offset, offset + count3);\n  offset += count3;\n\n  let inverseWorldLocations = data.subarray(offset, offset + count3);\n  offset += count3;\n\n  let invereseWorldRotations = data.subarray(offset, offset + count4);\n  offset += count4;\n\n  let inverseWorldScales = data.subarray(offset, offset + count3);\n  offset += count3;\n\n  let localMatrices = data.subarray(offset, offset + count16);\n  offset += count16;\n\n  let worldMatrices = data.subarray(offset, offset + count16);\n\n  for (let i = 0; i < count; i++) {\n    let i3 = i * 3;\n    let i33 = i3 + 3;\n    let i4 = i * 4;\n    let i44 = i4 + 4;\n    let i16 = i * 16;\n    let i1616 = i16 + 16;\n\n    nodes[i] = new Node([\n      pivots.subarray(i3, i33),\n      localLocations.subarray(i3, i33),\n      localRotations.subarray(i4, i44),\n      localScales.subarray(i3, i33),\n      worldLocations.subarray(i3, i33),\n      worldRotations.subarray(i4, i44),\n      worldScales.subarray(i3, i33),\n      inverseWorldLocations.subarray(i3, i33),\n      invereseWorldRotations.subarray(i4, i44),\n      inverseWorldScales.subarray(i3, i33),\n      localMatrices.subarray(i16, i1616),\n      worldMatrices.subarray(i16, i1616),\n    ]);\n  }\n\n  return {\n    data,\n    nodes,\n    pivots,\n    localLocations,\n    localRotations,\n    localScales,\n    worldLocations,\n    worldRotations,\n    worldScales,\n    inverseWorldLocations,\n    invereseWorldRotations,\n    inverseWorldScales,\n    localMatrices,\n    worldMatrices,\n  };\n}\n","import {vec3} from 'gl-matrix';\nimport Camera from './camera';\nimport {SceneNode} from './node';\n\n// Heap allocations needed for this module.\nlet ndcHeap = new Float32Array(3);\n\n/**\n * A scene.\n *\n * Every scene has its own list of model instances, and its own camera and viewport.\n *\n * In addition, every scene may have its own AudioContext if enableAudio() is called.\n * If audo is enabled, the AudioContext's listener's location will be updated automatically.\n * Note that due to browser policies, this may be done only after user interaction with the web page.\n */\nexport default class Scene {\n  /**\n   * @param {ModelViewer} viewer\n   */\n  constructor(viewer) {\n    let canvas = viewer.canvas;\n\n    /** @member {ModelViewer.viewer.ModelViewer} */\n    this.viewer = viewer;\n    /** @member {ModelViewer.viewer.Camera} */\n    this.camera = new Camera();\n    /** @member {Array<ModelViewer.viewer.ModelInstance>} */\n    this.instances = [];\n    /** @member {Set<ModelViewer.viewer.ModelInstance>} */\n    this.instanceSet = new Set();\n    /** @member {Array<ModelViewer.viewer.ModelView>} */\n    this.modelViews = [];\n    /** @member {Set<ModelViewer.viewer.ModelView>} */\n    this.modelViewSet = new Set();\n    /** @member {ModelViewer.viewer.SceneNode} */\n    this.node = new SceneNode();\n    /** @member {boolean} */\n    this.rendered = true;\n\n    /** @member {number} */\n    this.renderedInstances = 0;\n    /** @member {number} */\n    this.renderedParticles = 0;\n    /** @member {number} */\n    this.renderedBuckets = 0;\n    /** @member {number} */\n    this.renderCalls = 0;\n\n    /** @member {boolean} */\n    this.audioEnabled = false;\n    /** @member {?AudioContext} */\n    this.audioContext = null;\n\n    this.node.recalculateTransformation(this);\n    this.node.wasDirty = false;\n\n    // Use the whole canvas, and standard perspective projection values.\n    this.camera.viewport([0, 0, canvas.width, canvas.height]);\n    this.camera.perspective(Math.PI / 4, canvas.width / canvas.height, 8, 10000);\n  }\n\n  /**\n   * Creates an AudioContext if one wasn't created already, and resumes it if needed.\n   * The returned promise will resolve to whether it is actually running or not.\n   * It may stay in suspended state indefinitly until the client interact with the page, due to browser policies.\n   *\n   * @return {Promise}\n   */\n  async enableAudio() {\n    if (!this.audioContext) {\n      this.audioContext = new AudioContext();\n    }\n\n    if (this.audioContext.state !== 'suspended') {\n      await this.audioContext.resume();\n    }\n\n    this.audioEnabled = this.audioContext.state === 'running';\n\n    return this.audioEnabled;\n  }\n\n  /**\n   * Suspend the audio context.\n   */\n  disableAudio() {\n    if (this.audioContext) {\n      this.audioContext.suspend();\n    }\n\n    this.audioEnabled = false;\n  }\n\n  /**\n   * Sets the scene of the given instance.\n   * This is equivalent to instance.setScene(scene).\n   *\n   * @param {ModelViewer.viewer.ModelInstance} instance\n   * @return {boolean}\n   */\n  addInstance(instance) {\n    let instanceSet = this.instanceSet;\n\n    if (!instanceSet.has(instance)) {\n      instanceSet.add(instance);\n      this.instances.push(instance);\n\n      if (instance.scene) {\n        instance.scene.removeInstance(instance);\n      }\n\n      instance.modelView.sceneChanged(instance, this);\n      instance.scene = this;\n\n      if (!instance.parent) {\n        instance.setParent(this.node);\n      }\n\n      this.addView(instance.modelView);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Add a model view to this scene.\n   *\n   * @param {ModelView} modelView\n   */\n  addView(modelView) {\n    let modelViewSet = this.modelViewSet;\n\n    if (!modelViewSet.has(modelView)) {\n      modelViewSet.add(modelView);\n      this.modelViews.push(modelView);\n    }\n  }\n\n  /**\n   * Remove an instance from this scene.\n   *\n   * @param {ModelInstance} instance The instance to remove.\n   * @return {boolean}\n   */\n  removeInstance(instance) {\n    if (this.instanceSet.delete(instance)) {\n      let instances = this.instances;\n      instances.splice(instances.indexOf(instance), 1);\n\n      instance.modelView.sceneChanged(instance, null);\n      instance.scene = null;\n\n      if (instance.parent === this.node) {\n        instance.setParent(null);\n      }\n\n      this.removeView(instance.modelView);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Remove a model view from this scene.\n   *\n   * @param {ModelView} modelView\n   */\n  removeView(modelView) {\n    if (this.modelViewSet.delete(modelView)) {\n      let modelViews = this.modelViews;\n      modelViews.splice(modelViews.indexOf(modelView), 1);\n    }\n  }\n\n  /**\n   * Clear this scene.\n   */\n  clear() {\n    this.instances.length = 0;\n    this.instanceSet.clear();\n    this.modelViews.length = 0;\n    this.modelViewSet.clear();\n  }\n\n  /**\n   * Detach this scene from the viewer.\n   * Equivalent to viewer.removeScene(scene).\n   *\n   * @return {boolean}\n   */\n  detach() {\n    if (this.viewer) {\n      return this.viewer.removeScene(this);\n    }\n\n    return false;\n  }\n\n  /**\n   * Update this scene.\n   * This includes updating the scene's camera, the node hierarchy (model instances etc.), the model views, and the AudoContext's lisener's position if it exists.\n   */\n  update() {\n    if (this.rendered) {\n      // Update all of the nodes, instances, etc.\n      this.node.updateChildren(this);\n\n      this.renderedInstances = 0;\n      this.renderedParticles = 0;\n      this.renderedBuckets = 0;\n      this.renderCalls = 0;\n\n      // Update the rendering data\n      for (let modelView of this.modelViews) {\n        modelView.update(this);\n\n        this.renderedInstances += modelView.renderedInstances;\n        this.renderedParticles += modelView.renderedParticles;\n        this.renderedBuckets += modelView.renderedBuckets;\n        this.renderCalls += modelView.renderCalls;\n      }\n\n      if (this.audioContext) {\n        let [x, y, z] = this.camera.location;\n\n        this.audioContext.listener.setPosition(-x, -y, -z);\n      }\n\n      this.camera.update();\n    }\n  }\n\n  /**\n   * Tests if an instance is currently visible in this scene.\n   * If the model has a bounding sphere, it will be used. Otherwise checks only the location of the instance.\n   *\n   * @param {ModelInstance} instance\n   * @return {boolean}\n   */\n  isVisible(instance) {\n    let model = instance.model;\n    let bounds = model.bounds;\n\n    // If the model has a bounding sphere in it, do a sphere test.\n    // Otherwise do a point test.\n    if (bounds) {\n      let center = bounds.center;\n      let location = instance.worldLocation;\n\n      ndcHeap[0] = location[0] + center[0];\n      ndcHeap[1] = location[1] + center[1];\n      ndcHeap[2] = location[2] + center[2];\n\n      return this.camera.testSphere(ndcHeap, bounds.radius);\n    } else {\n      let worldProjectionMatrix = this.camera.worldProjectionMatrix;\n\n      // This test checks whether the instance's position is visible in NDC space. In other words, that it lies in [-1, 1] on all axes\n      vec3.transformMat4(ndcHeap, instance.worldLocation, worldProjectionMatrix);\n      if (ndcHeap[0] >= -1 && ndcHeap[0] <= 1 && ndcHeap[1] >= -1 && ndcHeap[1] <= 1 && ndcHeap[2] >= -1 && ndcHeap[2] <= 1) {\n        return true;\n      }\n\n      return false;\n    }\n  }\n\n  /**\n   * Render all opaque things in this scene.\n   * Automatically applies the camera's viewport.\n   */\n  renderOpaque() {\n    if (this.rendered) {\n      this.viewport();\n\n      for (let modelView of this.modelViews) {\n        modelView.renderOpaque(this);\n      }\n    }\n  }\n\n  /**\n   * Renders all translucent things in this scene.\n   * Automatically applies the camera's viewport.\n   */\n  renderTranslucent() {\n    if (this.rendered) {\n      this.viewport();\n\n      for (let modelView of this.modelViews) {\n        modelView.renderTranslucent(this);\n      }\n    }\n  }\n\n  /**\n   * Set the viewport to that of this scene's camera.\n   */\n  viewport() {\n    let viewport = this.camera.rect;\n\n    this.viewer.gl.viewport(viewport[0], viewport[1], viewport[2], viewport[3]);\n  }\n\n  /**\n   * Clear all of the emitted objects in this scene.\n   */\n  clearEmittedObjects() {\n    for (let instance of this.instances) {\n      instance.clearEmittedObjects();\n    }\n  }\n}\n","import EventEmitter from 'events';\n\n/**\n * A viewer resource.\n * Generally speaking resources are created via viewer.load().\n * Resources include models, textures, or any arbitrary file types that have handlers (e.g. INI).\n */\nexport default class Resource extends EventEmitter {\n  /**\n   * @param {Object} resourceData\n   */\n  constructor({ viewer, handler, extension, pathSolver, fetchUrl = '', path }) {\n    super();\n\n    /** @member {ModelViewer.viewer.ModelViewer} */\n    this.viewer = viewer;\n    /** @member {Handler} */\n    this.handler = handler || null;\n    /** @member {string} */\n    this.extension = extension || '';\n    /** @member {function(?)} */\n    this.pathSolver = pathSolver || null;\n    /** @member {string} */\n    this.fetchUrl = fetchUrl;\n    /** @member {boolean} */\n    this.ok = false;\n    /** @member {boolean} */\n    this.loaded = false;\n    /** @member {string} */\n    this.path = path;\n\n    // Ignore EventEmitter warnings.\n    // Mostly relevant when loading many models that reference the same texture / event object.\n    this.setMaxListeners(0);\n  }\n\n  /**\n   * Will be called when the data for this resource is ready.\n   * If it was loaded from memory, it will be called instantly.\n   * Otherwise it will be called when the server fetch finishes, assuming it succeeded.\n   *\n   * @param {string|ArrayBuffer|Image} src\n   */\n  loadData(src) {\n    this.loaded = true;\n\n    // In case the resource parsing/loading fails, e.g. if the source is not valid.\n    try {\n      this.load(src);\n\n      this.ok = true;\n\n      this.lateLoad();\n\n      this.emit('load', this);\n      this.emit('loadend', this);\n    } catch (e) {\n      this.error('InvalidData', e);\n    }\n  }\n\n  /**\n   * @param {*} src\n   */\n  load(src) {\n\n  }\n\n  /**\n   * Remove this resource from its viewer's cache.\n   * Equivalent to viewer.unload(resource).\n   *\n   * @return {boolean}\n   */\n  detach() {\n    return this.viewer.unload(this);\n  }\n\n  /**\n   * This is used by models to finish loading their instances and model views, in case any are added before the model finished loaded.\n   */\n  lateLoad() {\n\n  }\n\n  /**\n   * Called when an error happens while loading the resource.\n   * This includes both fetching and parsing errors.\n   *\n   * @param {string} error\n   * @param {*} reason\n   */\n  error(error, reason) {\n    this.loaded = true;\n\n    console.info('[ResLoad] Failed on ', this.path, this.fetchUrl)\n    // this.emit('error', this, error, reason);\n    this.emit('loadend', this);\n  }\n\n  /**\n   * Similar to attaching an event listener to the 'loadend' event, but handles the case where the resource already loaded, and the callback should still be called.\n   *\n   * @return {Promise}\n   */\n  whenLoaded() {\n    return new Promise((resolve, reject) => {\n      if (this.loaded) {\n        resolve(this);\n      } else {\n        this.once('loadend', () => resolve(this));\n      }\n    });\n  }\n}\n","import Resource from './resource';\n\n/**\n * A texture.\n */\nexport default class Texture extends Resource {\n  /**\n   * @param {Object} resourceData\n   */\n  constructor(resourceData) {\n    super(resourceData);\n\n    /** @param {number} */\n    this.width = 0;\n    /** @param {number} */\n    this.height = 0;\n    /** @param {boolean} */\n    this.wrapS = false;\n    /** @param {boolean} */\n    this.wrapT = false;\n  }\n\n  /**\n   * Set the WebGL wrap and filter values.\n   *\n   * @param {number} wrapS Wrap on the S axis.\n   * @param {number} wrapT Wrap on the T axis.\n   * @param {number} magFilter Maginfying filter.\n   * @param {number} minFilter Minifying filter.\n   */\n  setParameters(wrapS, wrapT, magFilter, minFilter) {\n    const gl = this.viewer.gl;\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrapS);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrapT);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter);\n  }\n\n  /**\n   * @param {number} unit\n   */\n  bind(unit) {\n    let viewer = this.viewer;\n    let gl = this.viewer.gl;\n\n    viewer.webgl.bindTexture(this, unit);\n\n    if (this.wrapS) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    }\n\n    if (this.wrapT) {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    }\n  }\n}\n","import {imageToImageData, scaleNPOT} from '../../../common/canvas';\nimport Texture from '../../texture';\n\n/**\n * A texture handler for image sources.\n */\nexport default class ImageTexture extends Texture {\n  /**\n   * @param {HTMLImageElement|HTMLVideoElement|HTMLCanvasElement|ImageData|WebGLTexture} src\n   */\n  load(src) {\n    // src can either be an Image, or an ArrayBuffer, depending on the way it was loaded\n    if (src instanceof HTMLImageElement || src instanceof HTMLVideoElement || src instanceof HTMLCanvasElement || src instanceof ImageData) {\n      let gl = this.viewer.gl;\n\n      if (!(src instanceof ImageData)) {\n        src = imageToImageData(src);\n      }\n\n      // Upscale to POT if the size is NPOT.\n      this.originalData = src;\n      src = scaleNPOT(src);\n\n      let id = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, id);\n      this.setParameters(gl.REPEAT, gl.REPEAT, gl.LINEAR, gl.LINEAR_MIPMAP_LINEAR);\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, src);\n      gl.generateMipmap(gl.TEXTURE_2D);\n\n      this.imageData = src;\n      this.width = src.width; // Note: might not be the same as 'image.width' and 'image.height' due to NPOT upscaling.\n      this.height = src.height;\n      this.webglResource = id;\n    } else if (src instanceof WebGLTexture) {\n      this.webglResource = src;\n    }\n  }\n}\n","import ImageTexture from './texture';\n\nexport default {\n  extensions: [['.png', 'image'], ['.jpg', 'image'], ['.gif', 'image']],\n  Constructor: ImageTexture,\n};\n","import Resource from './resource';\n\n/**\n * A generic resource.\n */\nexport default class GenericResource extends Resource {\n  /**\n   * @param {Object} resourceData\n   */\n  constructor(resourceData) {\n    super(resourceData);\n\n    /** @member {*} */\n    this.data = null;\n  }\n\n  /**\n   * @param {*} data\n   */\n  load(data) {\n    this.data = data;\n  }\n}\n","import EventEmitter from 'events';\nimport { createTextureAtlas } from '../common/canvas';\nimport fetchDataType from '../common/fetchdatatype';\nimport WebGL from './gl/gl';\nimport PromiseResource from './promiseresource';\nimport Scene from './scene';\nimport imageTextureHandler from './handlers/imagetexture/handler';\nimport ImageTexture from './handlers/imagetexture/texture';\nimport GenericResource from './genericresource';\n\n/**\n * A model viewer.\n */\nexport default class ModelViewer extends EventEmitter {\n  /**\n   * @param {HTMLCanvasElement} canvas\n   * @param {?Object} options\n   */\n  constructor(canvas, options) {\n    super();\n\n    /** @member {Map<string, Resource>} */\n    this.resourcesMap = new Map();\n\n    /** @member {Array<Resource>} */\n    this.resources = [];\n\n    /**\n     * The speed of animation. Note that this is not the time of a frame in milliseconds, but rather the amount of animation frames to advance each update.\n     *\n     * @member {number}\n     */\n    this.frameTime = 1000 / 60;\n\n    /** @member {HTMLCanvasElement} */\n    this.canvas = canvas;\n\n    /** @member {WebGL} */\n    this.webgl = new WebGL(canvas, options);\n\n    /** @member {WebGLRenderingContext} */\n    this.gl = this.webgl.gl;\n\n    /** @member {Map<string, ShaderProgram>} */\n    this.shaderMap = new Map();\n\n    /** @member {Set<Object>} */\n    this.handlers = new Set();\n\n    /** @member {Array<Scene>} */\n    this.scenes = [];\n\n    /** @member {Set} */\n    this.resourcesLoading = new Set();\n\n    // Track when resources start loading.\n    this.on('loadstart', (target) => {\n      this.resourcesLoading.add(target);\n    });\n\n    // Track when resources end loading.\n    this.on('loadend', (target) => {\n      this.resourcesLoading.delete(target);\n\n      // If there are currently no resources loading, dispatch the 'idle' event.\n      if (this.resourcesLoading.size === 0) {\n        // A timeout is used so that this event will arrive after the loadend event being processed.\n        // Any nicer solution?\n        setTimeout(() => this.emit('idle'), 0);\n      }\n    });\n\n    this.noCulling = false; // Set to true to disable culling viewer-wide.\n    this.noUpdating = false;\n\n    this.textureAtlases = {};\n\n    /**\n     * The number of instances that a bucket should be able to contain.\n     *\n     * @member {number}\n     */\n    this.batchSize = 8;\n\n    /** @member {number} */\n    this.renderedInstances = 0;\n    /** @member {number} */\n    this.renderedParticles = 0;\n    /** @member {number} */\n    this.renderedBuckets = 0;\n    /** @member {number} */\n    this.renderedScenes = 0;\n    /** @member {number} */\n    this.renderCalls = 0;\n\n    /**\n     * A viewer-wide flag.\n     * If it is false, not only will audio not run, but in fact audio files won't even be fetched in the first place.\n     * If audio is desired, this should be set to true before loading models that use audio.\n     *\n     * @member {boolean}\n     */\n    this.enableAudio = false;\n\n    this.addHandler(imageTextureHandler);\n  }\n\n  /**\n   * Add an handler.\n   *\n   * @param {Object} handler\n   * @return {boolean}\n   */\n  addHandler(handler) {\n    if (handler) {\n      let handlers = this.handlers;\n\n      // Allow to pass also the handler's module for convenience.\n      if (handler.handler) {\n        handler = handler.handler;\n      }\n\n      // Check to see if this handler was added already.\n      if (!handlers.has(handler)) {\n        // Check if the handler has a loader, and if so load it.\n        if (handler.load && !handler.load(this)) {\n          this.emit('error', this, 'InvalidHandler', 'FailedToLoad');\n          return false;\n        }\n\n        handlers.add(handler);\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Add a scene.\n   *\n   * @return {Scene}\n   */\n  addScene() {\n    let scene = new Scene(this);\n\n    this.scenes.push(scene);\n\n    return scene;\n  }\n\n  /**\n   * Remove a scene.\n   *\n   * @param {Scene} scene The scene to remove.\n   * @return {boolean}\n   */\n  removeScene(scene) {\n    let scenes = this.scenes;\n    let index = scenes.indexOf(scene);\n\n    if (index !== -1) {\n      scenes.splice(index, 1);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Removes all of the scenes in the viewer.\n   */\n  clear() {\n    let scenes = this.scenes;\n\n    for (let i = scenes.length; i--;) {\n      this.removeScene(scenes[i]);\n    }\n  }\n\n  /**\n   * Look for a handler matching the given extension.\n   *\n   * @param {string} ext\n   * @return {?Object}\n   */\n  findHandler(ext) {\n    for (let handler of this.handlers) {\n      for (let extention of handler.extensions) {\n        if (ext === extention[0]) {\n          return [handler, extention[1]];\n        }\n      }\n    }\n  }\n  appendParam = (url, params) => {\n    if (!url.startsWith('blob:')&&params) {\n      for (const key in params) {\n        if (params[key]) {\n          url += (url.indexOf('?') == -1 ? '?' : '&');\n          url += key;\n          url += \"=\";\n          url += params[key];\n        }\n      }\n    }\n    return url;\n  }\n\n  /**\n   * Load something. The meat of this whole project.\n   *\n   * @param {?} src The source used for the load.\n   * @param {function(?)} pathSolver The path solver used by this load, and any subsequent loads that are caused by it (for example, a model that loads its textures).\n   * @return {Resource}\n   */\n  load(src, pathSolver) {\n    if (src) {\n      let extension;\n      let serverFetch;\n\n      let originalSrc = typeof src === \"string\" ? src : null;\n\n      // Built-in texture source\n      if ((src instanceof HTMLImageElement) || (src instanceof HTMLVideoElement) || (src instanceof HTMLCanvasElement) || (src instanceof ImageData) || (src instanceof WebGLTexture)) {\n        extension = '.png';\n        serverFetch = false;\n        pathSolver = null;\n      } else {\n        [src, extension, serverFetch] = pathSolver(src);\n      }\n\n      let handlerAndDataType = this.findHandler(extension.toLowerCase());\n\n      // Is there an handler for this file type?\n      if (handlerAndDataType) {\n        let resource = this.resourcesMap.get(src);\n\n        if (resource) {\n          return resource;\n        }\n\n        let handler = handlerAndDataType[0];\n\n        resource = new handler.Constructor({ viewer: this, handler, extension, pathSolver, fetchUrl: serverFetch ? src : '', path: originalSrc });\n\n        this.resources.push(resource);\n        this.resourcesMap.set(src, resource);\n\n        this.registerEvents(resource);\n\n        resource.emit('loadstart', resource);\n\n        if (serverFetch) {\n          let dataType = handlerAndDataType[1];\n          \n          src = this.appendParam(src, { src: originalSrc });\n          fetchDataType(src, dataType)\n            .then((response) => {\n              let data = response.data;\n\n              if (response.ok) {\n                resource.loadData(data);\n              } else {\n                resource.error('FailedToFetch');\n                // this.emit('error', resource, response.error, data);\n              }\n            });\n        } else {\n          resource.loadData(src);\n        }\n\n        return resource;\n      } else {\n        this.emit('error', this, 'MissingHandler', [src, extension, serverFetch]);\n\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Check whether the given key maps to a resource in the cache.\n   *\n   * @param {*} key\n   * @return {boolean}\n   */\n  exists(key) {\n    return this.resourcesMap.has(key);\n  }\n\n  /**\n   * Load a resource generically.\n   * Unlike load(), this does not use handlers or construct any internal objects.\n   * If no callback is given, the resource's data is the fetch data.\n   * If a callback is given, the resource's data is the value returned by it when called with the fetch data.\n   * If a callback returns a promise, the resource's data will be the result of the promise.\n   *\n   * @param {string} path\n   * @param {string} dataType\n   * @param {?function} callback\n   * @return {GenericResource}\n   */\n  loadGeneric(path, dataType, callback, originalPath) {\n    let resource = this.resourcesMap.get(path);\n\n    if (resource) {\n      return resource;\n    }\n\n    resource = new GenericResource({ viewer: this, handler: callback, fetchUrl: path, path: originalPath });\n\n    this.resources.push(resource);\n    this.resourcesMap.set(path, resource);\n\n    this.registerEvents(resource);\n\n    resource.emit('loadstart', resource);\n\n    function appyCallback(data) {\n      if (callback) {\n        data = callback(data);\n\n        if (data instanceof Promise) {\n          data.then((data) => resource.loadData(data));\n        } else {\n          resource.loadData(data);\n        }\n      } else {\n        resource.loadData(data);\n      }\n    }\n    if (path instanceof ArrayBuffer) {\n      appyCallback(path);\n    }\n    else {\n      path = this.appendParam(path, { dataType: dataType, src: originalPath, });\n      fetchDataType(path, dataType)\n        .then((response) => {\n          let data = response.data;\n\n          if (response.ok) {\n            appyCallback(data);\n          } else {\n            resource.error('FailedToFetch');\n\n            // this.emit('error', resource, response.error, data);\n          }\n        });\n    }\n    return resource;\n  }\n\n  /**\n   * Unload a resource.\n   * Note that this only removes the resource from the viewer's cache.\n   * If it's being referenced and used e.g. by a scene, it will not be garbage collected.\n   *\n   * @param {Resource} resource\n   * @return {boolean}\n   */\n  unload(resource) {\n    // Loop over all of the values and find this resource.\n    // This is needed to support unloading in-memory resources that will have no fetchUrl.\n    for (let [key, value] of this.resourcesMap) {\n      if (value === resource) {\n        this.resourcesMap.delete(key);\n        this.resources.splice(this.resources.indexOf(resource), 1);\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Load and cache a shader in the viewer.\n   *\n   * @param {string} name\n   * @param {string} vertex\n   * @param {string} fragment\n   * @return {ShaderProgram}\n   */\n  loadShader(name, vertex, fragment) {\n    let map = this.shaderMap;\n\n    if (!map.has(name)) {\n      map.set(name, this.webgl.createShaderProgram(vertex, fragment));\n    }\n\n    return map.get(name);\n  }\n\n  /**\n   * Load a texture atlas and cache it in the viewer.\n   * The atlas is made from an array (or any iterable object) of textures.\n   *\n   * @param {string} name\n   * @param {Iterable<Texture>} textures\n   * @return {ImageTexture}\n   */\n  loadTextureAtlas(name, textures) {\n    let textureAtlases = this.textureAtlases;\n\n    if (!textureAtlases[name]) {\n      let textureAtlas = { texture: new ImageTexture({ viewer: this }), columns: 0, rows: 0 };\n\n      // Promise that there is a future load that the code cannot know about yet, so whenAllLoaded() isn't called prematurely.\n      let promise = this.promise();\n\n      // When all of the textures are loaded, it's time to construct a texture atlas\n      this.whenLoaded(textures)\n        .then((textures) => {\n          for (let texture of textures) {\n            // If a texture failed to load, don't create the atlas.\n            if (!texture.ok) {\n              // Resolve the promise.\n              promise.resolve();\n\n              return;\n            }\n          }\n\n          let atlasData = createTextureAtlas(textures.map((texture) => texture.imageData));\n\n          textureAtlas.texture.loadData(atlasData.imageData);\n          textureAtlas.columns = atlasData.columns;\n          textureAtlas.rows = atlasData.rows;\n\n          // Resolve the promise.\n          promise.resolve();\n        });\n\n      textureAtlases[name] = textureAtlas;\n    }\n\n    return textureAtlases[name];\n  }\n\n  /**\n   * Returns the texture part of a texture atlas, or null if it doesn't exist.\n   *\n   * @param {string} name\n   * @return {Texture|null}\n   */\n  getTextureAtlas(name) {\n    let atlas = this.textureAtlases[name];\n\n    if (atlas) {\n      return atlas.texture;\n    }\n\n    return null;\n  }\n\n  /**\n   * Starts loading a new empty resource, and returns it.\n   * This empty resource will block the \"idle\" event (and thus whenAllLoaded) until it's resolved.\n   * This is used when a resource might get loaded in the future, but it is not known what it is yet.\n   *\n   * @return {PromiseResource}\n   */\n  promise() {\n    let resource = new PromiseResource();\n\n    this.registerEvents(resource);\n\n    resource.promise();\n\n    return resource;\n  }\n\n  /**\n   * Returns a promise that will be resolved once all of the given resources get loaded.\n   * The promise will resolve instantly if they are already loaded.\n   *\n   * @param {Iterable<Resource>} resources The resources to wait for.\n   * @return {Promise}\n   */\n  whenLoaded(resources) {\n    let promises = [];\n\n    for (let resource of resources) {\n      // Only process actual resources.\n      if (resource && resource.whenLoaded) {\n        promises.push(resource.whenLoaded());\n      }\n    }\n\n    return Promise.all(promises);\n  }\n\n  /**\n   * Returns a promise that will be resolved once all of the currently loading resources get loaded.\n   * The promise will resolve instantly if nothing is being loaded.\n   *\n   * @return {Promise}\n   */\n  whenAllLoaded() {\n    return new Promise((resolve, reject) => {\n      if (this.resourcesLoading.size === 0) {\n        resolve(this);\n      } else {\n        this.once('idle', () => resolve(this));\n      }\n    });\n  }\n\n  /**\n   * Returns a promise that will be resolved with the canvas blob.\n   *\n   * @return {Promise<Blob>}\n   */\n  toBlob() {\n    return new Promise((resolve) => this.canvas.toBlob((blob) => resolve(blob)));\n  }\n\n  /**\n   * Update and render a frame.\n   */\n  updateAndRender() {\n    this.update();\n    this.startFrame();\n    this.render();\n  }\n\n  /**\n   * Update.\n   */\n  update() {\n    let scenes = this.scenes;\n\n    this.renderedInstances = 0;\n    this.renderedParticles = 0;\n    this.renderedBuckets = 0;\n    this.renderedScenes = 0;\n    this.renderCalls = 0;\n\n    // Update all of the scenes.\n    for (let i = 0, l = scenes.length; i < l; i++) {\n      let scene = scenes[i];\n\n      if (scene.rendered) {\n        scene.update();\n\n        this.renderedInstances += scene.renderedInstances;\n        this.renderedParticles += scene.renderedParticles;\n        this.renderedBuckets += scene.renderedBuckets;\n        this.renderedScenes += 1;\n        this.renderCalls += scene.renderCalls;\n      }\n    }\n  }\n\n  /**\n   * Clears the WebGL buffer.\n   * Called automatically by updateAndRender().\n   * Call this at some point before render() if you need more control.\n   */\n  startFrame() {\n    let gl = this.gl;\n\n    // See https://www.opengl.org/wiki/FAQ#Masking\n    gl.depthMask(1);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  }\n\n  /**\n   * Render.\n   */\n  render() {\n    this.renderOpaque();\n    this.renderTranslucent();\n  }\n\n  /**\n   * Render opaque things.\n   */\n  renderOpaque() {\n    for (let scene of this.scenes) {\n      scene.renderOpaque();\n    }\n  }\n\n  /**\n   * Render translucent things.\n   */\n  renderTranslucent() {\n    for (let scene of this.scenes) {\n      scene.renderTranslucent();\n    }\n  }\n\n  /**\n   * A shortcut to register the standard events to the given resource for the viewer, so as to forward events to the client.\n   *\n   * @param {Resource} resource\n   */\n  registerEvents(resource) {\n    ['loadstart', 'load', 'error', 'loadend'].map((e) => resource.on(e, (...data) => this.emit(e, ...data)));\n  }\n\n  /**\n   * Clear all of the emitted objects in this viewer.\n   */\n  clearEmittedObjects() {\n    for (let scene of this.scenes) {\n      scene.clearEmittedObjects();\n    }\n  }\n}\n","/**\n * A model view.\n *\n * Model views are used in cases where you want instances of the same model to have different rendering properties.\n * It is used for texture overriding.\n */\nexport default class ModelView {\n  /**\n   * @param {Model} model\n   */\n  constructor(model) {\n    /** @member {Model} */\n    this.model = model;\n\n    this.instanceSet = new Set();\n    this.sceneData = new Map();\n\n    this.renderedInstances = 0;\n    this.renderedParticles = 0;\n    this.renderedBuckets = 0;\n    this.renderCalls = 0;\n  }\n\n  /**\n   * Get a shallow copy of this view.\n   *\n   * A shallow copy in this context means an object that any model view can be compared against.\n   * This is used in equals() to test if two model views share the same properties.\n   *\n   * @return {Object|null}\n   */\n  getShallowCopy() {\n    return null;\n  }\n\n  /**\n   * Given a shallow copy returned by getShallowCopy(), apply it to this model view.\n   *\n   * @param {Object} view\n   */\n  applyShallowCopy(view) {\n\n  }\n\n  /**\n   * Check if this model view is comparable to the given shallow view.\n   *\n   * @param {Object} view\n   * @return {boolean}\n   */\n  equals(view) {\n    return true;\n  }\n\n  /**\n   * Called by the owning model when it finishes loading.\n   */\n  lateLoad() {\n    for (let instance of this.instanceSet) {\n      this.addSceneData(instance, instance.scene);\n    }\n  }\n\n  /**\n   * Add new per-scene data for the given instances.\n   *\n   * @param {ModelInstance} instance\n   * @param {Scene} scene\n   */\n  addSceneData(instance, scene) {\n    if (this.model.ok && scene) {\n      let sceneData = this.sceneData;\n      let data = sceneData.get(scene);\n\n      if (!data) {\n        data = this.createSceneData(scene);\n\n        sceneData.set(scene, data);\n      }\n\n      data.instances.push(instance);\n    }\n  }\n\n  /**\n   * Add a new model instance to this model view.\n   * If the instance was alraedy in this model view, returns false, otherwise returns true.\n   *\n   * @param {ModelInstance} instance\n   * @return {boolean}\n   */\n  addInstance(instance) {\n    let instanceSet = this.instanceSet;\n\n    if (!instanceSet.has(instance)) {\n      // If the instance is already in another view, remove it first.\n      // This is always true, except when the instance is created and added to its first view.\n      let modelView = instance.modelView;\n      if (modelView) {\n        modelView.removeInstance(instance);\n      }\n\n      // Add the instance\n      instanceSet.add(instance);\n      instance.modelView = this;\n\n      this.addSceneData(instance, instance.scene);\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Create a new scene data object.\n   *\n   * @param {Scene} scene\n   * @return {Object}\n   */\n  createSceneData(scene) {\n    return {\n      scene,\n      modelView: this,\n      baseIndex: 0,\n      instances: [],\n      buckets: [],\n      usedBuckets: 0,\n    };\n  }\n\n  /**\n   * Remove a model instance from this model view.\n   * If the instance wasn't in this model view, returns false, otherwise returns true.\n   *\n   * @param {ModelInstance} instance\n   * @return {boolean}\n   */\n  removeInstance(instance) {\n    let instanceSet = this.instanceSet;\n\n    if (instanceSet.delete(instance)) {\n      let sceneData = this.sceneData;\n      let scene = instance.scene;\n\n      if (scene) {\n        let data = sceneData.get(scene);\n        let instances = data.instances;\n        let buckets = data.buckets;\n\n        // Remove the instance from its scene data.\n        instances.splice(instances.indexOf(instance), 1);\n\n        // See how many buckets are needed to hold all of the instances.\n        let neededBuckets = Math.ceil(instances.length / this.model.batchSize);\n\n        // If there are more buckets than are needed, remove them.\n        if (neededBuckets < buckets.length) {\n          buckets.length = neededBuckets;\n        }\n      }\n\n      instance.modelView = null;\n\n      // If this view has no instances, ask the model to remove it.\n      if (instanceSet.size === 0) {\n        // / TODO: THIS NEEDS TO ALSO UPDATE ALL SCENES???\n        this.model.removeView(this);\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Called every time an instance changes its scene via scene.addInstance(instance) or instance.setScene(scene).\n   *\n   * @param {ModelInstance} instance\n   * @param {Scene} scene\n   */\n  sceneChanged(instance, scene) {\n    if (this.model.ok) {\n      let sceneData = this.sceneData;\n      let oldScene = instance.scene;\n\n      if (oldScene) {\n        let data = sceneData.get(oldScene);\n        let instances = data.instances;\n        let buckets = data.buckets;\n\n        // Remove the instance from its scene data.\n        instances.splice(instances.indexOf(instance), 1);\n\n        // See how many buckets are needed to hold all of the instances.\n        let neededBuckets = Math.ceil(instances.length / this.model.batchSize);\n\n        // If there are more buckets than are needed, remove them.\n        if (neededBuckets < buckets.length) {\n          buckets.length = neededBuckets;\n        }\n      }\n\n      if (scene) {\n        this.addSceneData(instance, scene);\n      }\n    }\n  }\n\n  /**\n   * Clear this model view from instances.\n   *\n   * TODO:Implement this.\n   */\n  clear() {\n\n  }\n\n  /**\n   * Detach this model view from its model viewer.\n   *\n   * TODO: Implement this.\n   */\n  detach() {\n\n  }\n\n  /**\n   * Update this model view.\n   * This invovles updating all of its buckets, particle emitters, and whatever else is needed.\n   *\n   * If this model view actually has data for the given scene, it will be returned. Otherwise null is returned.\n   *\n   * @param {Scene} scene\n   * @return {Object|null}\n   */\n  update(scene) {\n    if (this.model.ok) {\n      let data = this.sceneData.get(scene);\n\n      if (data) {\n        let instancesCount = data.instances.length;\n        let buckets = data.buckets;\n\n        data.baseIndex = 0;\n        data.usedBuckets = 0;\n\n        while (data.baseIndex < instancesCount) {\n          if (data.usedBuckets === buckets.length) {\n            buckets[data.usedBuckets] = new this.model.handler.Bucket(this);\n          }\n\n          data.baseIndex = buckets[data.usedBuckets].fill(data);\n          data.usedBuckets += 1;\n        }\n\n        return data;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Tell the model to render opaque things in this model view.\n   *\n   * @param {Scene} scene\n   */\n  renderOpaque(scene) {\n    let data = this.sceneData.get(scene);\n\n    if (data && data.baseIndex) {\n      this.model.renderOpaque(data);\n    }\n  }\n\n  /**\n   * Tell the model to render translucent things in this model view.\n   *\n   * @param {Scene} scene\n   */\n  renderTranslucent(scene) {\n    let data = this.sceneData.get(scene);\n\n    if (data && data.baseIndex) {\n      this.model.renderTranslucent(data);\n    }\n  }\n}\n","import ModelView from './modelview';\n\n/**\n * A textured model view.\n * Gives a consistent API for texture overloading for handlers that use it.\n */\nexport default class TexturedModelView extends ModelView {\n  /**\n   * @param {Model} model\n   */\n  constructor(model) {\n    super(model);\n\n    /** @member {Map<Texture, Texture>} */\n    this.textures = new Map();\n  }\n\n  /**\n   * The shallow copy of a textured model view is a map of its textures.\n   *\n   * @return {Object}\n   */\n  getShallowCopy() {\n    return {textures: new Map(this.textures)};\n  }\n\n  /**\n   * Apply the texture map from the given shallow view.\n   *\n   * @param {Object} view\n   */\n  applyShallowCopy(view) {\n    let textures = this.textures;\n\n    for (let [src, dst] of view.textures) {\n      textures.set(src, dst);\n    }\n  }\n\n  /**\n   * Two textured model views are equal if their texture maps have the same mapping.\n   *\n   * @param {Object} view\n   * @return {boolean}\n   */\n  equals(view) {\n    let textures = this.textures;\n    let dstTextures = view.textures;\n\n    if (textures.length !== dstTextures.length) {\n      return false;\n    }\n\n    for (let [src, dst] of dstTextures) {\n      if (textures.get(src) !== dst) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n}\n","import Resource from './resource';\n\n/**\n * A model.\n */\nexport default class Model extends Resource {\n  /**\n   * @param {Object} resourceData\n   */\n  constructor(resourceData) {\n    super(resourceData);\n\n    /** @member {number} */\n    this.batchSize = resourceData.viewer.batchSize;\n\n    /** @member {Array<ModelInstance>} */\n    this.instances = [];\n\n    /** @member {Array<ModelView>} */\n    this.views = [];\n  }\n\n  /**\n   * Adds a new instance to this model, and returns it.\n   *\n   * @return {ModelInstance}\n   */\n  addInstance() {\n    let views = this.views;\n    let instance = new this.handler.Instance(this);\n\n    this.instances.push(instance);\n\n    if (views.length === 0) {\n      this.addView();\n    }\n\n    views[0].addInstance(instance);\n\n    if (this.ok) {\n      instance.load();\n    }\n\n    return instance;\n  }\n\n  /**\n   * Render opaque things.\n   *\n   * @param {*} data\n   * @param {*} scene\n   * @param {*} modelView\n   */\n  renderOpaque(data, scene, modelView) {\n\n  }\n\n  /**\n   * Render translucent things.\n   *\n   * @param {*} data\n   * @param {*} scene\n   * @param {*} modelView\n   */\n  renderTranslucent(data, scene, modelView) {\n\n  }\n\n  /**\n   * Create a new model view for this model, and return it.\n   *\n   * @return {ModelView}\n   */\n  addView() {\n    let view = new this.handler.View(this);\n\n    this.views.push(view);\n\n    return view;\n  }\n\n  /**\n   * Remove a model view from this model.\n   *\n   * @param {*} modelView\n   */\n  removeView(modelView) {\n    let views = this.views;\n\n    views.splice(views.indexOf(modelView), 1);\n  }\n\n  /**\n   * Called every time an instance changes a model view.\n   * This generally corresponds to the instance creation, and to texture overriding.\n   *\n   * @param {ModelInstance} instance\n   * @param {Object} shallowView\n   */\n  viewChanged(instance, shallowView) {\n    // Check if there's another view that matches the instance\n    for (let view of this.views) {\n      if (view.equals(shallowView)) {\n        view.addInstance(instance);\n        return;\n      }\n    }\n\n    // Since no view matched, create a new one\n    let view = this.addView();\n\n    view.applyShallowCopy(shallowView);\n    view.addInstance(instance);\n\n    // If the instance is already in a scene, and this is a new view, it will not be in the scene, so add it.\n    if (instance.scene) {\n      instance.scene.addView(view);\n    }\n  }\n\n  /**\n   * Called when the model finishes loading.\n   * Automatically finalizes loading for all of the model instances and views of this model.\n   */\n  lateLoad() {\n    for (let instance of this.instances) {\n      instance.load();\n    }\n\n    for (let view of this.views) {\n      view.lateLoad();\n    }\n  }\n}\n","import Model from './model';\n\n/**\n * A textured model.\n * Gives a consistent API for texture overloading for handlers that use it.\n */\nexport default class TexturedModel extends Model {\n  /**\n   * Bind a texture to some texture unit.\n   * Checks the model view for an override.\n   *\n   * @param {Texture} texture\n   * @param {number} unit\n   * @param {ModelView} modelView\n   */\n  bindTexture(texture, unit, modelView) {\n    let viewer = this.viewer;\n    let textures = modelView.textures;\n\n    if (textures.has(texture)) {\n      texture = textures.get(texture);\n    }\n\n    // If the texture exists, bind it.\n    // Otherwise, bind null, which will result in a black texture being bound to avoid console errors.\n    if (texture) {\n      texture.bind(unit);\n    } else {\n      viewer.webgl.bindTexture(null, unit);\n    }\n  }\n}\n","import TexturedModel from '../../texturedmodel';\n\n/**\n * A geometry model.\n *\n * Used to render simple geometric shapes.\n */\nexport default class GeometryModel extends TexturedModel {\n  /**\n   * Load the model.\n   *\n   * @param {Object} src\n   */\n  load(src) {\n    const gl = this.viewer.gl;\n\n    let geometry = src.geometry;\n    let material = src.material;\n\n    let vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry.vertices, gl.STATIC_DRAW);\n\n    let uvBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, uvBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry.uvs, gl.STATIC_DRAW);\n\n    let faceBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, faceBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, geometry.faces, gl.STATIC_DRAW);\n\n    let edgeBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, edgeBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, geometry.edges, gl.STATIC_DRAW);\n\n    this.boundingRadius = geometry.boundingRadius;\n\n    this.vertexArray = geometry.vertices;\n    this.uvArray = geometry.uvs;\n    this.faceArray = geometry.faces;\n    this.edgeArray = geometry.edges;\n    this.vertexBuffer = vertexBuffer;\n    this.uvBuffer = uvBuffer;\n    this.faceBuffer = faceBuffer;\n    this.edgeBuffer = edgeBuffer;\n\n    let bytesPerElement = geometry.faces.BYTES_PER_ELEMENT;\n\n    if (bytesPerElement === 1) {\n      this.faceIndexType = gl.UNSIGNED_BYTE;\n    } else if (bytesPerElement === 2) {\n      this.faceIndexType = gl.UNSIGNED_SHORT;\n    } else {\n      this.faceIndexType = gl.UNSIGNED_INT;\n    }\n\n    bytesPerElement = geometry.edges.BYTES_PER_ELEMENT;\n\n    if (bytesPerElement === 1) {\n      this.edgeIndexType = gl.UNSIGNED_BYTE;\n    } else if (bytesPerElement === 2) {\n      this.edgeIndexType = gl.UNSIGNED_SHORT;\n    } else {\n      this.edgeIndexType = gl.UNSIGNED_INT;\n    }\n\n    this.texture = material.texture;\n\n    this.twoSided = material.twoSided || false;\n    this.noDepthTest = material.noDepthSet || false;\n    this.noDepthSet = material.noDepthSet || false;\n\n    this.uvScale = material.uvScale || new Float32Array([1, 1]);\n    this.uvOffset = material.uvOffset || new Float32Array(2);\n\n    this.vertexColor = material.vertexColor || new Float32Array([255, 255, 255, 255]);\n    this.edgeColor = material.edgeColor || new Float32Array([255, 255, 255, 255]);\n\n    this.renderMode = 0;\n\n    if (material.renderMode > 0) {\n      this.renderMode = material.renderMode;\n    }\n\n    this.isBGR = material.isBGR || false;\n    this.isBlended = material.isBlended || false;\n\n    if (this.isBlended) {\n      this.translucent = true;\n    } else {\n      this.opaque = true;\n    }\n  }\n\n  /**\n   *\n   * @param {*} bucket\n   * @param {*} scene\n   * @param {*} modelView\n   */\n  render(bucket, scene, modelView) {\n    let webgl = this.viewer.webgl;\n    let gl = this.viewer.gl;\n    let instancedArrays = webgl.extensions.instancedArrays;\n    let shader = this.viewer.shaderMap.get('GeoStandardShader');\n    let uniforms = shader.uniforms;\n    let attribs = shader.attribs;\n\n    webgl.useShaderProgram(shader);\n\n    gl.uniformMatrix4fv(uniforms.u_mvp, false, scene.camera.worldProjectionMatrix);\n\n    // Bone texture\n    gl.activeTexture(gl.TEXTURE15);\n    gl.bindTexture(gl.TEXTURE_2D, bucket.boneTexture);\n    gl.uniform1i(uniforms.u_boneMap, 15);\n    gl.uniform1f(uniforms.u_vectorSize, bucket.vectorSize);\n    gl.uniform1f(uniforms.u_rowSize, bucket.rowSize);\n\n    // Instanced IDs\n    let instanceIdAttrib = attribs.a_InstanceID;\n    gl.bindBuffer(gl.ARRAY_BUFFER, bucket.instanceIdBuffer);\n    gl.vertexAttribPointer(instanceIdAttrib, 1, gl.UNSIGNED_SHORT, false, 2, 0);\n    instancedArrays.vertexAttribDivisorANGLE(instanceIdAttrib, 1);\n\n    // Vertices\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.vertexAttribPointer(attribs.a_position, 3, gl.FLOAT, false, 12, 0);\n\n    // UVs\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n    gl.vertexAttribPointer(attribs.a_uv, 2, gl.FLOAT, false, 8, 0);\n\n    if (this.twoSided) {\n      gl.disable(gl.CULL_FACE);\n    } else {\n      gl.enable(gl.CULL_FACE);\n    }\n\n    if (this.noDepthTest) {\n      gl.disable(gl.DEPTH_TEST);\n    } else {\n      gl.enable(gl.DEPTH_TEST);\n    }\n\n    if (this.noDepthSet) {\n      gl.depthMask(0);\n    } else {\n      gl.depthMask(1);\n    }\n\n    if (this.isBlended) {\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    } else {\n      gl.disable(gl.BLEND);\n    }\n\n    gl.uniform1i(uniforms.u_texture, 0);\n\n    let colorAttrib = attribs.a_color;\n    instancedArrays.vertexAttribDivisorANGLE(colorAttrib, 1);\n\n    if (this.renderMode === 0 || this.renderMode === 2) {\n      let texture = modelView.textures.get(null) || this.texture;\n\n      webgl.bindTexture(texture, 0);\n\n      let hasTexture = uniforms.u_hasTexture;\n      if (texture) {\n        gl.uniform1f(hasTexture, 1);\n      } else {\n        gl.uniform1f(hasTexture, 0);\n      }\n\n      gl.uniform1f(uniforms.u_isEdge, 0);\n      gl.uniform2fv(uniforms.u_uvScale, this.uvScale);\n      gl.uniform2fv(uniforms.u_uvOffset, this.uvOffset);\n      gl.uniform1f(uniforms.u_isBGR, this.isBGR);\n      gl.uniform1f(uniforms.u_alphaMod, this.alpha);\n\n      // Colors\n      gl.bindBuffer(gl.ARRAY_BUFFER, bucket.vertexColorBuffer);\n      gl.vertexAttribPointer(colorAttrib, 4, gl.UNSIGNED_BYTE, true, 0, 0);\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.faceBuffer);\n      instancedArrays.drawElementsInstancedANGLE(gl.TRIANGLES, this.faceArray.length, this.faceIndexType, 0, bucket.count);\n    }\n\n    if (this.renderMode === 1 || this.renderMode === 2) {\n      gl.uniform1f(uniforms.u_isEdge, 1);\n\n      // Edge colors\n      gl.bindBuffer(gl.ARRAY_BUFFER, bucket.edgeColorBuffer);\n      gl.vertexAttribPointer(colorAttrib, 4, gl.UNSIGNED_BYTE, true, 0, 0);\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.edgeBuffer);\n      instancedArrays.drawElementsInstancedANGLE(gl.LINES, this.edgeArray.length, this.edgeIndexType, 0, bucket.count);\n    }\n\n    // / Reset the attributes to play nice with other handlers\n    instancedArrays.vertexAttribDivisorANGLE(instanceIdAttrib, 0);\n    instancedArrays.vertexAttribDivisorANGLE(colorAttrib, 0);\n  }\n\n  /**\n   * @param {*} data\n   */\n  renderBuckets(data) {\n    let scene = data.scene;\n    let buckets = data.buckets;\n    let modelView = data.modelView;\n\n    for (let i = 0, l = data.usedBuckets; i < l; i++) {\n      this.render(buckets[i], scene, modelView);\n    }\n  }\n\n  /**\n   * Render the opaque things in the given scene data.\n   *\n   * @param {Object} data\n   */\n  renderOpaque(data) {\n    if (this.opaque) {\n      this.renderBuckets(data);\n    }\n  }\n\n  /**\n   * Render the translucent things in the given scene data.\n   *\n   * @param {Object} data\n   */\n  renderTranslucent(data) {\n    if (this.translucent) {\n      this.renderBuckets(data);\n    }\n  }\n}\n","/**\n * A bucket.\n */\nexport default class Bucket {\n  /**\n  * @param {ModelView} modelView\n  */\n  constructor(modelView) {\n    let model = modelView.model;\n    let gl = model.viewer.gl;\n\n    /** @member {ModelView} */\n    this.modelView = modelView;\n    /** @member {Model} */\n    this.model = model;\n    /** @member {number} */\n    this.count = 0;\n\n    // The index buffer is used instead of gl_InstanceID, which isn't defined in WebGL shaders.\n    // It's a simple buffer of indices, [0, 1, ..., this.size - 1].\n    // While it can be shared between all buckets in the viewer, this makes the code slightly messy and less dynamic.\n    // It's 256 bytes per bucket, no big deal. Right?\n    this.instanceIdBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.instanceIdBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Uint16Array(model.batchSize).map((currentValue, index, array) => index), gl.STATIC_DRAW);\n  }\n\n  /**\n   * Fills in data from a collection of model instances.\n   *\n   * @param {Object} data\n   * @param {number} baseInstance\n   * @param {Scene} scene\n   * @return {number}\n   */\n  fill(data, baseInstance, scene) {\n    // Make believe the bucket is now filled with data for all instances.\n    // This is because if a non-specific bucket implementation is supplied, instancing isn't used, so batching is irrelevant.\n    return data.instances.length;\n  }\n}\n","import Bucket from '../../bucket';\n\n/**\n * GEO bucket implementation.\n */\nexport default class GeometryBucket extends Bucket {\n  /**\n   * @param {GeometryModelView} modelView\n   */\n  constructor(modelView) {\n    super(modelView);\n\n    const gl = this.model.viewer.gl;\n    const numberOfBones = 1;\n\n    this.gl = gl;\n\n    let model = this.model;\n    let batchSize = model.batchSize;\n\n    this.boneArrayInstanceSize = numberOfBones * 16;\n    this.boneArray = new Float32Array(this.boneArrayInstanceSize * batchSize);\n\n    this.boneTexture = gl.createTexture();\n    this.boneTextureWidth = numberOfBones * 4;\n    this.boneTextureHeight = batchSize;\n    this.vectorSize = 1 / this.boneTextureWidth;\n    this.rowSize = 1 / this.boneTextureHeight;\n\n    gl.activeTexture(gl.TEXTURE15);\n    gl.bindTexture(gl.TEXTURE_2D, this.boneTexture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.boneTextureWidth, this.boneTextureHeight, 0, gl.RGBA, gl.FLOAT, this.boneArray);\n\n    // Color (per instance)\n    this.vertexColorArray = new Uint8Array(4 * batchSize);\n    this.vertexColorBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertexColorArray, gl.DYNAMIC_DRAW);\n\n    // Edge color (per instance)\n    this.edgeColorArray = new Uint8Array(4 * batchSize);\n    this.edgeColorBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.edgeColorBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.edgeColorArray, gl.DYNAMIC_DRAW);\n  }\n\n  /**\n   * Fill this bucket with scene data.\n   *\n   * @param {Object} data\n   * @return {number}\n   */\n  fill(data) {\n    let baseIndex = data.baseIndex;\n    let model = this.model;\n    let gl = model.viewer.gl;\n    let batchSize = model.batchSize;\n    let boneArray = this.boneArray;\n    let vertexColorArray = this.vertexColorArray;\n    let edgeColorArray = this.edgeColorArray;\n    let instanceOffset = 0;\n    let instances = data.instances;\n\n    for (let l = instances.length; baseIndex < l && instanceOffset < batchSize; baseIndex++) {\n      let instance = instances[baseIndex];\n\n      if (instance.rendered && !instance.culled) {\n        let worldMatrix = instance.worldMatrix;\n        let vertexColor = instance.vertexColor;\n        let edgeColor = instance.edgeColor;\n        let offset = instanceOffset * 16;\n\n        boneArray[offset] = worldMatrix[0];\n        boneArray[offset + 1] = worldMatrix[1];\n        boneArray[offset + 2] = worldMatrix[2];\n        boneArray[offset + 3] = worldMatrix[3];\n        boneArray[offset + 4] = worldMatrix[4];\n        boneArray[offset + 5] = worldMatrix[5];\n        boneArray[offset + 6] = worldMatrix[6];\n        boneArray[offset + 7] = worldMatrix[7];\n        boneArray[offset + 8] = worldMatrix[8];\n        boneArray[offset + 9] = worldMatrix[9];\n        boneArray[offset + 10] = worldMatrix[10];\n        boneArray[offset + 11] = worldMatrix[11];\n        boneArray[offset + 12] = worldMatrix[12];\n        boneArray[offset + 13] = worldMatrix[13];\n        boneArray[offset + 14] = worldMatrix[14];\n        boneArray[offset + 15] = worldMatrix[15];\n\n        // Vertex color\n        vertexColorArray[instanceOffset * 4] = vertexColor[0];\n        vertexColorArray[instanceOffset * 4 + 1] = vertexColor[1];\n        vertexColorArray[instanceOffset * 4 + 2] = vertexColor[2];\n        vertexColorArray[instanceOffset * 4 + 3] = vertexColor[3];\n\n        // Edge color\n        edgeColorArray[instanceOffset * 4] = edgeColor[0];\n        edgeColorArray[instanceOffset * 4 + 1] = edgeColor[1];\n        edgeColorArray[instanceOffset * 4 + 2] = edgeColor[2];\n        edgeColorArray[instanceOffset * 4 + 3] = edgeColor[3];\n\n        instanceOffset += 1;\n      }\n    }\n\n    this.count = instanceOffset;\n\n    if (instanceOffset) {\n      gl.activeTexture(gl.TEXTURE15);\n      gl.bindTexture(gl.TEXTURE_2D, this.boneTexture);\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.boneTextureWidth, instanceOffset, gl.RGBA, gl.FLOAT, boneArray);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer);\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.vertexColorArray);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.edgeColorBuffer);\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.edgeColorArray);\n    }\n\n    return baseIndex;\n  }\n}\n","import {EventNode} from './node';\n\n/**\n * A model instance.\n */\nexport default class ModelInstance extends EventNode {\n  /**\n   * @param {Model} model\n   */\n  constructor(model) {\n    super();\n\n    /** @member {?ModelView} */\n    this.modelView = null;\n    /** @member {Model} */\n    this.model = model;\n    /** @member {boolean} */\n    this.paused = false;\n    /** @member {boolean} */\n    this.rendered = true;\n    /** @member {boolean} */\n    this.culled = false;\n    /**\n     *  Set to true if this instance should always be rendered.\n     *\n     * @member {boolean}\n     */\n    this.noCulling = false;\n    /** @member {?object} */\n    this.bounds = null;\n  }\n\n  /**\n   * This instance should be shown.\n   * Note that it can still be hidden due to culling.\n   */\n  show() {\n    this.rendered = true;\n  }\n\n  /**\n   * This instance should be hidden.\n   */\n  hide() {\n    this.rendered = false;\n  }\n\n  /**\n   * Should the instance be shown?\n   *\n   * @return {boolean}\n   */\n  shown() {\n    return this.rendered;\n  }\n\n  /**\n   * Should the instance be hidden?\n   *\n   * @return {boolean}\n   */\n  hidden() {\n    return !this.rendered;\n  }\n\n  /**\n   * Detach this instance from the scene it's in.\n   * Equivalent to scene.removeInstance(instance).\n   *\n   * @return {boolean}\n   */\n  detach() {\n    if (this.scene) {\n      return this.scene.removeInstance(this);\n    }\n\n    return false;\n  }\n\n  /**\n   * Called once the model is loaded, or immediately if the model was already loaded.\n   *\n   * @param {ArrayBuffer|string|Image} buffer\n   */\n  load(buffer) {\n\n  }\n\n  /**\n   * Called every frame.\n   * Do lightweight updates here, like updating animation timers.\n   */\n  updateTimers() {\n\n  }\n\n  /**\n   * Called if the instance is shown and not culled.\n   * Do heavyweight updates here, like updating skeletons.\n   */\n  updateAnimations() {\n\n  }\n\n  /**\n   * Clears any objects that were emitted by this instance.\n   */\n  clearEmittedObjects() {\n\n  }\n\n  /**\n   * Update this model instance.\n   * Called automatically by the scene that owns this model instance.\n   *\n   * @param {Scene} scene\n   */\n  updateObject(scene) {\n    if (!this.paused && this.model.ok) {\n      this.updateTimers();\n\n      if (this.rendered) {\n        let visible = scene.isVisible(this) || this.noCulling || this.model.viewer.noCulling;\n\n        this.culled = !visible;\n\n        if (visible) {\n          this.updateAnimations();\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets the scene of this instance.\n   * This is equivalent to scene.addInstance(instance).\n   *\n   * @param {Scene} scene\n   * @return {boolean}\n   */\n  setScene(scene) {\n    return scene.addInstance(this);\n  }\n}\n","import ModelInstance from './modelinstance';\n\n/**\n * A textured model instance.\n * Gives a consistent API for texture overloading for handlers that use it.\n */\nexport default class TexturedModelInstance extends ModelInstance {\n  /**\n   * Overrides a texture with another one.\n   *\n   * @param {Texture} which\n   * @param {Texture} texture\n   */\n  setTexture(which, texture) {\n    let view = this.modelView.getShallowCopy();\n\n    view.textures.set(which, texture);\n\n    this.model.viewChanged(this, view);\n  }\n}\n","import TexturedModelInstance from '../../texturedmodelinstance';\n\n/**\n * A GEO model instance.\n */\nexport default class GeometryModelInstance extends TexturedModelInstance {\n  /**\n   * @param {GeometryModel} model\n   */\n  constructor(model) {\n    super(model);\n\n    this.vertexColor = new Uint8Array(4);\n    this.edgeColor = new Uint8Array(4);\n  }\n\n  /**\n   *\n   */\n  load() {\n    // Initialize to the model's material colors.\n    this.setVertexColor(this.model.vertexColor);\n    this.setEdgeColor(this.model.edgeColor);\n  }\n\n  /**\n   * @param {Uint8Array} color\n   * @return {this}\n   */\n  setVertexColor(color) {\n    this.vertexColor.set(color);\n\n    return this;\n  }\n\n  /**\n   * @param {Uint8Array} color\n   * @return {this}\n   */\n  setEdgeColor(color) {\n    this.edgeColor.set(color);\n\n    return this;\n  }\n}\n","\nexport default {\n  // Shared shader code to mimic gl_InstanceID\n  instanceId: `\n    attribute float a_InstanceID;\n  `,\n  // Shared shader code to handle bone textures\n  boneTexture: `\n    uniform sampler2D u_boneMap;\n    uniform float u_vectorSize;\n    uniform float u_rowSize;\n\n    mat4 fetchMatrix(float column, float row) {\n      column *= u_vectorSize * 4.0;\n      row *= u_rowSize;\n      // Add in half texel to sample in the middle of the texel.\n      // Otherwise, since the sample is directly on the boundry, small floating point errors can cause the sample to get the wrong pixel.\n      // This is mostly noticable with NPOT textures, which the bone maps are.\n      column += 0.5 * u_vectorSize;\n      row += 0.5 * u_rowSize;\n\n      return mat4(texture2D(u_boneMap, vec2(column, row)),\n                  texture2D(u_boneMap, vec2(column + u_vectorSize, row)),\n                  texture2D(u_boneMap, vec2(column + u_vectorSize * 2.0, row)),\n                  texture2D(u_boneMap, vec2(column + u_vectorSize * 3.0, row)));\n    }\n  `,\n  // Shared shader code to handle decoding multiple bytes stored in floats\n  decodeFloat: `\n    vec2 decodeFloat2(float f) {\n      vec2 v;\n\n      v[1] = floor(f / 256.0);\n      v[0] = floor(f - v[1] * 256.0);\n\n      return v;\n    }\n\n    vec3 decodeFloat3(float f) {\n      vec3 v;\n\n      v[2] = floor(f / 65536.0);\n      v[1] = floor((f - v[2] * 65536.0) / 256.0);\n      v[0] = floor(f - v[2] * 65536.0 - v[1] * 256.0);\n\n      return v;\n    }\n\n    vec4 decodeFloat4(float v) {\n      vec4 enc = vec4(1.0, 255.0, 65025.0, 16581375.0) * v;\n      enc = fract(enc);\n      enc -= enc.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n      return enc;\n    }\n  `,\n  quat_transform: `\n    // A 2D quaternion*vector.\n    // q is the zw components of the original quaternion.\n    vec2 quat_transform(vec2 q, vec2 v) {\n      vec2 uv = vec2(-q.x * v.y, q.x * v.x);\n      vec2 uuv = vec2(-q.x * uv.y, q.x * uv.x);\n\n      return v + 2.0 * (uv * q.y + uuv);\n    }\n\n    // A 2D quaternion*vector.\n    // q is the zw components of the original quaternion.\n    vec3 quat_transform(vec2 q, vec3 v) {\n      return vec3(quat_transform(q, v.xy), v.z);\n    }\n  `,\n};\n","import shaders from '../../shaders';\n\nexport default {\n  vs: `\n    ${shaders.instanceId}\n    ${shaders.boneTexture}\n    uniform mat4 u_mvp;\n    uniform vec2 u_uvOffset;\n    uniform vec2 u_uvScale;\n\n    attribute vec3 a_position;\n    attribute vec2 a_uv;\n    attribute vec2 a_uvScale;\n    attribute vec4 a_color;\n\n    varying vec2 v_uv;\n    varying vec4 v_color;\n\n    void main() {\n      v_uv = a_uv * u_uvScale + u_uvOffset;\n      v_color = a_color;\n\n      gl_Position = u_mvp * fetchMatrix(0.0, a_InstanceID) * vec4(a_position, 1.0);\n    }\n  `,\n  ps: `\n    uniform sampler2D u_diffuseMap;\n    uniform float u_alphaMod;\n    uniform bool u_isEdge;\n    uniform bool u_hasTexture;\n    uniform bool u_isBGR;\n\n    varying vec2 v_uv;\n    varying vec4 v_color;\n\n    void main() {\n      gl_FragColor = v_color;\n\n      if (u_hasTexture && !u_isEdge) {\n        vec4 texel = texture2D(u_diffuseMap, v_uv);\n\n        if (u_isBGR) {\n          texel = texel.bgra;\n        }\n\n        gl_FragColor *= texel;\n      } \n    }\n  `,\n};\n","import ModelView from './modelview';\nimport Model from './model';\nimport Bucket from './bucket';\nimport ModelInstance from './modelinstance';\nimport shaders from './shaders';\n\nexport default {\n  load(viewer) {\n    let shader = viewer.loadShader('GeoStandardShader', shaders.vs, shaders.ps);\n\n    // If a shader failed to compile, don't allow the handler to be registered, and send an error instead.\n    return shader.ok;\n  },\n\n  extensions: [['.geo']],\n  Constructor: Model,\n  View: ModelView,\n  Bucket: Bucket,\n  Instance: ModelInstance,\n};\n","import TexturedModelView from '../../texturedmodelview';\n\n/**\n * GEO model view implementation.\n */\nexport default class ModelView extends TexturedModelView {\n  /**\n   * @param {Scene} scene\n   */\n  update(scene) {\n    let data = super.update(scene);\n\n    if (data) {\n      let batchCount = (this.model.renderMode === 2 ? 2 : 1);\n      let buckets = data.buckets;\n      let renderedInstances = 0;\n      let renderedBuckets = 0;\n      let renderCalls = 0;\n\n      for (let i = 0, l = data.usedBuckets; i < l; i++) {\n        renderedInstances += buckets[i].count;\n        renderedBuckets += 1;\n        renderCalls += batchCount;\n      }\n\n      this.renderedInstances = renderedInstances;\n      this.renderedBuckets = renderedBuckets;\n      this.renderCalls = renderCalls;\n    }\n  }\n}\n","import handler from './handler';\nimport Model from './model';\nimport ModelInstance from './modelinstance';\nimport Bucket from './bucket';\n\nexport default {\n  handler,\n  Model,\n  ModelInstance,\n  Bucket,\n};\n","import {clamp} from '../../../common/math';\nimport {interpolateScalar, interpolateVector, interpolateQuaternion} from '../../../common/interpolator';\nimport {UintAnimation, FloatAnimation, Vector3Animation, Vector4Animation} from '../../../parsers/mdlx/animations';\n\n/**\n * Templated animated data for a specific sequence.\n *\n * @param {function} interpolator\n * @return {class}\n */\nconst templatedSdSequence = (interpolator) => class {\n  /**\n   * @param {Sd} sd\n   * @param {number} start\n   * @param {number} end\n   * @param {Array<Track>} keyframes\n   * @param {boolean} isGlobalSequence\n   */\n  constructor(sd, start, end, keyframes, isGlobalSequence) {\n    let defval = sd.defval;\n\n    this.sd = sd;\n    this.start = start;\n    this.end = end;\n    this.keyframes = [];\n\n    // When using a global sequence, where the first key is outside of the sequence's length, it becomes its constant value.\n    // When having one key in the sequence's range, and one key outside of it, results seem to be non-deterministic.\n    // Sometimes the second key is used too, sometimes not.\n    // It also differs depending where the model is viewed - the WE previewer, the WE itself, or the game.\n    // All three show different results, none of them make sense.\n    // Therefore, only handle the case where the first key is outside.\n    // This fixes problems spread over many models, e.g. HeroMountainKing (compare in WE and in Magos).\n    if (isGlobalSequence && keyframes[0].frame > end) {\n      this.keyframes.push(keyframes[0]);\n    }\n\n    // Go over the keyframes, and add all of the ones that are in this sequence (start <= frame <= end).\n    for (let i = 0, l = keyframes.length; i < l; i++) {\n      let keyframe = keyframes[i];\n      let frame = keyframe.frame;\n\n      if (frame >= start && frame <= end) {\n        this.keyframes.push(keyframe);\n      }\n    }\n\n    let keyframeCount = this.keyframes.length;\n\n    if (keyframeCount === 0) {\n      // If there are no keys, use the default value directly.\n      this.constant = true;\n      this.keyframes.push({frame: start, value: defval, inTan: defval, outTan: defval});\n    } else if (keyframeCount === 1) {\n      // If there's only one key, use it directly.\n      this.constant = true;\n    } else {\n      // If all of the values in this sequence are the same, might as well make it constant.\n      let constant = true;\n      let firstValue = this.keyframes[0].value;\n\n      for (let i = 1, l = this.keyframes.length; i < l; i++) {\n        let keyframe = this.keyframes[i];\n        let value = keyframe.value;\n\n        if (value.length > 0) {\n          for (let j = 0, k = value.length; j < k; j++) {\n            if (firstValue[j] !== value[j]) {\n              constant = false;\n              break;\n            }\n          }\n        } else {\n          if (value !== firstValue) {\n            constant = false;\n            break;\n          }\n        }\n      }\n\n      if (constant) {\n        this.constant = true;\n      } else {\n        this.constant = false;\n\n        // If there is no opening keyframe for this sequence, inject one with the default value.\n        if (this.keyframes[0].frame !== start) {\n          this.keyframes.unshift({frame: start, value: defval, inTan: defval, outTan: defval});\n        }\n\n        // If there is no closing keyframe for this sequence, inject one with the default value.\n        if (this.keyframes[this.keyframes.length - 1].frame !== end) {\n          this.keyframes.push({frame: end, value: this.keyframes[0].value, inTan: this.keyframes[0].outTan, outTan: this.keyframes[0].inTan});\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Uint32Array|Float32Array|vec3|quat} out\n   * @param {number} frame\n   * @return {number}\n   */\n  getValue(out, frame) {\n    let keyframes = this.keyframes;\n    let index = this.getKeyframe(frame);\n    let length = keyframes.length;\n\n    if (index === -1) {\n      out.set(keyframes[0].value);\n\n      return 0;\n    } else if (index === length) {\n      out.set(keyframes[length - 1].value);\n\n      return length - 1;\n    } else {\n      let start = keyframes[index - 1];\n      let end = keyframes[index];\n      let t = clamp((frame - start.frame) / (end.frame - start.frame), 0, 1);\n\n      interpolator(out, start.value, start.outTan, end.inTan, end.value, t, this.sd.interpolationType);\n\n      return index;\n    }\n  }\n\n  /**\n   * @param {number} frame\n   * @return {number}\n   */\n  getKeyframe(frame) {\n    if (this.constant) {\n      return -1;\n    } else {\n      let keyframes = this.keyframes;\n      let l = keyframes.length;\n\n      if (frame < this.start) {\n        return -1;\n      } else if (frame >= this.end) {\n        return l;\n      } else {\n        for (let i = 1; i < l; i++) {\n          let keyframe = keyframes[i];\n\n          if (keyframe.frame > frame) {\n            return i;\n          }\n        }\n      }\n    }\n  }\n};\n\nconst forcedInterpMap = {\n  KLAV: 0,\n  KATV: 0,\n  KPEV: 0,\n  KP2V: 0,\n  KRVS: 0,\n};\n\nconst defVals = {\n  // LAYS\n  KMTF: [0],\n  KMTA: [1],\n  // TXAN\n  KTAT: [0, 0, 0],\n  KTAR: [0, 0, 0, 1],\n  KTAS: [1, 1, 1],\n  // GEOA\n  KGAO: [1],\n  KGAC: [0, 0, 0],\n  // LITE\n  KLAS: [0],\n  KLAE: [0],\n  KLAC: [0, 0, 0],\n  KLAI: [0],\n  KLBI: [0],\n  KLBC: [0, 0, 0],\n  KLAV: [1],\n  // ATCH\n  KATV: [1],\n  // PREM\n  KPEE: [0],\n  KPEG: [0],\n  KPLN: [0],\n  KPLT: [0],\n  KPEL: [0],\n  KPES: [0],\n  KPEV: [1],\n  // PRE2\n  KP2S: [0],\n  KP2R: [0],\n  KP2L: [0],\n  KP2G: [0],\n  KP2E: [0],\n  KP2N: [0],\n  KP2W: [0],\n  KP2V: [1],\n  // RIBB\n  KRHA: [0],\n  KRHB: [0],\n  KRAL: [1],\n  KRCO: [0, 0, 0],\n  KRTX: [0],\n  KRVS: [1],\n  // CAMS\n  KCTR: [0, 0, 0],\n  KTTR: [0, 0, 0],\n  KCRL: [0],\n  // NODE\n  KGTR: [0, 0, 0],\n  KGRT: [0, 0, 0, 1],\n  KGSC: [1, 1, 1],\n};\n\n/**\n * Templated sequence data.\n *\n * @param {UintSequence|FloatSequence|Vector3Sequence|Vector4Sequence} SequenceType\n * @return {class}\n */\nconst templatedSd = (SequenceType) => class {\n  /**\n   * @param {MdxModel} model\n   * @param {UintAnimation|FloatAnimation|Vector3Animation|Vector4Animation} animation\n   */\n  constructor(model, animation) {\n    let globalSequences = model.globalSequences;\n    let globalSequenceId = animation.globalSequenceId;\n    let tracks = animation.tracks;\n    let forcedInterp = forcedInterpMap[animation.name];\n\n    this.model = model;\n    this.name = animation.name;\n    this.defval = defVals[animation.name];\n    this.globalSequence = null;\n    this.sequences = [];\n\n    // Allow to force an interpolation type.\n    // The game seems to do this with visibility tracks, where the type is forced to None.\n    // It came up as a bug report by a user who used the wrong interpolation type.\n    this.interpolationType = forcedInterp !== undefined ? forcedInterp : animation.interpolationType;\n\n    if (globalSequenceId !== -1 && globalSequences) {\n      this.globalSequence = new SequenceType(this, 0, globalSequences[globalSequenceId], tracks, true);\n    } else {\n      for (let sequence of model.sequences) {\n        this.sequences.push(new SequenceType(this, ...sequence.interval, tracks, false));\n      }\n    }\n  }\n\n  /**\n   * @param {Uint32Array|Float32Array|vec3|quat} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getValue(out, instance) {\n    if (this.globalSequence) {\n      return this.globalSequence.getValue(out, instance.counter % this.globalSequence.end);\n    } else if (instance.sequence !== -1) {\n      return this.sequences[instance.sequence].getValue(out, instance.frame);\n    } else {\n      out.set(this.defval);\n      return -1;\n    }\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isVariant(sequence) {\n    if (this.globalSequence) {\n      return !this.globalSequence.constant;\n    } else {\n      return !this.sequences[sequence].constant;\n    }\n  }\n\n  /**\n   * @return {Array<number|vec3|quat>}\n   */\n  getValues() {\n    if (this.globalSequence) {\n      return this.globalSequence.keyframes.map((track) => track.value);\n    } else {\n      let values = [];\n\n      for (let sequence of this.sequences) {\n        values.push(...sequence.keyframes.map((track) => track.value));\n      }\n\n      return values;\n    }\n  }\n};\n\nconst ScalarSd = templatedSd(templatedSdSequence(interpolateScalar));\nconst Vector3Sd = templatedSd(templatedSdSequence(interpolateVector));\nconst Vector4Sd = templatedSd(templatedSdSequence(interpolateQuaternion));\n\n/**\n * @param {Model} model\n * @param {UintAnimation|FloatAnimation|Vector3Animation|Vector4Animation} animation\n * @return {ScalarSd|Vector3Sd|Vector4Sd}\n */\nexport default function createTypedSd(model, animation) {\n  let ClassObject;\n\n  if (animation instanceof UintAnimation || animation instanceof FloatAnimation) {\n    ClassObject = ScalarSd;\n  } else if (animation instanceof Vector3Animation) {\n    ClassObject = Vector3Sd;\n  } else if (animation instanceof Vector4Animation) {\n    ClassObject = Vector4Sd;\n  }\n\n  return new ClassObject(model, animation);\n}\n","import {vec3, quat} from 'gl-matrix';\nimport {lerp, hermite, bezier} from './math';\n\n/**\n * @param {ArrayBufferView} out\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @param {number} d\n * @param {number} t\n * @param {number} type\n * @return {out}\n */\nexport function interpolateScalar(out, a, b, c, d, t, type) {\n  if (type === 0) {\n    out[0] = a[0];\n  } else if (type === 1) {\n    out[0] = lerp(a[0], d[0], t);\n  } else if (type === 2) {\n    out[0] = hermite(a[0], b[0], c[0], d[0], t);\n  } else if (type === 3) {\n    out[0] = bezier(a[0], b[0], c[0], d[0], t);\n  }\n\n  return out;\n}\n\n/**\n * @param {vec3} out\n * @param {vec3} a\n * @param {vec3} b\n * @param {vec3} c\n * @param {vec3} d\n * @param {number} t\n * @param {number} type\n * @return {out}\n */\nexport function interpolateVector(out, a, b, c, d, t, type) {\n  if (type === 0) {\n    vec3.copy(out, a);\n  } else if (type === 1) {\n    vec3.lerp(out, a, d, t);\n  } else if (type === 2) {\n    vec3.hermite(out, a, b, c, d, t);\n  } else if (type === 3) {\n    vec3.bezier(out, a, b, c, d, t);\n  }\n\n  return out;\n}\n\n/**\n * @param {quat} out\n * @param {quat} a\n * @param {quat} b\n * @param {quat} c\n * @param {quat} d\n * @param {number} t\n * @param {number} type\n * @return {out}\n */\nexport function interpolateQuaternion(out, a, b, c, d, t, type) {\n  if (type === 0) {\n    quat.copy(out, a);\n  } else if (type === 1) {\n    quat.slerp(out, a, d, t);\n  } else if (type === 2 || type === 3) {\n    quat.sqlerp(out, a, b, c, d, t);\n  }\n\n  return out;\n}\n","import {vec3, quat} from 'gl-matrix';\nimport createTypedSd from './sd';\n\n/**\n * An animation object.\n */\nexport default class AnimatedObject {\n  /**\n   * @param {Model} model\n   * @param {mdlx.AnimatedObject} object\n   */\n  constructor(model, object) {\n    /** @member {Model} */\n    this.model = model;\n    /** @member {Object<string, ScalarSd|Vector3Sd|Vector4Sd>} */\n    this.animations = {};\n\n    for (let animation of object.animations) {\n      this.animations[animation.name] = createTypedSd(model, animation);\n    }\n  }\n\n  /**\n   * @param {string} name\n   * @return {Array<number|vec3|quat>}\n   */\n  getValues(name) {\n    let animation = this.animations[name];\n\n    if (animation) {\n      return animation.getValues();\n    }\n\n    return [];\n  }\n\n  /**\n   * @param {Uint32Array} out\n   * @param {string} name\n   * @param {ModelInstance} instance\n   * @param {number} defaultValue\n   * @return {number}\n   */\n  getUintValue(out, name, instance, defaultValue) {\n    let animation = this.animations[name];\n\n    if (animation) {\n      return animation.getValue(out, instance);\n    }\n\n    out[0] = defaultValue;\n    return -1;\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {string} name\n   * @param {ModelInstance} instance\n   * @param {number} defaultValue\n   * @return {number}\n   */\n  getFloatValue(out, name, instance, defaultValue) {\n    let animation = this.animations[name];\n\n    if (animation) {\n      return animation.getValue(out, instance);\n    }\n\n    out[0] = defaultValue;\n    return -1;\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {string} name\n   * @param {ModelInstance} instance\n   * @param {vec3} defaultValue\n   * @return {number}\n   */\n  getVector3Value(out, name, instance, defaultValue) {\n    let animation = this.animations[name];\n\n    if (animation) {\n      return animation.getValue(out, instance);\n    }\n\n    vec3.copy(out, defaultValue);\n    return -1;\n  }\n\n  /**\n   * @param {quat} out\n   * @param {string} name\n   * @param {ModelInstance} instance\n   * @param {quat} defaultValue\n   * @return {number}\n   */\n  getVector4Value(out, name, instance, defaultValue) {\n    let animation = this.animations[name];\n\n    if (animation) {\n      return animation.getValue(out, instance);\n    }\n\n    quat.copy(out, defaultValue);\n    return -1;\n  }\n\n  /**\n   * @param {string} name\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isVariant(name, sequence) {\n    let animation = this.animations[name];\n\n    if (animation) {\n      return animation.isVariant(sequence);\n    }\n\n    return false;\n  }\n}\n","import {VEC3_ZERO, VEC3_ONE, QUAT_DEFAULT} from '../../../common/gl-matrix-addon';\nimport AnimatedObject from './animatedobject';\n\n/**\n * An MDX texture animation.\n */\nexport default class TextureAnimation extends AnimatedObject {\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getTranslation(out, instance) {\n    return this.getVector3Value(out, 'KTAT', instance, VEC3_ZERO);\n  }\n\n  /**\n   * @param {quat} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getRotation(out, instance) {\n    return this.getVector4Value(out, 'KTAR', instance, QUAT_DEFAULT);\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getScale(out, instance) {\n    return this.getVector3Value(out, 'KTAS', instance, VEC3_ONE);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isTranslationVariant(sequence) {\n    return this.isVariant('KTAT', sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isRotationVariant(sequence) {\n    return this.isVariant('KTAR', sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isScaleVariant(sequence) {\n    return this.isVariant('KTAS', sequence);\n  }\n}\n","/**\n * Returns an array that only contains unique values found in the source array.\n *\n * @param {array} a\n * @return {array}\n */\nexport default function unique(a) {\n  return a.reverse().filter((e, i, arr) => {\n    return arr.indexOf(e, i + 1) === -1;\n  }).reverse();\n}\n","/**\n * @param {number} filterMode\n * @param {WebGLContext} gl\n * @return {Array<number>}\n */\nexport function layerFilterMode(filterMode, gl) {\n  if (filterMode === 2) {\n    return [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA]; // Blend\n  } else if (filterMode === 3) {\n    return [gl.ONE, gl.ONE]; // Additive\n  } else if (filterMode === 4) {\n    return [gl.SRC_ALPHA, gl.ONE]; // Add alpha\n  } else if (filterMode === 5) {\n    return [gl.ZERO, gl.SRC_COLOR]; // Modulate\n  } else if (filterMode === 6) {\n    return [gl.DST_COLOR, gl.SRC_COLOR]; // Modulate 2x\n  }\n\n  return [0, 0];\n}\n\n/**\n * @param {number} filterMode\n * @param {WebGLContext} gl\n * @return {Array<number>}\n */\nexport function emitterFilterMode(filterMode, gl) {\n  if (filterMode === 0) {\n    return [gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA]; // Blend\n  } else if (filterMode === 1) {\n    return [gl.SRC_ALPHA, gl.ONE]; // Add alpha\n  } else if (filterMode === 2) {\n    return [gl.ZERO, gl.SRC_COLOR]; // Modulate\n  } else if (filterMode === 3) {\n    return [gl.DEST_COLOR, gl.SRC_COLOR]; // Modulate 2x\n  } else if (filterMode === 4) {\n    return [gl.SRC_ALPHA, gl.ONE]; // Add alpha\n  }\n}\n","import {vec3, quat} from 'gl-matrix';\nimport {VEC3_ZERO, VEC3_ONE, QUAT_DEFAULT} from '../../../common/gl-matrix-addon';\nimport stringHash from '../../../common/stringhash';\nimport unique from '../../../common/arrayunique';\nimport AnimatedObject from './animatedobject';\nimport {layerFilterMode} from './filtermode';\n\n/**\n * An MDX layer.\n */\nexport default class Layer extends AnimatedObject {\n  /**\n   * @param {Model} model\n   * @param {ModelViewer.parser.mdlx.Layer} layer\n   * @param {number} layerId\n   * @param {number} priorityPlane\n   */\n  constructor(model, layer, layerId, priorityPlane) {\n    let filterMode = layer.filterMode;\n    let textureAnimationId = layer.textureAnimationId;\n    let gl = model.viewer.gl;\n\n    super(model, layer);\n\n    this.index = layerId;\n    this.priorityPlane = priorityPlane;\n    this.filterMode = filterMode;\n    this.textureId = layer.textureId;\n    this.coordId = layer.coordId;\n    this.alpha = layer.alpha;\n\n    let flags = layer.flags;\n\n    this.unshaded = flags & 0x1;\n    this.sphereEnvironmentMap = flags & 0x2;\n    this.twoSided = flags & 0x10;\n    this.unfogged = flags & 0x20;\n    this.noDepthTest = flags & 0x40;\n    this.noDepthSet = flags & 0x80;\n\n    this.depthMaskValue = (filterMode === 0 || filterMode === 1) ? 1 : 0;\n    this.alphaTestValue = (filterMode === 1) ? 1 : 0;\n\n    this.blendSrc = 0;\n    this.blendDst = 0;\n    this.blended = (filterMode > 1) ? true : false;\n\n    if (this.blended) {\n      [this.blendSrc, this.blendDst] = layerFilterMode(filterMode, gl);\n    }\n\n    this.uvDivisor = new Float32Array([1, 1]);\n\n    if (textureAnimationId !== -1) {\n      let textureAnimation = model.textureAnimations[textureAnimationId];\n\n      if (textureAnimation) {\n        this.textureAnimation = textureAnimation;\n      }\n    }\n\n    let variants = {\n      alpha: [],\n      slot: [],\n      translation: [],\n      rotation: [],\n      scale: [],\n    };\n\n    let hasSlotAnim = false;\n    let hasTranslationAnim = false;\n    let hasRotationAnim = false;\n    let hasScaleAnim = false;\n\n    for (let i = 0, l = model.sequences.length; i < l; i++) {\n      let alpha = this.isAlphaVariant(i);\n      let slot = this.isTextureIdVariant(i);\n      let translation = this.isTranslationVariant(i);\n      let rotation = this.isRotationVariant(i);\n      let scale = this.isScaleVariant(i);\n\n      variants.alpha[i] = alpha;\n      variants.slot[i] = slot;\n      variants.translation[i] = translation;\n      variants.rotation[i] = rotation;\n      variants.scale[i] = scale;\n\n      hasSlotAnim = hasSlotAnim || slot;\n      hasTranslationAnim = hasTranslationAnim || translation;\n      hasRotationAnim = hasRotationAnim || rotation;\n      hasScaleAnim = hasScaleAnim || scale;\n    }\n\n    this.variants = variants;\n    this.hasSlotAnim = hasSlotAnim;\n    this.hasTranslationAnim = hasTranslationAnim;\n    this.hasRotationAnim = hasRotationAnim;\n    this.hasScaleAnim = hasScaleAnim;\n\n    // Handle sprite animations\n    if (this.animations.KMTF) {\n      // Get all unique texture IDs used by this layer\n      let textureIds = unique(this.animations.KMTF.getValues());\n\n      if (textureIds.length > 1) {\n        let hash = stringHash(textureIds.join(''));\n        let textures = [];\n\n        // Grab all of the textures\n        for (let i = 0, l = textureIds.length; i < l; i++) {\n          textures[i] = model.textures[textureIds[i]];\n        }\n\n        let atlas = model.viewer.loadTextureAtlas(hash, textures);\n\n        atlas.texture.whenLoaded()\n          .then(() => {\n            let texture = atlas.texture;\n\n            texture.wrapS = true;\n            texture.wrapT = true;\n\n            model.textures.push(texture);\n\n            this.textureId = model.textures.length - 1;\n            this.uvDivisor.set([atlas.columns, atlas.rows]);\n          });\n      }\n    }\n  }\n\n  /**\n   * @param {ShaderProgram} shader\n   */\n  bind(shader) {\n    let gl = this.model.viewer.gl;\n\n    gl.uniform1f(shader.uniforms.u_alphaTest, this.alphaTestValue);\n    // gl.uniform1f(shader.uniforms.u_unshaded, this.unshaded);\n\n    if (this.blended) {\n      gl.enable(gl.BLEND);\n      gl.blendFunc(this.blendSrc, this.blendDst);\n    } else {\n      gl.disable(gl.BLEND);\n    }\n\n    if (this.twoSided) {\n      gl.disable(gl.CULL_FACE);\n    } else {\n      gl.enable(gl.CULL_FACE);\n    }\n\n    if (this.noDepthTest) {\n      gl.disable(gl.DEPTH_TEST);\n    } else {\n      gl.enable(gl.DEPTH_TEST);\n    }\n\n    if (this.noDepthSet) {\n      gl.depthMask(0);\n    } else {\n      gl.depthMask(this.depthMaskValue);\n    }\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getAlpha(out, instance) {\n    return this.getFloatValue(out, 'KMTA', instance, this.alpha);\n  }\n\n  /**\n   * @param {Uint32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getTextureId(out, instance) {\n    /// TODO: map the returned slot to a texture atlas slot if one exists.\n    return this.getUintValue(out, 'KMTF', instance, this.textureId);\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getTranslation(out, instance) {\n    if (this.textureAnimation) {\n      return this.textureAnimation.getTranslation(out, instance);\n    }\n\n    vec3.copy(out, VEC3_ZERO);\n    return -1;\n  }\n\n  /**\n   * @param {quat} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getRotation(out, instance) {\n    if (this.textureAnimation) {\n      return this.textureAnimation.getRotation(out, instance);\n    }\n\n    quat.copy(out, QUAT_DEFAULT);\n    return -1;\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getScale(out, instance) {\n    if (this.textureAnimation) {\n      return this.textureAnimation.getScale(out, instance);\n    }\n\n    vec3.copy(out, VEC3_ONE);\n    return -1;\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isAlphaVariant(sequence) {\n    return this.isVariant('KMTA', sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isTextureIdVariant(sequence) {\n    return this.isVariant('KMTF', sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isTranslationVariant(sequence) {\n    return this.textureAnimation && this.textureAnimation.isTranslationVariant(sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isRotationVariant(sequence) {\n    return this.textureAnimation && this.textureAnimation.isRotationVariant(sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isScaleVariant(sequence) {\n    return this.textureAnimation && this.textureAnimation.isScaleVariant(sequence);\n  }\n}\n","import AnimatedObject from './animatedobject';\n\n/**\n * A geoset animation.\n */\nexport default class GeosetAnimation extends AnimatedObject {\n  /**\n   * @param {MdxModel} model\n   * @param {MdxParserGeosetAnimation} geosetAnimation\n   */\n  constructor(model, geosetAnimation) {\n    super(model, geosetAnimation);\n\n    this.alpha = geosetAnimation.alpha;\n    this.color = [...geosetAnimation.color].reverse(); // Stored as RGB, but animated colors are stored as BGR, so sizzle.\n    this.geosetId = geosetAnimation.geosetId;\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getAlpha(out, instance) {\n    // I don't quite understand how the static alpha is used. Weird rules.\n    // For now hardcode it to 1 if there is no animation.\n    return this.getFloatValue(out, 'KGAO', instance, 1);\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {vec3}\n   */\n  getColor(out, instance) {\n    return this.getVector3Value(out, 'KGAC', instance, this.color);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isAlphaVariant(sequence) {\n    return this.isVariant('KGAO', sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isColorVariant(sequence) {\n    return this.isVariant('KGAC', sequence);\n  }\n}\n","import {vec3} from 'gl-matrix';\nimport {VEC3_ONE} from '../../../common/gl-matrix-addon';\n\n/**\n * A shallow geoset.\n */\nexport class ShallowGeoset {\n  /**\n   * @param {MdxModel} model\n   * @param {Array<number>} offsets\n   * @param {number} uvSetSize\n   * @param {Uint16Array} elements\n   */\n  constructor(model, offsets, uvSetSize, elements) {\n    this.model = model;\n    this.offsets = offsets;\n    this.uvSetSize = uvSetSize;\n    this.elements = elements;\n  }\n\n  /**\n   * @param {ShaderProgram} shader\n   * @param {number} coordId\n   */\n  bind(shader, coordId) {\n    let gl = this.model.viewer.gl;\n    let offsets = this.offsets;\n    let attribs = shader.attribs;\n\n    gl.vertexAttribPointer(attribs.a_position, 3, gl.FLOAT, false, 12, offsets[0]);\n    gl.vertexAttribPointer(attribs.a_normal, 3, gl.FLOAT, false, 12, offsets[1]);\n    gl.vertexAttribPointer(attribs.a_uv, 2, gl.FLOAT, false, 8, offsets[2] + coordId * this.uvSetSize);\n    gl.vertexAttribPointer(attribs.a_bones, 4, gl.UNSIGNED_BYTE, false, 4, offsets[3]);\n    gl.vertexAttribPointer(attribs.a_boneNumber, 1, gl.UNSIGNED_BYTE, false, 4, offsets[4]);\n  }\n\n  /**\n   * @param {number} instances\n   */\n  render(instances) {\n    let gl = this.model.viewer.gl;\n\n    gl.extensions.instancedArrays.drawElementsInstancedANGLE(gl.TRIANGLES, this.elements, gl.UNSIGNED_SHORT, this.offsets[5], instances);\n  }\n}\n\n/**\n * A geoset.\n */\nexport class Geoset {\n  /**\n   * @param {MdxModel} model\n   * @param {MdxParserGeoset} geoset\n   * @param {number} index\n   */\n  constructor(model, geoset, index) {\n    let positions = geoset.vertices;\n    let normals = geoset.normals;\n    let textureCoordinateSets = geoset.uvSets;\n    let uvsetSize = textureCoordinateSets[0].length;\n    let vertices = positions.length / 3;\n    let uvs;\n    let boneIndices = new Uint8Array(vertices * 4);\n    // A note for the future, since I keep coming back to this.\n    // The reason bone numbers are stored as 32 bits instead of 8 are because of offset rules.\n    // WebGL complains if the bind() method of ShallowGeoset above uses offset 1 instead of 4, even if the shader gets one float.\n    // Why? heck if I know.\n    // I don't see the alignment issues, but WebGL does.\n    let boneNumbers = new Uint32Array(vertices);\n    let vertexGroups = geoset.vertexGroups;\n    let matrixGroups = geoset.matrixGroups;\n    let matrixIndices = geoset.matrixIndices;\n    let slices = [];\n\n    // Make one typed array for the texture coordinates, in case there are multiple ones\n    if (textureCoordinateSets.length > 1) {\n      uvs = new Float32Array(textureCoordinateSets.length * uvsetSize);\n\n      for (let i = 0, l = textureCoordinateSets.length; i < l; i++) {\n        uvs.set(textureCoordinateSets[i], i * uvsetSize);\n      }\n    } else {\n      uvs = textureCoordinateSets[0];\n    }\n\n    // Parse the bone indices by slicing the matrix groups\n    for (let i = 0, l = matrixGroups.length, k = 0; i < l; i++) {\n      slices.push(matrixIndices.subarray(k, k + matrixGroups[i]));\n      k += matrixGroups[i];\n    }\n\n    // Construct the final bone arrays\n    for (let i = 0; i < vertices; i++) {\n      let slice = slices[vertexGroups[i]];\n\n      // Somehow in some bad models a vertex group index refers to an invalid matrix group.\n      // Such models are still loaded by the game.\n      if (slice) {\n        let bones = slices[vertexGroups[i]];\n        let boneCount = Math.min(bones.length, 4); // The viewer supports up to 4 bones per vertex, the game handles any(?) amount.\n\n        for (let j = 0; j < boneCount; j++) {\n          // 1 is added to every index for shader optimization (index 0 is a zero matrix)\n          boneIndices[i * 4 + j] = bones[j] + 1;\n        }\n\n        boneNumbers[i] = boneCount;\n      }\n    }\n\n    this.index = index;\n    this.materialId = geoset.materialId;\n    this.locationArray = positions;\n    this.normalArray = normals;\n    this.uvsArray = uvs;\n    this.boneIndexArray = boneIndices;\n    this.boneNumberArray = boneNumbers;\n    this.faceArray = geoset.faces;\n    this.uvSetSize = uvsetSize * 4;\n\n    let geosetAnimations = model.geosetAnimations;\n\n    for (let i = 0, l = geosetAnimations.length; i < l; i++) {\n      if (geosetAnimations[i].geosetId === index) {\n        this.geosetAnimation = geosetAnimations[i];\n      }\n    }\n\n    let variants = {\n      alpha: [],\n      color: [],\n    };\n\n    let hasAnim = false;\n\n    for (let i = 0, l = model.sequences.length; i < l; i++) {\n      let alpha = this.isAlphaVariant(i);\n      let color = this.isColorVariant(i);\n\n      if (alpha || color) {\n        hasAnim = true;\n      }\n\n      variants.alpha[i] = alpha;\n      variants.color[i] = color;\n    }\n\n    this.variants = variants;\n    this.hasAnim = hasAnim;\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getAlpha(out, instance) {\n    if (this.geosetAnimation) {\n      return this.geosetAnimation.getAlpha(out, instance);\n    }\n\n    out[0] = 1;\n    return -1;\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getColor(out, instance) {\n    if (this.geosetAnimation) {\n      return this.geosetAnimation.getColor(out, instance);\n    }\n\n    vec3.copy(out, VEC3_ONE);\n    return -1;\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isAlphaVariant(sequence) {\n    return this.geosetAnimation && this.geosetAnimation.isAlphaVariant(sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isColorVariant(sequence) {\n    return this.geosetAnimation && this.geosetAnimation.isColorVariant(sequence);\n  }\n}\n","/**\n * An MDX batch.\n */\nexport default class Batch {\n  /**\n   * @param {number} index\n   * @param {Layer} layer\n   * @param {Geoset} geoset\n   */\n  constructor(index, layer, geoset) {\n    /** @member {number} */\n    this.index = index;\n    /** @member {Layer} */\n    this.layer = layer;\n    /** @member {Geoset} */\n    this.geoset = geoset;\n  }\n}\n","export default {\n  1: 'TeamColor/TeamColor00',\n  2: 'TeamGlow/TeamGlow00',\n  11: 'Cliff/Cliff0',\n  21: '', // Used by all cursor models (HumanCursor, OrcCursor, UndeadCursor, NightElfCursor)\n  31: 'LordaeronTree/LordaeronSummerTree',\n  32: 'AshenvaleTree/AshenTree',\n  33: 'BarrensTree/BarrensTree',\n  34: 'NorthrendTree/NorthTree',\n  35: 'Mushroom/MushroomTree',\n  36: 'RuinsTree/RuinsTree',\n  37: 'OutlandMushroomTree/MushroomTree',\n};\n","import {vec3} from 'gl-matrix';\nimport {VEC3_ZERO, VEC3_ONE, QUAT_DEFAULT} from '../../../common/gl-matrix-addon';\nimport AnimatedObject from './animatedobject';\n\n/**\n * An MDX generic object.\n */\nexport default class GenericObject extends AnimatedObject {\n  /**\n   * @param {handlers.mdl.Model} model\n   * @param {parsers.mdlx.GenericObject} object\n   * @param {number} index\n   */\n  constructor(model, object, index) {\n    super(model, object);\n\n    this.index = index;\n    this.name = object.name;\n    this.objectId = object.objectId;\n    this.parentId = object.parentId;\n    this.pivot = model.pivotPoints[object.objectId] || vec3.create();\n\n    let flags = object.flags;\n\n    this.dontInheritTranslation = flags & 0x1;\n    this.dontInheritRotation = flags & 0x2;\n    this.dontInheritScaling = flags & 0x4;\n    this.billboarded = flags & 0x8;\n    this.billboardedX = flags & 0x10;\n    this.billboardedY = flags & 0x20;\n    this.billboardedZ = flags & 0x40;\n    this.cameraAnchored = flags & 0x80;\n    this.bone = flags & 0x100;\n    this.light = flags & 0x200;\n    this.eventObject = flags & 0x400;\n    this.attachment = flags & 0x800;\n    this.particleEmitter = flags & 0x1000;\n    this.collisionShape = flags & 0x2000;\n    this.ribbonEmitter = flags & 0x4000;\n    this.emitterUsesMdlOrUnshaded = flags & 0x8000;\n    this.emitterUsesTgaOrSortPrimitivesFarZ = flags & 0x10000;\n    this.lineEmitter = flags & 0x20000;\n    this.unfogged = flags & 0x40000;\n    this.modelSpace = flags & 0x80000;\n    this.xYQuad = flags & 0x100000;\n\n    this.anyBillboarding = this.billboarded || this.billboardedX || this.billboardedY || this.billboardedZ;\n\n    if (object.objectId === object.parentId) {\n      this.parentId = -1;\n    }\n\n    let variants = {\n      translation: [],\n      rotation: [],\n      scale: [],\n      generic: [],\n    };\n\n    for (let i = 0, l = model.sequences.length; i < l; i++) {\n      let translation = this.isTranslationVariant(i);\n      let rotation = this.isRotationVariant(i);\n      let scale = this.isScaleVariant(i);\n\n      variants.translation[i] = translation;\n      variants.rotation[i] = rotation;\n      variants.scale[i] = scale;\n      variants.generic[i] = translation || rotation || scale;\n    }\n\n    this.variants = variants;\n  }\n\n  /**\n   * Many of the generic objects have animated visibilities.\n   * This is a generic getter to allow the code to be consistent.\n   *\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getVisibility(out, instance) {\n    out[0] = 1;\n    return -1;\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getTranslation(out, instance) {\n    return this.getVector3Value(out, 'KGTR', instance, VEC3_ZERO);\n  }\n\n  /**\n   * @param {quat} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getRotation(out, instance) {\n    return this.getVector4Value(out, 'KGRT', instance, QUAT_DEFAULT);\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getScale(out, instance) {\n    return this.getVector3Value(out, 'KGSC', instance, VEC3_ONE);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isTranslationVariant(sequence) {\n    return this.isVariant('KGTR', sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isRotationVariant(sequence) {\n    return this.isVariant('KGRT', sequence);\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isScaleVariant(sequence) {\n    return this.isVariant('KGSC', sequence);\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * An MDX bone.\n */\nexport default class Bone extends GenericObject {\n  /**\n   * @param {ModelViewer.viewer.Model} model\n   * @param {ModelViewer.parsers.mdx.Bone} bone\n   * @param {number} index\n   */\n  constructor(model, bone, index) {\n    super(model, bone, index);\n\n    this.geosetAnimation = model.geosetAnimations[bone.geosetAnimationId];\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getVisibility(out, instance) {\n    if (this.geosetAnimation) {\n      return this.geosetAnimation.getAlpha(out, instance);\n    }\n\n    out[0] = 1;\n    return -1;\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * An MDX light.\n */\nexport default class Light extends GenericObject {\n  /**\n   * @param {Model} model\n   * @param {Light} light\n   * @param {number} index\n   */\n  constructor(model, light, index) {\n    super(model, light, index);\n\n    this.type = light.type;\n    this.attenuation = light.attenuation;\n    this.color = light.color;\n    this.intensity = light.intensity;\n    this.ambientColor = light.ambientColor;\n    this.ambientIntensity = light.ambientIntensity;\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getAttenuationStart(out, instance) {\n    return this.getFloatValue(out, 'KLAS', instance, this.attenuation[0]);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getAttenuationEnd(out, instance) {\n    return this.getFloatValue(out, 'KLAE', instance, this.attenuation[1]);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getIntensity(out, instance) {\n    return this.getFloatValue(out, 'KLAI', instance, this.intensity);\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getColor(out, instance) {\n    return this.getVector3Value(out, 'KLAC', instance, this.color);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getAmbientIntensity(out, instance) {\n    return this.getFloatValue(out, 'KLBI', instance, this.ambientIntensity);\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getAmbientColor(out, instance) {\n    return this.getVector3Value(out, 'KLBC', instance, this.ambientColor);\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * An MDX helper.\n */\nexport default class Helper extends GenericObject {}\n","import GenericObject from './genericobject';\n\n/**\n * An MDX attachment.\n */\nexport default class Attachment extends GenericObject {\n  /**\n   * @param {Model} model\n   * @param {mdlx.Attachment} attachment\n   * @param {number} index\n   */\n  constructor(model, attachment, index) {\n    super(model, attachment, index);\n\n    let path = attachment.path.replace(/\\\\/g, '/').toLowerCase().replace('.mdl', '.mdx');\n\n    this.path = path;\n    this.attachmentId = attachment.attachmentId;\n\n    // Second condition is against custom resources using arbitrary paths...\n    if (path !== '' && path.indexOf('.mdx') != -1) {\n      this.internalModel = model.viewer.load(path, model.pathSolver);\n    }\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getVisibility(out, instance) {\n    return this.getFloatValue(out, 'KATV', instance, 1);\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * An MDX particle emitter.\n */\nexport default class ParticleEmitter extends GenericObject {\n  /**\n   * @param {MdxModel} model\n   * @param {MdxParserParticleEmitter} emitter\n   * @param {number} index\n   */\n  constructor(model, emitter, index) {\n    super(model, emitter, index);\n\n    this.internalResource = model.viewer.load(emitter.path.replace(/\\\\/g, '/').toLowerCase().replace('.mdl', '.mdx'), model.pathSolver);\n    this.speed = emitter.speed;\n    this.latitude = emitter.latitude;\n    this.longitude = emitter.longitude;\n    this.lifeSpan = emitter.lifeSpan;\n    this.gravity = emitter.gravity;\n    this.emissionRate = emitter.emissionRate;\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getSpeed(out, instance) {\n    return this.getFloatValue(out, 'KPES', instance, this.speed);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getLatitude(out, instance) {\n    return this.getFloatValue(out, 'KPLTV', instance, this.latitude);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getLongitude(out, instance) {\n    return this.getFloatValue(out, 'KPLN', instance, this.longitude);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getLifeSpan(out, instance) {\n    return this.getFloatValue(out, 'KPEL', instance, this.lifeSpan);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getGravity(out, instance) {\n    return this.getFloatValue(out, 'KPEG', instance, this.gravity);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getEmissionRate(out, instance) {\n    return this.getFloatValue(out, 'KPEE', instance, this.emissionRate);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getVisibility(out, instance) {\n    return this.getFloatValue(out, 'KPEV', instance, 1);\n  }\n}\n","import GenericObject from './genericobject';\nimport {emitterFilterMode} from './filtermode';\nimport replaceableIds from './replaceableids';\n\n/**\n * An MDX particle emitter type 2.\n */\nexport default class ParticleEmitter2 extends GenericObject {\n  /**\n   * @param {MdxModel} model\n   * @param {MdxParserParticleEmitter2} emitter\n   * @param {number} index\n   */\n  constructor(model, emitter, index) {\n    super(model, emitter, index);\n\n    this.width = emitter.width;\n    this.length = emitter.length;\n    this.speed = emitter.speed;\n    this.latitude = emitter.latitude;\n    this.gravity = emitter.gravity;\n    this.emissionRate = emitter.emissionRate;\n    this.squirt = emitter.squirt;\n    this.lifeSpan = emitter.lifeSpan;\n    this.variation = emitter.variation;\n    this.tailLength = emitter.tailLength;\n    this.timeMiddle = emitter.timeMiddle;\n\n    let replaceableId = emitter.replaceableId;\n\n    this.dimensions = [emitter.columns, emitter.rows];\n\n    this.teamColored = false;\n\n    if (replaceableId === 0) {\n      this.internalResource = model.textures[emitter.textureId];\n    } else if (replaceableId === 1) {\n      this.internalResource = model.viewer.getTextureAtlas('teamColors');\n      this.dimensions.fill(4);\n      this.teamColored = true;\n    } else if (replaceableId === 2) {\n      this.internalResource = model.viewer.getTextureAtlas('teamGlows');\n      this.dimensions.fill(4);\n      this.teamColored = true;\n    } else {\n      this.internalResource = model.viewer.load('ReplaceableTextures\\\\' + replaceableIds[replaceableId] + '.blp', model.pathSolver);\n    }\n\n    this.replaceableId = emitter.replaceableId;\n\n    let headOrTail = emitter.headOrTail;\n\n    this.head = (headOrTail === 0 || headOrTail === 2);\n    this.tail = (headOrTail === 1 || headOrTail === 2);\n\n    this.cellWidth = 1 / emitter.columns;\n    this.cellHeight = 1 / emitter.rows;\n    this.colors = [];\n\n    let colors = emitter.segmentColors;\n    let alpha = emitter.segmentAlphas;\n\n    for (let i = 0; i < 3; i++) {\n      this.colors[i] = new Uint8Array([Math.min(colors[i][0], 1) * 255, Math.min(colors[i][1], 1) * 255, Math.min(colors[i][2], 1) * 255, alpha[i]]);\n    }\n\n    this.scaling = emitter.segmentScaling;\n\n    this.intervals = [...emitter.headIntervals, ...emitter.tailIntervals];\n\n    this.lineEmitter = emitter.flags & 0x20000;\n    this.modelSpace = emitter.flags & 0x80000;\n    this.xYQuad = emitter.flags & 0x100000;\n\n    [this.blendSrc, this.blendDst] = emitterFilterMode(emitter.filterMode, this.model.viewer.gl);\n\n    this.priorityPlane = emitter.priorityPlane;\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getWidth(out, instance) {\n    return this.getFloatValue(out, 'KP2W', instance, this.width);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getLength(out, instance) {\n    return this.getFloatValue(out, 'KP2N', instance, this.length);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getSpeed(out, instance) {\n    return this.getFloatValue(out, 'KP2S', instance, this.speed);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getLatitude(out, instance) {\n    return this.getFloatValue(out, 'KP2L', instance, this.latitude);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getGravity(out, instance) {\n    return this.getFloatValue(out, 'KP2G', instance, this.gravity);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getEmissionRate(out, instance) {\n    return this.getFloatValue(out, 'KP2E', instance, this.emissionRate);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getVisibility(out, instance) {\n    return this.getFloatValue(out, 'KP2V', instance, 1);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getVariation(out, instance) {\n    return this.getFloatValue(out, 'KP2R', instance, this.variation);\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * An MDX ribbon emitter.\n */\nexport default class RibbonEmitter extends GenericObject {\n  /**\n   * @param {MdxModel} model\n   * @param {MdxParserParticleEmitter} emitter\n   * @param {number} index\n   */\n  constructor(model, emitter, index) {\n    super(model, emitter, index);\n\n    this.layer = model.materials[emitter.materialId][0];\n    this.texture = model.textures[this.layer.textureId];\n\n    this.heightAbove = emitter.heightAbove;\n    this.heightBelow = emitter.heightBelow;\n    this.alpha = emitter.alpha;\n    this.color = emitter.color;\n    this.lifeSpan = emitter.lifeSpan;\n    this.textureSlot = emitter.textureSlot;\n    this.emissionRate = emitter.emissionRate;\n    this.gravity = emitter.gravity;\n\n    this.dimensions = [emitter.columns, emitter.rows];\n    this.cellWidth = 1 / emitter.columns;\n    this.cellHeight = 1 / emitter.rows;\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getHeightBelow(out, instance) {\n    return this.getFloatValue(out, 'KRHB', instance, this.heightBelow);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getHeightAbove(out, instance) {\n    return this.getFloatValue(out, 'KRHA', instance, this.heightAbove);\n  }\n\n  /**\n   * @param {Uint32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getTextureSlot(out, instance) {\n    return this.getUintValue(out, 'KRTX', instance, 0);\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getColor(out, instance) {\n    return this.getVector3Value(out, 'KRCO', instance, this.color);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getAlpha(out, instance) {\n    return this.getFloatValue(out, 'KRAL', instance, this.alpha);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getVisibility(out, instance) {\n    return this.getFloatValue(out, 'KRVS', instance, 1);\n  }\n}\n","import GenericObject from './genericobject';\nimport {vec3} from 'gl-matrix';\n\nconst zero = vec3.create();\n\n/**\n * An MDX camera.\n */\nexport default class Camera extends GenericObject {\n  /**\n   * @param {ModelViewer.viewer.handlers.mdx.Model} model\n   * @param {ModelViewer.parsers.mdlx.Camera} camera\n   * @param {number} index\n   */\n  constructor(model, camera, index) {\n    super(model, camera, index);\n\n    this.name = camera.name;\n    this.position = camera.position;\n    this.fieldOfView = camera.fieldOfView;\n    this.farClippingPlane = camera.farClippingPlane;\n    this.nearClippingPlane = camera.nearClippingPlane;\n    this.targetPosition = camera.targetPosition;\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getPositionTranslation(out, instance) {\n    const res = this.getVector3Value(out, 'KCTR', instance, zero);\n    vec3.add(out, out, this.position);\n    return res;\n  }\n\n  /**\n   * @param {vec3} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getTargetTranslation(out, instance) {\n    const res = this.getVector3Value(out, 'KTTR', instance, zero);\n    vec3.add(out, out, this.targetPosition);\n    return res;\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @param {ModelInstance} instance\n   * @return {number}\n   */\n  getRotation(out, instance) {\n    return this.getFloatValue(out, 'KCRL', instance, 0);\n  }\n}\n","import SlkFile from '../parsers/slk/file';\nimport IniFile from '../parsers/ini/file';\n\n/**\n * A structure that holds mapped data from INI and SLK files.\n * In the case of SLK files, the first row is expected to hold the names of the columns.\n */\nexport default class MappedData {\n  /**\n   * @param {?string} buffer\n   */\n  constructor(buffer) {\n    /** @member {Object<string, Object<string, string>>} */\n    this.map = {};\n  \n    this.load(buffer);\n    \n  }\n  load(buffer){\n    if (buffer) {\n\n      if (buffer instanceof ArrayBuffer) {\n        const decoder = new TextDecoder('utf-8');\n        let uint8Array = new Uint8Array(buffer);\n\n        this.loadText(decoder.decode(uint8Array));\n      }\n      else {\n        this.loadText(buffer);\n      }\n    }\n  }\n\n  /**\n   * Load data from an SLK file or an INI file.\n   * Note that this may override previous properties!\n   *\n   * @param {string} buffer\n   */\n  loadText(buffer) {\n    if (buffer.startsWith('ID;')) {\n      let file = new SlkFile(buffer);\n      let rows = file.rows;\n      let header = rows[0];\n      let map = this.map;\n\n      for (let i = 1, l = rows.length; i < l; i++) {\n        let row = rows[i];\n        let name = row[0];\n\n        if (name) {\n          name = name.toLowerCase();\n\n          if (!map[name]) {\n            map[name] = {};\n          }\n\n          let mapped = map[name];\n\n          for (let j = 0, k = header.length; j < k; j++) {\n            let key = header[j];\n\n            // UnitBalance.slk doesn't define the name of one row.\n            if (key === undefined) {\n              key = `column${j}`;\n            }\n\n            mapped[key] = row[j];\n          }\n        }\n      }\n    } else {\n      let file = new IniFile(buffer);\n      let sections = file.sections;\n      let map = this.map;\n\n      for (let [row, properties] of sections.entries()) {\n        if (!map[row]) {\n          map[row] = {};\n        }\n\n        let mapped = map[row];\n\n        for (let [name, property] of properties) {\n          mapped[name] = property;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} key\n   * @return {?Object<string, string>}\n   */\n  getRow(key) {\n    return this.map[key.toLowerCase()];\n  }\n\n  /**\n   * @param {string} key\n   * @param {string} name\n   * @return {?string}\n   */\n  getProperty(key, name) {\n    return this.map[key.toLowerCase()][name];\n  }\n\n  /**\n   * @param {string} key\n   * @param {Object} values\n   */\n  setRow(key, values) {\n    this.map[key.toLowerCase()] = values;\n  }\n}\n","let audioContext = new OfflineAudioContext(1, 1, 48000);\n\n/**\n * A context-less decodeAudioData().\n *\n * @param {ArrayBuffer} buffer\n * @return {Promise}\n */\nexport function decodeAudioData(buffer) {\n  return audioContext.decodeAudioData(buffer);\n}\n","import {vec2} from 'gl-matrix';\nimport MappedData from '../../../utils/mappeddata';\nimport {decodeAudioData} from '../../../common/audio';\nimport GenericObject from './genericobject';\nimport {emitterFilterMode} from './filtermode';\n\nlet mappedDataCallback = (text) => new MappedData(text);\nlet decodedDataCallback = (arrayBuffer) => decodeAudioData(arrayBuffer);\n\n/**\n * An event object.\n */\nexport default class EventObject extends GenericObject {\n  /**\n   * @param {MdxModel} model\n   * @param {MdxParserEventObjectEmitter} eventObject\n   * @param {number} index\n   */\n  constructor(model, eventObject, index) {\n    super(model, eventObject, index);\n\n    let viewer = model.viewer;\n    let name = eventObject.name;\n    let type = name.substring(0, 3);\n    let id = name.substring(4);\n\n    // Same thing\n    if (type === 'FPT') {\n      type = 'SPL';\n    }\n\n    this.ok = false;\n    this.type = type;\n    this.id = id;\n\n    this.internalResource = null;\n\n    // For SND\n    this.decodedBuffers = [];\n\n    this.tracks = eventObject.tracks;\n    this.ok = false;\n    this.globalSequence = null;\n    this.defval = vec2.create();\n\n    let globalSequenceId = eventObject.globalSequenceId;\n    if (globalSequenceId !== -1) {\n      this.globalSequence = model.globalSequences[globalSequenceId];\n    }\n\n    let tables = [];\n    let pathSolver = model.pathSolver;\n\n    if (type === 'SPN') {\n      tables[0] = viewer.loadGeneric(pathSolver('Splats\\\\SpawnData.slk')[0], 'text', mappedDataCallback);\n    } else if (type === 'SPL') {\n      tables[0] = viewer.loadGeneric(pathSolver('Splats\\\\SplatData.slk')[0], 'text', mappedDataCallback);\n    } else if (type === 'UBR') {\n      tables[0] = viewer.loadGeneric(pathSolver('Splats\\\\UberSplatData.slk')[0], 'text', mappedDataCallback);\n    } else if (type === 'SND') {\n      tables[0] = viewer.loadGeneric(pathSolver('UI\\\\SoundInfo\\\\AnimLookups.slk')[0], 'text', mappedDataCallback);\n      tables[1] = viewer.loadGeneric(pathSolver('UI\\\\SoundInfo\\\\AnimSounds.slk')[0], 'text', mappedDataCallback);\n    } else {\n      // Units\\Critters\\BlackStagMale\\BlackStagMale.mdx has an event object named \"Point01\".\n      return;\n    }\n\n    let promise = viewer.promise();\n\n    viewer.whenLoaded(tables)\n      .then((tables) => {\n        this.load(tables);\n\n        promise.resolve();\n      });\n  }\n\n  /**\n   * @param {Array<SlkFile>} tables\n   */\n  load(tables) {\n    if (!tables[0].ok) {\n      return;\n    }\n\n    let type = this.type;\n    let model = this.model;\n    let viewer = model.viewer;\n    let pathSolver = model.pathSolver;\n    let row = tables[0].data.getRow(this.id);\n\n    if (row) {\n      if (type === 'SPN') {\n        this.internalResource = viewer.load(row.Model.replace('.mdl', '.mdx'), pathSolver);\n      } else if (type === 'SPL' || type === 'UBR') {\n        this.internalResource = viewer.load('replaceabletextures/splats/' + row.file + '.blp', pathSolver);\n        this.colors = [[row.StartR, row.StartG, row.StartB, row.StartA], [row.MiddleR, row.MiddleG, row.MiddleB, row.MiddleA], [row.EndR, row.EndG, row.EndB, row.EndA]];\n        this.scale = row.Scale;\n\n        if (type === 'SPL') {\n          this.dimensions = [row.Columns, row.Rows];\n          this.intervals = [[row.UVLifespanStart, row.UVLifespanEnd, row.LifespanRepeat], [row.UVDecayStart, row.UVDecayEnd, row.DecayRepeat]];\n          this.intervalTimes = [row.Lifespan, row.Decay];\n          this.lifespan = row.Lifespan + row.Decay;\n        } else {\n          this.dimensions = [1, 1];\n          this.intervalTimes = [row.BirthTime, row.PauseTime, row.Decay];\n          this.lifespan = row.BirthTime + row.PauseTime + row.Decay;\n        }\n\n        [this.blendSrc, this.blendDst] = emitterFilterMode(row.BlendMode, viewer.gl);\n      } else if (type === 'SND') {\n        // Only load sounds if audio is enabled.\n        // This is mostly to save on bandwidth and loading time, especially when loading full maps.\n        if (viewer.enableAudio) {\n          if (!tables[1].ok) {\n            return;\n          }\n\n          row = tables[1].data.getRow(row.SoundLabel);\n\n          if (row) {\n            this.distanceCutoff = row.DistanceCutoff;\n            this.maxDistance = row.MaxDistance;\n            this.minDistance = row.MinDistance;\n            this.pitch = row.Pitch;\n            this.pitchVariance = row.PitchVariance;\n            this.volume = row.Volume;\n\n            let fileNames = row.FileNames.split(',');\n\n            viewer.whenLoaded(fileNames.map((fileName) => viewer.loadGeneric(pathSolver(row.DirectoryBase + fileName)[0], 'arrayBuffer', decodedDataCallback)))\n              .then((resources) => {\n                for (let resource of resources) {\n                  this.decodedBuffers.push(resource.data);\n                }\n\n                this.ok = true;\n              });\n          }\n        }\n      }\n\n      if (this.internalResource) {\n        this.internalResource.whenLoaded()\n          .then(() => this.ok = true);\n      }\n    } else {\n      console.warn('Unknown event object ID', type, this.id);\n    }\n  }\n\n  getValue(out, instance) {\n    if (this.globalSequence) {\n      let globalSequence = this.globalSequence;\n\n      return this.getValueAtTime(out, instance.counter % globalSequence, 0, globalSequence);\n    } else if (instance.sequence !== -1) {\n      let interval = this.model.sequences[instance.sequence].interval;\n\n      return this.getValueAtTime(out, instance.frame, interval[0], interval[1]);\n    } else {\n      let defval = this.defval;\n\n      out[0] = defval[0];\n      out[1] = defval[1];\n\n      return out;\n    }\n  }\n\n  getValueAtTime(out, frame, start, end) {\n    let tracks = this.tracks;\n\n    if (frame < start || frame > end) {\n      out[0] = 0;\n      out[1] = 0;\n      return out;\n    }\n\n    for (let i = tracks.length - 1; i > -1; i--) {\n      if (tracks[i] < start) {\n        out[0] = 0;\n        out[1] = i;\n        return out;\n      } else if (tracks[i] <= frame) {\n        out[0] = 1;\n        out[1] = i;\n        return out;\n      }\n    }\n\n    out[0] = 0;\n    out[1] = 0;\n    return out;\n  }\n}\n","import GenericObject from './genericobject';\n\n/**\n * A collision shape.\n */\nexport default class CollisionShape extends GenericObject {}\n","import {extentToSphere} from '../../../common/bounds';\nimport Parser from '../../../parsers/mdlx/model';\nimport TexturedModel from '../../texturedmodel';\nimport TextureAnimation from './textureanimation';\nimport Layer from './layer';\nimport GeosetAnimation from './geosetanimation';\nimport {Geoset} from './geoset';\nimport Batch from './batch';\nimport {ShallowGeoset} from './geoset';\nimport replaceableIds from './replaceableids';\nimport Bone from './bone';\nimport Light from './light';\nimport Helper from './helper';\nimport Attachment from './attachment';\nimport ParticleEmitter from './modelparticleemitter';\nimport ParticleEmitter2 from './modelparticleemitter2';\nimport RibbonEmitter from './modelribbonemitter';\nimport Camera from './camera';\nimport EventObject from './modeleventobject';\nimport CollisionShape from './collisionshape';\n/**\n * An MDX model.\n */\nexport default class Model extends TexturedModel {\n  /**\n   * @param {Object} resourceData\n   */\n  constructor(resourceData) {\n    super(resourceData);\n\n    this.parser = null;\n    this.name = '';\n    this.extent = null;\n    this.bounds = null;\n    this.sequences = [];\n    this.globalSequences = [];\n    this.materials = [];\n    this.layers = [];\n    this.textures = [];\n    this.textureAnimations = [];\n    this.geosets = [];\n    this.geosetAnimations = [];\n    this.bones = [];\n    this.lights = [];\n    this.helpers = [];\n    this.attachments = [];\n    this.pivotPoints = [];\n    this.particleEmitters = [];\n    this.particleEmitters2 = [];\n    this.ribbonEmitters = [];\n    this.cameras = [];\n    this.eventObjects = [];\n    this.collisionShapes = [];\n\n    this.hasLayerAnims = false;\n    this.hasGeosetAnims = false;\n    this.batches = [];\n    this.opaqueBatches = [];\n    this.translucentBatches = [];\n\n    this.genericObjects = [];\n    this.sortedGenericObjects = [];\n    this.hierarchy = [];\n    this.replaceables = [];\n  }\n\n  /**\n   * @param {ArrayBuffer|string} buffer\n   */\n  load(buffer) {\n    // Parsing\n    let parser = new Parser();\n\n    parser.load(buffer);\n\n    this.parser = parser;\n\n    // Model\n    this.name = parser.name;\n\n    // Make a bounding sphere from the model extent.\n    let extent = parser.extent;\n    this.bounds = extentToSphere(extent.min, extent.max);\n    this.extent = extent;\n\n    // Sequences\n    for (let sequence of parser.sequences) {\n      this.sequences.push(sequence);\n    }\n\n    // Global sequences\n    for (let globalSequence of parser.globalSequences) {\n      this.globalSequences.push(globalSequence);\n    }\n\n    let usingTeamTextures = false;\n\n    // Textures\n    for (let texture of parser.textures) {\n      let path = texture.path;\n      let replaceableId = texture.replaceableId;\n      let flags = texture.flags;\n\n      if (replaceableId !== 0) {\n        path = `ReplaceableTextures\\\\${replaceableIds[replaceableId]}.blp`;\n\n        if (replaceableId === 1 || replaceableId === 2) {\n          usingTeamTextures = true;\n        }\n      }\n\n      // If the path is corrupted, try to fix it.\n      if (!path.endsWith('.blp') && !path.endsWith('.tga')) {\n        // Try to search for .blp\n        let index = path.indexOf('.blp');\n\n        if (index === -1) {\n          // Not a .blp, try to search for .tga\n          index = path.indexOf('.tga');\n        }\n\n        if (index !== -1) {\n          // Hopefully fix the path\n          path = path.slice(0, index + 4);\n        }\n      }\n\n      this.replaceables.push(replaceableId);\n\n      let textureRes = this.viewer.load(path, this.pathSolver);\n\n      textureRes.wrapS = !!(flags & 0x1);\n      textureRes.wrapT = !!(flags & 0x2);\n\n      this.textures.push(textureRes);\n    }\n\n    if (usingTeamTextures) {\n      // Start loading the team color and glow textures.\n      this.loadTeamTextures();\n    }\n\n    // Texture animations\n    for (let textureAnimation of parser.textureAnimations) {\n      this.textureAnimations.push(new TextureAnimation(this, textureAnimation));\n    }\n\n    // Materials\n    let layerId = 0;\n    for (let material of parser.materials) {\n      let vMaterial = [];\n\n      for (let layer of material.layers) {\n        let vLayer = new Layer(this, layer, layerId++, material.priorityPlane);\n\n        vMaterial.push(vLayer);\n        this.layers.push(vLayer);\n\n        if (vLayer.hasAnim) {\n          this.hasLayerAnims = true;\n        }\n      }\n\n      this.materials.push(vMaterial);\n    }\n\n    // Geoset animations\n    for (let geosetAnimation of parser.geosetAnimations) {\n      this.geosetAnimations.push(new GeosetAnimation(this, geosetAnimation));\n    }\n\n    // Geosets\n    if (parser.geosets.length) {\n      let geosetId = 0;\n      let batchId = 0;\n      let opaqueBatches = [];\n      let translucentBatches = [];\n\n      for (let geoset of parser.geosets) {\n        let vGeoset = new Geoset(this, geoset, geosetId++);\n\n        if (vGeoset.hasAnim) {\n          this.hasGeosetAnims = true;\n        }\n\n        this.geosets.push(vGeoset);\n\n        // Batches\n        for (let vLayer of this.materials[geoset.materialId]) {\n          let batch = new Batch(batchId++, vLayer, vGeoset);\n\n          if (vLayer.filterMode < 2) {\n            opaqueBatches.push(batch);\n          } else {\n            translucentBatches.push(batch);\n          }\n        }\n      }\n\n      // / TODO: I don't remember if this is actually needed, are the layers ever not sorted?\n      translucentBatches.sort((a, b) => a.layer.priorityPlane - b.layer.priorityPlane);\n\n      this.opaqueBatches.push(...opaqueBatches);\n      this.translucentBatches.push(...translucentBatches);\n      this.batches.push(...opaqueBatches, ...translucentBatches);\n\n      this.setupGeosets();\n    }\n\n    this.pivotPoints = parser.pivotPoints;\n\n    // Tracks the IDs of all generic objects.\n    let objectId = 0;\n\n    // Bones\n    for (let bone of parser.bones) {\n      this.bones.push(new Bone(this, bone, objectId++));\n    }\n\n    // Lights\n    for (let light of parser.lights) {\n      this.lights.push(new Light(this, light, objectId++));\n    }\n\n    // Helpers\n    for (let helper of parser.helpers) {\n      this.helpers.push(new Helper(this, helper, objectId++));\n    }\n\n    // Attachments\n    for (let attachment of parser.attachments) {\n      this.attachments.push(new Attachment(this, attachment, objectId++));\n    }\n\n    // Particle emitters\n    for (let particleEmitter of parser.particleEmitters) {\n      this.particleEmitters.push(new ParticleEmitter(this, particleEmitter, objectId++));\n    }\n\n    // Particle emitters 2\n    for (let particleEmitter2 of parser.particleEmitters2) {\n      this.particleEmitters2.push(new ParticleEmitter2(this, particleEmitter2, objectId++));\n    }\n\n    // E.g. Wisp\n    this.particleEmitters2.sort((a, b) => a.priorityPlane - b.priorityPlane);\n\n\n    // Ribbon emitters\n    for (let ribbonEmitter of parser.ribbonEmitters) {\n      this.ribbonEmitters.push(new RibbonEmitter(this, ribbonEmitter, objectId++));\n    }\n\n    // Cameras\n    for (let camera of parser.cameras) {\n      this.cameras.push(new Camera(this, camera, objectId++));\n    }\n\n    // Event objects\n    for (let eventObject of parser.eventObjects) {\n      this.eventObjects.push(new EventObject(this, eventObject, objectId++));\n    }\n\n    // Collision shapes\n    for (let collisionShape of parser.collisionShapes) {\n      this.collisionShapes.push(new CollisionShape(this, collisionShape, objectId++));\n    }\n\n    // One array for all generic objects.\n    this.genericObjects.push(...this.bones, ...this.lights, ...this.helpers, ...this.attachments, ...this.particleEmitters, ...this.particleEmitters2, ...this.ribbonEmitters, ...this.cameras, ...this.eventObjects, ...this.collisionShapes);\n\n    // Creates the sorted indices array of the generic objects.\n    this.setupHierarchy(-1);\n\n    // Keep a sorted array.\n    for (let i = 0, l = this.genericObjects.length; i < l; i++) {\n      this.sortedGenericObjects[i] = this.genericObjects[this.hierarchy[i]];\n    }\n\n    // Checks what sequences are variant or not.\n    this.setupVariants();\n\n    // this.calculateExtent();\n  }\n\n  /**\n   *\n   */\n  loadTeamTextures() {\n    let viewer = this.viewer;\n\n    if (!viewer.getTextureAtlas('teamColors')) {\n      let pathSolver = this.pathSolver;\n      let teamColors = [];\n      let teamGlows = [];\n\n      for (let i = 0; i < 28; i++) {\n        let id = ('' + i).padStart(2, '0');\n\n        teamColors[i] = viewer.load(`ReplaceableTextures\\\\TeamColor\\\\TeamColor${id}.blp`, pathSolver);\n        teamGlows[i] = viewer.load(`ReplaceableTextures\\\\TeamGlow\\\\TeamGlow${id}.blp`, pathSolver);\n      }\n\n      viewer.loadTextureAtlas('teamColors', teamColors);\n      viewer.loadTextureAtlas('teamGlows', teamGlows);\n    }\n  }\n\n  /**\n   * @param {number} sequence\n   * @return {boolean}\n   */\n  isVariant(sequence) {\n    let genericObjects = this.genericObjects;\n\n    for (let i = 0, l = genericObjects.length; i < l; i++) {\n      if (genericObjects[i].variants.generic[sequence]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   *\n   */\n  setupVariants() {\n    let variants = [];\n\n    for (let i = 0, l = this.sequences.length; i < l; i++) {\n      variants[i] = this.isVariant(i);\n    }\n\n    this.variants = variants;\n  }\n\n  /**\n   *\n   */\n  setupGeosets() {\n    let geosets = this.geosets;\n\n    if (geosets.length > 0) {\n      let gl = this.viewer.gl;\n      let shallowGeosets = [];\n      let typedArrays = [];\n      let totalArrayOffset = 0;\n      let elementTypedArrays = [];\n      let totalElementOffset = 0;\n\n      for (let i = 0, l = geosets.length; i < l; i++) {\n        let geoset = geosets[i];\n        let vertices = geoset.locationArray;\n        let normals = geoset.normalArray;\n        let uvSets = geoset.uvsArray;\n        let boneIndices = geoset.boneIndexArray;\n        let boneNumbers = geoset.boneNumberArray;\n        let faces = geoset.faceArray;\n        let verticesOffset = totalArrayOffset;\n        let normalsOffset = verticesOffset + vertices.byteLength;\n        let uvSetsOffset = normalsOffset + normals.byteLength;\n        let boneIndicesOffset = uvSetsOffset + uvSets.byteLength;\n        let boneNumbersOffset = boneIndicesOffset + boneIndices.byteLength;\n\n        shallowGeosets[i] = new ShallowGeoset(this, [verticesOffset, normalsOffset, uvSetsOffset, boneIndicesOffset, boneNumbersOffset, totalElementOffset], geoset.uvSetSize, faces.length);\n\n        typedArrays.push([verticesOffset, vertices]);\n        typedArrays.push([normalsOffset, normals]);\n        typedArrays.push([uvSetsOffset, uvSets]);\n        typedArrays.push([boneIndicesOffset, boneIndices]);\n        typedArrays.push([boneNumbersOffset, boneNumbers]);\n\n        elementTypedArrays.push([totalElementOffset, faces]);\n\n        totalArrayOffset = boneNumbersOffset + boneNumbers.byteLength;\n        totalElementOffset += faces.byteLength;\n      }\n\n      let arrayBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, arrayBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, totalArrayOffset, gl.STATIC_DRAW);\n\n      for (let i = 0, l = typedArrays.length; i < l; i++) {\n        gl.bufferSubData(gl.ARRAY_BUFFER, typedArrays[i][0], typedArrays[i][1]);\n      }\n\n      let faceBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, faceBuffer);\n      gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, totalElementOffset, gl.STATIC_DRAW);\n\n      for (let i = 0, l = elementTypedArrays.length; i < l; i++) {\n        gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, elementTypedArrays[i][0], elementTypedArrays[i][1]);\n      }\n\n      this.__webglArrayBuffer = arrayBuffer;\n      this.__webglElementBuffer = faceBuffer;\n      this.shallowGeosets = shallowGeosets;\n    }\n  }\n\n  /**\n   * @param {number} parent\n   */\n  setupHierarchy(parent) {\n    for (let i = 0, l = this.genericObjects.length; i < l; i++) {\n      let object = this.genericObjects[i];\n\n      if (object.parentId === parent) {\n        this.hierarchy.push(i);\n\n        this.setupHierarchy(object.objectId);\n      }\n    }\n  }\n\n  /**\n   * @param {Bucket} bucket\n   * @param {Scene} scene\n   */\n  bind(bucket, scene) {\n    const webgl = this.viewer.webgl;\n    let gl = this.viewer.gl;\n\n    // HACK UNTIL I IMPLEMENT MULTIPLE SHADERS AGAIN\n\n    let shader = this.viewer.shaderMap.get('MdxStandardShader');\n    webgl.useShaderProgram(shader);\n    this.shader = shader;\n\n    const instancedArrays = gl.extensions.instancedArrays;\n    const attribs = shader.attribs;\n    const uniforms = shader.uniforms;\n\n    gl.uniformMatrix4fv(uniforms.u_mvp, false, scene.camera.worldProjectionMatrix);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.__webglElementBuffer);\n\n    gl.uniform1i(uniforms.u_texture, 0);\n\n\n    // Team and vertex colors.\n    let teamColor = attribs.a_teamColor;\n    let vertexColor = attribs.a_vertexColor;\n    gl.bindBuffer(gl.ARRAY_BUFFER, bucket.colorBuffer);\n    gl.vertexAttribPointer(teamColor, 1, gl.UNSIGNED_BYTE, false, 5, 0);\n    gl.vertexAttribPointer(vertexColor, 4, gl.UNSIGNED_BYTE, true, 5, 1); // normalize the colors from [0, 255] to [0, 1] here instead of in the pixel shader\n\n    gl.activeTexture(gl.TEXTURE15);\n    gl.bindTexture(gl.TEXTURE_2D, bucket.boneTexture);\n    gl.uniform1i(uniforms.u_boneMap, 15);\n    gl.uniform1f(uniforms.u_vectorSize, bucket.vectorSize);\n    gl.uniform1f(uniforms.u_rowSize, bucket.rowSize);\n\n    let instanceId = attribs.a_InstanceID;\n    gl.bindBuffer(gl.ARRAY_BUFFER, bucket.instanceIdBuffer);\n    gl.vertexAttribPointer(instanceId, 1, gl.UNSIGNED_SHORT, false, 0, 0);\n\n    instancedArrays.vertexAttribDivisorANGLE(teamColor, 1);\n    instancedArrays.vertexAttribDivisorANGLE(vertexColor, 1);\n    instancedArrays.vertexAttribDivisorANGLE(instanceId, 1);\n  }\n\n  /**\n   *\n   */\n  unbind() {\n    let gl = this.viewer.gl;\n    let instancedArrays = gl.extensions.instancedArrays;\n    let attribs = this.shader.attribs;\n\n    // Reset gl values to default, to play nice with other handlers\n    gl.depthMask(1);\n    gl.disable(gl.BLEND);\n    gl.enable(gl.CULL_FACE);\n    gl.enable(gl.DEPTH_TEST);\n\n    // Reset the attributes to play nice with other handlers\n    instancedArrays.vertexAttribDivisorANGLE(attribs.a_teamColor, 0);\n    instancedArrays.vertexAttribDivisorANGLE(attribs.a_vertexColor, 0);\n    instancedArrays.vertexAttribDivisorANGLE(attribs.a_InstanceID, 0);\n    instancedArrays.vertexAttribDivisorANGLE(attribs.a_geosetColor, 0);\n    instancedArrays.vertexAttribDivisorANGLE(attribs.a_layerAlpha, 0);\n    instancedArrays.vertexAttribDivisorANGLE(attribs.uvTransRot, 0);\n    instancedArrays.vertexAttribDivisorANGLE(attribs.uvScaleSprite, 0);\n  }\n\n  /**\n   * @param {Bucket} bucket\n   * @param {Batch} batch\n   */\n  renderBatch(bucket, batch) {\n    let gl = this.viewer.gl;\n    let instancedArrays = gl.extensions.instancedArrays;\n    let shader = this.shader;\n    let attribs = this.shader.attribs;\n    let uniforms = shader.uniforms;\n    let geoset = batch.geoset;\n    let layer = batch.layer;\n    let shallowGeoset = this.shallowGeosets[geoset.index];\n    let replaceable = this.replaceables[layer.textureId];\n\n    layer.bind(shader);\n\n    let texture;\n    let isTeamColor = false;\n\n    if (replaceable === 1) {\n      texture = this.viewer.getTextureAtlas('teamColors');\n      isTeamColor = true;\n    } else if (replaceable === 2) {\n      texture = this.viewer.getTextureAtlas('teamGlows');\n      isTeamColor = true;\n    } else {\n      texture = this.textures[layer.textureId];\n    }\n\n    gl.uniform1f(uniforms.u_isTeamColor, isTeamColor);\n    gl.uniform1f(uniforms.u_hasSlotAnim, layer.hasSlotAnim);\n    gl.uniform1f(uniforms.u_hasTranslationAnim, layer.hasTranslationAnim);\n    gl.uniform1f(uniforms.u_hasRotationAnim, layer.hasRotationAnim);\n    gl.uniform1f(uniforms.u_hasScaleAnim, layer.hasScaleAnim);\n\n    // Texture coordinate divisor\n    // Used for layers that use image animations, in order to scale the coordinates to match the generated texture atlas\n    gl.uniform2f(uniforms.u_uvScale, 1 / layer.uvDivisor[0], 1 / layer.uvDivisor[1]);\n\n    this.bindTexture(texture, 0, bucket.modelView);\n\n    let geosetColor = attribs.a_geosetColor;\n    let uvTransRot = attribs.a_uvTransRot;\n    let uvScaleSprite = attribs.a_uvScaleSprite;\n    let layerAlpha = attribs.a_layerAlpha;\n\n    instancedArrays.vertexAttribDivisorANGLE(geosetColor, 1);\n    instancedArrays.vertexAttribDivisorANGLE(uvTransRot, 1);\n    instancedArrays.vertexAttribDivisorANGLE(uvScaleSprite, 1);\n    instancedArrays.vertexAttribDivisorANGLE(layerAlpha, 1);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, bucket.geosetColorsBuffer);\n    // Geoset colors.\n    gl.vertexAttribPointer(geosetColor, 4, gl.UNSIGNED_BYTE, true, 4, this.batchSize * geoset.index * 4);\n\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, bucket.layersBuffer);\n    // Texture animations.\n    gl.vertexAttribPointer(uvTransRot, 4, gl.FLOAT, false, 28, this.batchSize * 7 * layer.index * 4);\n    gl.vertexAttribPointer(uvScaleSprite, 3, gl.FLOAT, false, 28, this.batchSize * 7 * layer.index * 4 + 16);\n    // Layer alphas.\n    gl.vertexAttribPointer(layerAlpha, 1, gl.UNSIGNED_BYTE, true, 1, bucket.layerAlphasData.byteOffset + this.batchSize * layer.index);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.__webglArrayBuffer);\n    // Vertices.\n    shallowGeoset.bind(shader, layer.coordId);\n\n    shallowGeoset.render(bucket.count);\n  }\n\n  /**\n   * @param {Bucket} bucket\n   * @param {Scene} scene\n   * @param {Array<Batch>} batches\n   */\n  renderBatches(bucket, scene, batches) {\n    if (batches && batches.length) {\n      this.bind(bucket, scene);\n\n      for (let i = 0, l = batches.length; i < l; i++) {\n        this.renderBatch(bucket, batches[i]);\n      }\n\n      this.unbind();\n    }\n  }\n\n  /**\n   * Render the opaque things in the given scene data.\n   *\n   * @param {Object} data\n   */\n  renderOpaque(data) {\n    let scene = data.scene;\n    let buckets = data.buckets;\n\n    for (let i = 0, l = data.usedBuckets; i < l; i++) {\n      this.renderBatches(buckets[i], scene, this.opaqueBatches);\n    }\n  }\n\n  /**\n   * Render the translucent things in the given scene data.\n   *\n   * @param {Object} data\n   */\n  renderTranslucent(data) {\n    let scene = data.scene;\n    let modelView = data.modelView;\n    let buckets = data.buckets;\n    let particleEmitters2 = data.particleEmitters2;\n    let ribbonEmitters = data.ribbonEmitters;\n    let eventObjectEmitters = data.eventObjectEmitters;\n\n    // Batches\n    for (let i = 0, l = data.usedBuckets; i < l; i++) {\n      this.renderBatches(buckets[i], scene, this.translucentBatches);\n    }\n\n    // Emitters\n    if (particleEmitters2.length || eventObjectEmitters.length || ribbonEmitters.length) {\n      let webgl = this.viewer.webgl;\n      let gl = this.viewer.gl;\n\n      gl.depthMask(0);\n      gl.enable(gl.BLEND);\n      gl.disable(gl.CULL_FACE);\n      gl.enable(gl.DEPTH_TEST);\n\n      let shader = this.viewer.shaderMap.get('MdxParticleShader');\n      webgl.useShaderProgram(shader);\n\n      gl.uniformMatrix4fv(shader.uniforms.u_mvp, false, scene.camera.worldProjectionMatrix);\n\n      gl.uniform1i(shader.uniforms.u_texture, 0);\n\n      gl.uniform1f(shader.uniforms.u_isRibbonEmitter, false);\n\n      for (let i = 0, l = particleEmitters2.length; i < l; i++) {\n        particleEmitters2[i].render(modelView, shader);\n      }\n\n      for (let i = 0, l = eventObjectEmitters.length; i < l; i++) {\n        eventObjectEmitters[i].render(modelView, shader);\n      }\n\n      gl.uniform1f(shader.uniforms.u_isRibbonEmitter, true);\n\n      for (let i = 0, l = ribbonEmitters.length; i < l; i++) {\n        ribbonEmitters[i].render(modelView, shader);\n      }\n    }\n  }\n}\n","/**\n * Returns an array that only contains unique values found in the source array.\n *\n * @param {Float32Array} min\n * @param {Float32Array} max\n * @return {Object}\n */\nexport function extentToSphere(min, max) {\n  let minx = min[0];\n  let miny = min[1];\n  let minz = min[2];\n  let maxx = max[0];\n  let maxy = max[1];\n  let maxz = max[2];\n  let dx = maxx - minx;\n  let dy = maxy - miny;\n  let dz = maxz - minz;\n\n  return {\n    center: new Float32Array([(minx + maxx) / 2, (miny + maxy) / 2, (minz + maxz) / 2]),\n    radius: Math.sqrt(dx * dx + dy * dy + dz * dz) / 2,\n  };\n}\n","/**\n * A shared emitter.\n * The base class of all MDX emitters.\n */\nexport default class SharedEmitter {\n  /**\n   * @param {ParticleEmitter|ParticleEmitter2|RibbonEmitter|EventObject} modelObject\n   */\n  constructor(modelObject) {\n    /** @member {ParticleEmitter|ParticleEmitter2|RibbonEmitter|EventObject} */\n    this.modelObject = modelObject;\n    /** @member {Array<Particle|Particle2|Ribbon|EventObjectSpn|EventObjectSpl|EventObjectUbr>} */\n    this.objects = [];\n    /** @member {number} */\n    this.alive = 0;\n  }\n\n  /**\n   * Note: flag is used for ParticleEmitter2's head/tail selection.\n   *\n   * @param {ParticleEmitterView|ParticleEmitter2View|RibbonEmitterView|EventObjectEmitterView} emitterView\n   * @param {boolean} flag\n   * @return {Particle|Particle2|Ribbon|EventObjectSpn|EventObjectSpl|EventObjectUbr}\n   */\n  emitObject(emitterView, flag) {\n    let objects = this.objects;\n\n    // If there are no unused objects, create a new one.\n    if (this.alive === objects.length) {\n      objects.push(this.createObject());\n    }\n\n    // Get the first unused object.\n    let object = objects[this.alive];\n\n    this.alive += 1;\n\n    object.reset(emitterView, flag);\n\n    return object;\n  }\n\n  /**\n   *\n   */\n  update() {\n    let objects = this.objects;\n\n    for (let i = 0; i < this.alive; i++) {\n      let object = objects[i];\n\n      object.update();\n\n      if (object.health <= 0) {\n        this.alive -= 1;\n\n        // Swap between this object and the first unused object.\n        // Decrement the iterator so the moved object is indexed.\n        if (i !== this.alive) {\n          objects[i] = objects[this.alive];\n          objects[this.alive] = object;\n          i -= 1;\n        }\n      }\n    }\n\n    this.updateData();\n  }\n\n  /**\n   * @param {ParticleEmitterView|ParticleEmitter2View|RibbonEmitterView|EventObjectEmitterView} emitterView\n   */\n  fill(emitterView) {\n    let emission = emitterView.currentEmission;\n\n    if (emission >= 1) {\n      for (let i = 0; i < emission; i += 1, emitterView.currentEmission--) {\n        this.emit(emitterView);\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  updateData() {\n\n  }\n\n  /**\n   * @param {ModelView} modelView\n   * @param {ShaderProgram} shader\n   */\n  render(modelView, shader) {\n\n  }\n\n  /**\n   * Clear any emitted objects belonging to the given owner.\n   *\n   * @param {ModelInstance} owner\n   */\n  clear(owner) {\n    for (let object of this.objects) {\n      if (owner === object.emitterView.instance) {\n        object.health = 0;\n      }\n    }\n  }\n}\n","import {vec3, quat} from 'gl-matrix';\nimport {VEC3_UNIT_Z} from '../../../common/gl-matrix-addon';\nimport {randomInRange} from '../../../common/math';\n\n// Heap allocations needed for this module.\nlet rotationHeap = quat.create();\nlet velocityHeap = vec3.create();\nlet latitudeHeap = new Float32Array(1);\n// let longitudeHeap = new Float32Array(1);\nlet lifeSpanHeap = new Float32Array(1);\nlet gravityHeap = new Float32Array(1);\nlet speedHeap = new Float32Array(1);\n\n/**\n * A spawned model particle.\n */\nexport default class Particle {\n  /**\n   * @param {MdxParticleEmitter} emitter\n   */\n  constructor(emitter) {\n    this.emitter = emitter;\n    this.emitterView = null;\n\n    this.internalInstance = emitter.modelObject.internalResource.addInstance();\n    this.velocity = vec3.create();\n    this.gravity = 0;\n  }\n\n  /**\n   * @param {ParticleEmitterView} emitterView\n   */\n  reset(emitterView) {\n    let instance = emitterView.instance;\n    let node = instance.nodes[this.emitter.modelObject.index];\n    let internalInstance = this.internalInstance;\n    let scale = node.worldScale;\n    let velocity = this.velocity;\n\n    emitterView.getLatitude(latitudeHeap);\n    // emitterView.getLongitude(longitudeHeap);\n    emitterView.getLifeSpan(lifeSpanHeap);\n    emitterView.getGravity(gravityHeap);\n    emitterView.getSpeed(speedHeap);\n\n    this.emitterView = emitterView;\n    this.node = node;\n    this.health = lifeSpanHeap[0];\n    this.gravity = gravityHeap[0] * scale[2];\n\n    // Local rotation\n    quat.identity(rotationHeap);\n    quat.rotateZ(rotationHeap, rotationHeap, randomInRange(-Math.PI, Math.PI));\n    quat.rotateY(rotationHeap, rotationHeap, randomInRange(-latitudeHeap[0], latitudeHeap[0]));\n    vec3.transformQuat(velocity, VEC3_UNIT_Z, rotationHeap);\n\n    // World rotation\n    vec3.transformQuat(velocity, velocity, node.worldRotation);\n\n    // Apply speed\n    vec3.scale(velocity, velocity, speedHeap[0]);\n\n    // Apply the parent's scale\n    vec3.mul(velocity, velocity, scale);\n\n    instance.scene.addInstance(internalInstance);\n\n    internalInstance.setTransformation(node.worldLocation, quat.setAxisAngle(rotationHeap, VEC3_UNIT_Z, randomInRange(0, Math.PI * 2)), node.worldScale);\n    internalInstance.setSequence(0);\n    internalInstance.show();\n  }\n\n  /**\n   *\n   */\n  update() {\n    let internalInstance = this.internalInstance;\n    let velocity = this.velocity;\n    let frameTimeS = internalInstance.model.viewer.frameTime * 0.001;\n\n    internalInstance.paused = false;\n\n    this.health -= frameTimeS;\n\n    velocity[2] -= this.gravity * frameTimeS;\n\n    internalInstance.move(vec3.scale(velocityHeap, velocity, frameTimeS));\n\n    if (this.health <= 0) {\n      this.internalInstance.hide();\n    }\n  }\n}\n","import SharedEmitter from './sharedemitter';\nimport Particle from './particle';\n\n/**\n * An MDX particle emitter.\n */\nexport default class ParticleEmitter extends SharedEmitter {\n  /**\n   * @param {ParticleEmitterView} emitterView\n   */\n  emit(emitterView) {\n    this.emitObject(emitterView);\n  }\n\n  /**\n   * @return {Particle}\n   */\n  createObject() {\n    return new Particle(this);\n  }\n}\n","import {powerOfTwo} from '../../../common/math';\nimport SharedEmitter from './sharedemitter';\n\n/**\n * Shared structure used by all geometry emitters.\n */\nexport default class SharedGeometryEmitter extends SharedEmitter {\n  /**\n   * @param {ParticleEmitter2|RibbonEmitter|EventObjectSplEmitter|EventObjectUbrEmitter} modelObject\n   */\n  constructor(modelObject) {\n    super(modelObject);\n\n    this.data = new Float32Array(0);\n    this.buffer = modelObject.model.viewer.gl.createBuffer();\n    this.bufferSize = 0;\n  }\n\n  /**\n   * @param {ParticleEmitter2View|RibbonEmitterView|EventObjectEmitterView} emitterView\n   * @param {boolean} flag\n   * @return {Particle2|Ribbon|EventObjectSpl|EventObjectUbr}\n   */\n  emitObject(emitterView, flag) {\n    return super.emitObject(emitterView, flag);\n  }\n\n  /**\n   *\n   */\n  updateData() {\n    let objects = this.objects;\n    let alive = this.alive;\n    let sizeNeeded = alive * this.elementsPerEmit;\n\n    if (this.data.length < sizeNeeded) {\n      this.data = new Float32Array(powerOfTwo(sizeNeeded));\n\n      let gl = this.modelObject.model.viewer.gl;\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.data.byteLength, gl.DYNAMIC_DRAW);\n    }\n\n    let data = this.data;\n\n    for (let i = 0, offset = 0; i < alive; i += 1, offset += 30) {\n      let object = objects[i];\n      let vertices = object.vertices;\n      let lta = object.lta;\n      let lba = object.lba;\n      let rta = object.rta;\n      let rba = object.rba;\n      let rgb = object.rgb;\n\n      data[offset + 0] = vertices[0];\n      data[offset + 1] = vertices[1];\n      data[offset + 2] = vertices[2];\n      data[offset + 3] = lta;\n      data[offset + 4] = rgb;\n\n      data[offset + 5] = vertices[3];\n      data[offset + 6] = vertices[4];\n      data[offset + 7] = vertices[5];\n      data[offset + 8] = lba;\n      data[offset + 9] = rgb;\n\n      data[offset + 10] = vertices[6];\n      data[offset + 11] = vertices[7];\n      data[offset + 12] = vertices[8];\n      data[offset + 13] = rba;\n      data[offset + 14] = rgb;\n\n      data[offset + 15] = vertices[0];\n      data[offset + 16] = vertices[1];\n      data[offset + 17] = vertices[2];\n      data[offset + 18] = lta;\n      data[offset + 19] = rgb;\n\n      data[offset + 20] = vertices[6];\n      data[offset + 21] = vertices[7];\n      data[offset + 22] = vertices[8];\n      data[offset + 23] = rba;\n      data[offset + 24] = rgb;\n\n      data[offset + 25] = vertices[9];\n      data[offset + 26] = vertices[10];\n      data[offset + 27] = vertices[11];\n      data[offset + 28] = rta;\n      data[offset + 29] = rgb;\n    }\n  }\n\n  /**\n   * @param {ModelView} modelView\n   * @param {ShaderProgram} shader\n   */\n  render(modelView, shader) {\n    let modelObject = this.modelObject;\n    let alive = this.alive;\n\n    if (modelObject.internalResource && alive > 0) {\n      let model = modelObject.model;\n      let gl = model.viewer.gl;\n\n      gl.blendFunc(modelObject.blendSrc, modelObject.blendDst);\n\n      gl.uniform2fv(shader.uniforms.u_dimensions, modelObject.dimensions);\n\n      model.bindTexture(modelObject.internalResource, 0, modelView);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.data.subarray(0, alive * 30));\n\n      gl.vertexAttribPointer(shader.attribs.a_position, 3, gl.FLOAT, false, 20, 0);\n      gl.vertexAttribPointer(shader.attribs.a_uva_rgb, 2, gl.FLOAT, false, 20, 12);\n\n      gl.drawArrays(gl.TRIANGLES, 0, alive * 6);\n    }\n  }\n}\n","import {vec3, vec4, mat3, quat} from 'gl-matrix';\nimport {VEC3_UNIT_Z} from '../../../common/gl-matrix-addon';\nimport {degToRad, randomInRange, lerp} from '../../../common/math';\nimport {uint8ToUint24} from '../../../common/typecast';\n\n// Heap allocations needed for this module.\nlet rotationHeap = quat.create();\nlet locationHeap = vec3.create();\nlet colorHeap = new Uint8Array(4);\nlet widthHeap = new Float32Array(1);\nlet lengthHeap = new Float32Array(1);\nlet latitudeHeap = new Float32Array(1);\nlet variationHeap = new Float32Array(1);\nlet speedHeap = new Float32Array(1);\nlet gravityHeap = new Float32Array(1);\nlet mat3Heap = new Float32Array(9);\nlet vec3Heap = [vec3.create(), vec3.create(), vec3.create(), vec3.create(), vec3.create(), vec3.create()];\n\n/**\n * A type 2 particle.\n */\nexport default class Particle2 {\n  /**\n   * @param {MdxParticle2Emitter} emitter\n   */\n  constructor(emitter) {\n    this.emitter = emitter;\n    this.emitterView = null;\n    this.health = 0;\n    this.head = true;\n    this.location = vec3.create();\n    this.velocity = vec3.create();\n    this.gravity = 0;\n    this.nodeScale = vec3.create();\n\n    this.vertices = new Float32Array(12);\n    this.lta = 0;\n    this.lba = 0;\n    this.rta = 0;\n    this.rba = 0;\n    this.rgb = 0;\n  }\n\n  /**\n   * @param {ParticleEmitter2View} emitterView\n   * @param {boolean} isHead\n   */\n  reset(emitterView, isHead) {\n    emitterView.getWidth(widthHeap);\n    emitterView.getLength(lengthHeap);\n    emitterView.getLatitude(latitudeHeap);\n    emitterView.getVariation(variationHeap);\n    emitterView.getSpeed(speedHeap);\n    emitterView.getGravity(gravityHeap);\n\n    let modelObject = this.emitter.modelObject;\n    let node = emitterView.instance.nodes[modelObject.index];\n    let pivot = node.pivot;\n    let scale = node.worldScale;\n    let width = widthHeap[0] * 0.5;\n    let length = lengthHeap[0] * 0.5;\n    let latitude = degToRad(latitudeHeap[0]);\n    let variation = variationHeap[0];\n    let speed = speedHeap[0];\n    let location = this.location;\n    let velocity = this.velocity;\n\n    this.emitterView = emitterView;\n    this.node = node;\n    this.health = modelObject.lifeSpan;\n    this.head = isHead;\n    this.gravity = gravityHeap[0] * scale[2];\n\n    vec3.copy(this.nodeScale, scale);\n\n    // Local location\n    location[0] = pivot[0] + randomInRange(-width, width);\n    location[1] = pivot[1] + randomInRange(-length, length);\n    location[2] = pivot[2];\n\n    // World location\n    if (!modelObject.modelSpace) {\n      vec3.transformMat4(location, location, node.worldMatrix);\n    }\n\n    // Local rotation\n    quat.identity(rotationHeap);\n    quat.rotateZ(rotationHeap, rotationHeap, Math.PI / 2);\n    quat.rotateY(rotationHeap, rotationHeap, randomInRange(-latitude, latitude));\n\n    // If this is not a line emitter, emit in a sphere rather than a circle.\n    if (!modelObject.lineEmitter) {\n      quat.rotateX(rotationHeap, rotationHeap, randomInRange(-latitude, latitude));\n    }\n\n    // World rotation\n    if (!modelObject.modelSpace) {\n      quat.mul(rotationHeap, node.worldRotation, rotationHeap);\n    }\n\n    // Apply the rotation\n    vec3.transformQuat(velocity, VEC3_UNIT_Z, rotationHeap);\n\n    // Apply speed\n    vec3.scale(velocity, velocity, speed + randomInRange(-variation, variation));\n\n    // Apply the parent's scale\n    vec3.mul(velocity, velocity, scale);\n  }\n\n  /**\n   *\n   */\n  update() {\n    let modelObject = this.emitter.modelObject;\n    let dt = modelObject.model.viewer.frameTime * 0.001;\n    let location = this.location;\n    let worldLocation = locationHeap;\n    let velocity = this.velocity;\n\n    this.health -= dt;\n\n    velocity[2] -= this.gravity * dt;\n\n    vec3.scaleAndAdd(location, location, velocity, dt);\n\n    vec3.copy(worldLocation, location);\n\n    let lifeFactor = (modelObject.lifeSpan - this.health) / modelObject.lifeSpan;\n    let timeMiddle = modelObject.timeMiddle;\n    let intervals = modelObject.intervals;\n    let factor;\n    let firstColor;\n    let head = this.head;\n    let interval;\n\n    if (lifeFactor < timeMiddle) {\n      factor = lifeFactor / timeMiddle;\n\n      firstColor = 0;\n\n      if (head) {\n        interval = intervals[0];\n      } else {\n        interval = intervals[2];\n      }\n    } else {\n      factor = (lifeFactor - timeMiddle) / (1 - timeMiddle);\n\n      firstColor = 1;\n\n      if (head) {\n        interval = intervals[1];\n      } else {\n        interval = intervals[3];\n      }\n    }\n\n    factor = Math.min(factor, 1);\n\n    let start = interval[0];\n    let end = interval[1];\n    let repeat = interval[2];\n    let scaling = modelObject.scaling;\n    let colors = modelObject.colors;\n    let scale = lerp(scaling[firstColor], scaling[firstColor + 1], factor);\n    let left;\n    let top;\n    let right;\n    let bottom;\n    let instance = this.emitterView.instance;\n\n    // If this is a team colored emitter, get the team color tile from the atlas.\n    // Otherwise do normal texture atlas handling.\n    if (modelObject.teamColored) {\n      let teamColor = instance.teamColor;\n\n      left = teamColor % 4;\n      top = (teamColor / 4) | 0;\n      right = left + 1;\n      bottom = top + 1;\n    } else {\n      let columns = modelObject.dimensions[0];\n      let index = 0;\n      let spriteCount = end - start;\n\n      if (spriteCount) {\n        // Repeating speeds up the sprite animation, which makes it effectively run N times in its interval.\n        // E.g. if repeat is 4, the sprite animation will be seen 4 times, and thus also run 4 times as fast.\n        index = start + Math.floor(spriteCount * repeat * factor) % spriteCount;\n      }\n\n      left = index % columns;\n      top = (index / columns) | 0;\n      right = left + 1;\n      bottom = top + 1;\n    }\n\n    vec4.lerp(colorHeap, colors[firstColor], colors[firstColor + 1], factor);\n\n    let a = colorHeap[3];\n\n    this.lta = uint8ToUint24(right, bottom, a);\n    this.lba = uint8ToUint24(left, bottom, a);\n    this.rta = uint8ToUint24(right, top, a);\n    this.rba = uint8ToUint24(left, top, a);\n    this.rgb = uint8ToUint24(colorHeap[0], colorHeap[1], colorHeap[2]);\n\n    if (!instance.scene) {\n      debugger;\n    }\n    let camera = instance.scene.camera;\n    let vectors;\n\n    // Choose between a default rectangle or billboarded one\n    if (modelObject.xYQuad) {\n      vectors = camera.vectors;\n    } else {\n      vectors = camera.billboardedVectors;\n    }\n\n    let vertices = this.vertices;\n    let nodeScale = this.nodeScale;\n\n    let scalex = scale * nodeScale[0];\n    let scaley = scale * nodeScale[1];\n    let scalez = scale * nodeScale[2];\n\n    if (head) {\n      // If this is a model space emitter, the particle location is in local space, so convert it now to world space.\n      if (modelObject.modelSpace) {\n        vec3.transformMat4(worldLocation, worldLocation, this.node.worldMatrix);\n      }\n\n      let px = worldLocation[0];\n      let py = worldLocation[1];\n      let pz = worldLocation[2];\n\n      if (modelObject.xYQuad) {\n        let vx = vec3Heap[4], vy = vec3Heap[5];\n        vx[0] = velocity[0];\n        vx[1] = velocity[1];\n        vx[2] = 0;\n        vec3.normalize(vx, vx);\n        vy[0] = -vx[1];\n        vy[1] = vx[0];\n        vy[2] = 0;\n        vec3.add(vec3Heap[2], vx, vy);\n        vec3.sub(vec3Heap[1], vy, vx);\n        vec3.negate(vec3Heap[0], vec3Heap[2]);\n        vec3.negate(vec3Heap[3], vec3Heap[1]);\n        vectors = vec3Heap;\n      }\n\n      let pv1 = vectors[0];\n      let pv2 = vectors[1];\n      let pv3 = vectors[2];\n      let pv4 = vectors[3];\n\n      vertices[0] = px + pv1[0] * scalex;\n      vertices[1] = py + pv1[1] * scaley;\n      vertices[2] = pz + pv1[2] * scalez;\n      vertices[3] = px + pv2[0] * scalex;\n      vertices[4] = py + pv2[1] * scaley;\n      vertices[5] = pz + pv2[2] * scalez;\n      vertices[6] = px + pv3[0] * scalex;\n      vertices[7] = py + pv3[1] * scaley;\n      vertices[8] = pz + pv3[2] * scalez;\n      vertices[9] = px + pv4[0] * scalex;\n      vertices[10] = py + pv4[1] * scaley;\n      vertices[11] = pz + pv4[2] * scalez;\n    } else {\n      let tailLength = modelObject.tailLength;\n      let offsetx = tailLength * velocity[0] * 1;\n      let offsety = tailLength * velocity[1] * 1;\n      let offsetz = tailLength * velocity[2] * 1;\n\n      // The start and end of the tail.\n      let start = [worldLocation[0] - offsetx, worldLocation[1] - offsety, worldLocation[2] - offsetz];\n      let end = [worldLocation[0], worldLocation[1], worldLocation[2]];\n\n      // If this is a model space emitter, the start and end are is in local space, so convert them to world space.\n      if (modelObject.modelSpace) {\n        vec3.transformMat4(start, start, this.node.worldMatrix);\n        vec3.transformMat4(end, end, this.node.worldMatrix);\n      }\n\n      let startx = start[0];\n      let starty = start[1];\n      let startz = start[2];\n      let endx = end[0];\n      let endy = end[1];\n      let endz = end[2];\n\n      // Get the normal to the tail in camera space.\n      // This allows to build a 2D rectangle around the 3D tail.\n      let tail = [endx - startx, endy - starty, endz - startz];\n      vec3.normalize(tail, tail);\n      let normal = vec3.cross([], camera.billboardedVectors[6], tail);\n      vec3.normalize(normal, normal);\n\n      let normalX = normal[0] * scalex;\n      let normalY = normal[1] * scaley;\n      let normalZ = normal[2] * scalez;\n\n      vertices[0] = startx - normalX;\n      vertices[1] = starty - normalY;\n      vertices[2] = startz - normalZ;\n\n      vertices[6] = endx + normalX;\n      vertices[7] = endy + normalY;\n      vertices[8] = endz + normalZ;\n\n      vertices[3] = endx - normalX;\n      vertices[4] = endy - normalY;\n      vertices[5] = endz - normalZ;\n\n      vertices[9] = startx + normalX;\n      vertices[10] = starty + normalY;\n      vertices[11] = startz + normalZ;\n    }\n  }\n}\n","import SharedGeometryEmitter from './sharedgeometryemitter';\nimport Particle2 from './particle2';\n\n/**\n * An MDX particle emitter type 2.\n */\nexport default class ParticleEmitter2 extends SharedGeometryEmitter {\n  /**\n   * @param {ParticleEmitter2} modelObject\n   */\n  constructor(modelObject) {\n    super(modelObject);\n\n    this.elementsPerEmit = ((modelObject.headOrTail === 2) ? 2 : 1) * 30;\n  }\n\n  /**\n   * @param {ParticleEmitter2View} emitterView\n   */\n  emit(emitterView) {\n    if (this.modelObject.head) {\n      this.emitObject(emitterView, true);\n    }\n\n    if (this.modelObject.tail) {\n      this.emitObject(emitterView, false);\n    }\n  }\n\n  /**\n   * @return {Particle2}\n   */\n  createObject() {\n    return new Particle2(this);\n  }\n}\n","import {vec3} from 'gl-matrix';\nimport {uint8ToUint24} from '../../../common/typecast';\n\n// Heap allocations needed for this module.\nlet belowHeap = vec3.create();\nlet aboveHeap = vec3.create();\nlet colorHeap = vec3.create();\nlet alphaHeap = new Float32Array(1);\nlet slotHeap = new Float32Array(1);\n\n/**\n * A ribbon.\n */\nexport default class Ribbon {\n  /**\n   * @param {MdxRibbonEmitter} emitter\n   */\n  constructor(emitter) {\n    this.emitter = emitter;\n    this.health = 0;\n    this.emitterView = null;\n\n    this.vertices = new Float32Array(12);\n    this.lta = 0;\n    this.lba = 0;\n    this.rta = 0;\n    this.rba = 0;\n    this.rgb = 0;\n  }\n\n  /**\n   * @param {RibbonEmitterView} emitterView\n   */\n  reset(emitterView) {\n    let emitter = this.emitter;\n    let vertices = this.vertices;\n\n    this.index = emitterView.currentRibbon++;\n\n    emitterView.ribbonCount++;\n\n    this.emitterView = emitterView;\n\n    this.health = emitter.modelObject.lifeSpan;\n\n    let lastEmit = emitterView.lastEmit;\n\n    // If this isn't the first ribbon, construct a quad.\n    // Otherwise, the vertices will be filled with zeroes, and the ribbon will not render.\n    // This allows the emitter to always work with quads, and therefore it can work with many views, because the ribbon chains are implicit.\n    if (lastEmit && lastEmit.health > 0) {\n      let node = emitterView.instance.nodes[emitter.modelObject.index];\n      let pivot = node.pivot;\n\n      emitterView.getHeightBelow(belowHeap);\n      emitterView.getHeightAbove(aboveHeap);\n\n      vec3.set(belowHeap, pivot[0], pivot[1] - belowHeap[0], pivot[2]);\n      vec3.transformMat4(belowHeap, belowHeap, node.worldMatrix);\n\n      vec3.set(aboveHeap, pivot[0], pivot[1] + aboveHeap[0], pivot[2]);\n      vec3.transformMat4(aboveHeap, aboveHeap, node.worldMatrix);\n\n      let lastVertices = lastEmit.vertices;\n\n      // Left top\n      vertices[0] = aboveHeap[0];\n      vertices[1] = aboveHeap[1];\n      vertices[2] = aboveHeap[2];\n\n      // Left bottom\n      vertices[3] = belowHeap[0];\n      vertices[4] = belowHeap[1];\n      vertices[5] = belowHeap[2];\n\n      // Right bottom\n      vertices[6] = lastVertices[3];\n      vertices[7] = lastVertices[4];\n      vertices[8] = lastVertices[5];\n\n      // Right top\n      vertices[9] = lastVertices[0];\n      vertices[10] = lastVertices[1];\n      vertices[11] = lastVertices[2];\n    } else {\n      vertices[0] = 0;\n      vertices[1] = 0;\n      vertices[2] = 0;\n      vertices[3] = 0;\n      vertices[4] = 0;\n      vertices[5] = 0;\n      vertices[6] = 0;\n      vertices[7] = 0;\n      vertices[8] = 0;\n      vertices[9] = 0;\n      vertices[10] = 0;\n      vertices[11] = 0;\n    }\n  }\n\n  /**\n   *\n   */\n  update() {\n    let emitterView = this.emitterView;\n\n    emitterView.getColor(colorHeap);\n    emitterView.getAlpha(alphaHeap);\n    emitterView.getTextureSlot(slotHeap);\n\n    let modelObject = this.emitter.modelObject;\n    let dt = modelObject.model.viewer.frameTime * 0.001;\n    let gravity = modelObject.gravity * dt * dt;\n    let vertices = this.vertices;\n    let animatedAlpha = alphaHeap[0];\n    let animatedSlot = slotHeap[0];\n    let chainLengthFactor = 1 / emitterView.ribbonCount;\n    let locationInChain = (emitterView.currentRibbon - this.index - 1);\n\n    this.health -= dt;\n\n    vertices[1] -= gravity;\n    vertices[4] -= gravity;\n    vertices[7] -= gravity;\n    vertices[10] -= gravity;\n\n    if (this.health <= 0) {\n      emitterView.ribbonCount--;\n    } else {\n      let columns = modelObject.dimensions[0];\n      let left = (animatedSlot % columns) + (locationInChain * chainLengthFactor);\n      let top = (animatedSlot / columns) | 0;\n      let right = left + chainLengthFactor;\n      let bottom = top + 1;\n\n      left = (left * 255) | 0;\n      top = (top * 255) | 0;\n      right = (right * 255) | 0;\n      bottom = (bottom * 255);\n      animatedAlpha = (animatedAlpha * 255) | 0;\n\n      this.lta = uint8ToUint24(left, top, animatedAlpha);\n      this.lba = uint8ToUint24(left, bottom, animatedAlpha);\n      this.rta = uint8ToUint24(right, top, animatedAlpha);\n      this.rba = uint8ToUint24(right, bottom, animatedAlpha);\n      this.rgb = uint8ToUint24((colorHeap[0] * 255) | 0, (colorHeap[1] * 255) | 0, (colorHeap[2] * 255) | 0); // Color even used???\n    }\n  }\n}\n","import SharedGeometryEmitter from './sharedgeometryemitter';\nimport Ribbon from './ribbon';\n\n/**\n * A ribbon emitter.\n */\nexport default class RibbonEmitter extends SharedGeometryEmitter {\n  /**\n   * @param {RibbonEmitter} modelObject\n   */\n  constructor(modelObject) {\n    super(modelObject);\n\n    this.elementsPerEmit = 30;\n  }\n\n  /**\n   * @param {RibbonEmitterView} emitterView\n   */\n  emit(emitterView) {\n    emitterView.lastEmit = this.emitObject(emitterView);\n  }\n\n  /**\n   * @return {Ribbon}\n   */\n  createObject() {\n    return new Ribbon(this);\n  }\n\n  /**\n   * @param {*} emitterView\n   */\n  fill(emitterView) {\n    let emission = emitterView.currentEmission;\n\n    if (emission >= 1) {\n      this.emit(emitterView);\n      emitterView.currentEmission--;\n    }\n  }\n\n  /**\n   * @param {ModelView} modelView\n   * @param {ShaderProgram} shader\n   */\n  render(modelView, shader) {\n    let alive = this.alive;\n\n    if (alive > 0) {\n      let modelObject = this.modelObject;\n      let model = modelObject.model;\n      let gl = model.viewer.gl;\n\n      modelObject.layer.bind(shader);\n\n      gl.uniform2fv(shader.uniforms.u_dimensions, modelObject.dimensions);\n\n      model.bindTexture(modelObject.texture, 0, modelView);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.data.subarray(0, alive * 30));\n\n      gl.vertexAttribPointer(shader.attribs.a_position, 3, gl.FLOAT, false, 20, 0);\n      gl.vertexAttribPointer(shader.attribs.a_uva_rgb, 2, gl.FLOAT, false, 20, 12);\n\n      gl.drawArrays(gl.TRIANGLES, 0, alive * 6);\n    }\n  }\n}\n","/**\n * An MDX spawned model object.\n */\nexport default class EventObjectSpn {\n  /**\n   * @param {MdxEventObjectEmitter} emitter\n   */\n  constructor(emitter) {\n    this.emitter = emitter;\n    this.emitterView = null;\n    this.health = 0;\n    this.internalResource = emitter.modelObject.internalResource.addInstance();\n  }\n\n  /**\n   * @param {EventObjectEmitterView} emitterView\n   */\n  reset(emitterView) {\n    let instance = this.internalResource;\n    let node = emitterView.instance.nodes[this.emitter.modelObject.index];\n\n    this.emitterView = emitterView;\n\n    instance.setSequence(0);\n    instance.setTransformation(node.worldLocation, node.worldRotation, node.worldScale);\n    instance.show();\n\n    emitterView.instance.scene.addInstance(instance);\n\n    this.health = 1;\n  }\n\n  /**\n   *\n   */\n  update() {\n    let instance = this.internalResource;\n\n    // Once the sequence finishes, this event object dies\n    if (instance.frame >= instance.model.sequences[0].interval[1]) {\n      this.health = 0;\n\n      instance.hide();\n    }\n  }\n}\n","import SharedEmitter from './sharedemitter';\nimport EventObjectSpn from './eventobjectspn';\n\n/**\n * An MDX model emitter.\n */\nexport default class EventObjectSpnEmitter extends SharedEmitter {\n  /**\n   * @param {EventObject} modelObject\n   */\n  constructor(modelObject) {\n    super(modelObject);\n\n    this.type = 'SPN';\n  }\n\n  /**\n   * @param {EventObjectEmitterView} emitterView\n   */\n  emit(emitterView) {\n    if (this.modelObject.ok) {\n      this.emitObject(emitterView);\n    }\n  }\n\n  /**\n   * @return {EventObjectSpn}\n   */\n  createObject() {\n    return new EventObjectSpn(this);\n  }\n}\n","import {vec3, vec4} from 'gl-matrix';\nimport {lerp} from '../../../common/math';\nimport {uint8ToUint24} from '../../../common/typecast';\n\n/**\n * An MDX splat object.\n */\nexport default class EventObjectSpl {\n  /**\n   * @param {MdxEventObjectEmitter} emitter\n   */\n  constructor(emitter) {\n    this.emitter = emitter;\n    this.emitterView = null;\n    this.health = 0;\n    this.color = new Uint8Array(4);\n    this.vertices = new Float32Array(12);\n    this.lta = 0;\n    this.lba = 0;\n    this.rta = 0;\n    this.rba = 0;\n    this.rgb = 0;\n  }\n\n  /**\n   * @param {EventObjectEmitterView} emitterView\n   */\n  reset(emitterView) {\n    let modelObject = this.emitter.modelObject;\n    let vertices = this.vertices;\n    let emitterScale = modelObject.scale;\n    let node = emitterView.instance.nodes[modelObject.index];\n    let worldMatrix = node.worldMatrix;\n    let vertex;\n\n    this.emitterView = emitterView;\n\n    vertex = vertices.subarray(0, 2);\n    vec3.transformMat4(vertex, [-emitterScale, -emitterScale, 0], worldMatrix);\n\n    vertex = vertices.subarray(3, 5);\n    vec3.transformMat4(vertex, [-emitterScale, emitterScale, 0], worldMatrix);\n\n    vertex = vertices.subarray(6, 8);\n    vec3.transformMat4(vertex, [emitterScale, emitterScale, 0], worldMatrix);\n\n    vertex = vertices.subarray(9, 11);\n    vec3.transformMat4(vertex, [emitterScale, -emitterScale, 0], worldMatrix);\n\n    this.health = modelObject.lifespan;\n  }\n\n  /**\n   *\n   */\n  update() {\n    let modelObject = this.emitter.modelObject;\n    let columns = modelObject.dimensions[0];\n    let intervalTimes = modelObject.intervalTimes;\n    let intervals = modelObject.intervals;\n    let first = intervalTimes[0];\n    let second = intervalTimes[1];\n    let colors = modelObject.colors;\n    let color = this.color;\n    let factor;\n    let interval;\n    let firstColor;\n    let index;\n\n    this.health -= modelObject.model.viewer.frameTime * 0.001;\n\n    // Inverse of health\n    let time = modelObject.lifespan - this.health;\n\n    if (time < first) {\n      factor = time / first;\n      interval = intervals[0];\n      firstColor = 0;\n    } else {\n      factor = (time - first) / second;\n      interval = intervals[1];\n      firstColor = 1;\n    }\n\n    // Interpolated color\n    vec4.lerp(color, colors[firstColor], colors[firstColor + 1], factor);\n\n    // The texture portion to index\n    index = Math.floor(lerp(interval[0], interval[1], factor));\n\n    // Calculate the UV rectangle.\n    let left = index % columns;\n    let top = Math.floor(index / columns);\n    let right = left + 1;\n    let bottom = top + 1;\n    let a = color[3];\n\n    // Encode the UV rectangle and color in floats.\n    // This is a shader optimization.\n    this.lta = uint8ToUint24(right, bottom, a);\n    this.lba = uint8ToUint24(left, bottom, a);\n    this.rta = uint8ToUint24(right, top, a);\n    this.rba = uint8ToUint24(left, top, a);\n    this.rgb = uint8ToUint24(color[0], color[1], color[2]);\n  }\n}\n","import SharedGeometryEmitter from './sharedgeometryemitter';\nimport EventObjectSpl from './eventobjectspl';\n\n/**\n * An MDX splat emitter.\n */\nexport default class EventObjectSplEmitter extends SharedGeometryEmitter {\n  /**\n   * @param {EventObject} modelObject\n   */\n  constructor(modelObject) {\n    super(modelObject);\n\n    this.type = 'SPL';\n    this.elementsPerEmit = 30;\n  }\n\n  /**\n   * @param {EventObjectEmitterView} emitterView\n   */\n  emit(emitterView) {\n    if (this.modelObject.ok) {\n      this.emitObject(emitterView);\n    }\n  }\n\n  /**\n   * @return {EventObjectSpl}\n   */\n  createObject() {\n    return new EventObjectSpl(this);\n  }\n}\n","import {vec3, vec4} from 'gl-matrix';\nimport {uint8ToUint24} from '../../../common/typecast';\n\n/**\n * An MDX ubersplat object.\n */\nexport default class EventObjectUbr {\n  /**\n   * @param {MdxEventObjectEmitter} emitter\n   */\n  constructor(emitter) {\n    this.emitter = emitter;\n    this.emitterView = null;\n    this.health = 0;\n    this.color = new Uint8Array(4);\n    this.vertices = new Float32Array(12);\n    this.lta = 0;\n    this.lba = 0;\n    this.rta = 0;\n    this.rba = 0;\n    this.rgb = 0;\n  }\n\n  /**\n   * @param {EventObjectEmitterView} emitterView\n   */\n  reset(emitterView) {\n    let modelObject = this.emitter.modelObject;\n    let vertices = this.vertices;\n    let emitterScale = modelObject.scale;\n    let node = emitterView.instance.nodes[modelObject.index];\n    let worldMatrix = node.worldMatrix;\n    let vertex;\n\n    this.emitterView = emitterView;\n\n    vertex = vertices.subarray(0, 2);\n    vec3.transformMat4(vertex, [-emitterScale, -emitterScale, 0], worldMatrix);\n\n    vertex = vertices.subarray(3, 5);\n    vec3.transformMat4(vertex, [-emitterScale, emitterScale, 0], worldMatrix);\n\n    vertex = vertices.subarray(6, 8);\n    vec3.transformMat4(vertex, [emitterScale, emitterScale, 0], worldMatrix);\n\n    vertex = vertices.subarray(9, 11);\n    vec3.transformMat4(vertex, [emitterScale, -emitterScale, 0], worldMatrix);\n\n    this.health = modelObject.lifespan;\n  }\n\n  /**\n   *\n   */\n  update() {\n    let modelObject = this.emitter.modelObject;\n    let intervalTimes = modelObject.intervalTimes;\n    let first = intervalTimes[0];\n    let second = intervalTimes[1];\n    let third = intervalTimes[2];\n    let colors = modelObject.colors;\n    let color = this.color;\n\n    this.health -= modelObject.model.viewer.frameTime * 0.001;\n\n    // Inverse of health\n    let time = modelObject.lifespan - this.health;\n\n    if (time < first) {\n      vec4.lerp(color, colors[0], colors[1], time / first);\n    } else if (time < first + second) {\n      vec4.copy(color, modelObject.colors[1]);\n    } else {\n      vec4.lerp(color, colors[1], colors[2], (time - first - second) / third);\n    }\n\n    // Calculate the UV rectangle.\n    let a = color[3];\n\n    // Encode the UV rectangle and color in floats.\n    // This is a shader optimization.\n    this.lta = uint8ToUint24(1, 0, a);\n    this.lba = uint8ToUint24(0, 0, a);\n    this.rta = uint8ToUint24(1, 1, a);\n    this.rba = uint8ToUint24(0, 1, a);\n    this.rgb = uint8ToUint24(color[0], color[1], color[2]);\n  }\n}\n","import SharedGeometryEmitter from './sharedgeometryemitter';\nimport EventObjectUbr from './eventobjectubr';\n\n/**\n * An MDX ubersplat emitter.\n */\nexport default class EventObjectUbrEmitter extends SharedGeometryEmitter {\n  /**\n   * @param {EventObject} modelObject\n   */\n  constructor(modelObject) {\n    super(modelObject);\n\n    this.type = 'UBR';\n    this.elementsPerEmit = 30;\n  }\n\n  /**\n   * @param {EventObjectEmitterView} emitterView\n   */\n  emit(emitterView) {\n    if (this.modelObject.ok) {\n      this.emitObject(emitterView);\n    }\n  }\n\n  /**\n   * @return {EventObjectUbr}\n   */\n  createObject() {\n    return new EventObjectUbr(this);\n  }\n}\n","/**\n * An MDX sound emitter.\n */\nexport default class EventObjectSndEmitter {\n  /**\n   * @param {EventEmitter} modelObject\n   */\n  constructor(modelObject) {\n    this.modelObject = modelObject;\n    this.type = 'SND';\n  }\n\n  /**\n   * @param {EventObjectEmitterView} emitterView\n   */\n  emit(emitterView) {\n    if (this.modelObject.ok) {\n      let viewer = this.modelObject.model.viewer;\n      let scene = emitterView.instance.scene;\n\n      // Is audio enabled both viewer-wide and in this scene?\n      if (viewer.enableAudio && scene.audioEnabled) {\n        let audioContext = scene.audioContext;\n        let emitter = emitterView.emitter;\n        let decodedBuffers = emitter.decodedBuffers;\n        let panner = audioContext.createPanner();\n        let source = audioContext.createBufferSource();\n\n        // Panner settings.\n        panner.setPosition(...emitterView.instance.nodes[emitter.objectId].worldLocation);\n        panner.maxDistance = emitter.distanceCutoff;\n        panner.refDistance = emitter.minDistance;\n        panner.connect(audioContext.destination);\n\n        // Source.\n        source.buffer = decodedBuffers[(Math.random() * decodedBuffers.length) | 0];\n        source.connect(panner);\n\n        // Make a sound.\n        source.start(0);\n      }\n    }\n  }\n\n  /**\n   *\n   */\n  update() {\n\n  }\n\n  /**\n   * @param {*} emitterView\n   */\n  fill(emitterView) {\n    let emission = emitterView.currentEmission;\n\n    if (emission >= 1) {\n      for (let i = 0; i < emission; i += 1, emitterView.currentEmission--) {\n        this.emit(emitterView);\n      }\n    }\n  }\n\n  /**\n   * @param {ModelView} modelView\n   * @param {ShaderProgram} shader\n   */\n  render(modelView, shader) {\n\n  }\n\n  /**\n   * Does nothing.\n   * Defined to stay compatible with SharedEmitter.\n   *\n   * @param {ModelInstance} owner\n   */\n  clear(owner) {\n\n  }\n}\n","import Bucket from '../../bucket';\n\n/**\n * An MDX bucket.\n */\nexport default class extends Bucket {\n  /**\n   * @param {MdxModelView} modelView\n   */\n  constructor(modelView) {\n    super(modelView);\n\n    let model = this.model;\n    let batchSize = model.batchSize;\n    let gl = model.viewer.gl;\n    let numberOfBones = model.bones.length + 1;\n\n    this.boneArrayInstanceSize = numberOfBones * 16;\n    this.boneArray = new Float32Array(this.boneArrayInstanceSize * batchSize);\n\n    this.boneTexture = gl.createTexture();\n    this.boneTextureWidth = numberOfBones * 4;\n    this.boneTextureHeight = batchSize;\n    this.vectorSize = 1 / this.boneTextureWidth;\n    this.rowSize = 1 / this.boneTextureHeight;\n\n    gl.activeTexture(gl.TEXTURE15);\n    gl.bindTexture(gl.TEXTURE_2D, this.boneTexture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.boneTextureWidth, this.boneTextureHeight, 0, gl.RGBA, gl.FLOAT, this.boneArray);\n\n    // Team colors and vertex colors\n    // [TC, RR, GG, BB, AA]\n    this.colorData = new Uint8Array(batchSize * 5);\n    this.colorBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.colorData.byteLength, gl.DYNAMIC_DRAW);\n\n    // Batches\n    if (model.batches.length > 0) {\n      this.geosetColorsData = new Uint8Array(batchSize * model.geosets.length * 4);\n      this.geosetColorsBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.geosetColorsBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.geosetColorsData.byteLength, gl.DYNAMIC_DRAW);\n\n      // This buffer first contains the texture animation data for each instance, for each layer, and then every alpha for each instance for each layer.\n      // Every texture animation data per instance contains the following:\n      //     [Tx, Ty, Rz, Rw, S, Ox, Oy]\n      // Where:\n      //     T = translation\n      //     R = rotation (quaternion with x=0 and y=0)\n      //     S = scale (uniform)\n      //     O = offset for sprite animations\n      this.layersData = new ArrayBuffer(batchSize * model.layers.length * 29);\n      this.uvTransformsData = new Float32Array(this.layersData, 0, batchSize * model.layers.length * 7);\n      this.layerAlphasData = new Uint8Array(this.layersData, batchSize * model.layers.length * 28, batchSize * model.layers.length);\n      this.layersBuffer = gl.createBuffer();\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.layersBuffer);\n      gl.bufferData(gl.ARRAY_BUFFER, this.layersData.byteLength, gl.DYNAMIC_DRAW);\n    }\n  }\n\n  /**\n   * Fill this bucket with scene data.\n   *\n   * @param {Object} data\n   * @return {number}\n   */\n  fill(data) {\n    let baseIndex = data.baseIndex;\n    let model = this.model;\n    let gl = model.viewer.gl;\n    let batchSize = model.batchSize;\n    let geosetCount = model.geosets.length;\n    let layerCount = model.layers.length;\n    let boneCount = model.bones.length;\n    let boneArray = this.boneArray;\n    let colorData = this.colorData;\n    let geosetColorsData = this.geosetColorsData;\n    let layerAlphasData = this.layerAlphasData;\n    let uvTransformsData = this.uvTransformsData;\n    let instanceOffset = 0;\n    let instances = data.instances;\n    let particleEmitters = data.particleEmitters;\n    let particleEmitters2 = data.particleEmitters2;\n    let ribbonEmitters = data.ribbonEmitters;\n    let eventObjectEmitters = data.eventObjectEmitters;\n\n    for (let l = instances.length; baseIndex < l && instanceOffset < batchSize; baseIndex++) {\n      let instance = instances[baseIndex];\n\n      if (instance.rendered && !instance.culled) {\n        let vertexColor = instance.vertexColor;\n        let worldMatrices = instance.worldMatrices;\n        let geosetColors = instance.geosetColors;\n        let layerAlphas = instance.layerAlphas;\n        let uvOffsets = instance.uvOffsets;\n        let uvScales = instance.uvScales;\n        let uvRots = instance.uvRots;\n        let base = 16 + instanceOffset * (16 + boneCount * 16);\n        let particleEmitterViews = instance.particleEmitters;\n        let particleEmitter2Views = instance.particleEmitters2;\n        let ribbonEmitterViews = instance.ribbonEmitters;\n        let eventObjectEmitterViews = instance.eventObjectEmitters;\n        let instanceOffset4 = instanceOffset * 4;\n        let instanceOffset5 = instanceOffset * 5;\n        let instanceOffset7 = instanceOffset * 7;\n\n        // Bones\n        for (let j = 0, k = boneCount * 16; j < k; j++) {\n          boneArray[base + j] = worldMatrices[j];\n        }\n\n        // Team color\n        colorData[instanceOffset5] = instance.teamColor;\n\n        // Vertex color\n        colorData[instanceOffset5 + 1] = vertexColor[0];\n        colorData[instanceOffset5 + 2] = vertexColor[1];\n        colorData[instanceOffset5 + 3] = vertexColor[2];\n        colorData[instanceOffset5 + 4] = vertexColor[3];\n\n        for (let geosetIndex = 0; geosetIndex < geosetCount; geosetIndex++) {\n          let geosetIndex4 = geosetIndex * 4;\n          let base = batchSize * geosetIndex4 + instanceOffset4;\n\n          // Geoset color\n          geosetColorsData[base] = geosetColors[geosetIndex4];\n          geosetColorsData[base + 1] = geosetColors[geosetIndex4 + 1];\n          geosetColorsData[base + 2] = geosetColors[geosetIndex4 + 2];\n          geosetColorsData[base + 3] = geosetColors[geosetIndex4 + 3];\n        }\n\n        if (model.batches.length > 0) {\n          for (let layerIndex = 0; layerIndex < layerCount; layerIndex++) {\n            let layerIndex4 = layerIndex * 4;\n            let uvBase = batchSize * layerIndex * 7 + instanceOffset7;\n\n            // Layer alpha\n            layerAlphasData[batchSize * layerIndex + instanceOffset] = layerAlphas[layerIndex];\n\n            // Translation\n            uvTransformsData[uvBase] = uvOffsets[layerIndex4];\n            uvTransformsData[uvBase + 1] = uvOffsets[layerIndex4 + 1];\n\n            // Rotation\n            uvTransformsData[uvBase + 2] = uvRots[layerIndex * 2];\n            uvTransformsData[uvBase + 3] = uvRots[layerIndex * 2 + 1];\n\n            // Scale\n            uvTransformsData[uvBase + 4] = uvScales[layerIndex];\n\n            // Sprite animation\n            uvTransformsData[uvBase + 5] = uvOffsets[layerIndex4 + 2];\n            uvTransformsData[uvBase + 6] = uvOffsets[layerIndex4 + 3];\n          }\n        }\n\n        for (let i = 0, l = particleEmitters.length; i < l; i++) {\n          particleEmitters[i].fill(particleEmitterViews[i]);\n        }\n\n        for (let i = 0, l = particleEmitters2.length; i < l; i++) {\n          particleEmitters2[i].fill(particleEmitter2Views[i]);\n        }\n\n        for (let i = 0, l = ribbonEmitters.length; i < l; i++) {\n          ribbonEmitters[i].fill(ribbonEmitterViews[i]);\n        }\n\n        for (let i = 0, l = eventObjectEmitters.length; i < l; i++) {\n          eventObjectEmitters[i].fill(eventObjectEmitterViews[i]);\n        }\n\n        instanceOffset += 1;\n      }\n    }\n\n    // Save the number of instances of which data was copied.\n    this.count = instanceOffset;\n\n    if (instanceOffset) {\n      gl.activeTexture(gl.TEXTURE15);\n      gl.bindTexture(gl.TEXTURE_2D, this.boneTexture);\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, this.boneTextureWidth, instanceOffset, gl.RGBA, gl.FLOAT, boneArray);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.colorBuffer);\n      gl.bufferSubData(gl.ARRAY_BUFFER, 0, colorData);\n\n      if (geosetCount) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.geosetColorsBuffer);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, geosetColorsData);\n      }\n\n      if (layerCount && model.batches.length > 0) {\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.layersBuffer);\n        gl.bufferSubData(gl.ARRAY_BUFFER, 0, this.layersData);\n      }\n    }\n\n    return baseIndex;\n  }\n}\n","import {quat} from 'gl-matrix';\nimport {SkeletalNode} from '../../node';\n\n/**\n * An MDX node.\n */\nexport default class MdxNode extends SkeletalNode {\n  /**\n   * @param {quat} rotation\n   */\n  convertBasis(rotation) {\n    quat.rotateY(rotation, rotation, -Math.PI / 2);\n  }\n}\n","\n// Heap allocations needed for this module.\nlet visibilityHeap = new Float32Array(1);\n\n/**\n * An attachment instance.\n */\nexport default class AttachmentInstance {\n  /**\n   * @param {ModelInstance} instance\n   * @param {Attachment} attachment\n   */\n  constructor(instance, attachment) {\n    let internalModel = attachment.internalModel;\n    let internalInstance = internalModel.addInstance();\n\n    internalInstance.setSequenceLoopMode(2);\n    internalInstance.dontInheritScale = false;\n    internalInstance.hide();\n    internalInstance.setParent(instance.nodes[attachment.objectId]);\n\n    this.instance = instance;\n    this.attachment = attachment;\n    this.internalInstance = internalInstance;\n  }\n\n  /**\n   *\n   */\n  update() {\n    let internalInstance = this.internalInstance;\n\n    if (internalInstance.model.ok) {\n      this.attachment.getVisibility(visibilityHeap, this.instance);\n\n      if (visibilityHeap[0] > 0.1) {\n        // The parent instance might not actually be in a scene.\n        // This happens if loading a local model, where loading is instant and adding to a scene always comes afterwards.\n        // Therefore, do it here dynamically.\n        this.instance.scene.addInstance(internalInstance);\n\n        if (internalInstance.hidden()) {\n          internalInstance.show();\n\n          // Every time the attachment becomes visible again, restart its first sequence.\n          internalInstance.setSequence(0);\n        }\n      } else {\n        internalInstance.hide();\n      }\n    }\n  }\n}\n","// Heap allocations needed for this module.\nlet emissionRateHeap = new Float32Array(1);\n\n/**\n * An MDX particle emitter view.\n */\nexport default class ParticleEmitterView {\n  /**\n   * @param {MdxModelInstance} instance\n   * @param {MdxParticleEmitter} emitter\n   */\n  constructor(instance, emitter) {\n    this.instance = instance;\n    this.emitter = emitter;\n    this.currentEmission = 0;\n  }\n\n  /**\n   *\n   */\n  update() {\n    if (this.instance.allowParticleSpawn) {\n      this.getEmissionRate(emissionRateHeap);\n\n      this.currentEmission += emissionRateHeap[0] * this.instance.model.viewer.frameTime * 0.001;\n    }\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getSpeed(out) {\n    return this.emitter.getSpeed(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getLatitude(out) {\n    return this.emitter.getLatitude(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getLongitude(out) {\n    return this.emitter.getLongitude(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getLifeSpan(out) {\n    return this.emitter.getLifeSpan(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getGravity(out) {\n    return this.emitter.getGravity(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getEmissionRate(out) {\n    return this.emitter.getEmissionRate(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getVisibility(out) {\n    return this.emitter.getVisibility(out, this.instance);\n  }\n}\n","// Heap allocations needed for this module.\nlet emissionRateHeap = new Float32Array(1);\n\n/**\n * An MDX particle emitter type 2 view.\n */\nexport default class ParticleEmitter2View {\n  /**\n   * @param {MdxModelInstance} instance\n   * @param {MdxParticle2Emitter} emitter\n   */\n  constructor(instance, emitter) {\n    this.instance = instance;\n    this.emitter = emitter;\n    this.currentEmission = 0;\n    this.lastEmissionKey = -1;\n  }\n\n  /**\n   *\n   */\n  update() {\n    if (this.instance.allowParticleSpawn) {\n      let keyframe = this.getEmissionRate(emissionRateHeap);\n\n      if (this.emitter.squirt) {\n        if (keyframe !== this.lastEmissionKey) {\n          this.currentEmission += emissionRateHeap[0];\n        }\n\n        this.lastEmissionKey = keyframe;\n      } else {\n        this.currentEmission += emissionRateHeap[0] * this.instance.model.viewer.frameTime * 0.001;\n      }\n    }\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getWidth(out) {\n    return this.emitter.getWidth(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getLength(out) {\n    return this.emitter.getLength(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getSpeed(out) {\n    return this.emitter.getSpeed(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getLatitude(out) {\n    return this.emitter.getLatitude(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getGravity(out) {\n    return this.emitter.getGravity(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getEmissionRate(out) {\n    return this.emitter.getEmissionRate(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getVisibility(out) {\n    return this.emitter.getVisibility(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getVariation(out) {\n    return this.emitter.getVariation(out, this.instance);\n  }\n}\n","/**\n * An MDX ribbon emitter view.\n */\nexport default class RibbonEmitterView {\n  /**\n   * @param {MdxInstance} instance\n   * @param {MdxRibbonEmitter} emitter\n   */\n  constructor(instance, emitter) {\n    this.instance = instance;\n    this.emitter = emitter;\n    this.currentEmission = 0;\n    this.lastEmit = null;\n    this.currentRibbon = -1;\n    this.ribbonCount = 0;\n  }\n\n  /**\n   *\n   */\n  update() {\n    if (this.instance.allowParticleSpawn) {\n      this.currentEmission += this.emitter.emissionRate * this.instance.model.viewer.frameTime * 0.001;\n    }\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getHeightBelow(out) {\n    return this.emitter.getHeightBelow(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getHeightAbove(out) {\n    return this.emitter.getHeightAbove(out, this.instance);\n  }\n\n  /**\n   * @param {Uint32Array} out\n   * @return {number}\n   */\n  getTextureSlot(out) {\n    return this.emitter.getTextureSlot(out, this.instance);\n  }\n\n  /**\n   * @param {vec3} out\n   * @return {number}\n   */\n  getColor(out) {\n    return this.emitter.getColor(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getAlpha(out) {\n    return this.emitter.getAlpha(out, this.instance);\n  }\n\n  /**\n   * @param {Float32Array} out\n   * @return {number}\n   */\n  getVisibility(out) {\n    return this.emitter.getVisibility(out, this.instance);\n  }\n}\n","import {vec2} from 'gl-matrix';\n\n// Heap allocations needed for this module.\nlet track = vec2.create();\n\n/**\n * An event object emitter view.\n */\nexport default class EventObjectEmitterView {\n  /**\n   * @param {ModelInstance} instance\n   * @param {EventObjectEmitter} emitter\n   */\n  constructor(instance, emitter) {\n    this.instance = instance;\n    this.emitter = emitter;\n    this.lastTrack = new Uint16Array(2); // Support more than 256 keyframes per sequence, why not.\n    this.currentEmission = 0;\n  }\n\n  /**\n   *\n   */\n  reset() {\n    this.lastTrack.fill(0);\n  }\n\n  /**\n   *\n   */\n  update() {\n    if (this.instance.allowParticleSpawn) {\n      let emitter = this.emitter;\n      let lastTrack = this.lastTrack;\n\n      emitter.getValue(track, this.instance);\n\n      if (track[0] === 1 && (track[0] !== lastTrack[0] || track[1] !== lastTrack[1])) {\n        this.currentEmission += 1;\n      }\n\n      lastTrack[0] = track[0];\n      lastTrack[1] = track[1];\n    }\n  }\n}\n","import {vec3, quat} from 'gl-matrix';\nimport TexturedModelInstance from '../../texturedmodelinstance';\nimport {createSkeletalNodes} from '../../node';\nimport Node from './node';\nimport AttachmentInstance from './attachmentinstance';\nimport ParticleEmitterView from './particleemitterview';\nimport ParticleEmitter2View from './particleemitter2view';\nimport RibbonEmitterView from './ribbonemitterview';\nimport EventObjectEmitterView from './eventobjectemitterview';\n\n// Heap allocations needed for this module.\nlet visibilityHeap = new Float32Array(1);\nlet translationHeap = vec3.create();\nlet rotationHeap = quat.create();\nlet scaleHeap = vec3.create();\nlet colorHeap = new Float32Array(3);\nlet alphaHeap = new Float32Array(1);\nlet textureIdHeap = new Float32Array(1);\n\n/**\n * An MDX model instance.\n */\nexport default class ModelInstance extends TexturedModelInstance {\n  /**\n   * @param {MdxModel} model\n   */\n  constructor(model) {\n    super(model);\n\n    this.attachments = [];\n    this.particleEmitters = [];\n    this.particleEmitters2 = [];\n    this.ribbonEmitters = [];\n    this.eventObjectEmitters = [];\n    this.nodes = [];\n    this.sortedNodes = [];\n\n    this.frame = 0;\n    this.counter = 0; // Global sequences\n    this.sequence = -1;\n    this.sequenceLoopMode = 0;\n\n    this.teamColor = 0;\n    this.vertexColor = new Uint8Array([255, 255, 255, 255]);\n\n    this.allowParticleSpawn = false; // Particles do not spawn when the sequence is -1, or when the sequence finished and it's not repeating\n\n    // If forced is true, everything will update regardless of variancy.\n    // Any later non-forced update can then use variancy to skip updating things.\n    // It is set to true every time the sequence is set with setSequence().\n    this.forced = true;\n  }\n\n  /**\n   * Called when the model finishes loading, or immediately if it was already loaded when this instance was created.\n   */\n  load() {\n    let model = this.model;\n    let geosetCount = model.geosets.length;\n    let layerCount = model.layers.length;\n\n    this.geosetColors = new Uint8Array(geosetCount * 4);\n    this.layerAlphas = new Uint8Array(layerCount);\n    this.uvOffsets = new Float32Array(layerCount * 4);\n    this.uvScales = new Float32Array(layerCount);\n    this.uvRots = new Float32Array(layerCount * 2);\n\n    // Create the needed amount of shared nodes.\n    let sharedNodeData = createSkeletalNodes(model.genericObjects.length, Node);\n    let nodes = sharedNodeData.nodes;\n    let nodeIndex = 0;\n\n    this.nodes.push(...nodes);\n\n    // A shared typed array for all world matrices of the internal nodes.\n    this.worldMatrices = sharedNodeData.worldMatrices;\n\n    // And now initialize all of the nodes and objects\n    for (let bone of model.bones) {\n      this.initNode(nodes, nodes[nodeIndex++], bone);\n    }\n\n    for (let light of model.lights) {\n      this.initNode(nodes, nodes[nodeIndex++], light);\n    }\n\n    for (let helper of model.helpers) {\n      this.initNode(nodes, nodes[nodeIndex++], helper);\n    }\n\n    for (let attachment of model.attachments) {\n      let attachmentInstance;\n\n      // Attachments may have game models attached to them, such as Undead and Nightelf building animations.\n      if (attachment.internalModel) {\n        attachmentInstance = new AttachmentInstance(this, attachment);\n\n        this.attachments.push(attachmentInstance);\n      }\n\n      this.initNode(nodes, nodes[nodeIndex++], attachment, attachmentInstance);\n    }\n\n    for (let emitter of model.particleEmitters) {\n      let emitterView = new ParticleEmitterView(this, emitter);\n\n      this.particleEmitters.push(emitterView);\n\n      this.initNode(nodes, nodes[nodeIndex++], emitter, emitterView);\n    }\n\n    for (let emitter of model.particleEmitters2) {\n      let emitterView = new ParticleEmitter2View(this, emitter);\n\n      this.particleEmitters2.push(emitterView);\n\n      this.initNode(nodes, nodes[nodeIndex++], emitter, emitterView);\n    }\n\n    for (let emitter of model.ribbonEmitters) {\n      let emitterView = new RibbonEmitterView(this, emitter);\n\n      this.ribbonEmitters.push(emitterView);\n\n      this.initNode(nodes, nodes[nodeIndex++], emitter, emitterView);\n    }\n\n    for (let camera of model.cameras) {\n      this.initNode(nodes, nodes[nodeIndex++], camera);\n    }\n\n    for (let emitter of model.eventObjects) {\n      let emitterView = new EventObjectEmitterView(this, emitter);\n\n      this.eventObjectEmitters.push(emitterView);\n\n      this.initNode(nodes, nodes[nodeIndex++], emitter, emitterView);\n    }\n\n    for (let collisionShape of model.collisionShapes) {\n      this.initNode(nodes, nodes[nodeIndex++], collisionShape);\n    }\n\n    // Save a sorted array of all of the nodes, such that every child node comes after its parent.\n    // This allows for flat iteration when updating.\n    let hierarchy = model.hierarchy;\n\n    for (let i = 0, l = nodes.length; i < l; i++) {\n      this.sortedNodes[i] = nodes[hierarchy[i]];\n    }\n\n    // If the sequence was changed before the model was loaded, reset it now that the model loaded.\n    this.setSequence(this.sequence);\n  }\n\n  /**\n   * Clear all of the emitted objects that belong to this instance.\n   */\n  clearEmittedObjects() {\n    if (this.modelView) {\n      for (let sceneData of this.modelView.sceneData.values()) {\n        for (let emitter of sceneData.particleEmitters) {\n          emitter.clear(this);\n        }\n\n        for (let emitter of sceneData.particleEmitters2) {\n          emitter.clear(this);\n        }\n\n        for (let emitter of sceneData.ribbonEmitters) {\n          emitter.clear(this);\n        }\n\n        for (let emitter of sceneData.eventObjectEmitters) {\n          emitter.clear(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Initialize a skeletal node.\n   *\n   * @param {Array<SkeletalNode>} nodes\n   * @param {SkeletalNode} node\n   * @param {GenericObject} genericObject\n   * @param {*} object\n   */\n  initNode(nodes, node, genericObject, object) {\n    node.pivot.set(genericObject.pivot);\n\n\n    // this.index = index;\n    // this.name = object.name;\n    // this.objectId = object.objectId;\n    // this.parentId = object.parentId;\n    // this.pivot = model.pivotPoints[object.objectId] || vec3.create();\n\n    // let flags = object.flags;\n\n    // this.dontInheritTranslation = flags & 0x1;\n    // this.dontInheritRotation = flags & 0x2;\n    // this.dontInheritScaling = flags & 0x4;\n    // this.billboarded = flags & 0x8;\n    // this.billboardedX = flags & 0x10;\n    // this.billboardedY = flags & 0x20;\n    // this.billboardedZ = flags & 0x40;\n    // this.cameraAnchored = flags & 0x80;\n    // this.bone = flags & 0x100;\n    // this.light = flags & 0x200;\n    // this.eventObject = flags & 0x400;\n    // this.attachment = flags & 0x800;\n    // this.particleEmitter = flags & 0x1000;\n    // this.collisionShape = flags & 0x2000;\n    // this.ribbonEmitter = flags & 0x4000;\n    // this.emitterUsesMdlOrUnshaded = flags & 0x8000;\n    // this.emitterUsesTgaOrSortPrimitivesFarZ = flags & 0x10000;\n    // this.lineEmitter = flags & 0x20000;\n    // this.unfogged = flags & 0x40000;\n    // this.modelSpace = flags & 0x80000;\n    // this.xYQuad = flags & 0x100000;\n    node.name = genericObject.name;\n    node.gen = genericObject;\n\n    if (genericObject.parentId === -1) {\n      node.parent = this;\n    } else {\n      node.parent = nodes[genericObject.parentId];\n    }\n\n    if (genericObject.billboarded) {\n      node.billboarded = true;\n    } else if (genericObject.billboardedX) {\n      node.billboardedX = true;\n    } else if (genericObject.billboardedY) {\n      node.billboardedY = true;\n    } else if (genericObject.billboardedZ) {\n      node.billboardedZ = true;\n    }\n\n    if (object) {\n      node.object = object;\n    }\n  }\n\n  /**\n   * Overriden to hide also attachment models.\n   */\n  hide() {\n    super.hide();\n\n    for (let attachment of this.attachments) {\n      attachment.internalInstance.hide();\n    }\n  }\n\n  /**\n   * Overriden to show also attachment models.\n   */\n  show() {\n    super.show();\n\n    for (let attachment of this.attachments) {\n      attachment.internalInstance.show();\n    }\n  }\n\n  /**\n   * Updates the animation timers.\n   * Emits a 'seqend' event every time a sequence ends.\n   */\n  updateTimers() {\n    if (this.sequence !== -1) {\n      let model = this.model;\n      let sequence = model.sequences[this.sequence];\n      let interval = sequence.interval;\n      let frameTime = model.viewer.frameTime;\n\n      this.frame += frameTime;\n      this.counter += frameTime;\n      this.allowParticleSpawn = true;\n\n      if (this.frame >= interval[1]) {\n        if (this.sequenceLoopMode === 2 || (this.sequenceLoopMode === 0 && sequence.flags === 0)) {\n          this.frame = interval[0];\n\n          this.resetEventEmitters();\n        } else {\n          this.frame = interval[1];\n          this.counter -= frameTime;\n          this.allowParticleSpawn = false;\n        }\n\n        this.emit('seqend', this);\n      }\n    }\n  }\n\n  /**\n   * Updates all of this instance internal nodes and objects.\n   * Nodes that are determined to not be visible will not be updated, nor will any of their children down the hierarchy.\n   *\n   * @param {boolean} forced\n   */\n  updateNodes(forced) {\n    let sortedNodes = this.sortedNodes;\n    let sequence = this.sequence;\n    let sortedGenericObjects = this.model.sortedGenericObjects;\n    let scene = this.scene;\n\n    // Update the nodes\n    for (let i = 0, l = sortedNodes.length; i < l; i++) {\n      let genericObject = sortedGenericObjects[i];\n      let node = sortedNodes[i];\n      let parent = node.parent;\n\n      genericObject.getVisibility(visibilityHeap, this);\n\n      let objectVisible = visibilityHeap[0] >= 0.75;\n      let nodeVisible = forced || (parent.visible && objectVisible);\n\n      node.visible = nodeVisible;\n\n      // Every node only needs to be updated if this is a forced update, or if both the parent node and the generic object corresponding to this node are visible.\n      // Incoming messy code for optimizations!\n      if (nodeVisible) {\n        let wasDirty = false;\n        let variants = genericObject.variants;\n        let localLocation = node.localLocation;\n        let localRotation = node.localRotation;\n        let localScale = node.localScale;\n\n        // Only update the local node data if there is a need to\n        if (forced || variants.generic[sequence]) {\n          wasDirty = true;\n\n          // Translation\n          if (forced || variants.translation[sequence]) {\n            genericObject.getTranslation(translationHeap, this);\n\n            localLocation[0] = translationHeap[0];\n            localLocation[1] = translationHeap[1];\n            localLocation[2] = translationHeap[2];\n          }\n\n          // Rotation\n          if (forced || variants.rotation[sequence]) {\n            genericObject.getRotation(rotationHeap, this);\n\n            localRotation[0] = rotationHeap[0];\n            localRotation[1] = rotationHeap[1];\n            localRotation[2] = rotationHeap[2];\n            localRotation[3] = rotationHeap[3];\n          }\n\n          // Scale\n          if (forced || variants.scale[sequence]) {\n            genericObject.getScale(scaleHeap, this);\n\n            localScale[0] = scaleHeap[0];\n            localScale[1] = scaleHeap[1];\n            localScale[2] = scaleHeap[2];\n          }\n        }\n\n        let wasReallyDirty = forced || wasDirty || parent.wasDirty || genericObject.anyBillboarding;\n\n        node.wasDirty = wasReallyDirty;\n\n        // If this is a forced update, or this node's local data was updated, or the parent node was updated, do a full world update.\n        if (wasReallyDirty) {\n          node.recalculateTransformation(scene);\n        }\n\n        // If there is an instance object associated with this node, and the node is visible (which might not be the case for a forced update!), update the object.\n        // This includes attachments and emitters.\n        let object = node.object;\n\n        if (object && objectVisible) {\n          object.update();\n        }\n\n        // Update all of the node's non-skeletal children, which will update their children, and so on.\n        node.updateChildren(scene);\n      }\n    }\n  }\n\n  /**\n   * Update the batch data.\n   *\n   * @param {boolean} forced\n   */\n  updateBatches(forced) {\n    let model = this.model;\n    let geosets = model.geosets;\n    let layers = model.layers;\n    let geosetColors = this.geosetColors;\n    let layerAlphas = this.layerAlphas;\n    let uvOffsets = this.uvOffsets;\n    let uvScales = this.uvScales;\n    let uvRots = this.uvRots;\n    let sequence = this.sequence;\n\n    // Geosets\n    for (let i = 0, l = geosets.length; i < l; i++) {\n      let geoset = geosets[i];\n      let i4 = i * 4;\n\n      // Color\n      if (forced || geoset.variants.color[sequence]) {\n        geoset.getColor(colorHeap, this);\n\n        // Some Blizzard models have values greater than 1, which messes things up.\n        // Geoset animations are supposed to modulate colors, not intensify them.\n        geosetColors[i4] = colorHeap[0] * 255;\n        geosetColors[i4 + 1] = colorHeap[1] * 255;\n        geosetColors[i4 + 2] = colorHeap[2] * 255;\n      }\n\n      // Alpha\n      if (forced || geoset.variants.alpha[sequence]) {\n        geoset.getAlpha(alphaHeap, this);\n\n        geosetColors[i4 + 3] = alphaHeap[0] * 255;\n      }\n    }\n\n    // Layers\n    for (let i = 0, l = layers.length; i < l; i++) {\n      let layer = layers[i];\n      let i2 = i * 2;\n      let i4 = i * 4;\n\n      // Alpha\n      if (forced || layer.variants.alpha[sequence]) {\n        layer.getAlpha(alphaHeap, this);\n\n        layerAlphas[i] = alphaHeap[0] * 255;\n      }\n\n      // UV translation animation\n      if (forced || layer.variants.translation[sequence]) {\n        layer.getTranslation(translationHeap, this);\n\n        uvOffsets[i4] = translationHeap[0];\n        uvOffsets[i4 + 1] = translationHeap[1];\n      }\n\n      // UV rotation animation\n      if (forced || layer.variants.rotation[sequence]) {\n        layer.getRotation(rotationHeap, this);\n\n        uvRots[i2] = rotationHeap[2];\n        uvRots[i2 + 1] = rotationHeap[3];\n      }\n\n      // UV scale animation\n      if (forced || layer.variants.scale[sequence]) {\n        layer.getScale(scaleHeap, this);\n\n        uvScales[i] = scaleHeap[0];\n      }\n\n      // Sprite animation\n      if (forced || layer.variants.slot[sequence]) {\n        layer.getTextureId(textureIdHeap, this);\n\n        let uvDivisor = layer.uvDivisor;\n        let textureId = textureIdHeap[0];\n\n        uvOffsets[i4 + 2] = textureId % uvDivisor[0];\n        uvOffsets[i4 + 3] = (textureId / uvDivisor[1]) | 0;\n      }\n    }\n  }\n\n  /**\n   * Update all of the animated data.\n   */\n  updateAnimations() {\n    let forced = this.forced;\n\n    if (forced || (this.sequence !== -1 && !this.model.viewer.noUpdating)) {\n      this.forced = false;\n\n      // Update the nodes\n      this.updateNodes(forced);\n\n      // Update the batches\n      this.updateBatches(forced);\n    }\n  }\n\n  /**\n   * Set the team color of this instance.\n   *\n   * @param {number} id\n   * @return {this}\n   */\n  setTeamColor(id) {\n    this.teamColor = id;\n\n    return this;\n  }\n\n  /**\n   * Set the vertex color of this instance.\n   *\n   * @param {Uint8Array|Array<number>} color\n   * @return {this}\n   */\n  setVertexColor(color) {\n    this.vertexColor.set(color);\n\n    return this;\n  }\n\n  /**\n   * Set the sequence of this instance.\n   *\n   * @param {number} id\n   * @return {this}\n   */\n  setSequence(id) {\n    this.sequence = id;\n\n    if (this.model.ok) {\n      let sequences = this.model.sequences;\n\n      if (id < 0 || id > sequences.length - 1) {\n        this.sequence = -1;\n        this.frame = 0;\n        this.allowParticleSpawn = false;\n      } else {\n        this.frame = sequences[id].interval[0];\n      }\n\n      this.resetEventEmitters();\n\n      this.forced = true;\n    }\n\n    return this;\n  }\n\n  /**\n   * Set the seuqnece loop mode.\n   * 0 to never loop, 1 to loop based on the model, and 2 to always loop.\n   *\n   * @param {number} mode\n   * @return {this}\n   */\n  setSequenceLoopMode(mode) {\n    this.sequenceLoopMode = mode;\n\n    return this;\n  }\n\n  /**\n   * Get an attachment node.\n   *\n   * @param {number} id\n   * @return {SkeletalNode}\n   */\n  getAttachment(id) {\n    let attachment = this.model.attachments[id];\n\n    if (attachment) {\n      return this.nodes[attachment.index];\n    }\n  }\n\n  /**\n   * Event emitters depend on keyframe index changes to emit, rather than only values.\n   * To work, they need to check what the last keyframe was, and only if it's a different one, do something.\n   * When changing sequences, these states need to be reset, so they can immediately emit things if needed.\n   */\n  resetEventEmitters() {\n    for (let eventEmitterView of this.eventObjectEmitters) {\n      eventEmitterView.reset();\n    }\n  }\n}\n","import shaders from '../../shaders';\n\nexport default {\n  vs: `\n    ${shaders.instanceId}\n    ${shaders.boneTexture}\n    uniform mat4 u_mvp;\n\n    attribute vec3 a_position;\n    attribute vec3 a_normal;\n    attribute vec2 a_uv;\n    attribute vec4 a_bones;\n    attribute float a_boneNumber;\n    attribute float a_teamColor;\n    attribute vec4 a_vertexColor;\n    attribute vec4 a_geosetColor;\n    attribute float a_layerAlpha;\n    attribute vec4 a_uvTransRot;\n    attribute vec3 a_uvScaleSprite;\n\n    varying vec3 v_normal;\n    varying vec2 v_uv;\n    varying float v_teamColor;\n    varying vec4 v_vertexColor;\n    varying vec4 v_geosetColor;\n    varying vec4 v_uvTransRot;\n    varying vec3 v_uvScaleSprite;\n\n    void transform(inout vec3 position, inout vec3 normal, float boneNumber, vec4 bones) {\n      // For the broken models out there, since the game supports this.\n      if (boneNumber > 0.0) {\n        mat4 b0 = fetchMatrix(bones[0], a_InstanceID);\n        mat4 b1 = fetchMatrix(bones[1], a_InstanceID);\n        mat4 b2 = fetchMatrix(bones[2], a_InstanceID);\n        mat4 b3 = fetchMatrix(bones[3], a_InstanceID);\n        vec4 p = vec4(position, 1);\n        vec4 n = vec4(normal, 0);\n\n        position = vec3(b0 * p + b1 * p + b2 * p + b3 * p) / boneNumber;\n        normal = normalize(vec3(b0 * n + b1 * n + b2 * n + b3 * n));\n      }\n    }\n\n    void main() {\n      vec2 uv = a_uv;\n      vec3 position = a_position;\n      vec3 normal = a_normal;\n\n      transform(position, normal, a_boneNumber, a_bones);\n\n      v_uv = a_uv;\n      v_uvTransRot = a_uvTransRot;\n      v_uvScaleSprite = a_uvScaleSprite;\n\n      v_normal = normal;\n      v_teamColor = a_teamColor;\n      v_vertexColor = a_vertexColor;\n\n      // Is the alpha here even correct?\n      v_geosetColor = vec4(a_geosetColor.rgb, a_layerAlpha);\n\n      // Definitely not correct, but the best I could figure so far.\n      if (a_geosetColor.a < 0.75 || a_layerAlpha < 0.1) {\n        gl_Position = vec4(0.0);\n      } else {\n        gl_Position = u_mvp * vec4(position, 1);\n      }\n    }\n  `,\n  fs: `\n    uniform sampler2D u_texture;\n    uniform bool u_alphaTest;\n    // uniform bool u_unshaded;\n    uniform bool u_isTeamColor;\n    uniform vec2 u_uvScale;\n    uniform bool u_hasSlotAnim;\n    uniform bool u_hasTranslationAnim;\n    uniform bool u_hasRotationAnim;\n    uniform bool u_hasScaleAnim;\n\n    varying vec3 v_normal;\n    varying vec2 v_uv;\n    varying float v_teamColor;\n    varying vec4 v_vertexColor;\n    varying vec4 v_geosetColor;\n    varying vec4 v_uvTransRot;\n    varying vec3 v_uvScaleSprite;\n\n    // const vec3 lightDirection = normalize(vec3(-0.3, -0.3, 0.25));\n\n    ${shaders.quat_transform}\n\n    void main() {\n      vec2 uv;\n\n      if (u_isTeamColor) {\n        // 4 is the amount of columns and rows in the team colors/glows texture.\n        uv = (vec2(mod((v_teamColor + 0.5), 8.0) - 0.5, floor((v_teamColor + 0.5) / 8.0)) + v_uv) / vec2(8.0, 4.0);\n      } else {\n        uv = v_uv;\n\n        // Translation animation\n        if (u_hasTranslationAnim) {\n          uv += v_uvTransRot.xy;\n        }\n\n        // Rotation animation\n        if (u_hasRotationAnim) {\n          uv = quat_transform(v_uvTransRot.zw, uv - 0.5) + 0.5;\n        }\n\n        // Scale animation\n        if (u_hasScaleAnim) {\n          uv = v_uvScaleSprite.x * (uv - 0.5) + 0.5;\n        }\n\n        // Sprite animation\n        if (u_hasSlotAnim) {\n          uv = (v_uvScaleSprite.yz + fract(uv)) * u_uvScale;\n        }\n      }\n\n      vec4 texel = texture2D(u_texture, uv).rgba;\n\n      // 1bit Alpha\n      if (u_alphaTest && texel.a < 0.75) {\n        discard;\n      }\n\n      vec4 color = texel * v_geosetColor.bgra * v_vertexColor;\n\n      // if (!u_unshaded) {\n      //   color *= clamp(dot(v_normal, lightDirection) + 0.45, 0.0, 1.0);\n      // }\n\n      gl_FragColor = color;\n    }\n  `,\n  vsParticles: `\n    ${shaders.decodeFloat}\n    uniform mat4 u_mvp;\n    uniform vec2 u_dimensions;\n    uniform bool u_isRibbonEmitter;\n\n    attribute vec3 a_position;\n    attribute vec2 a_uva_rgb;\n\n    varying vec2 v_uv;\n    varying vec4 v_color;\n\n    void main() {\n      vec3 uva = decodeFloat3(a_uva_rgb[0]);\n      vec3 rgb = decodeFloat3(a_uva_rgb[1]);\n      vec2 uv = uva.xy;\n\n      if (u_isRibbonEmitter) {\n        uv /= 255.0;\n      }\n\n      v_uv = uv / u_dimensions;\n      v_color = vec4(rgb, uva.z) / 255.0;\n\n      gl_Position = u_mvp * vec4(a_position, 1);\n    }\n  `,\n  fsParticles: `\n    uniform sampler2D u_texture;\n    uniform bool u_alphaTest;\n    uniform bool u_isRibbonEmitter;\n\n    varying vec2 v_uv;\n    varying vec4 v_color;\n\n    void main() {\n      vec4 texel = texture2D(u_texture, v_uv).rgba;\n\n      // 1bit Alpha, used by ribbon emitters\n      if (u_isRibbonEmitter && u_alphaTest && texel.a < 0.75) {\n        discard;\n      }\n\n      gl_FragColor = texel * v_color;\n    }\n  `,\n};\n","import imagetexture from '../imagetexture/handler';\nimport Model from './model';\nimport ModelView from './modelview';\nimport Bucket from './bucket';\nimport ModelInstance from './modelinstance';\nimport shaders from './shaders';\n\nexport default {\n  load(viewer) {\n    viewer.addHandler(imagetexture);\n\n    let standardShader = viewer.loadShader('MdxStandardShader', shaders.vs, shaders.fs);\n    let particleShader = viewer.loadShader('MdxParticleShader', shaders.vsParticles, shaders.fsParticles);\n\n    // If a shader failed to compile, don't allow the handler to be registered, and send an error instead.\n    return standardShader.ok && particleShader.ok;\n  },\n\n  extensions: [['.mdx', 'arrayBuffer'], ['.mdl', 'text']],\n  Constructor: Model,\n  View: ModelView,\n  Bucket: Bucket,\n  Instance: ModelInstance,\n};\n","import TexturedModelView from '../../texturedmodelview';\nimport ParticleEmitter from './particleemitter';\nimport ParticleEmitter2 from './particleemitter2';\nimport RibbonEmitter from './ribbonemitter';\nimport EventObjectSpnEmitter from './eventobjectspnemitter';\nimport EventObjectSplEmitter from './eventobjectsplemitter';\nimport EventObjectUbrEmitter from './eventobjectubremitter';\nimport EventObjectSndEmitter from './eventobjectsndemitter';\n\n/**\n * An MDX model view.\n */\nexport default class ModelView extends TexturedModelView {\n  /**\n   * @param {Scene} scene\n   * @return {Object}\n   */\n  createSceneData(scene) {\n    let model = this.model;\n    let data = super.createSceneData(scene);\n    let particleEmitters = [];\n    let particleEmitters2 = [];\n    let ribbonEmitters = [];\n    let eventObjectEmitters = [];\n\n    for (let emitter of model.particleEmitters) {\n      particleEmitters.push(new ParticleEmitter(emitter));\n    }\n\n    for (let emitter of model.particleEmitters2) {\n      particleEmitters2.push(new ParticleEmitter2(emitter));\n    }\n\n    for (let emitter of model.ribbonEmitters) {\n      ribbonEmitters.push(new RibbonEmitter(emitter));\n    }\n\n    for (let emitter of model.eventObjects) {\n      let type = emitter.type;\n\n      if (type === 'SPN') {\n        eventObjectEmitters.push(new EventObjectSpnEmitter(emitter));\n      } else if (type === 'SPL') {\n        eventObjectEmitters.push(new EventObjectSplEmitter(emitter));\n      } else if (type === 'UBR') {\n        eventObjectEmitters.push(new EventObjectUbrEmitter(emitter));\n      } else if (type === 'SND') {\n        eventObjectEmitters.push(new EventObjectSndEmitter(emitter));\n      }\n    }\n\n    return {\n      ...data,\n      particleEmitters,\n      particleEmitters2,\n      ribbonEmitters,\n      eventObjectEmitters,\n    };\n  }\n\n  /**\n   * @param {Scene} scene\n   */\n  update(scene) {\n    let data = super.update(scene);\n\n    if (data) {\n      let batchCount = this.model.batches.length;\n      let buckets = data.buckets;\n      let renderedInstances = 0;\n      let renderedParticles = 0;\n      let renderedBuckets = 0;\n      let renderCalls = 0;\n\n      for (let i = 0, l = data.usedBuckets; i < l; i++) {\n        renderedInstances += buckets[i].count;\n        renderedBuckets += 1;\n        renderCalls += batchCount;\n      }\n\n      for (let emitter of data.particleEmitters) {\n        emitter.update();\n\n        let particles = emitter.alive;\n\n        if (particles) {\n          renderedParticles += particles;\n          renderCalls += 1;\n        }\n      }\n\n      for (let emitter of data.particleEmitters2) {\n        emitter.update();\n\n        let particles = emitter.alive;\n\n        if (particles) {\n          renderedParticles += particles;\n          renderCalls += 1;\n        }\n      }\n\n      for (let emitter of data.ribbonEmitters) {\n        emitter.update();\n\n        let particles = emitter.alive;\n\n        if (particles) {\n          renderedParticles += particles;\n          renderCalls += 1;\n        }\n      }\n\n      for (let emitter of data.eventObjectEmitters) {\n        emitter.update();\n\n        // Sounds are not particles.\n        if (emitter.type !== 'SND') {\n          let particles = emitter.alive;\n\n          if (particles) {\n            renderedParticles += particles;\n            renderCalls += 1;\n          }\n        }\n      }\n\n      this.renderedInstances = renderedInstances;\n      this.renderedParticles = renderedParticles;\n      this.renderedBuckets = renderedBuckets;\n      this.renderCalls = renderCalls;\n    }\n  }\n}\n","import handler from './handler';\nimport Model from './model';\nimport ModelInstance from './modelinstance';\nimport Bucket from './bucket';\n\nexport default {\n  handler,\n  Model,\n  ModelInstance,\n  Bucket,\n};\n","import handler from './handler';\nimport Texture from './texture';\n\nexport default {\n  handler,\n  Texture,\n};\n","import shaders from '../../shaders';\n\nexport default {\n  vsGround: `\n    uniform mat4 u_mvp;\n    uniform sampler2D u_heightMap;\n    uniform sampler2D u_heightMap0;\n    uniform vec2 u_size;\n    uniform vec2 u_offset;\n    uniform float u_tilesetHeight;\n    uniform float u_tilesetCount;\n    uniform vec2 u_pixel;\n\n    attribute vec2 a_position;\n    ${shaders.instanceId}\n    attribute vec4 a_textures;\n    attribute vec4 a_variations;\n\n    varying vec2 v_uv[4];\n    varying vec2 v_suv;\n    varying vec3 v_normal;\n\n    vec4 getCell(float tileset, float variation) {\n      float x = variation * 0.03125;\n      float y = tileset * u_tilesetHeight;\n\n      return vec4(x, y, x + 0.03125, y + u_tilesetHeight);\n    }\n    \n    vec2 getUV(vec2 position, float tileset, float variation) {\n      vec2 uv = vec2(position.x, 1.0 - position.y);\n      vec4 cell = getCell(tileset, variation);\n      vec2 cellSize = vec2(1.0 / 32.0, 1.0 / u_tilesetCount);\n      vec2 pixelSize = vec2(2.0 / 2048.0, 2.0 / (64.0 * u_tilesetCount));\n\n      return clamp(cell.xy + uv * cellSize, cell.xy + pixelSize, cell.zw - pixelSize);\n    }\n\n    const float normalDist = 1.0;\n\n    void main() {\n      if (a_textures[0] > 0.5) {\n        v_uv[0] = getUV(a_position, a_textures[0], a_variations[0]);\n        v_uv[1] = getUV(a_position, a_textures[1], a_variations[1]);\n        v_uv[2] = getUV(a_position, a_textures[2], a_variations[2]);\n        v_uv[3] = getUV(a_position, a_textures[3], a_variations[3]);\n\n        vec2 halfPixel = vec2(0.5, 0.5) * u_pixel;\n        vec2 corner = vec2(mod(a_InstanceID, u_size.x), floor(a_InstanceID / u_size.x));\n        vec2 base = floor(corner + a_position);\n        float height = texture2D(u_heightMap, base * u_pixel + halfPixel).COMP1D;\n\n        float hL = texture2D(u_heightMap0, vec2(base - vec2(normalDist, 0.0)) * u_pixel + halfPixel).COMP1D;\n        float hR = texture2D(u_heightMap0, vec2(base + vec2(normalDist, 0.0)) * u_pixel + halfPixel).COMP1D;\n        float hD = texture2D(u_heightMap0, vec2(base - vec2(0.0, normalDist)) * u_pixel + halfPixel).COMP1D;\n        float hU = texture2D(u_heightMap0, vec2(base + vec2(0.0, normalDist)) * u_pixel + halfPixel).COMP1D;\n\n        v_normal = normalize(vec3(hL - hR, hD - hU, normalDist * 2.0));\n\n        v_suv = base / u_size;\n        gl_Position = u_mvp * vec4(base * 128.0 + u_offset, height * 128.0, 1.0);\n      } else {\n        v_uv[0] = vec2(0.0);\n        v_uv[1] = vec2(0.0);\n        v_uv[2] = vec2(0.0);\n        v_uv[3] = vec2(0.0);\n        v_suv = vec2(0.0);\n\n        v_normal = vec3(0.0);\n\n        gl_Position = vec4(0.0);\n      }\n    }\n  `,\n  fsGround: `\n    uniform sampler2D u_tilesets;\n    uniform sampler2D u_shadowMap;\n\n    varying vec2 v_uv[4];\n    varying vec2 v_suv;\n    varying vec3 v_normal;\n\n    const vec3 lightDirection = normalize(vec3(-0.3, -0.3, 0.25));\n\n    vec4 blend(vec4 color, vec2 uv) {\n      vec4 texel = texture2D(u_tilesets, uv).rgba;\n\n      return mix(color, texel, texel.a);\n    }\n\n    void main() {\n      vec4 color = texture2D(u_tilesets, v_uv[0]).rgba;\n      color = blend(color, v_uv[1]);\n      color = blend(color, v_uv[2]);\n      color = blend(color, v_uv[3]);\n\n      float shadow = texture2D(u_shadowMap, v_suv).COMP1D;\n      color.xyz *= clamp(dot(v_normal, lightDirection) + 0.45, 0.0, 1.0);\n      color.xyz *= 1.0 - shadow;\n\n      gl_FragColor = color;\n    }\n  `,\n  vsWater: `\n    uniform mat4 u_mvp;\n    uniform sampler2D u_heightMap;\n    uniform sampler2D u_waterHeightMap;\n    uniform vec2 u_size;\n    uniform vec2 u_pixel;\n    uniform vec2 u_offset;\n    uniform float u_offsetHeight;\n    uniform float u_tileIndex;\n    uniform vec4 u_minDeepColor;\n    uniform vec4 u_maxDeepColor;\n    uniform vec4 u_minShallowColor;\n    uniform vec4 u_maxShallowColor;\n\n    attribute vec2 a_position;\n    ${shaders.instanceId}\n    attribute float a_isWater;\n\n    varying vec2 v_uv;\n    varying vec2 v_position;\n    varying vec4 v_color;\n\n    const float minDepth = 10.0 / 128.0;\n    const float deepLevel = 64.0 / 128.0;\n    const float maxDepth = 72.0 / 128.0;\n\n    void main() {\n      if (a_isWater > 0.5) {\n        vec2 corner = vec2(mod(a_InstanceID, u_size.x), floor(a_InstanceID / u_size.x));\n        vec2 texPosition = (mod(corner, 2.0) + a_position) * 0.5;\n        v_uv = (vec2(mod(u_tileIndex, 16.0), floor(u_tileIndex / 16.0)) + texPosition) / vec2(16.0, 3.0);\n\n        vec2 halfPixel = vec2(0.5, 0.5) * u_pixel;\n        vec2 base = corner + a_position;\n        float height = texture2D(u_heightMap, base * u_pixel + halfPixel).COMP1D;\n        float waterHeight = texture2D(u_waterHeightMap, base * u_pixel + halfPixel).COMP1D + u_offsetHeight;\n        float value = clamp(waterHeight - height, 0.0, 1.0);\n\n        if (value <= deepLevel) {\n          value = max(0.0, value - minDepth) / (deepLevel - minDepth);\n          v_color = mix(u_minShallowColor, u_maxShallowColor, value) / 255.0;\n        } else {\n          value = clamp(value - deepLevel, 0.0, maxDepth - deepLevel) / (maxDepth - deepLevel);\n          v_color = mix(u_minDeepColor, u_maxDeepColor, value) / 255.0;\n        }\n\n        v_position = base * 128.0 + u_offset;\n        gl_Position = u_mvp * vec4(v_position, waterHeight * 128.0, 1.0);\n      } else {\n        v_uv = vec2(0.0);\n        v_color = vec4(0.0);\n\n        gl_Position = vec4(0.0);\n      }\n    }\n  `,\n  fsWater: `\n    uniform sampler2D u_waterMap;\n\n    uniform vec4 u_mapBounds;\n\n    varying vec2 v_position;\n    varying vec2 v_uv;\n    varying vec4 v_color;\n\n    void main() {\n      vec2 d2 = min(v_position - u_mapBounds.xy, u_mapBounds.zw - v_position);\n      float d1 = clamp(min(d2.x, d2.y) / 64.0 + 1.0, 0.0, 1.0) * 0.8 + 0.2;\n      gl_FragColor = texture2D(u_waterMap, v_uv).rgba * vec4(v_color.rgb * d1, v_color.a);\n    }\n  `,\n  vsCliffs: `\n    uniform mat4 u_mvp;\n    uniform sampler2D u_heightMap;\n    uniform vec2 u_pixel;\n    uniform vec2 u_size;\n    uniform vec2 u_centerOffset;\n\n    attribute vec3 a_position;\n    attribute vec3 a_normal;\n    attribute vec2 a_uv1;\n    attribute vec2 a_uv2;\n    attribute vec3 a_instancePosition;\n    attribute float a_instanceTexture;\n\n    varying vec3 v_normal1;\n    varying vec3 v_normal2;\n    varying float v_height;\n    varying vec2 v_uv1;\n    varying vec2 v_uv2;\n    varying vec2 v_suv;\n    varying float v_texture;\n\n    const float normalDist = 1.0;\n\n    void main() {\n      // Half of a pixel in the cliff height map.\n      vec2 halfPixel = u_pixel * 0.5;\n\n      vec3 position = vec3(a_position.y, -a_position.x, a_position.z);\n\n      // The bottom left corner of the map tile this vertex is on.\n      vec2 corner = ((a_instancePosition.xy - u_centerOffset.xy + position.xy) / 128.0);\n\n      float height = texture2D(u_heightMap, corner * u_pixel + halfPixel).COMP1D;\n\n      float hL = texture2D(u_heightMap, vec2(corner - vec2(normalDist, 0.0)) * u_pixel + halfPixel).COMP1D;\n      float hR = texture2D(u_heightMap, vec2(corner + vec2(normalDist, 0.0)) * u_pixel + halfPixel).COMP1D;\n      float hD = texture2D(u_heightMap, vec2(corner - vec2(0.0, normalDist)) * u_pixel + halfPixel).COMP1D;\n      float hU = texture2D(u_heightMap, vec2(corner + vec2(0.0, normalDist)) * u_pixel + halfPixel).COMP1D;\n\n      v_normal1 = normalize(vec3(hL - hR, hD - hU, normalDist * 2.0));\n      v_normal2 = vec3(a_normal.y, -a_normal.x, a_normal.z);\n      v_height = position.z / 128.0;\n\n      v_uv1 = a_uv1;\n      v_uv2 = a_uv2;\n      v_suv = corner / u_size;\n      v_texture = a_instanceTexture;\n\n      gl_Position = u_mvp * vec4(position + vec3(a_instancePosition.xy, a_instancePosition.z + height * 128.0), 1.0);\n    }\n  `,\n  fsCliffs: `\n    uniform sampler2D u_texture1;\n    uniform sampler2D u_texture2;\n    uniform sampler2D u_shadowMap;\n\n    varying vec3 v_normal1;\n    varying vec3 v_normal2;\n    varying float v_height;\n    varying vec2 v_uv1;\n    varying vec2 v_uv2;\n    varying vec2 v_suv;\n    varying float v_texture;\n\n    const vec3 lightDirection = normalize(vec3(-0.3, -0.3, 0.25));\n\n    vec4 sample(int texture) {\n      if (texture == 0) {\n        return texture2D(u_texture1, v_uv1);\n      } else if (texture == 1) {\n        return texture2D(u_texture2, v_uv1);\n      } else {\n        vec4 c1 = texture2D(u_texture1, v_uv1).rgba;\n        vec4 c2 = texture2D(u_texture2, v_uv2).rgba;\n        return mix(c1, c2, c2.a);\n      }\n    }\n\n    void main() {\n      vec4 color = sample(int(v_texture+0.01)).rgba;\n\n      float height = 2.0 * (fract(v_height) - 0.5);\n      height = height * height;\n      vec3 normal = normalize(mix(v_normal2, v_normal1, height));\n\n      float shadow = texture2D(u_shadowMap, v_suv).COMP1D;\n      color.xyz *= clamp(dot(normal, lightDirection) + 0.45, 0.1, 1.0);\n      color.xyz *= 1.0 - shadow;\n\n      gl_FragColor = color;\n    }\n  `,\n  vsUberSplat: `\n    uniform mat4 u_mvp;\n    uniform sampler2D u_heightMap;\n    uniform vec2 u_pixel;\n    uniform vec2 u_size;\n    uniform vec2 u_shadowPixel;\n    uniform vec2 u_centerOffset;\n\n    attribute vec3 a_position;\n    attribute vec2 a_uv;\n\n    varying vec2 v_uv;\n    varying vec2 v_suv;\n    varying vec3 v_normal;\n\n    const float normalDist = 0.25;\n\n    void main() {\n      vec2 halfPixel = u_pixel * 0.5;\n\n      vec2 base = (a_position.xy - u_centerOffset) / 128.0;\n      float height = texture2D(u_heightMap, base * u_pixel + halfPixel).COMP1D;\n\n      float hL = texture2D(u_heightMap, vec2(base - vec2(normalDist, 0.0)) * u_pixel + halfPixel).COMP1D;\n      float hR = texture2D(u_heightMap, vec2(base + vec2(normalDist, 0.0)) * u_pixel + halfPixel).COMP1D;\n      float hD = texture2D(u_heightMap, vec2(base - vec2(0.0, normalDist)) * u_pixel + halfPixel).COMP1D;\n      float hU = texture2D(u_heightMap, vec2(base + vec2(0.0, normalDist)) * u_pixel + halfPixel).COMP1D;\n\n      v_normal = normalize(vec3(hL - hR, hD - hU, normalDist * 2.0));\n      v_uv = a_uv;\n      v_suv = base / u_size;\n\n      gl_Position = u_mvp * vec4(a_position.xy, height * 128.0 + a_position.z, 1.0);\n    }\n  `,\n  fsUberSplat: `\n    uniform sampler2D u_texture;\n    uniform sampler2D u_shadowMap;\n    uniform vec4 u_color;\n\n    varying vec2 v_uv;\n    varying vec2 v_suv;\n    varying vec3 v_normal;\n\n    const vec3 lightDirection = normalize(vec3(-0.3, -0.3, 0.25));\n\n    void main() {\n      if (any(bvec4(lessThan(v_uv, vec2(0.0)), greaterThan(v_uv, vec2(1.0))))) {\n        discard;\n      }\n      vec4 color = texture2D(u_texture, clamp(v_uv, 0.0, 1.0)).rgba * u_color;\n\n      float shadow = texture2D(u_shadowMap, v_suv).COMP1D;\n      color.xyz *= clamp(dot(v_normal, lightDirection) + 0.45, 0.0, 1.0);\n      color.xyz *= 1.0 - shadow;\n\n      gl_FragColor = color;\n    }\n  `,\n  vsSimpleModel: `\n    uniform mat4 u_mvp;\n\n    attribute vec3 a_position;\n    attribute vec3 a_normal;\n    attribute vec2 a_uv;\n    attribute vec3 a_instancePosition;\n    attribute vec2 a_instanceRotation;\n    attribute float a_instanceScale;\n\n    varying vec3 v_normal;\n    varying vec2 v_uv;\n\n    ${shaders.quat_transform}\n\n    void main() {\n      v_normal = quat_transform(a_instanceRotation, a_normal);\n      v_uv = a_uv;\n\n      gl_Position = u_mvp * vec4(quat_transform(a_instanceRotation, a_position) * a_instanceScale + a_instancePosition, 1.0);\n    }\n  `,\n  fsSimpleModel: `\n    uniform sampler2D u_texture;\n    uniform bool u_alphaTest;\n    uniform bool u_unshaded;\n\n    varying vec3 v_normal;\n    varying vec2 v_uv;\n\n    const vec3 lightDirection = normalize(vec3(-0.3, -0.3, 0.25));\n\n    void main() {\n      vec4 color = texture2D(u_texture, v_uv).rgba;\n\n      // 1bit Alpha\n      if (u_alphaTest && color.a < 0.75) {\n        discard;\n      }\n\n      if (!u_unshaded) {\n        color *= clamp(dot(v_normal, lightDirection) + 0.45, 0.1, 1.0);\n      }\n\n      gl_FragColor = color;\n    }\n  `,\n};\n","const cliffVariations = {\n  AAAB: 1,\n  AAAC: 1,\n  AABA: 1,\n  AABB: 2,\n  AABC: 0,\n  AACA: 1,\n  AACB: 0,\n  AACC: 1,\n  ABAA: 1,\n  ABAB: 1,\n  ABAC: 0,\n  ABBA: 2,\n  ABBB: 1,\n  ABBC: 0,\n  ABCA: 0,\n  ABCB: 0,\n  ABCC: 0,\n  ACAA: 1,\n  ACAB: 0,\n  ACAC: 1,\n  ACBA: 0,\n  ACBB: 0,\n  ACBC: 0,\n  ACCA: 1,\n  ACCB: 0,\n  ACCC: 1,\n  BAAA: 1,\n  BAAB: 1,\n  BAAC: 0,\n  BABA: 1,\n  BABB: 1,\n  BABC: 0,\n  BACA: 0,\n  BACB: 0,\n  BACC: 0,\n  BBAA: 1,\n  BBAB: 1,\n  BBAC: 0,\n  BBBA: 1,\n  BBCA: 0,\n  BCAA: 0,\n  BCAB: 0,\n  BCAC: 0,\n  BCBA: 0,\n  BCCA: 0,\n  CAAA: 1,\n  CAAB: 0,\n  CAAC: 1,\n  CABA: 0,\n  CABB: 0,\n  CABC: 0,\n  CACA: 1,\n  CACB: 0,\n  CACC: 1,\n  CBAA: 0,\n  CBAB: 0,\n  CBAC: 0,\n  CBBA: 0,\n  CBCA: 0,\n  CCAA: 1,\n  CCAB: 0,\n  CCAC: 1,\n  CCBA: 0,\n  CCCA: 1,\n};\n\nconst cityCliffVariations = {\n  AAAB: 2,\n  AAAC: 1,\n  AABA: 1,\n  AABB: 3,\n  AABC: 0,\n  AACA: 1,\n  AACB: 0,\n  AACC: 3,\n  ABAA: 1,\n  ABAB: 2,\n  ABAC: 0,\n  ABBA: 3,\n  ABBB: 0,\n  ABBC: 0,\n  ABCA: 0,\n  ABCB: 0,\n  ABCC: 0,\n  ACAA: 1,\n  ACAB: 0,\n  ACAC: 2,\n  ACBA: 0,\n  ACBB: 0,\n  ACBC: 0,\n  ACCA: 3,\n  ACCB: 0,\n  ACCC: 1,\n  BAAA: 1,\n  BAAB: 3,\n  BAAC: 0,\n  BABA: 2,\n  BABB: 0,\n  BABC: 0,\n  BACA: 0,\n  BACB: 0,\n  BACC: 0,\n  BBAA: 3,\n  BBAB: 1,\n  BBAC: 0,\n  BBBA: 1,\n  BBCA: 0,\n  BCAA: 0,\n  BCAB: 0,\n  BCAC: 0,\n  BCBA: 0,\n  BCCA: 0,\n  CAAA: 1,\n  CAAB: 0,\n  CAAC: 3,\n  CABA: 0,\n  CABB: 0,\n  CABC: 0,\n  CACA: 2,\n  CACB: 0,\n  CACC: 1,\n  CBAA: 0,\n  CBAB: 0,\n  CBAC: 0,\n  CBBA: 0,\n  CBCA: 0,\n  CCAA: 3,\n  CCAB: 0,\n  CCAC: 1,\n  CCBA: 0,\n  CCCA: 1,\n};\n\n/**\n * @param {string} dir\n * @param {string} tag\n * @param {number} variation\n * @return {number}\n */\nexport default function getCliffVariation(dir, tag, variation) {\n  if (dir === 'Cliffs') {\n    return Math.min(variation, cliffVariations[tag]);\n  } else {\n    return Math.min(variation, cityCliffVariations[tag]);\n  }\n}\n","import MdxParser from '../../../parsers/mdlx/model';\n\n/**\n * A static terrain model.\n */\nexport default class TerrainModel {\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {ArrayBuffer} arrayBuffer\n   * @param {Array<number>} locations\n   * @param {Array<number>} textures\n   */\n  constructor(gl, arrayBuffer, locations, textures, loader) {\n    let parser = new MdxParser(arrayBuffer);\n    let geoset = parser.geosets[0];\n    let vertices = geoset.vertices;\n    let normals = geoset.normals;\n    let uvs = geoset.uvSets[0];\n    let uvs2 = geoset.uvSets[1];\n    let faces = geoset.faces;\n    let normalsOffset = vertices.byteLength;\n    let uvsOffset = normalsOffset + normals.byteLength;\n    let uvs2Offset = uvsOffset + uvs.byteLength;\n    let totalLength = uvs2Offset + (uvs2 ? uvs2.byteLength : 0);\n    if (!uvs2) {\n      uvs2Offset = uvsOffset;\n    }\n    let instances = locations.length / 3;\n\n    if (!textures) {\n      this.textures = parser.textures.map(tex => tex.path ? loader.load(tex.path) : null);\n      textures = new Uint8Array(instances);\n      if (uvs2 && parser.textures.length >= 2) {\n        for (let i = 0; i < instances; ++i) {\n          textures[i] = 2;\n        }\n      }\n    }\n\n\n    let vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, totalLength, gl.STATIC_DRAW);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n    gl.bufferSubData(gl.ARRAY_BUFFER, normalsOffset, normals);\n    gl.bufferSubData(gl.ARRAY_BUFFER, uvsOffset, uvs);\n    if (uvs2) gl.bufferSubData(gl.ARRAY_BUFFER, uvs2Offset, uvs2);\n\n    let faceBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, faceBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n\n    let texturesOffset = locations.length * 4;\n    let locationAndTextureBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, locationAndTextureBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, texturesOffset + instances, gl.STATIC_DRAW);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(locations));\n    gl.bufferSubData(gl.ARRAY_BUFFER, texturesOffset, new Uint8Array(textures));\n\n    /** @member {WebGLBuffer} */\n    this.vertexBuffer = vertexBuffer;\n    /** @member {WebGLBuffer} */\n    this.faceBuffer = faceBuffer;\n    /** @member {number} */\n    this.normalsOffset = normalsOffset;\n    /** @member {number} */\n    this.uvsOffset = uvsOffset;\n    /** @member {number} */\n    this.uvs2Offset = uvs2Offset;\n    /** @member {number} */\n    this.elements = faces.length;\n    /** @member {WebGLBuffer} */\n    this.locationAndTextureBuffer = locationAndTextureBuffer;\n    /** @member {number} */\n    this.texturesOffset = texturesOffset;\n    /** @member {number} */\n    this.instances = instances;\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {ANGLEInstancedArrays} instancedArrays\n   * @param {Object} attribs\n   */\n  render(gl, instancedArrays, attribs, tex) {\n    if (this.textures) {\n      for (let i = 0; i < this.textures.length && i < 2; ++i) {\n        gl.activeTexture(gl.TEXTURE1 + i);\n        if (this.textures[i]) {\n          if (!this.textures[i].webglResource) {\n            return;\n          }\n          gl.bindTexture(gl.TEXTURE_2D, this.textures[i].webglResource);\n          if (!this.disabledMips) {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            this.disabledMips = true;\n          }\n        } else {\n          gl.bindTexture(gl.TEXTURE_2D, tex[i].webglResource);\n        }\n      }\n    }\n\n    // Locations and textures.\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.locationAndTextureBuffer);\n    gl.vertexAttribPointer(attribs.a_instancePosition, 3, gl.FLOAT, false, 12, 0);\n    gl.vertexAttribPointer(attribs.a_instanceTexture, 1, gl.UNSIGNED_BYTE, false, 1, this.texturesOffset);\n\n    // Vertices.\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.vertexAttribPointer(attribs.a_position, 3, gl.FLOAT, false, 12, 0);\n    gl.vertexAttribPointer(attribs.a_normal, 3, gl.FLOAT, false, 12, this.normalsOffset);\n    gl.vertexAttribPointer(attribs.a_uv1, 2, gl.FLOAT, false, 8, this.uvsOffset);\n    gl.vertexAttribPointer(attribs.a_uv2, 2, gl.FLOAT, false, 8, this.uvs2Offset);\n\n    // Faces.\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.faceBuffer);\n\n    // Draw.\n    instancedArrays.drawElementsInstancedANGLE(gl.TRIANGLES, this.elements, gl.UNSIGNED_SHORT, 0, this.instances);\n  }\n}\n","/**\n * A static terrain model.\n */\nexport default class SplatModel {\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {ArrayBuffer} arrayBuffer\n   * @param {Array<number>} locations\n   * @param {Array<number>} textures\n   */\n  constructor(gl, texture, locations, centerOffset) {\n    this.texture = texture;\n    this.batches = [];\n    this.color = [1, 1, 1, 1];\n\n    const MaxVertices = 65000;\n\n    let vertices = [];\n    let uvs = [];\n    let indices = [];\n    let instances = locations.length / 5;\n    for (let idx = 0; idx < instances; ++idx) {\n      let [x0, y0, x1, y1, zoffs] = locations.slice(idx * 5, idx * 5 + 5);\n\n      let ix0 = Math.floor((x0 - centerOffset[0]) / 128.0);\n      let ix1 = Math.ceil((x1 - centerOffset[0]) / 128.0);\n      let iy0 = Math.floor((y0 - centerOffset[1]) / 128.0);\n      let iy1 = Math.ceil((y1 - centerOffset[1]) / 128.0);\n\n      let newVerts = (iy1 - iy0 + 1) * (ix1 - ix0 + 1);\n      if (newVerts > MaxVertices) {\n        continue;\n      }\n\n      let start = vertices.length / 3, step = ix1 - ix0 + 1;\n      if (start + newVerts > MaxVertices) {\n        this.addBatch(gl, vertices, uvs, indices);\n        vertices.length = 0;\n        uvs.length = 0;\n        indices.length = 0;\n        start = 0;\n      }\n\n      for (let iy = iy0; iy <= iy1; ++iy) {\n        let y = iy * 128.0 + centerOffset[1];\n        for (let ix = ix0; ix <= ix1; ++ix) {\n          let x = ix * 128.0 + centerOffset[0];\n          vertices.push(x, y, zoffs);\n          uvs.push((x - x0) / (x1 - x0), 1.0 - (y - y0) / (y1 - y0));\n        }\n      }\n      for (let i = 0; i < iy1 - iy0; ++i) {\n        for (let j = 0; j < ix1 - ix0; ++j) {\n          let i0 = start + i * step + j;\n          indices.push(i0, i0 + 1, i0 + step, i0 + 1, i0 + step + 1, i0 + step);\n        }\n      }\n    }\n\n    if (indices.length) {\n      this.addBatch(gl, vertices, uvs, indices);\n    }\n  }\n\n  addBatch(gl, vertices, uvs, indices) {\n    let uvsOffset = vertices.length * 4;\n\n    let vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, uvsOffset + uvs.length * 4, gl.STATIC_DRAW);\n    gl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(vertices));\n    gl.bufferSubData(gl.ARRAY_BUFFER, uvsOffset, new Float32Array(uvs));\n\n    let faceBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, faceBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n\n    this.batches.push({\n      uvsOffset,\n      vertexBuffer,\n      faceBuffer,\n      elements: indices.length,\n    });\n  }\n\n  /**\n   * @param {WebGLRenderingContext} gl\n   * @param {Object} attribs\n   */\n  render(gl, uniforms, attribs) {\n    // Texture\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, this.texture.webglResource);\n    gl.uniform4fv(uniforms.u_color, this.color);\n\n    for (let b of this.batches) {\n      // Vertices\n      gl.bindBuffer(gl.ARRAY_BUFFER, b.vertexBuffer);\n      gl.vertexAttribPointer(attribs.a_position, 3, gl.FLOAT, false, 12, 0);\n      gl.vertexAttribPointer(attribs.a_uv, 2, gl.FLOAT, false, 8, b.uvsOffset);\n\n      // Faces.\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, b.faceBuffer);\n\n      // Draw.\n      gl.drawElements(gl.TRIANGLES, b.elements, gl.UNSIGNED_SHORT, 0);\n    }\n  }\n}\n","function sequenceSorter(a, b) {\n  return a.sequence.rarity < b.sequence.rarity;\n}\n\nfunction sequenceMatch(props, name) {\n  let names = name.toLowerCase().split(/[- ]/).map(x => x.trim());\n  return props.every(p => names.includes(p));\n}\n\nfunction filterSequences(type, sequences, props) {\n  let filtered = [];\n\n  for (let i = 0, l = sequences.length; i < l; i++) {\n    let sequence = sequences[i],\n      name = sequence.name.split('-')[0].replace(/\\d/g, '').trim().toLowerCase();\n\n    if (name === type && sequenceMatch(props, sequence.name)) {\n      filtered.push({sequence, index: i});\n    }\n  }\n\n  return filtered;\n}\n\nfunction selectSequence(type, original, animProps) {\n  let props = animProps ? animProps.split(',').filter(x => x.length).map(p => p.toLowerCase()) : [];\n  let sequences = filterSequences(type, original, props);\n  if (!sequences.length) {\n    props.push(type);\n    let first = original.findIndex(x => sequenceMatch(props, x.name));\n    if (first >= 0) {\n      sequences.push({sequence: original[first], index: first});\n    }\n  }\n\n  sequences.sort(sequenceSorter);\n\n  for (var i = 0, l = sequences.length; i < l; i++) {\n    var sequence = sequences[i].sequence;\n    let rarity = sequence.rarity;\n\n    if (rarity === 0) {\n      break;\n    }\n\n    if (Math.random() * 10 > rarity) {\n      return sequences[i];\n    }\n  }\n\n  let sequencesLeft = sequences.length - i;\n  let random = i + Math.floor(Math.random() * sequencesLeft);\n  var sequence = sequences[random];\n\n  return sequence;\n}\n\nfunction standSequence(target, animProps) {\n  let sequences = target.model.sequences;\n  let sequence = selectSequence('stand', sequences, animProps);\n\n  if (sequence) {\n    target.setSequence(sequence.index);\n  }\n};\n\nexport default function standOnRepeat(target, animProps) {\n  target.model.whenLoaded()\n    .then((model) => {\n      standSequence(target, animProps);\n      target.on('seqend', () => standSequence(target, animProps));\n    });\n};\n","import {vec3, quat} from 'gl-matrix';\nimport {VEC3_UNIT_Z} from '../../../common/gl-matrix-addon';\nimport unique from '../../../common/arrayunique';\nimport War3Map from '../../../parsers/w3x/map';\nimport War3MapW3i from '../../../parsers/w3x/w3i/file';\nimport War3MapW3e from '../../../parsers/w3x/w3e/file';\nimport War3MapDoo from '../../../parsers/w3x/doo/file';\nimport War3MapUnitsDoo from '../../../parsers/w3x/unitsdoo/file';\nimport MappedData from '../../../utils/mappeddata';\nimport ModelViewer from '../../viewer';\nimport geoHandler from '../geo/handler';\nimport mdxHandler from '../mdx/handler';\nimport shaders from './shaders';\nimport getCliffVariation from './variations';\nimport TerrainModel from './terrainmodel';\nimport SplatModel from './splatmodel';\n// import SimpleModel from './simplemodel';\nimport standOnRepeat from './standsequence';\n\nlet normalHeap1 = vec3.create();\nlet normalHeap2 = vec3.create();\n\n/**\n *\n */\nexport default class War3MapViewer extends ModelViewer {\n  /**\n   * @param {HTMLCanvasElement} canvas\n   * @param {function} wc3PathSolver\n   */\n  constructor(canvas, wc3PathSolver, mapData) {\n    super(canvas);\n\n    this.batchSize = 256;\n\n    this.on('error', (target, error, reason) => console.error(target, error, reason));\n\n    this.addHandler(geoHandler);\n    this.addHandler(mdxHandler);\n\n    /** @member {function} */\n    this.wc3PathSolver = wc3PathSolver;\n\n    this.groundShader = this.loadShader('Ground', shaders.vsGround, shaders.fsGround);\n    this.waterShader = this.loadShader('Water', shaders.vsWater, shaders.fsWater);\n    this.cliffShader = this.loadShader('Cliffs', shaders.vsCliffs, shaders.fsCliffs);\n    this.simpleModelShader = this.loadShader('SimpleModel', shaders.vsSimpleModel, shaders.fsSimpleModel);\n    this.uberSplatShader = this.loadShader('UberSplats', shaders.vsUberSplat, shaders.fsUberSplat);\n\n    this.scene = this.addScene();\n    this.camera = this.scene.camera;\n    this.units = [];\n\n    this.waterIndex = 0;\n    this.waterIncreasePerFrame = 0;\n\n    this.anyReady = false;\n\n    this.terrainCliffsAndWaterLoaded = false;\n    this.terrainData = new MappedData();\n    this.cliffTypesData = new MappedData();\n    this.waterData = new MappedData();\n    this.terrainReady = false;\n    this.cliffsReady = false;\n    this.shadowsReady = false;\n\n    const objects = mapData.objects();\n\n    Promise.all([\n      objects,\n      ...['TerrainArt\\\\Terrain.slk', 'TerrainArt\\\\CliffTypes.slk', 'TerrainArt\\\\Water.slk']\n        .map((path) => this.loadGeneric(wc3PathSolver(path)[0], 'text', undefined, path).whenLoaded())\n    ]).then(([obj, terrain, cliffTypes, water]) => {\n        this.terrainObjects = obj.objects;\n        this.terrainCliffsAndWaterLoaded = true;\n        this.terrainData.load(terrain.data);\n        this.cliffTypesData.load(cliffTypes.data);\n        this.waterData.load(water.data);\n        this.emit('terrainloaded');\n      });\n\n    this.doodadsAndDestructiblesLoaded = false;\n    this.doodadsData = new MappedData();\n    this.doodadMetaData = new MappedData();\n    this.destructableMetaData = new MappedData();\n    this.doodads = [];\n    this.terrainDoodads = [];\n    this.doodadsReady = false;\n    this.uberSplats = [];\n    this.uberSplatsReady = false;\n\n    objects.then(obj => {\n      this.doodadsAndDestructiblesLoaded = true;\n      this.doodadsData = obj.objects;\n      this.emit('doodadsloaded');\n    });\n\n    this.unitsAndItemsLoaded = false;\n    this.unitsData = new MappedData();\n    this.unitMetaData = new MappedData();\n    this.uberSplatData = new MappedData();\n    this.units = [];\n    this.unitsReady = false;\n\n    Promise.all([objects, this.loadGeneric(wc3PathSolver('Splats\\\\UberSplatData.slk')[0], 'text', undefined, 'Splats\\\\UberSplatData.slk').whenLoaded()])\n      .then(([obj, uberSplatData]) => {\n        this.unitsAndItemsLoaded = true;\n        this.unitsData = obj.objects;\n        this.uberSplatData.load(uberSplatData.data);\n        this.emit('unitsloaded');\n      });\n  \n    let gl = this.gl;\n    let shadowMap = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, shadowMap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.R8, 4, 4, 0, gl.RED, gl.UNSIGNED_BYTE, new Uint8Array(16));\n    this.shadowMap = shadowMap;\n  }\n\n  /**\n   *\n   */\n  renderGround() {\n    if (this.terrainReady) {\n      let gl = this.gl;\n      let webgl = this.webgl;\n      let instancedArrays = webgl.extensions.instancedArrays;\n      let shader = this.groundShader;\n      let uniforms = shader.uniforms;\n      let attribs = shader.attribs;\n      let {columns, rows, centerOffset, vertexBuffer, faceBuffer, heightMap, cliffHeightMap, instanceBuffer,\n        instanceCount, textureBuffer, variationBuffer, heightMapSize} = this.terrainRenderData;\n      let tilesetTextures = this.tilesetTextures;\n      let instanceAttrib = attribs.a_InstanceID;\n      let positionAttrib = attribs.a_position;\n      let texturesAttrib = attribs.a_textures;\n      let variationsAttrib = attribs.a_variations;\n\n      gl.disable(gl.BLEND);\n\n      webgl.useShaderProgram(shader);\n\n      gl.uniformMatrix4fv(uniforms.u_mvp, false, this.camera.worldProjectionMatrix);\n      gl.uniform2fv(uniforms.u_offset, centerOffset);\n      gl.uniform2f(uniforms.u_size, columns - 1, rows - 1);\n      gl.uniform2fv(uniforms.u_pixel, heightMapSize);\n      gl.uniform1i(uniforms.u_heightMap, 0);\n      gl.uniform1i(uniforms.u_tilesets, 1);\n      gl.uniform1i(uniforms.u_shadowMap, 2);\n      gl.uniform1i(uniforms.u_heightMap0, 3);\n      gl.uniform1f(uniforms.u_tilesetHeight, 1 / (tilesetTextures.length + 1));\n      gl.uniform1f(uniforms.u_tilesetCount, tilesetTextures.length + 1);\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, heightMap);\n\n      gl.activeTexture(gl.TEXTURE1);\n      gl.bindTexture(gl.TEXTURE_2D, this.tilesetsTexture);\n\n      gl.activeTexture(gl.TEXTURE2);\n      gl.bindTexture(gl.TEXTURE_2D, this.shadowMap);\n\n      gl.activeTexture(gl.TEXTURE3);\n      gl.bindTexture(gl.TEXTURE_2D, cliffHeightMap);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.vertexAttribPointer(positionAttrib, 2, gl.FLOAT, false, 8, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, instanceBuffer);\n      gl.vertexAttribPointer(instanceAttrib, 1, gl.FLOAT, false, 4, 0);\n      instancedArrays.vertexAttribDivisorANGLE(instanceAttrib, 1);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, textureBuffer);\n      gl.vertexAttribPointer(texturesAttrib, 4, gl.UNSIGNED_BYTE, false, 4, 0);\n      instancedArrays.vertexAttribDivisorANGLE(texturesAttrib, 1);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, variationBuffer);\n      gl.vertexAttribPointer(variationsAttrib, 4, gl.UNSIGNED_BYTE, false, 4, 0);\n      instancedArrays.vertexAttribDivisorANGLE(variationsAttrib, 1);\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, faceBuffer);\n\n      instancedArrays.drawElementsInstancedANGLE(gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, instanceCount);\n\n      instancedArrays.vertexAttribDivisorANGLE(texturesAttrib, 0);\n      instancedArrays.vertexAttribDivisorANGLE(variationsAttrib, 0);\n      instancedArrays.vertexAttribDivisorANGLE(instanceAttrib, 0);\n    }\n  }\n\n  /**\n   *\n   */\n  renderWater() {\n    if (this.terrainReady) {\n      let gl = this.gl;\n      let webgl = this.webgl;\n      let instancedArrays = webgl.extensions.instancedArrays;\n      let shader = this.waterShader;\n      let uniforms = shader.uniforms;\n      let attribs = shader.attribs;\n      let mapBounds = this.mapBounds;\n      let {columns, rows, centerOffset, vertexBuffer, faceBuffer, heightMap, instanceBuffer, instanceCount, waterHeightMap, waterBuffer, heightMapSize} = this.terrainRenderData;\n      let instanceAttrib = attribs.a_InstanceID;\n      let positionAttrib = attribs.a_position;\n      let isWaterAttrib = attribs.a_isWater;\n\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n      webgl.useShaderProgram(shader);\n\n      gl.uniformMatrix4fv(uniforms.u_mvp, false, this.camera.worldProjectionMatrix);\n      gl.uniform2fv(uniforms.u_offset, centerOffset);\n      gl.uniform2f(uniforms.u_size, columns - 1, rows - 1);\n      gl.uniform2fv(uniforms.u_pixel, heightMapSize);\n      gl.uniform1i(uniforms.u_heightMap, 0);\n      gl.uniform1i(uniforms.u_waterHeightMap, 1);\n      gl.uniform1i(uniforms.u_waterMap, 2);\n      gl.uniform1f(uniforms.u_offsetHeight, this.waterHeightOffset);\n      gl.uniform1f(uniforms.u_tileIndex, this.waterIndex | 0);\n      gl.uniform4fv(uniforms.u_maxDeepColor, this.maxDeepColor);\n      gl.uniform4fv(uniforms.u_minDeepColor, this.minDeepColor);\n      gl.uniform4fv(uniforms.u_maxShallowColor, this.maxShallowColor);\n      gl.uniform4f(uniforms.u_mapBounds, mapBounds[0] * 128.0 + centerOffset[0],\n        mapBounds[2] * 128.0 + centerOffset[1],\n        (columns - mapBounds[1] - 1) * 128.0 + centerOffset[0],\n        (rows - mapBounds[3] - 1) * 128.0 + centerOffset[1]);\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, heightMap);\n\n      gl.activeTexture(gl.TEXTURE1);\n      gl.bindTexture(gl.TEXTURE_2D, waterHeightMap);\n\n      gl.activeTexture(gl.TEXTURE2);\n      gl.bindTexture(gl.TEXTURE_2D, this.waterTexture);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n      gl.vertexAttribPointer(positionAttrib, 2, gl.FLOAT, false, 8, 0);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, instanceBuffer);\n      gl.vertexAttribPointer(instanceAttrib, 1, gl.FLOAT, false, 4, 0);\n      instancedArrays.vertexAttribDivisorANGLE(instanceAttrib, 1);\n\n      gl.bindBuffer(gl.ARRAY_BUFFER, waterBuffer);\n      gl.vertexAttribPointer(isWaterAttrib, 1, gl.UNSIGNED_BYTE, false, 1, 0);\n      instancedArrays.vertexAttribDivisorANGLE(isWaterAttrib, 1);\n\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, faceBuffer);\n      instancedArrays.drawElementsInstancedANGLE(gl.TRIANGLES, 6, gl.UNSIGNED_BYTE, 0, instanceCount);\n\n      instancedArrays.vertexAttribDivisorANGLE(isWaterAttrib, 0);\n      instancedArrays.vertexAttribDivisorANGLE(instanceAttrib, 0);\n    }\n  }\n\n  /**\n   *\n   */\n  renderCliffs() {\n    if (this.cliffsReady) {\n      let gl = this.gl;\n      let instancedArrays = gl.extensions.instancedArrays;\n      let webgl = this.webgl;\n      let shader = this.cliffShader;\n      let attribs = shader.attribs;\n      let uniforms = shader.uniforms;\n      let {columns, rows, centerOffset, cliffHeightMap, heightMapSize} = this.terrainRenderData;\n\n      gl.disable(gl.BLEND);\n\n      webgl.useShaderProgram(shader);\n\n      gl.uniformMatrix4fv(uniforms.u_mvp, false, this.camera.worldProjectionMatrix);\n      gl.uniform1i(uniforms.u_heightMap, 0);\n      gl.uniform2f(uniforms.u_size, columns - 1, rows - 1);\n      gl.uniform2fv(uniforms.u_pixel, heightMapSize);\n      gl.uniform2fv(uniforms.u_centerOffset, centerOffset);\n      gl.uniform1i(uniforms.u_texture1, 1);\n      gl.uniform1i(uniforms.u_texture2, 2);\n      gl.uniform1i(uniforms.u_shadowMap, 3);\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, cliffHeightMap);\n\n      gl.activeTexture(gl.TEXTURE1);\n      gl.bindTexture(gl.TEXTURE_2D, this.cliffTextures[0].webglResource);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n      if (this.cliffTextures.length > 1) {\n        gl.activeTexture(gl.TEXTURE2);\n        gl.bindTexture(gl.TEXTURE_2D, this.cliffTextures[1].webglResource);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      }\n\n      gl.activeTexture(gl.TEXTURE3);\n      gl.bindTexture(gl.TEXTURE_2D, this.shadowMap);\n\n      // Set instanced attributes.\n      instancedArrays.vertexAttribDivisorANGLE(attribs.a_instancePosition, 1);\n      instancedArrays.vertexAttribDivisorANGLE(attribs.a_instanceTexture, 1);\n\n      // Render the cliffs.\n      for (let cliff of this.cliffModels) {\n        cliff.render(gl, instancedArrays, attribs, this.cliffTextures);\n      }\n\n      // Clear instanced attributes.\n      instancedArrays.vertexAttribDivisorANGLE(attribs.a_instancePosition, 0);\n      instancedArrays.vertexAttribDivisorANGLE(attribs.a_instanceTexture, 0);\n    }\n  }\n\n  /**\n   *\n   */\n  renderUberSplats() {\n    if (this.terrainReady && this.uberSplatsReady) {\n      let gl = this.gl;\n      let webgl = this.webgl;\n      let shader = this.uberSplatShader;\n      let attribs = shader.attribs;\n      let uniforms = shader.uniforms;\n      let {columns, rows, centerOffset, heightMap, heightMapSize} = this.terrainRenderData;\n\n      gl.enable(gl.BLEND);\n      gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n      gl.blendEquation(gl.FUNC_ADD);\n\n      webgl.useShaderProgram(shader);\n\n      gl.uniformMatrix4fv(uniforms.u_mvp, false, this.camera.worldProjectionMatrix);\n      gl.uniform1i(uniforms.u_heightMap, 0);\n      gl.uniform2f(uniforms.u_size, columns - 1, rows - 1);\n      gl.uniform2fv(uniforms.u_pixel, heightMapSize);\n      gl.uniform2fv(uniforms.u_centerOffset, centerOffset);\n      gl.uniform1i(uniforms.u_texture, 1);\n      gl.uniform1i(uniforms.u_shadowMap, 2);\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(gl.TEXTURE_2D, heightMap);\n\n      gl.activeTexture(gl.TEXTURE2);\n      gl.bindTexture(gl.TEXTURE_2D, this.shadowMap);\n\n      // Render the cliffs.\n      for (let splat of this.uberSplatModels) {\n        splat.render(gl, uniforms, attribs);\n      }\n    }\n  }\n\n  // /**\n  //  * \n  //  */\n  // renderDoodads(opaque) {\n  //   if (this.doodadsReady) {\n  //     let gl = this.gl;\n  //     let instancedArrays = gl.extensions.instancedArrays;\n  //     let webgl = this.webgl;\n  //     let shader = this.simpleModelShader;\n  //     let attribs = shader.attribs;\n  //     let uniforms = shader.uniforms;\n\n  //     webgl.useShaderProgram(shader);\n\n  //     gl.uniformMatrix4fv(uniforms.u_mvp, false, this.camera.worldProjectionMatrix);\n  //     gl.uniform1i(uniforms.u_texture, 0);\n\n  //     gl.activeTexture(gl.TEXTURE0);\n\n  //     // Enable instancing.\n  //     instancedArrays.vertexAttribDivisorANGLE(attribs.a_instancePosition, 1);\n  //     instancedArrays.vertexAttribDivisorANGLE(attribs.a_instanceRotation, 1);\n  //     instancedArrays.vertexAttribDivisorANGLE(attribs.a_instanceScale, 1);\n\n  //     // Render the dooadads.\n  //     for (let doodad of this.doodads) {\n  //       if (opaque) {\n  //         doodad.renderOpaque(gl, instancedArrays, uniforms, attribs);\n  //       } else {\n  //         doodad.renderTranslucent(gl, instancedArrays, uniforms, attribs);\n  //       }\n  //     }\n\n  //     // Render the terrain doodads.\n  //     for (let doodad of this.terrainDoodads) {\n  //       if (opaque) {\n  //         doodad.renderOpaque(gl, instancedArrays, uniforms, attribs);\n  //       } else {\n  //         doodad.renderTranslucent(gl, instancedArrays, uniforms, attribs);\n  //       }\n  //     }\n\n  //     // Disable instancing.\n  //     instancedArrays.vertexAttribDivisorANGLE(attribs.a_instancePosition, 0);\n  //     instancedArrays.vertexAttribDivisorANGLE(attribs.a_instanceRotation, 0);\n  //     instancedArrays.vertexAttribDivisorANGLE(attribs.a_instanceScale, 0);\n  //   }\n  // }\n\n  /**\n   * Render the map.\n   */\n  render() {\n    if (this.anyReady) {\n      this.gl.viewport(...this.camera.rect);\n\n      this.renderGround();\n      this.renderCliffs();\n      // this.renderDoodads(true);\n      super.renderOpaque();\n      // this.renderDoodads(false);\n      this.renderUberSplats();\n      this.renderWater();\n      super.renderTranslucent();\n    }\n  }\n\n  /**\n   * Update the map.\n   */\n  update() {\n    if (this.anyReady) {\n      if (this.waterTextures) {\n        this.waterIndex += this.waterIncreasePerFrame;\n        if (this.waterIndex >= this.waterTextures.length) {\n          this.waterIndex = 0;\n        }\n      }\n\n      super.update();\n    }\n  }\n\n  /**\n   * @param {*} buffer \n   */\n  async loadMap(buffer) {\n    // Readonly mode to optimize memory usage.\n    this.mapMpq = new War3Map(buffer, true);\n\n    let wc3PathSolver = this.wc3PathSolver;\n\n    let w3i = new War3MapW3i(this.mapMpq.get('war3map.w3i').arrayBuffer());\n    this.w3i = w3i;\n    this.tileset = w3i.tileset;\n    this.editorVersion = w3i.editorVersion;\n    this.mapBounds = w3i.cameraBoundsComplements;\n    this.mapFlags = w3i.flags;\n\n    this.emit('maploaded');\n\n    this.mapPathSolver = (path) => {\n      // MPQ paths have backwards slashes...always? Don't know.\n      //let mpqPath = path.replace(/\\//g, '\\\\');\n\n      // If the file is in the map, return it.\n      // Otherwise, if it's in the tileset MPQ, return it from there.\n      //let file = this.mapMpq.get(mpqPath);\n      //if (file) {\n      //  return [file.arrayBuffer(), path.substr(path.lastIndexOf('.')), false];\n      //}\n\n      // Try to get the file from the game MPQs.\n      return wc3PathSolver(path, this.tileset);\n    };\n\n    let w3e = new War3MapW3e(this.mapMpq.get('war3map.w3e').arrayBuffer());\n\n    this.corners = w3e.corners;\n    this.centerOffset = w3e.centerOffset;\n    this.mapSize = w3e.mapSize;\n\n    this.calculateRamps();\n\n    const source = this.mapMpq.get('war3map.doo');\n    if (!source) {\n      return;\n    }\n    this.doodads = new War3MapDoo(source.arrayBuffer());\n\n    this.emit('tilesetloaded');\n\n    if (this.terrainCliffsAndWaterLoaded) {\n      this.loadTerrainCliffsAndWater(w3e);\n    } else {\n      this.once('terrainloaded', () => this.loadTerrainCliffsAndWater(w3e));\n    }\n\n    let doodadsLoaded, unitsLoaded;\n\n    this.shadows = [];\n    this.shadowTextures = {};\n\n    if (this.doodadsAndDestructiblesLoaded) {\n      this.loadDoodadsAndDestructibles();\n      doodadsLoaded = Promise.resolve();\n    } else {\n      doodadsLoaded = new Promise((resolve, reject) => {\n        this.once('doodadsloaded', () => {\n          this.loadDoodadsAndDestructibles()\n          resolve();\n        });\n      });\n    }\n\n    if (this.unitsAndItemsLoaded) {\n      this.loadUnitsAndItems();\n      unitsLoaded = Promise.resolve();\n    } else {\n      unitsLoaded = new Promise((resolve, reject) => {\n        this.once('unitsloaded', () => {\n          this.loadUnitsAndItems();\n          resolve();\n        });\n      });\n    }\n\n    Promise.all([doodadsLoaded, unitsLoaded]).then(() => {\n      this.initShadows();\n    });\n  }\n\n  /**\n   * \n   * @param {*} modifications \n   */\n  loadDoodadsAndDestructibles() {\n    let scene = this.scene;\n    let doo = this.doodads;\n\n    // Collect the doodad and destructible data.\n    for (let doodad of doo.doodads) {\n      let row = this.doodadsData.find(row => row.id === doodad.id);\n      if (!row) continue;\n      let type = row.type;\n      row = row.data;\n      let file = row.file;\n      let numVar = parseInt(row.numvar || \"0\");\n\n      if (file.endsWith('.mdl')) {\n        file = file.slice(0, -4);\n      }\n\n      let fileVar = file;\n\n      file += '.mdx';\n\n      if (numVar > 1) {\n        fileVar += Math.min(doodad.variation, numVar - 1);\n      }\n\n      fileVar += '.mdx';\n\n      let color = [255, 255, 255];\n\n      if (type === 'destructible') {\n        color[0] = parseInt(row.colorr);\n        color[1] = parseInt(row.colorg);\n        color[2] = parseInt(row.colorb);\n      }\n\n      if (type === 'destructible' && row.shadow && row.shadow !== \"_\") {\n        this.addShadow(row.shadow, doodad.location[0], doodad.location[1]);\n      }\n\n      // First see if the model is local.\n      // Doodads refering to local models may have invalid variations, so if the variation doesn't exist, try without a variation.\n      let mpqFile = this.mapMpq.get(fileVar) || this.mapMpq.get(file);\n      let model;\n\n      if (mpqFile) {\n        model = this.load(mpqFile.name);\n      } else {\n        model = this.load(fileVar);\n      }\n\n      model.whenLoaded().then(() => {\n        let instance = model.addInstance();\n        if (row.texfile) {\n          const repl = model.replaceables.indexOf(parseInt(row.texid || \"0\"));\n          if (repl >= 0) {\n            let tex = row.texfile;\n            if (tex.lastIndexOf('.') <= Math.max(tex.lastIndexOf('/'), tex.lastIndexOf('\\\\'))) {\n              tex += '.blp';\n            }\n            instance.setTexture(model.textures[repl], this.load(tex));\n          }\n        }\n        instance.move(doodad.location);\n        instance.rotateLocal(quat.setAxisAngle(quat.create(), VEC3_UNIT_Z, doodad.angle));\n        instance.scale(doodad.scale);\n        instance.setScene(scene);\n        if (!this.inPlayableArea(doodad.location[0], doodad.location[1])) {\n          color[0] = Math.round(color[0] * 51 / 255);\n          color[1] = Math.round(color[1] * 51 / 255);\n          color[2] = Math.round(color[2] * 51 / 255);\n        }\n        instance.setVertexColor(color);\n  \n        standOnRepeat(instance);\n      });\n\n    }\n\n    this.doodadsReady = true;\n    this.anyReady = true;\n  }\n\n  /**\n   * \n   * @param {*} modifications \n   */\n  loadUnitsAndItems(modifications) {\n    const source = this.mapMpq.get('war3mapUnits.doo');\n    if (!source) {\n      return;\n    }\n    let unitsDoo = new War3MapUnitsDoo(source.arrayBuffer());\n    let scene = this.scene;\n    let splats = {};\n\n    // Collect the units and items data.\n    for (let unit of unitsDoo.units) {\n      let path;\n\n      // Hardcoded?\n      let location = unit.location;\n      let scale = unit.scale;\n      let teamColor = unit.player;\n      let animProps = \"\";\n      // fix team colors for older versions\n      if (this.editorVersion < 0x17A8 && teamColor >= 12) {\n        teamColor += 12;\n      }\n      let row = null;\n      let color = [255, 255, 255];\n\n      if (unit.id === 'sloc') {\n        path = 'Objects\\\\StartLocation\\\\StartLocation.mdx';\n      } else {\n        row = this.unitsData.find(row => row.id === unit.id);\n        if (!row) continue;\n        const type = row.type;\n        row = row.data;\n\n        path = row.file;\n\n        if (path.endsWith('.mdl')) {\n          path = path.slice(0, -4);\n        }\n\n        scale = vec3.clone(unit.scale);\n        vec3.scale(scale, scale, row.modelscale);\n\n        let rowTeamColor = row.teamcolor && parseInt(row.teamcolor);\n        if (row.teamcolor && rowTeamColor >= 0) {\n          teamColor = rowTeamColor;\n        }\n\n        if (type === 'unit') {\n          color[0] = parseInt(row.red);\n          color[1] = parseInt(row.green);\n          color[2] = parseInt(row.blue);\n        } else if (type === 'item') {\n          color[0] = parseInt(row.colorr);\n          color[1] = parseInt(row.colorg);\n          color[2] = parseInt(row.colorb);\n        }\n  \n        let rowMoveHeight = row.moveheight && parseFloat(row.moveheight);\n        if (rowMoveHeight) {\n          location = vec3.clone(unit.location);\n          location[2] += rowMoveHeight;\n        }\n\n        path += '.mdx';\n\n        let splat = row.ubersplat && this.uberSplatData.getRow(row.ubersplat);\n        if (splat) {\n          let texture = `${splat.Dir}\\\\${splat.file}.blp`;\n          if (!splats[texture]) {\n            splats[texture] = {locations: [], opacity: 1};\n          }\n          let x = unit.location[0], y = unit.location[1], s = splat.Scale;\n          splats[texture].locations.push(x - s, y - s, x + s, y + s, 1);\n        }\n\n        if (row.unitshadow && row.unitshadow !== \"_\") {\n          let texture = `ReplaceableTextures\\\\Shadows\\\\${row.unitshadow}.blp`;\n          let shadowX = parseFloat(row.shadowx || \"0\");\n          let shadowY = parseFloat(row.shadowy || \"0\");\n          let shadowW = parseFloat(row.shadoww || \"0\");\n          let shadowH = parseFloat(row.shadowh || \"0\");\n          if (!splats[texture]) {\n            splats[texture] = {locations: [], opacity: 0.5};\n          }\n          let x = unit.location[0] - shadowX, y = unit.location[1] - shadowY;\n          splats[texture].locations.push(x, y, x + shadowW, y + shadowH, 3);\n        }\n\n        if (row.buildingshadow && row.buildingshadow !== \"_\") {\n          this.addShadow(row.buildingshadow, unit.location[0], unit.location[1]);\n        }\n\n        animProps = row.animprops;\n      }\n\n      if (path) {\n        let model = this.load(path);\n        let instance = model.addInstance();\n\n        //let normal = this.groundNormal([], unit.location[0], unit.location[1]);\n\n        instance.move(location);\n        instance.rotateLocal(quat.setAxisAngle(quat.create(), VEC3_UNIT_Z, unit.angle));\n        instance.scale(scale);\n        instance.setTeamColor(teamColor);\n        instance.setScene(scene);\n        if (!this.inPlayableArea(location[0], location[1])) {\n          color[0] = Math.round(color[0] * 51 / 255);\n          color[1] = Math.round(color[1] * 51 / 255);\n          color[2] = Math.round(color[2] * 51 / 255);\n        }\n        instance.setVertexColor(color);\n\n        if (row) {\n          this.units.push({unit, instance, location, radius: parseFloat(row.scale || \"0\") * 36});\n        }\n\n        standOnRepeat(instance, animProps);\n      } else {\n        console.log('Unknown unit ID', unit.id, unit)\n      }\n    }\n\n    this.unitsReady = true;\n    this.anyReady = true;\n\n    let splatPromises = Object.entries(splats).map((splat) => {\n      let path = splat[0];\n      let {locations, opacity} = splat[1];\n\n      return this.load(path).whenLoaded()\n        .then((texture) => {\n          let splat = new SplatModel(this.gl, texture, locations, this.centerOffset);\n          splat.color[3] = opacity;\n          return splat;\n        });\n    });\n\n    Promise.all(splatPromises).then(models => {\n      this.uberSplatModels = models;\n      this.uberSplatsReady = true;\n    });\n  }\n\n  /**\n   *\n   */\n  async loadTerrainCliffsAndWater(w3e) {\n    let tileset = w3e.tileset;\n\n    this.tilesets = [];\n    this.tilesetTextures = [];\n\n    for (let groundTileset of w3e.groundTilesets) {\n      let row = this.terrainData.getRow(groundTileset);\n      if (!row) {\n        continue;\n      }\n\n      this.tilesets.push(row);\n      this.tilesetTextures.push(this.load(`${row.dir}\\\\${row.file}.blp`));\n    }\n\n    let blights = {\n      A: 'Ashen',\n      B: 'Barrens',\n      C: 'Felwood',\n      D: 'Cave',\n      F: 'Lordf',\n      G: 'Dungeon',\n      I: 'Ice',\n      J: 'DRuins',\n      K: 'Citadel',\n      L: 'Lords',\n      N: 'North',\n      O: 'Outland',\n      Q: 'VillageFall',\n      V: 'Village',\n      W: 'Lordw',\n      X: 'Village',\n      Y: 'Village',\n      Z: 'Ruins',\n    };\n\n    this.blightTextureIndex = this.tilesetTextures.length;\n    this.tilesetTextures.push(this.load(`TerrainArt\\\\Blight\\\\${blights[tileset]}_Blight.blp`));\n\n    this.cliffTilesets = [];\n    this.cliffTextures = [];\n\n    for (let cliffTileset of w3e.cliffTilesets) {\n      let row = this.cliffTypesData.getRow(cliffTileset);\n      if (!row) {\n        continue;\n      }\n\n      this.cliffTilesets.push(row);\n      this.cliffTextures.push(this.load(`${row.texDir}\\\\${row.texFile}.blp`));\n    }\n\n    let waterRow = this.waterData.getRow(`${tileset}Sha`);\n\n    this.waterHeightOffset = waterRow.height;\n    this.waterIncreasePerFrame = waterRow.texRate / 60;\n    this.waterTextures = [];\n    this.maxDeepColor = new Float32Array([waterRow.Dmax_R, waterRow.Dmax_G, waterRow.Dmax_B, waterRow.Dmax_A]);\n    this.minDeepColor = new Float32Array([waterRow.Dmin_R, waterRow.Dmin_G, waterRow.Dmin_B, waterRow.Dmin_A]);\n    this.maxShallowColor = new Float32Array([waterRow.Smax_R, waterRow.Smax_G, waterRow.Smax_B, waterRow.Smax_A]);\n    this.minShallowColor = new Float32Array([waterRow.Smin_R, waterRow.Smin_G, waterRow.Smin_B, waterRow.Smin_A]);\n\n    for (let i = 0, l = waterRow.numTex; i < l; i++) {\n      this.waterTextures.push(this.load(`${waterRow.texFile}${i < 10 ? '0' : ''}${i}.blp`));\n    }\n\n    await this.whenLoaded([...this.tilesetTextures, ...this.waterTextures]);\n\n    let gl = this.gl;\n\n    this.createTilesetsAndWaterTextures();\n\n    let corners = w3e.corners;\n    let [columns, rows] = this.mapSize;\n    let centerOffset = this.centerOffset;\n    let instanceCount = (columns - 1) * (rows - 1);\n    let cliffHeights = new Float32Array(columns * rows);\n    let cornerHeights = new Float32Array(columns * rows);\n    let waterHeights = new Float32Array(columns * rows);\n    let cornerTextures = new Uint8Array(instanceCount * 4);\n    let cornerVariations = new Uint8Array(instanceCount * 4);\n    let waterFlags = new Uint8Array(instanceCount);\n    let instance = 0;\n    let cliffs = {};\n\n    this.columns = columns - 1;\n    this.rows = rows - 1;\n\n    let cliffPathTex = {};\n    for (let doodad of this.doodads.terrainDoodads) {\n      let row = this.terrainObjects.find(row => row.id === doodad.id);\n      if (!row) continue;\n      row = row.data;\n      if (!cliffPathTex[row.pathtex]) {\n        cliffPathTex[row.pathtex] = this.load(row.pathtex);\n      }\n    }\n    await this.whenLoaded(Object.values(cliffPathTex));\n    for (let doodad of this.doodads.terrainDoodads) {\n      let row = this.terrainObjects.find(row => row.id === doodad.id);\n      if (!row) continue;\n      row = row.data;\n      let pathTex = cliffPathTex[row.pathtex];\n      if (!pathTex || !pathTex.imageData) {\n        continue;\n      }\n      let path = row.file + \".mdx\";\n      if (!cliffs[path]) {\n        cliffs[path] = {locations: []};\n      }\n      let [x, y] = doodad.location;\n      let w = pathTex.originalData.width >> 2, h = pathTex.originalData.height >> 2;\n      for (let i = 0; i < h; ++i) {\n        for (let j = 0; j < w; ++j) {\n          corners[y + i][x + j].rampType = -1;\n        }\n      }\n      cliffs[path].locations.push((x + w/2) * 128.0 + centerOffset[0], (y + h/2) * 128.0 + centerOffset[1], (corners[y][x].layerHeight - 2) * 128.0);\n    }\n    \n    for (let y = 0; y < rows; y++) {\n      for (let x = 0; x < columns; x++) {\n        let bottomLeft = corners[y][x];\n        let index = y * columns + x;\n\n        cliffHeights[index] = bottomLeft.groundHeight;\n        cornerHeights[index] = bottomLeft.groundHeight + bottomLeft.layerHeight + (bottomLeft.rampAdjust || 0) - 2;\n        waterHeights[index] = bottomLeft.waterHeight;\n\n        bottomLeft.depth = bottomLeft.water ? this.waterHeightOffset + bottomLeft.waterHeight - cornerHeights[index] : 0;\n\n        if (y < rows - 1 && x < columns - 1) {\n          // Water can be used with cliffs and normal corners, so store water state regardless.\n          waterFlags[instance] = this.isWater(x, y);\n\n          // Is this a cliff, or a normal corner?\n          if (bottomLeft.rampType) {\n            if (bottomLeft.rampType > 0) {\n              let cliffTexture = bottomLeft.cliffTexture;\n              if (cliffTexture === 15) {\n                cliffTexture = 1;\n              }\n              let cliffRow = this.cliffTilesets[cliffTexture];\n              let dir = cliffRow.rampModelDir;\n              let path = `Doodads\\\\Terrain\\\\${dir}\\\\${dir}${bottomLeft.rampName}0.mdx`;\n\n              let base = bottomLeft.layerHeight;\n              if (bottomLeft.cliffType === 1) {\n                base = Math.min(base, corners[y + 2][x].layerHeight, corners[y][x + 1].layerHeight, corners[y + 2][x + 1].layerHeight);\n              } else {\n                base = Math.min(base, corners[y + 1][x].layerHeight, corners[y][x + 2].layerHeight, corners[y + 1][x + 2].layerHeight);\n              }\n\n              if (!cliffs[path]) {\n                cliffs[path] = {locations: [], textures: []};\n              }\n              cliffs[path].locations.push(x * 128 + centerOffset[0], y * 128 + centerOffset[1], (base - 2) * 128);\n              cliffs[path].textures.push(cliffTexture);\n            }\n          } else if (this.isCliff(x, y)) {\n            let bottomLeftLayer = bottomLeft.layerHeight;\n            let bottomRightLayer = corners[y][x + 1].layerHeight;\n            let topLeftLayer = corners[y + 1][x].layerHeight;\n            let topRightLayer = corners[y + 1][x + 1].layerHeight;\n            let base = Math.min(bottomLeftLayer, bottomRightLayer, topLeftLayer, topRightLayer);\n            let fileName = this.cliffFileName(bottomLeftLayer, bottomRightLayer, topLeftLayer, topRightLayer, base);\n\n            if (fileName !== 'AAAA') {\n              let cliffTexture = bottomLeft.cliffTexture;\n\n              // ?\n              if (cliffTexture === 15) {\n                cliffTexture = 1;\n              }\n\n              let cliffRow = this.cliffTilesets[cliffTexture];\n              let dir = cliffRow.cliffModelDir;\n              let path = `Doodads\\\\Terrain\\\\${dir}\\\\${dir}${fileName}${getCliffVariation(dir, fileName, bottomLeft.cliffVariation)}.mdx`;\n\n              if (!cliffs[path]) {\n                cliffs[path] = {locations: [], textures: []};\n              }\n\n              cliffs[path].locations.push(x * 128 + centerOffset[0], y * 128 + centerOffset[1], (base - 2) * 128);\n              cliffs[path].textures.push(cliffTexture);\n            }\n          } else {\n            let bottomLeftTexture = this.cornerTexture(x, y);\n            let bottomRightTexture = this.cornerTexture(x + 1, y);\n            let topLeftTexture = this.cornerTexture(x, y + 1);\n            let topRightTexture = this.cornerTexture(x + 1, y + 1);\n            let textures = unique([bottomLeftTexture, bottomRightTexture, topLeftTexture, topRightTexture]).sort();\n\n            cornerTextures[instance * 4] = textures[0] + 1;\n            cornerVariations[instance * 4] = this.getVariation(textures[0], bottomLeft.groundVariation);\n\n            textures.shift();\n\n            for (let i = 0, l = textures.length; i < l; i++) {\n              let texture = textures[i];\n              let bitset = 0;\n\n              if (bottomRightTexture === texture) {\n                bitset |= 0b0001;\n              }\n\n              if (bottomLeftTexture === texture) {\n                bitset |= 0b0010;\n              }\n\n              if (topRightTexture === texture) {\n                bitset |= 0b0100;\n              }\n\n              if (topLeftTexture === texture) {\n                bitset |= 0b1000;\n              }\n\n              cornerTextures[instance * 4 + 1 + i] = texture + 1;\n              cornerVariations[instance * 4 + 1 + i] = bitset;\n            }\n          }\n\n          instance += 1;\n        }\n      }\n    }\n\n    let vertexBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]), gl.STATIC_DRAW);\n\n    let faceBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, faceBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint8Array([0, 1, 2, 1, 3, 2]), gl.STATIC_DRAW);\n\n    let cliffHeightMap = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, cliffHeightMap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.R32F, columns, rows, 0, gl.RED, gl.FLOAT, cliffHeights);\n\n    let heightMap = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, heightMap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.R32F, columns, rows, 0, gl.RED, gl.FLOAT, cornerHeights);\n\n    let waterHeightMap = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, waterHeightMap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.R32F, columns, rows, 0, gl.RED, gl.FLOAT, waterHeights);\n\n    let instanceBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, instanceBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(instanceCount).map((currentValue, index, array) => index), gl.STATIC_DRAW);\n\n    let textureBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, textureBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, cornerTextures, gl.STATIC_DRAW);\n\n    let variationBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, variationBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, cornerVariations, gl.STATIC_DRAW);\n\n    let waterBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, waterBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, waterFlags, gl.STATIC_DRAW);\n\n    let heightMapSize = new Float32Array([1 / columns, 1 / rows]);\n\n    this.terrainRenderData = {\n      rows,\n      columns,\n      centerOffset,\n      vertexBuffer,\n      faceBuffer,\n      heightMap,\n      instanceBuffer,\n      instanceCount,\n      cornerTextures,\n      textureBuffer,\n      variationBuffer,\n      heightMapSize,\n      cliffHeightMap,\n      waterHeightMap,\n      waterBuffer,\n    };\n\n    this.terrainReady = true;\n    this.anyReady = true;\n\n    this.createWaves();\n\n    let cliffPromises = Object.entries(cliffs).map((cliff) => {\n      let path = cliff[0];\n      let {locations, textures} = cliff[1];\n\n      return this.loadGeneric(this.mapPathSolver(path)[0], 'arrayBuffer', undefined, path)\n        .whenLoaded()\n        .then((resource) => {\n          return new TerrainModel(gl, resource.data, locations, textures, this);\n        });\n    });\n\n    this.cliffModels = await Promise.all(cliffPromises);\n    this.cliffModels.sort((a, b) => !a.textures > !b.textures);\n    this.cliffsReady = true;\n  }\n\n  calculateRamps() {\n    let corners = this.corners;\n    let [columns, rows] = this.mapSize;\n\n    // There are no C or X ramps because they're not supported in city tileset\n    let ramps = [\n      \"AAHL\",\n      \"AALH\",\n      \"ABHL\",\n      \"AHLA\",\n      \"ALHA\",\n      \"ALHB\",\n      \"BALH\",\n      \"BHLA\",\n      \"HAAL\",\n      \"HBAL\",\n      \"HLAA\",\n      \"HLAB\",\n      \"LAAH\",\n      \"LABH\",\n      \"LHAA\",\n      \"LHBA\",\n    ];\n\n    // Adjust terrain height inside ramps (set rampAdjust)\n    for (let y = 1; y < rows - 1; ++y) {\n      for (let x = 1; x < columns - 1; ++x) {\n        let o = corners[y][x];\n        if (!o.ramp) continue;\n        let a = corners[y - 1][x - 1];\n        let b = corners[y][x - 1];\n        let c = corners[y + 1][x - 1];\n        let d = corners[y + 1][x];\n        let e = corners[y + 1][x + 1];\n        let f = corners[y][x + 1];\n        let g = corners[y - 1][x + 1];\n        let h = corners[y - 1][x];\n        let base = o.layerHeight;\n        if ((b.ramp && f.ramp) || (d.ramp && h.ramp)) {\n          let adjust = 0;\n          if (b.ramp && f.ramp) {\n            adjust = Math.max(adjust, (b.layerHeight + f.layerHeight) / 2 - base);\n          }\n          if (d.ramp && h.ramp) {\n            adjust = Math.max(adjust, (d.layerHeight + h.layerHeight) / 2 - base);\n          }\n          if (a.ramp && e.ramp) {\n            adjust = Math.max(adjust, ((a.layerHeight + e.layerHeight) / 2 - base) / 2);\n          }\n          if (c.ramp && g.ramp) {\n            adjust = Math.max(adjust, ((c.layerHeight + g.layerHeight) / 2 - base) / 2);\n          }\n          o.rampAdjust = adjust;\n        }\n      }\n    }\n\n    // Calculate ramp tiles\n    for (let y = 0; y < rows - 1; ++y) {\n      for (let x = 0; x < columns - 1; ++x) {\n        let a = corners[y][x];\n        let b = corners[y + 1][x];\n        let c = corners[y][x + 1];\n        let d = corners[y + 1][x + 1];\n        if (!a.rampType && y < rows - 2) {\n          let e = corners[y + 2][x];\n          let f = corners[y + 2][x + 1];\n          let ae = Math.min(a.layerHeight, e.layerHeight), cf = Math.min(c.layerHeight, f.layerHeight);\n          if (b.layerHeight === ae && d.layerHeight === cf) {\n            let base = Math.min(ae, cf);\n            if (a.ramp === b.ramp && a.ramp === e.ramp && c.ramp === d.ramp && c.ramp === f.ramp && a.ramp !== c.ramp) {\n              let name = this.rampFileName(e, f, c, a, base);\n              if (ramps.includes(name)) {\n                a.rampName = name;\n                a.rampType = 1;\n                b.rampType = -1;\n              }\n            }\n          }\n        }\n        if (!a.rampType && x < columns - 2) {\n          let e = corners[y][x + 2];\n          let f = corners[y + 1][x + 2];\n          let ae = Math.min(a.layerHeight, e.layerHeight), bf = Math.min(b.layerHeight, f.layerHeight);\n          if (c.layerHeight === ae && d.layerHeight === bf) {\n            let base = Math.min(ae, bf);\n            if (a.ramp === c.ramp && a.ramp === e.ramp && b.ramp === d.ramp && b.ramp === f.ramp && a.ramp !== b.ramp) {\n              let name = this.rampFileName(b, f, e, a, base);\n              if (ramps.includes(name)) {\n                a.rampName = name;\n                a.rampType = 2;\n                c.rampType = -1;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Calculate cliff tiles\n    for (let y = 0; y < rows - 1; ++y) {\n      for (let x = 0; x < columns - 1; ++x) {\n        let a = corners[y][x];\n        let b = corners[y + 1][x];\n        let c = corners[y][x + 1];\n        let d = corners[y + 1][x + 1];\n        if (a.rampAdjust || b.rampAdjust || c.rampAdjust || d.rampAdjust) {\n          continue;\n        }\n        let base = a.layerHeight;\n        if (b.layerHeight !== base || c.layerHeight !== base || d.layerHeight !== base) {\n          a.cliff = true;\n        }\n      }\n    }\n\n    // Fix ramp cliffTexture\n    for (let y = 0; y < rows - 1; ++y) {\n      for (let x = 0; x < columns - 1; ++x) {\n        let a = corners[y][x], b;\n        if (a.rampType && a.rampType > 0) {\n          let x1 = x + 1, y1 = y + 1;\n          if (a.rampType === 1) {\n            b = corners[y + 1][x];\n            y1 = y + 2;\n          } else {\n            b = corners[y][x + 1];\n            x1 = x + 2;\n          }\n          let x0 = Math.max(0, x - 1), y0 = Math.max(0, y - 1);\n          x1 = Math.min(x1, columns - 1);\n          y1 = Math.min(y1, rows - 1);\n          let tex = null;\n          for (let ty = y0; ty <= y1 && tex == null; ++ty) {\n            for (let tx = x0; tx <= x1; ++tx) {\n              let tile = corners[ty][tx];\n              if (tile.cliff && !tile.rampType) {\n                tex = tile.cliffTexture;\n                break;\n              }\n            }\n          }\n          if (tex != null) {\n            a.cliffTexture = b.cliffTexture = tex;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {number} bottomLeftLayer\n   * @param {number} bottomRightLayer\n   * @param {number} topLeftLayer\n   * @param {number} topRightLayer\n   * @param {number} base\n   * @return {string}\n   */\n  cliffFileName(bottomLeftLayer, bottomRightLayer, topLeftLayer, topRightLayer, base) {\n    return String.fromCharCode(65 + topLeftLayer - base) +\n      String.fromCharCode(65 + topRightLayer - base) +\n      String.fromCharCode(65 + bottomRightLayer - base) +\n      String.fromCharCode(65 + bottomLeftLayer - base);\n  }\n\n  rampFileName(a, b, c, d, base) {\n    let ah = a.layerHeight - base, bh = b.layerHeight - base, ch = c.layerHeight - base, dh = d.layerHeight - base;\n    if (ah > 2 || bh > 2 || ch > 2 || dh > 2) {\n      return \"\";\n    }\n    let ramp = \"LHX\", cliff = \"ABC\";\n    return (a.ramp ? ramp : cliff)[ah] + (b.ramp ? ramp : cliff)[bh] + (c.ramp ? ramp : cliff)[ch] + (d.ramp ? ramp : cliff)[dh];\n  }\n\n  /**\n   * Creates a shared texture that holds all of the tileset textures.\n   * Each tileset is flattend to a single row of tiles, such that indices 0-15 are the normal part, and indices 16-31 are the extended part.\n   */\n  createTilesetsAndWaterTextures() {\n    let tilesets = this.tilesetTextures;\n    let tilesetsCount = tilesets.length;\n    let canvas = document.createElement('canvas');\n    let ctx = canvas.getContext('2d');\n\n    canvas.width = 2048;\n    canvas.height = 64 * (tilesetsCount + 1); // 1 is added for a black tileset, to remove branches from the fragment shader, at the cost of 512Kb.\n\n    for (let tileset = 0; tileset < tilesetsCount; tileset++) {\n      let imageData = tilesets[tileset].imageData;\n      if (!imageData) {\n        continue;\n      }\n\n      for (let variation = 0; variation < 16; variation++) {\n        let x = (variation % 4) * 64;\n        let y = ((variation / 4) | 0) * 64;\n\n        ctx.putImageData(imageData, variation * 64 - x, (tileset + 1) * 64 - y, x, y, 64, 64);\n      }\n\n      if (imageData.width === 512) {\n        for (let variation = 0; variation < 16; variation++) {\n          let x = 256 + (variation % 4) * 64;\n          let y = ((variation / 4) | 0) * 64;\n\n          ctx.putImageData(imageData, 1024 + variation * 64 - x, (tileset + 1) * 64 - y, x, y, 64, 64);\n        }\n      }\n    }\n\n    let gl = this.gl;\n    let texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, canvas);\n\n    this.tilesetsTexture = texture;\n\n    canvas.height = 128 * 3; // up to 48 frames.\n\n    let waterTextures = this.waterTextures;\n\n    for (let i = 0, l = waterTextures.length; i < l; i++) {\n      let x = i % 16;\n      let y = (i / 16) | 0;\n\n      ctx.putImageData(waterTextures[i].imageData, x * 128, y * 128);\n    }\n\n    let waterTexture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, waterTexture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, canvas);\n\n    this.waterTexture = waterTexture;\n  }\n\n  /**\n   * @param {number} groundTexture\n   * @param {number} variation\n   * @return {number}\n   */\n  getVariation(groundTexture, variation) {\n    let texture = this.tilesetTextures[groundTexture];\n\n    // Extended?\n    if (texture.width > texture.height) {\n      if (variation < 16) {\n        return 16 + variation;\n      } else if (variation === 16) {\n        return 15;\n      } else {\n        return 0;\n      }\n    } else {\n      if (variation === 0) {\n        return 0;\n      } else {\n        return 15;\n      }\n    }\n  }\n\n  /**\n   * Is the corner at the given column and row a cliff?\n   *\n   * @param {number} column\n   * @param {number} row\n   * @return {boolean}\n   */\n  isCliff(column, row) {\n    return !!this.corners[row][column].cliff;\n  }\n\n  /**\n   * Is the tile at the given column and row water?\n   *\n   * @param {number} column\n   * @param {number} row\n   * @return {boolean}\n   */\n  isWater(column, row) {\n    let corners = this.corners;\n\n    return corners[row][column].water || corners[row][column + 1].water || corners[row + 1][column].water || corners[row + 1][column + 1].water;\n  }\n\n  /**\n   * Given a cliff index, get its ground texture index.\n   * This is an index into the tilset textures.\n   *\n   * @param {number} whichCliff\n   * @return {number}\n   */\n  cliffGroundIndex(whichCliff) {\n    let whichTileset = this.cliffTilesets[whichCliff].groundTile;\n    let tilesets = this.tilesets;\n\n    for (let i = 0, l = tilesets.length; i < l; i++) {\n      if (tilesets[i].tileID === whichTileset) {\n        return i;\n      }\n    }\n  }\n\n  /**\n   * Get the ground texture of a corner, whether it's normal ground, a cliff, or a blighted corner.\n   *\n   * @param {number} column\n   * @param {number} row\n   * @return {number}\n   */\n  cornerTexture(column, row) {\n    let corners = this.corners;\n    let columns = this.columns;\n    let rows = this.rows;\n\n    for (let y = -1; y < 1; y++) {\n      for (let x = -1; x < 1; x++) {\n        if (column + x > 0 && column + x < columns - 1 && row + y > 0 && row + y < rows - 1) {\n          let corner = corners[row + y][column + x];\n          if (this.isCliff(column + x, row + y) || corner.rampType) {\n            let texture = corner.cliffTexture;\n\n            if (texture === 15) {\n              texture = 1;\n            }\n\n            return this.cliffGroundIndex(texture);\n          }\n        }\n      }\n    }\n\n    let corner = corners[row][column];\n\n    // Is this corner blighted?\n    if (corner.blight) {\n      return this.blightTextureIndex;\n    }\n\n    return corner.groundTexture;\n  }\n\n  load(src) {\n    return super.load(src, this.mapPathSolver);\n  }\n\n  /**\n   * \n   * @param {*} dataMap \n   * @param {*} metadataMap \n   * @param {*} modificationFile \n   */\n  applyModificationFile(dataMap, metadataMap, modificationFile) {\n    if (modificationFile) {\n      // Modifications to built-in objects\n      this.applyModificationTable(dataMap, metadataMap, modificationFile.originalTable);\n\n      // Declarations of user-defined objects\n      this.applyModificationTable(dataMap, metadataMap, modificationFile.customTable);\n    }\n  }\n\n  /**\n   * \n   * @param {*} dataMap \n   * @param {*} metadataMap \n   * @param {*} modificationTable \n   */\n  applyModificationTable(dataMap, metadataMap, modificationTable) {\n    for (let modificationObject of modificationTable.objects) {\n      let row = dataMap.getRow(modificationObject.oldId);\n      let newId = modificationObject.newId;\n\n      // If this is a custom object, and it's not in the mapped data, copy the standard object.\n      if (modificationObject.newId !== '' && !dataMap.getRow(newId)) {\n        dataMap.setRow(modificationObject.newId, row = {...row});\n      }\n\n      for (let modification of modificationObject.modifications) {\n        let metadata = metadataMap.getRow(modification.id);\n\n        if (metadata) {\n          row[metadata.field] = modification.value;\n        } else {\n          console.warn('Unknown modification ID', modification.id);\n        }\n      }\n    }\n  }\n\n  /**\n   * \n   * @param {Float32Array} out\n   * @param {number} x\n   * @param {number} y\n   * @return {out}\n   */\n  groundNormal(out, x, y) {\n    let centerOffset = this.centerOffset;\n    let mapSize = this.mapSize;\n\n    x = (x - centerOffset[0]) / 128;\n    y = (y - centerOffset[1]) / 128;\n\n    let cellX = x | 0;\n    let cellY = y | 0;\n\n    // See if this coordinate is in the map\n    if (cellX >= 0 && cellX < mapSize[0] - 1 && cellY >= 0 && cellY < mapSize[1] - 1) {\n      // See http://gamedev.stackexchange.com/a/24574\n      let corners = this.corners;\n      let bottomLeft = corners[cellY][cellX].groundHeight;\n      let bottomRight = corners[cellY][cellX + 1].groundHeight;\n      let topLeft = corners[cellY + 1][cellX].groundHeight;\n      let topRight = corners[cellY + 1][cellX + 1].groundHeight;\n      let sqX = x - cellX;\n      let sqY = y - cellY;\n\n      if (sqX + sqY < 1) {\n        vec3.set(normalHeap1, 1, 0, bottomRight - bottomLeft);\n        vec3.set(normalHeap2, 0, 1, topLeft - bottomLeft);\n      } else {\n        vec3.set(normalHeap1, -1, 0, topRight - topLeft);\n        vec3.set(normalHeap2, 0, 1, topRight - bottomRight);\n      }\n\n      vec3.normalize(out, vec3.cross(out, normalHeap1, normalHeap2));\n    } else {\n      vec3.set(out, 0, 0, 1);\n    }\n\n    return out;\n  }\n\n  heightAt(x, y) {\n    let centerOffset = this.centerOffset;\n    let mapSize = this.mapSize;\n\n    x = (x - centerOffset[0]) / 128;\n    y = (y - centerOffset[1]) / 128;\n\n    let cellX = x | 0;\n    let cellY = y | 0;\n\n    if (cellX >= 0 && cellX < mapSize[0] - 1 && cellY >= 0 && cellY < mapSize[1] - 1) {\n      let corners = this.corners;\n      const ht = c => c.groundHeight + c.layerHeight - 2;\n      let bottomLeft = ht(corners[cellY][cellX]);\n      let bottomRight = ht(corners[cellY][cellX + 1]);\n      let topLeft = ht(corners[cellY + 1][cellX]);\n      let topRight = ht(corners[cellY + 1][cellX + 1]);\n      let sqX = x - cellX;\n      let sqY = y - cellY;\n      let height;\n\n      if (sqX + sqY < 1) {\n        height = bottomLeft + (bottomRight - bottomLeft) * sqX + (topLeft - bottomLeft) * sqY;\n      } else {\n        height = topRight + (bottomRight - topRight) * (1 - sqY) + (topLeft - topRight) * (1 - sqX);\n      }\n\n      return height * 128;\n    }\n\n    return 0;\n  }\n\n  inPlayableArea(x, y) {\n    x = (x - this.centerOffset[0]) / 128.0;\n    y = (y - this.centerOffset[1]) / 128.0;\n    if (x < this.mapBounds[0]) return false;\n    if (x >= this.mapSize[0] - this.mapBounds[1] - 1) return false;\n    if (y < this.mapBounds[2]) return false;\n    if (y >= this.mapSize[1] - this.mapBounds[3] - 1) return false;\n    return !this.corners[Math.floor(y)][Math.floor(x)].boundary;\n  }\n\n  addShadow(file, x, y) {\n    if (!this.shadows[file]) {\n      let path = `ReplaceableTextures\\\\Shadows\\\\${file}.blp`;\n      this.shadows[file] = [];\n      this.shadowTextures[file] = this.load(path);\n    }\n    this.shadows[file].push({x, y});\n  }\n\n  async initShadows() {\n    await this.whenLoaded(Object.values(this.shadowTextures));\n\n    let gl = this.gl;\n    let centerOffset = this.centerOffset;\n    let [columns, rows] = this.mapSize;\n    columns = (columns - 1) * 4;\n    rows = (rows - 1) * 4;\n\n    const shadowSize = columns * rows;\n    const shadowData = new Uint8Array(columns * rows);\n    const source = this.mapMpq.get('war3map.shd');\n    if (source) {\n      let buffer = source.arrayBuffer();\n      if (buffer.byteLength >= shadowSize) {\n        buffer = new Uint8Array(buffer);\n        for (let i = 0; i < shadowSize; ++i) {\n          shadowData[i] = buffer[i] / 2;\n        }\n      }\n    }\n\n    for (let [file, texture] of Object.entries(this.shadowTextures)) {\n      if (!texture.originalData) {\n        continue;\n      }\n      let {data, width, height} = texture.originalData;\n      let ox = Math.round(width * 0.3), oy = Math.round(height * 0.7);\n\n      for (let location of this.shadows[file]) {\n        let x0 = Math.floor((location.x - centerOffset[0]) / 32.0) - ox;\n        let y0 = Math.floor((location.y - centerOffset[1]) / 32.0) + oy;\n        for (let y = 0; y < height; ++y) {\n          if (y0 - y < 0 || y0 - y >= rows) {\n            continue;\n          }\n          for (let x = 0; x < width; ++x) {\n            if (x0 + x < 0 || x0 + x >= columns) {\n              continue;\n            }\n            if (data[(y * width + x) * 4 + 3]) {\n              shadowData[(y0 - y) * columns + x0 + x] = 128;\n            }\n          }\n        }\n      }\n    }\n\n    const outsideArea = 204;\n    let x0 = this.mapBounds[0] * 4, x1 = (this.mapSize[0] - this.mapBounds[1] - 1) * 4,\n        y0 = this.mapBounds[2] * 4, y1 = (this.mapSize[1] - this.mapBounds[3] - 1) * 4;\n    for (let y = y0; y < y1; ++y) {\n      for (let x = x0; x < x1; ++x) {\n        let c = this.corners[y >> 2][x >> 2];\n        if (c.boundary) {\n          shadowData[y * columns + x] = outsideArea;\n        }\n      }\n    }\n    for (let y = 0; y < rows; ++y) {\n      for (let x = 0; x < x0; ++x) {\n        shadowData[y * columns + x] = outsideArea;\n      }\n      for (let x = x1; x < columns; ++x) {\n        shadowData[y * columns + x] = outsideArea;\n      }\n    }\n    for (let x = x0; x < x1; ++x) {\n      for (let y = 0; y < y0; ++y) {\n        shadowData[y * columns + x] = outsideArea;\n      }\n      for (let y = y1; y < rows; ++y) {\n        shadowData[y * columns + x] = outsideArea;\n      }\n    }\n\n    let shadowMap = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, shadowMap);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.R8, columns, rows, 0, gl.RED, gl.UNSIGNED_BYTE, shadowData);\n    this.shadowMap = shadowMap;\n\n    this.shadowsReady = true;\n  }\n\n  createWaves() {\n    let [columns, rows] = this.mapSize;\n    let corners = this.corners;\n    let wavesDepth = 25 / 128;\n    let centerOffset = this.centerOffset;\n    let waterRow = this.waterData.getRow(`${this.tileset}Sha`);\n\n    let wavesCliff = (this.mapFlags & 0x0800);\n    let wavesRolling = (this.mapFlags & 0x1000);\n\n    let shoreline = `${waterRow.shoreDir}\\\\${waterRow.shoreSFile}\\\\${waterRow.shoreSFile}0.mdx`;\n    let outsideCorner = `${waterRow.shoreDir}\\\\${waterRow.shoreOCFile}\\\\${waterRow.shoreOCFile}0.mdx`;\n    let insideCorner = `${waterRow.shoreDir}\\\\${waterRow.shoreICFile}\\\\${waterRow.shoreICFile}0.mdx`;\n\n    let rotation = (a, b, c) => {\n      if (a) return -3 * Math.PI / 4;\n      if (b) return -Math.PI / 4;\n      if (c) return Math.PI / 4;\n      return 3 * Math.PI / 4;\n    };\n    let rotation2 = (a, b, c, d) => {\n      if (a && b) return -Math.PI / 2;\n      if (b && c) return 0;\n      if (c && d) return Math.PI / 2;\n      if (a && d) return Math.PI;\n      return null;\n    };\n\n    let location = new Float32Array(3);\n    let models = {};\n\n    let addInstance = (path, rotation) => {\n      if (!models[path]) {\n        models[path] = this.load(path);\n      }\n      let instance = models[path].addInstance();\n      instance.move(location);\n      instance.rotateLocal(quat.setAxisAngle(quat.create(), VEC3_UNIT_Z, rotation));\n      instance.setScene(this.scene);\n      if (!this.inPlayableArea(location[0], location[1])) {\n        instance.setVertexColor([51, 51, 51]);\n      }\n      standOnRepeat(instance);\n    };\n\n    for (let y = 0; y < rows - 1; ++y) {\n      for (let x = 0; x < columns - 1; ++x) {\n        let a = corners[y][x], b = corners[y][x + 1], c = corners[y + 1][x + 1], d = corners[y + 1][x];\n        if (a.water || b.water || c.water || c.water) {\n          let isCliff = (a.layerHeight !== b.layerHeight || a.layerHeight !== c.layerHeight || a.layerHeight !== d.layerHeight);\n          if (isCliff && !wavesCliff) {\n            continue;\n          }\n          if (!isCliff && !wavesRolling) {\n            continue;\n          }\n          let ad = (a.depth > wavesDepth ? 1 : 0);\n          let bd = (b.depth > wavesDepth ? 1 : 0);\n          let cd = (c.depth > wavesDepth ? 1 : 0);\n          let dd = (d.depth > wavesDepth ? 1 : 0);\n          let count = (ad + bd + cd + dd);\n          location[0] = x * 128.0 + centerOffset[0] + 64.0;\n          location[1] = y * 128.0 + centerOffset[1] + 64.0;\n          location[2] = ((a.waterHeight + b.waterHeight + c.waterHeight + d.waterHeight) / 4.0 + this.waterHeightOffset) * 128.0 + 1.0;\n          if (count === 1) {\n            addInstance(insideCorner, rotation(ad, bd, cd, dd));\n          } else if (count === 2) {\n            let rot = rotation2(ad, bd, cd, dd);\n            if (rot != null) {\n              addInstance(shoreline, rot);\n            }\n          } else if (count === 3) {\n            addInstance(outsideCorner, rotation(!ad, !bd, !cd, !dd) + Math.PI);\n          }\n        }\n      }\n    }\n  }\n\n  deselect() {\n    if (this.selModels && this.selModels.length) {\n      this.selModels.forEach(model => {\n        let idx = this.uberSplatModels.indexOf(model);\n        if (idx >= 0) {\n          this.uberSplatModels.splice(idx, 1);\n        }\n      });\n      this.selModels = [];\n    }\n    this.selected = [];\n  }\n\n  doSelectUnits(units) {\n    this.deselect();\n    if (!units.length) {\n      return;\n    }\n\n    let splats = {};\n\n    this.selected = units.filter(({unit}) => {\n      let row = this.unitsData.find(row => row.id === unit.id);\n      if (!row) return false;\n      row = row.data;\n      let selScale = parseFloat(row.scale || \"0\");\n      if (!selScale) return false;\n\n      let radius = 36 * selScale, path;\n      if (radius < 100) {\n        path = 'ReplaceableTextures\\\\Selection\\\\SelectionCircleSmall.blp';\n      } if (radius < 300) {\n        path = 'ReplaceableTextures\\\\Selection\\\\SelectionCircleMed.blp';\n      } else {\n        path = 'ReplaceableTextures\\\\Selection\\\\SelectionCircleLarge.blp';\n      }\n      if (!splats[path]) {\n        splats[path] = [];\n      }\n      let [x, y] = unit.location;\n      let z = parseFloat(row.selZ || \"0\");\n      splats[path].push(x - radius, y - radius, x + radius, y + radius, z + 5);\n\n      return true;\n    });\n\n    let models = this.selModels = [];\n    Object.entries(splats).forEach(([path, locations]) => {\n      this.load(path).whenLoaded().then(tex => {\n        if (this.selModels !== models) return;\n        let model = new SplatModel(this.gl, tex, locations, this.centerOffset);\n        model.color = [0, 1, 0, 1];\n        this.selModels.push(model);\n        this.uberSplatModels.push(model);\n      });\n    });\n  }\n\n  selectUnit(x, y, toggle) {\n    let ray = new Float32Array(6);\n    this.camera.screenToWorldRay(ray, [x, y]);\n    let dir = normalHeap1;\n    dir[0] = ray[3] - ray[0];\n    dir[1] = ray[4] - ray[1];\n    dir[2] = ray[5] - ray[2];\n    vec3.normalize(dir, dir);\n    let eMid = vec3.create(), eSize = vec3.create(), rDir = vec3.create();\n\n    let entity = null;\n    let entDist = 1e+6;\n    this.units.forEach(ent => {\n      let {instance, location, radius} = ent;\n      vec3.set(eMid, 0, 0, radius / 2);\n      vec3.set(eSize, radius, radius, radius);\n\n      vec3.add(eMid, eMid, location);\n      vec3.sub(eMid, eMid, ray);\n      vec3.div(eMid, eMid, eSize);\n      vec3.div(rDir, dir, eSize);\n      let dlen = vec3.sqrLen(rDir);\n\n      let dp = Math.max(0, vec3.dot(rDir, eMid)) / dlen;\n      if (dp > entDist) return;\n      vec3.scale(rDir, rDir, dp);\n      if (vec3.sqrDist(rDir, eMid) < 1.0) {\n        entity = ent;\n        entDist = dp;\n      }\n    });\n    let sel = [];\n    if (entity) {\n      if (toggle) {\n        sel = this.selected.slice();\n        const idx = sel.indexOf(entity);\n        if (idx >= 0) {\n          sel.splice(idx, 1);\n        } else {\n          sel.push(entity);\n        }\n      } else {\n        sel = [entity];\n      }\n    }\n    this.doSelectUnits(sel);\n    return sel;\n  }\n\n  selectUnits(x0, y0, x1, y1) {\n    let sp = new Float32Array(2);\n    let sel = this.units.filter(ent => {\n      let {location, radius, unit} = ent;\n      let row = this.unitsData.find(row => row.id === unit.id);\n      if (!row) return false;\n      row = row.data;\n      let [x, y] = unit.location;\n      let z = parseFloat(row.selZ || \"0\") + this.heightAt(x, y);\n      this.camera.worldToScreen(sp, [x, y, z]);\n      if (sp[0] >= x0 && sp[0] < x1 && sp[1] >= y0 && sp[1] < y1) {\n        return true;\n      }\n      return false;\n    });\n    this.doSelectUnits(sel);\n    return sel;\n  }\n}\n\n/*\n  */\n","import MapViewer from './viewer';\n\nexport default {\n  MapViewer,\n};\n","import parsers from './parsers';\nimport viewer from './viewer';\n\nexport default {\n  version: '4.5.8',\n  parsers,\n  viewer,\n};\n","import * as glMatrix from 'gl-matrix';\nimport ModelViewer from './viewer';\nimport Scene from './scene';\nimport Camera from './camera';\nimport handlers from './handlers';\n\nexport default {\n  glMatrix,\n  ModelViewer,\n  Scene,\n  Camera,\n  handlers,\n};\n","import geo from './geo';\nimport mdx from './mdx';\nimport imagetexture from './imagetexture';\nimport w3x from './w3x';\n\nexport default {\n  geo,\n  mdx,\n  imagetexture,\n  w3x,\n};\n","import React from 'react';\nimport ModelViewer from 'mdx';\nimport { vec3, mat4 } from 'gl-matrix';\nimport { AutoSizer } from 'react-virtualized';\nimport AppCache from 'data/cache';\nimport pathHash from 'data/hash';\n\nconst v3pos = vec3.create(), v3dir = vec3.create(), v3up = vec3.create(), v3sub = vec3.create();\nconst m4rot = mat4.create();\nconst f32rot = new Float32Array(1);\n\nconst TeamColors = [\n  \"Red\",\n  \"Blue\",\n  \"Teal\",\n  \"Purple\",\n  \"Yellow\",\n  \"Orange\",\n  \"Green\",\n  \"Pink\",\n  \"Gray\",\n  \"Light Blue\",\n  \"Dark Green\",\n  \"Brown\",\n  \"Maroon\",\n  \"Navy\",\n  \"Turquoise\",\n  \"Violet\",\n  \"Wheat\",\n  \"Peach\",\n  \"Mint\",\n  \"Lavender\",\n  \"Coal\",\n  \"Snow\",\n  \"Emerald\",\n  \"Peanut\",\n  \"Black\",\n];\n\nexport default class FileModelView extends React.PureComponent {\n  state = {\n    objects: [],\n    errors: [],\n    current: 0,\n    teamColor: 0\n  }\n\n  static contextType = AppCache.DataContext;\n\n  yaw = -Math.PI / 2;\n  pitch = -Math.PI / 4;\n  distance = 400;\n  center = vec3.create();\n  minDistance = 8;\n  maxDistance = 3000;\n\n  freeCamera() {\n    if (this.scene) {\n      this.scene.camera.setRotationAroundAngles(this.yaw, this.pitch, this.center, this.distance);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.frame) {\n      cancelAnimationFrame(this.frame);\n      delete this.frame;\n    }\n    this.removeEvents();\n  }\n\n  onMouseDown = e => {\n    document.addEventListener(\"mousemove\", this.onMouseMove, true);\n    document.addEventListener(\"mouseup\", this.onMouseUp, true);\n    this.dragPos = {x: e.clientX, y: e.clientY};\n    e.preventDefault();\n  }\n  onMouseMove = e => {\n    if (this.dragPos && this.canvas) {\n      const dx = e.clientX - this.dragPos.x,\n        dy = e.clientY - this.dragPos.y;\n      const dim = (this.canvas.width + this.canvas.height) / 2;\n      this.yaw += dx * 2 * Math.PI / dim;\n      this.pitch += dy * 2 * Math.PI / dim;\n      while (this.yaw > Math.PI) {\n        this.yaw -= Math.PI * 2;\n      }\n      while (this.yaw < -Math.PI) {\n        this.yaw += Math.PI * 2;\n      }\n      this.pitch = Math.min(this.pitch, 0);\n      this.pitch = Math.max(this.pitch, -Math.PI);\n      this.dragPos = {x: e.clientX, y: e.clientY};\n\n      this.setCamera({target: {value: -1}});\n    }\n    e.preventDefault();\n  }\n  onMouseUp = e => {\n    delete this.dragPos;\n    this.removeEvents();\n    e.preventDefault();\n  }\n  onMouseWheel = e => {\n    if (e.deltaY > 0) {\n      this.distance = Math.min(this.distance * 1.2, this.maxDistance);\n    } else {\n      this.distance = Math.max(this.distance / 1.2, this.minDistance);\n    }\n    this.setCamera({target: {value: -1}});\n  }\n\n  removeEvents() {\n    document.removeEventListener(\"mousemove\", this.onMouseMove, true);\n    document.removeEventListener(\"mouseup\", this.onMouseUp, true);\n  }\n\n  setObject = e => {\n    let index = parseInt(e.target.value, 10);\n    if (isNaN(index)) index = 0;\n    this.setState(state => {\n      if (index !== state.current && state.objects[index]) {\n        this.scene.removeInstance(state.objects[state.current].instance);\n        this.scene.addInstance(state.objects[index].instance);\n        return {current: index};\n      }\n    });\n  }\n\n  setSequence = e => {\n    let seq = parseInt(e.target.value, 10);\n    if (isNaN(seq)) seq = -1;\n    this.setState(state => {\n      const obj = state.objects[state.current];\n      if (obj && obj.sequence !== seq) {\n        obj.instance.setSequence(seq);\n        const objects = state.objects.slice();\n        objects[state.current] = {...obj, sequence: seq};\n        return {objects};\n      }\n    });\n  }\n\n  setCamera = e => {\n    let cam = parseInt(e.target.value, 10);\n    if (isNaN(cam)) cam = -1;\n    this.setState(state => {\n      const obj = state.objects[state.current];\n      if (obj && obj.camera !== cam) {\n        const objects = state.objects.slice();\n        objects[state.current] = {...obj, camera: cam};\n        return {objects};\n      }\n    });\n  }\n\n  setTeamColor = e => {\n    let color = parseInt(e.target.value, 10);\n    if (isNaN(color)) color = 0;\n    this.setState({teamColor: color}, () => {\n      this.state.objects.forEach(obj => obj.instance.setTeamColor(color));\n    });\n  }\n\n  animate = ts => {\n    this.frame = requestAnimationFrame(this.animate);\n    this.scene.camera.viewport([0, 0, this.canvas.width, this.canvas.height]);\n\n    const object = this.state.objects[this.state.current];\n    const cam = object && object.model.cameras[object.camera];\n    if (cam) {\n      cam.getPositionTranslation(v3pos, object.instance);\n      cam.getTargetTranslation(v3dir, object.instance);\n      cam.getRotation(f32rot, object.instance);\n      vec3.sub(v3sub, v3dir, v3pos);\n      vec3.normalize(v3sub, v3sub);\n      mat4.fromRotation(m4rot, f32rot[0], v3sub);\n      vec3.set(v3up, 0, 0, 1);\n      vec3.transformMat4(v3up, v3up, m4rot);\n      const aspect = this.canvas.width / this.canvas.height;\n      const vFov = Math.atan(Math.tan(cam.fieldOfView / 2) / aspect) * 2;\n      this.scene.camera.perspective(vFov, aspect, cam.nearClippingPlane, cam.farClippingPlane);\n      this.scene.camera.moveToAndFace(v3pos, v3dir, v3up);\n    } else {\n      this.scene.camera.perspective(Math.PI / 4, this.canvas.width / this.canvas.height, this.minDistance, this.maxDistance);\n      this.freeCamera();\n    }\n\n    this.viewer.updateAndRender();\n  }\n\n  modelLoaded(model, index) {\n    if (!model.ok) {\n      return;\n    }\n    this.setState(state => {\n      const instance = model.addInstance();\n      index = Math.min(index, state.objects.length);\n      if (index === state.current) {\n        if (state.objects[index]) {\n          this.scene.removeInstance(state.objects[index].instance);\n        }\n        this.scene.addInstance(instance);\n        if (model.bounds && model.bounds.radius > 0.05) {\n          this.minDistance = Math.min(500, model.bounds.radius * 0.2);\n          this.maxDistance = this.minDistance * 1000;\n          this.distance = this.minDistance * 10;\n        }\n      }\n      instance.setTeamColor(state.teamColor);\n      if (model.sequences.length > 0) {\n        instance.setSequence(0);\n      }\n      instance.setSequenceLoopMode(2);\n      const objects = [...state.objects];\n      objects.splice(index, 0, {\n        model,\n        instance,\n        sequence: model.sequences.length ? 0 : -1,\n        camera: model.cameras.length ? 0 : -1,\n      });\n      return {objects};\n    });\n  }\n\n  componentDidMount() {\n    if (!this.canvas) {\n      return;\n    }\n    const canvas = this.canvas;\n    this.viewer = new ModelViewer.viewer.ModelViewer(canvas);\n    this.viewer.gl.clearColor(0.3, 0.3, 0.3, 1);\n    this.viewer.on('error', (target, error, reason) => {\n      if (error === \"FailedToFetch\") {\n        if (target.isPortrait) {\n          return;\n        }\n        this.setState(({errors}) => ({errors: [...errors, `Failed to load ${target.path}`]}));\n      }\n    });\n    this.scene = this.viewer.addScene();\n    this.viewer.addHandler(ModelViewer.viewer.handlers.mdx);\n\n    const data = this.context;\n\n    const hash = (this.props.path ? pathHash(this.props.path) : this.props.id);\n\n    const resolvePath = path => {\n      const ext = typeof path === \"string\" ? path.substr(path.lastIndexOf(\".\")).toLowerCase() : \".mdx\";\n      if ([\".blp\", \".dds\", \".gif\", \".jpg\", \".jpeg\", \".png\", \".tga\"].indexOf(ext) >= 0) {\n        return [data.image(path), \".png\", true];\n      } else {\n        const bin = data.binary(path);\n        if (bin) {\n          return [bin.data.buffer, ext, false];\n        } else {\n          return [data.cache.binary(path), ext, true];\n        }\n      }\n    };\n\n    this.viewer.load(hash, resolvePath).whenLoaded().then(model => this.modelLoaded(model, 0));\n    if (this.props.path) {\n      const portrait = this.props.path.replace(/\\.mdx$/i, \"_portrait.mdx\");\n      const model = this.viewer.load(portrait, resolvePath);\n      model.isPortrait = true;\n      model.whenLoaded().then(model => this.modelLoaded(model, 1));\n    }\n\n    this.frame = requestAnimationFrame(this.animate);\n  }\n\n  render() {\n    const { errors, objects, current, teamColor } = this.state;\n    const object = objects[current];\n    return (\n      <div className=\"FileModel\">\n        <AutoSizer>\n          {({width, height}) => (\n            <canvas\n            onMouseDown={this.onMouseDown}\n            onWheel={this.onMouseWheel}\n            ref={n => this.canvas = n}\n            width={Math.max(width, 100)}\n            height={Math.max(height, 100)}\n            />\n          )}\n        </AutoSizer>\n        <ul className=\"log\">\n          {errors.map((err, idx) => <li key={idx} className=\"error\">{err}</li>)}\n        </ul>\n        <div className=\"credits\">\n          Model viewer by <a href=\"https://github.com/flowtsohg/mdx-m3-viewer\" target=\"_blank\">flowtsohg@github</a>\n        </div>\n        {objects.length > 0 && (\n          <div className=\"controls\">\n            {objects.length > 1 && <label>Model:\n              <select value={current} onChange={this.setObject}>\n                {objects.map((obj, i) => <option key={i} value={i}>{obj.model.name}</option>)}\n              </select>\n            </label>}\n            {object != null && <label>Animation:\n              <select value={object.sequence} onChange={this.setSequence}>\n                <option value={-1}>None</option>\n                {object.model.sequences.map((seq, i) => <option key={i} value={i}>{seq.name}</option>)}\n              </select>\n            </label>}\n            {object != null && object.model.cameras.length > 0 && <label>Camera:\n              <select value={object.camera} onChange={this.setCamera}>\n                <option value={-1}>Free</option>\n                {object.model.cameras.map((cam, i) => <option key={i} value={i}>{cam.name}</option>)}\n              </select>\n            </label>}\n            <label>Team Color:\n              <select value={teamColor} onChange={this.setTeamColor}>\n                {TeamColors.map((name, i) => <option key={i} value={i}>{name}</option>)}\n              </select>\n            </label>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport pathHash, { makeUid } from 'data/hash';\nimport FileModelView from 'files/FileModel';\nimport AppCache from 'data/cache';\nimport keycode from 'keycode';\n\nexport default class ObjectModel extends React.Component {\n  state = {show: false};\n  static contextType = AppCache.DataContext;\n\n  show = e => {\n    this.setState({show: true});\n    e.preventDefault();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKeyDown, true);\n  }\n\n  setPopup = node => {\n    this.popup = node;\n    if (node) {\n      document.addEventListener(\"keydown\", this.onKeyDown, true);\n    } else {\n      document.removeEventListener(\"keydown\", this.onKeyDown, true);\n    }\n  }\n\n  onKeyDown = e => {\n    switch (e.which) {\n    case keycode.codes.esc:\n      this.setState({show: false});\n      break;\n    default:\n    }\n  }\n\n  onMouseDown = e => {\n    if (e.target === this.popup) {\n      this.setState({show: false});\n    }\n  }\n\n  render() {\n    let path = this.props.path;\n    const data = this.context;\n    if (path === \"\" || path === \"_\" || path === \"-\") {\n      return path;\n    }\n    const m = path.match(/^(.*)(\\.\\w+)$/);\n    if (!m) {\n      path += \".mdx\";\n    } else if (m[2] !== \".mdx\") {\n      path = m[1] + \".mdx\";\n    }\n    const hash = pathHash(path);\n    const uid = makeUid(hash);\n\n    return (\n      <React.Fragment>\n        {this.state.show && ReactDOM.createPortal(\n          <div className=\"ObjectModel\" onMouseDown={this.onMouseDown} ref={this.setPopup}>\n            <div>\n              <FileModelView path={path}/>\n            </div>\n          </div>,\n          document.body\n        )}\n        <a href={`/${data.id}/files/${uid}`} onClick={this.show}>{path}</a>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { BuildCtx, ObjectIcon, TileSets, DestructableCategory, DoodadCategory, TechList } from './ObjectCtx';\nimport { Popover, OverlayTrigger } from 'react-bootstrap';\nimport ObjectTooltip from './Tooltip';\nimport classNames from 'classnames';\nimport AppCache from 'data/cache';\nimport tagString from 'data/tagString';\nimport ObjectModel from './ObjectModel';\n\nconst ObjectLink = ({object}) => (\n  <BuildCtx.Consumer>\n    {build => <ObjectTooltip id={object.id}><Link to={`/${build}/${object.type}/${object.id}`}><ObjectIcon object={object}/>{object.name}</Link></ObjectTooltip>}\n  </BuildCtx.Consumer>\n);\n\nconst ObjectLinkRaw = ({object}) => (\n  <BuildCtx.Consumer>\n    {build => <ObjectTooltip id={object.id}><Link to={`/${build}/${object.type}/${object.id}`}>{object.id}</Link></ObjectTooltip>}\n  </BuildCtx.Consumer>\n);\n\nclass StringPopupCell extends React.PureComponent {\n  state = {popup: null};\n\n  onMouseOver = e => {\n    const rect = e.target.getBoundingClientRect();\n    const height = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    if (rect.top + rect.bottom > height) {\n      this.setState({popup: \"top\"});\n    } else {\n      this.setState({popup: \"bottom\"});\n    }\n  }\n  onMouseOut = () => {\n    this.setState({popup: null});\n  }\n\n  render() {\n    const {children, tooltip} = this.props;\n    const {popup} = this.state;\n\n    return popup ? (\n      <td className={classNames(\"popupStringCell\", popup)} onMouseEnter={this.onMouseOver} onMouseLeave={this.onMouseOut}>\n        {tooltip}\n        {children}\n      </td>\n    ) : (\n      <td onMouseEnter={this.onMouseOver} onMouseLeave={this.onMouseOut}>{children}</td>\n    );\n  }\n}\n\nexport class PopupCell extends React.PureComponent {\n  state = {popup: false};\n\n  onMouseOver = e => {\n    if (e.target.scrollWidth >= e.target.offsetWidth) {\n      if (e.target.closest(\".ObjectModel\")) {\n        return;\n      }\n      this.setState({popup: true});\n    }\n  }\n  onMouseOut = () => {\n    this.setState({popup: false});\n  }\n\n  render() {\n    const {children} = this.props;\n    const {popup} = this.state;\n\n    return popup ? (\n      <td className=\"popupCell\" onMouseEnter={this.onMouseOver} onMouseLeave={this.onMouseOut}>\n        <div>{children}</div>#\n      </td>\n    ) : (\n      <td onMouseEnter={this.onMouseOver} onMouseLeave={this.onMouseOut}>{children}</td>\n    );\n  }\n}\n\nconst StringPopup = ({value, data}) => {\n  const result = tagString(value, data);\n  return <div>{result}</div>;\n};\n\nfunction formatString(str, data) {\n  if (str.match(/<.*>|\\|[crn]/i)) {\n    return (\n      <StringPopupCell tooltip={<StringPopup value={str} data={data}/>}>\n        {str}\n      </StringPopupCell>\n    );\n  } else {\n    return <PopupCell>{str}</PopupCell>;\n  }\n}\n\nclass StringIconPopup extends React.Component {\n  state = {visible: false};\n  onLoad = () => this.setState({visible: true});\n\n  render() {\n    const {path, cache, className, ...props} = this.props;\n    const image = cache.image(path);\n    if (image == null) {\n      return null;\n    }\n    return (\n      <Popover id=\"icon-preview\" {...props} className={classNames(className, {loading: !this.state.visible})}>\n        <img src={image} onLoad={this.onLoad} alt=\"icon\"/>\n      </Popover>\n    );\n  }\n}\n\nconst StringIcon = ({path}) => (\n  <AppCache.DataContext.Consumer>\n    {cache => {\n      const icon = cache.iconByName(path);\n      return (\n        <OverlayTrigger placement=\"top\" overlay={<StringIconPopup path={path} cache={cache}/>}>\n          <span>\n            {icon != null && <span className=\"Icon\" style={icon}/>}\n            {path}\n          </span>\n        </OverlayTrigger>\n      );\n    }}\n  </AppCache.DataContext.Consumer>\n);\n\nconst ObjectSubValue = ({value, meta, data}) => {\n  if (meta.type.indexOf(\"Flags\") >= 0) {\n    debugger;\n  }\n  let type = meta.type;\n  if (type === \"lightningList\") {\n    type = \"lightningEffect\";\n  }\n  if (data.types[type]) {\n    if (!value || value === \"_\") return \"None\";\n    return data.types[type][value] || \"value\";\n  }\n  switch (type) {\n  case \"bool\": return parseInt(value, 10) ? \"True\" : \"False\";\n  case \"string\": return value === \"_\" ? \"\" : value;\n  case \"char\": return value;\n  case \"int\": return parseInt(value, 10) || 0;\n  case \"real\":\n  case \"unreal\": return (parseFloat(value) || 0).toFixed(meta.stringExt || 2);\n  case \"destructableCategory\": return DestructableCategory[value] || value;\n  case \"tilesetList\": return TileSets[value] || value;\n  case \"doodadCategory\": return DoodadCategory[value] || value;\n\n  case \"techList\":\n    if (TechList[value]) return TechList[value];\n    // fall through\n  case \"buffCode\": case \"buffList\":\n  case \"effectCode\": case \"effectList\":\n  case \"unitCode\": case \"unitList\":\n  case \"abilCode\": case \"abilityList\": case \"heroAbilityList\":\n  case \"itemCode\": case \"itemList\":\n  case \"upgradeCode\": case \"upgradeList\":\n    if (value === \"_\") return \"\";\n    const obj = data.objects.find(obj => obj.id === value);\n    return obj ? <ObjectLink object={obj}/> : value;\n  case \"icon\":\n    return <StringIcon path={value}/>;\n  case \"model\":\n    return <ObjectModel path={value}/>;\n  default:\n    return value !== \"_\" && value || \"None\";\n  }\n};\n\nconst ObjectSubValueRaw = ({value, meta, data}) => {\n  let type = meta.type;\n  switch (type) {\n  case \"int\": return parseInt(value, 10) || 0;\n  case \"real\":\n  case \"unreal\": return (parseFloat(value) || 0).toFixed(meta.stringExt || 2);\n  case \"techList\":\n  case \"buffCode\": case \"buffList\":\n  case \"effectCode\": case \"effectList\":\n  case \"unitCode\": case \"unitList\":\n  case \"abilCode\": case \"abilityList\": case \"heroAbilityList\":\n  case \"itemCode\": case \"itemList\":\n  case \"upgradeCode\": case \"upgradeList\":\n    const obj = data.objects.find(obj => obj.id === value);\n    return obj ? <ObjectLinkRaw object={obj}/> : value;\n  default:\n    return value;\n  }\n};\n\nexport const ObjectValue = ({value, meta, data, rawNames}) => {\n  const SubValue = rawNames ? ObjectSubValueRaw : ObjectSubValue;\n  if (meta.type.indexOf(\"List\") >= 0) {\n    if (value === \"_\") {\n      return <PopupCell>{rawNames ? value : \"\"}</PopupCell>;\n    }\n    if (value === \"\") return <PopupCell/>;\n    const list = [];\n    value.split(\",\").forEach((part, index) => {\n      if (list.length) list.push(rawNames ? \",\" : \", \");\n      list.push(<SubValue value={part} meta={meta} data={data} key={index}/>);\n    });\n    return <PopupCell>{list}</PopupCell>;\n  } else if (meta.type.indexOf(\"Flags\") >= 0 && !rawNames) {\n    const list = [];\n    const iValue = parseInt(value, 10);\n    for (let flag = 0; flag < 31 && (1 << flag) <= iValue; ++flag) {\n      if ((1 << flag) & iValue) {\n        if (list.length) list.push(rawNames ? \",\" : \", \");\n        list.push(<SubValue value={flag} meta={meta} data={data} key={flag}/>);\n      }\n    }\n    return <PopupCell>{list}</PopupCell>;\n  } else if (meta.type === \"string\") {\n    if (!rawNames && value === \"_\") value = \"\";\n    return formatString(value, data);\n  } else {\n    return <PopupCell><SubValue value={value} meta={meta} data={data}/></PopupCell>;\n  }\n};\n","import React from 'react';\nimport { RawNames, IdCtx, listObjectData } from './ObjectCtx';\nimport Panel from 'react-flex-panel';\nimport classNames from 'classnames';\n\nimport Title from 'data/title';\nimport { ObjectValue, PopupCell } from './ObjectValue';\n\nconst ObjectDataBodyEx = ({object, data, rawNames}) => {\n  const rows = [];\n  listObjectData(object, data, rawNames, (key, name, value, meta) => {\n    rows.push(\n      <tr key={key}>\n        <PopupCell>{name}</PopupCell>\n        <ObjectValue value={value} meta={meta} data={data} rawNames={rawNames}/>\n      </tr>\n    );\n  });\n\n  return (\n    <tbody>\n      {rows}\n    </tbody>\n  );\n};\n\nconst ObjectDataBody = props => (\n  <RawNames.Consumer>\n    {rawNames => <ObjectDataBodyEx {...props} rawNames={rawNames}/>}\n  </RawNames.Consumer>\n);\n\nclass DragHandle extends React.Component {\n  removeListeners() {\n    document.removeEventListener(\"mousemove\", this.onMouseMove, true);\n    document.removeEventListener(\"mouseup\", this.onMouseUp, true);\n  }\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  state = {};\n\n  onMouseDown = (e) => {\n    this.setState({dragPos: e.clientX - this.props.pos});\n    document.addEventListener(\"mousemove\", this.onMouseMove, true);\n    document.addEventListener(\"mouseup\", this.onMouseUp, true);\n    e.preventDefault();\n    e.stopPropagation();\n  }\n  onMouseMove = (e) => {\n    const { dragPos } = this.state;\n    if ((e.buttons & 1) && dragPos != null) {\n      this.props.onChange(e.clientX - dragPos);\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      this.onMouseUp(e);\n    }\n  }\n  onMouseUp = (e) => {\n    this.setState({dragPos: null});\n    this.removeListeners();\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  render() {\n    const {pos} = this.props;\n    return <div className=\"drag-handle\" style={{left: pos}} onMouseDown={this.onMouseDown}/>;\n  }\n}\n\nexport class ObjectData extends React.Component {\n  state = {sliderPos: 300};\n\n  static contextType = IdCtx;\n\n  setSliderPos = sliderPos => {\n    sliderPos = Math.max(50, sliderPos);\n    if (this.table_) {\n      sliderPos = Math.min(this.table_.offsetWidth - 50, sliderPos);\n    }\n    this.setState({sliderPos});\n    return sliderPos;\n  }\n\n  setRef = e => this.table_ = e;\n\n  render() {\n    const {data, className, ...props} = this.props;\n    const {sliderPos} = this.state;\n    const id = this.context;\n    const object = data.objects.find(obj => obj.id === id);\n    if (!object) {\n      return (\n        <Panel className={classNames(className, \"ObjectData\")} {...props}>\n          <div><span className=\"no-results\">{id ? \"Object not found.\" : \"Select an object from the list.\"}</span></div>\n        </Panel>\n      );\n    }\n\n    return (\n      <Panel className={classNames(className, \"ObjectData\")} {...props}>\n        <DragHandle pos={sliderPos} onChange={this.setSliderPos}/>\n        <Title title={object.name}/>\n        <div className=\"nonscrollable\">\n          <table>\n            <thead>\n              <tr>\n                <th width={sliderPos}>Name</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n          </table>\n        </div>\n        <div className=\"scrollable\">\n          <table ref={this.setRef}>\n            <thead>\n              <tr>\n                <th width={sliderPos}>Name</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <ObjectDataBody object={object} data={data}/>\n          </table>\n        </div>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { RawNames, RawNamesSwitch, BuildCtx, TypeCtx, IdCtx } from './ObjectCtx';\n\nimport Panel from 'react-flex-panel';\nimport { withAsync } from 'utils';\nimport AppCache from 'data/cache';\nimport Options from 'data/options';\n\nimport { ObjectList } from './ObjectList';\nimport { ObjectData } from './ObjectData';\n\nimport './ObjectView.scss';\n\nclass ObjectViewComponent extends React.Component {\n  static contextType = Options.Context;\n\n  setRawNames = () => this.context.update(\"rawNames\", !this.context.rawNames);\n\n  render() {\n    const {match: {params: {build, type, id}}, data} = this.props;\n    return (\n      <RawNames.Provider value={!!this.context.rawNames}>\n        <RawNamesSwitch.Provider value={this.setRawNames}>\n          <BuildCtx.Provider value={build}>\n            <TypeCtx.Provider value={type}>\n              <IdCtx.Provider value={id}>\n                <div className=\"ObjectView\">\n                  <Panel cols>\n                    <ObjectList size={300} minSize={100} resizable className=\"LeftPanel\" data={data} type={type} id={id} key={type}/>\n                    <ObjectData minSize={100} className=\"RightPanel\" data={data}/>\n                  </Panel>\n                </div>\n              </IdCtx.Provider>\n            </TypeCtx.Provider>\n          </BuildCtx.Provider>\n        </RawNamesSwitch.Provider>\n      </RawNames.Provider>\n    );\n  }\n}\n\nconst ObjectViewInner = withAsync({\n  data: ({match}, cache) => cache.objects()\n}, ObjectViewComponent, undefined, undefined);\n\nObjectViewInner.contextType = AppCache.DataContext;\n\nexport const ObjectView = () => <Route path={`/:build/:type/:id?`} component={ObjectViewInner}/>;\n","import React from 'react';\nexport const IdCtx = React.createContext(null);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { FormControl } from 'react-bootstrap';\nimport { AutoSizer, List } from 'react-virtualized';\nimport pathHash, { makeUid, parseUid, equalUid } from 'data/hash';\nimport { IdCtx } from './FileCtx';\nimport AppCache from 'data/cache';\nimport { withAsync } from 'utils';\n\nimport Panel from 'react-flex-panel';\n\nconst processFiles = (listfile, imExt) => {\n  const root = {\n    name: \"\",\n    dirs: {},\n    files: []\n  };\n  const names = listfile.split(\"\\n\").filter(n => n.length > 0);\n  names.forEach(path => {\n    const p = path.split(/[\\\\/:]/);\n    let cd = root;\n    for (let i = 0; i < p.length - 1; ++i) {\n      const pl = p[i].toLowerCase();\n      if (!cd.dirs[pl]) {\n        cd.dirs[pl] = {\n          name: p[i],\n          dirs: {},\n          files: []\n        };\n      }\n      cd = cd.dirs[pl];\n    }\n    const unk = path.match(/^Unknown\\\\([0-9A-F]{16})/);\n    const ext = path.match(/\\.(\\w{1,3})$/);\n    cd.files.push({\n      name: p[p.length - 1],\n      path,\n      key: unk ? parseUid(unk[1]) : pathHash(path, imExt),\n      ext: ext ? ext[1].toLowerCase() : \"unknown\",\n    });\n  });\n  const files = [];\n  const nameCompare = (a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n  const process = dir => {\n    dir.dirs = Object.values(dir.dirs).sort(nameCompare);\n    dir.dirs.forEach(sub => process(sub));\n    dir.files.sort(nameCompare);\n    files.push(...dir.files);\n  };\n  process(root);\n  return { root, files };\n}\n\nconst FileLink = ({ file }) => (\n  <AppCache.DataContext.Consumer>\n    {data => (\n      <IdCtx.Consumer>\n        {id => (\n          <Link to={`/${data.id}/files/${makeUid(file.key)}`}\n            className={classNames(\"ObjectLink\", { searched: file.searched, selected: equalUid(id, file.key) })}>\n            <span className={\"Icon file-icon file-\" + file.ext} />\n            <span className=\"ObjectName\">{file.name}</span>\n          </Link>\n        )}\n      </IdCtx.Consumer>\n    )}\n  </AppCache.DataContext.Consumer>\n);\n\nclass FileItem {\n  constructor(file, parent) {\n    this.file = file;\n    this.file.parent = this;\n    this.parent = parent;\n    this.file.upSearchVisit = (fn) => {\n      fn(this.file);\n      this.upSearchVisit(fn);\n    }\n  }\n  height = 1;\n  render() {\n    return <FileLink file={this.file} />;\n  }\n  renderLine(index) {\n    return this.render();\n  }\n  upSearchVisit(fn) {\n    fn(this);\n    this.parent && this.parent.upSearchVisit(fn);\n  }\n  downSearchVisit(fn) {\n    fn(this);\n    fn(this.file);\n  }\n}\n\nclass FileDirectory {\n  constructor(dir, parent) {\n    this.parent = parent;\n    this.level = (parent ? parent.level + 1 : 0);\n    this.title = dir.name || '__ROOT__';\n    this.count = dir.files.length;\n    this.dirs = {};\n    this.children = [];\n    dir.dirs.forEach(subDir => {\n      const sub = new FileDirectory(subDir, this);\n      this.children.push(sub);\n      this.dirs[subDir.name.toLowerCase()] = sub;\n      this.count += sub.count;\n    });\n    dir.files.forEach(subFile => {\n      this.children.push(new FileItem(subFile, this));\n    });\n    this.openHeight = parent ? 1 : 0;\n    this.children.forEach(c => {\n      c.top = this.openHeight;\n      this.openHeight += c.height;\n    });\n    if (!parent) {\n      this.expanded = true;\n    } else {\n      this.expanded = false;\n    }\n    this.searched = false;\n  }\n  upSearchVisit(fn) {\n    fn(this);\n    this.parent && this.parent.upSearchVisit(fn);\n  }\n  downSearchVisit(fn) {\n    fn(this);\n    this.children.forEach(x => x.downSearchVisit(fn));\n  }\n  modHeight(delta, child) {\n    let index = child ? this.children.indexOf(child) : -1;\n    if (index >= 0) {\n      while (++index < this.children.length) {\n        this.children[index].top += delta;\n      }\n    }\n    this.openHeight += delta;\n    if (this.parent && this.expanded) {\n      this.parent.modHeight(delta, this);\n    } else if (this.onResize) {\n      this.onResize(this.height);\n    }\n  }\n\n  get height() {\n    return this.expanded ? this.openHeight : 1;\n  }\n\n  expandFile(file, parts) {\n    if (!parts) {\n      parts = file.path.split(/[\\\\/]/);\n    }\n    if (parts.length > 1) {\n      const name = parts[0].toLowerCase();\n      const sub = this.dirs[name];\n      if (sub) {\n        sub.expand();\n        return sub.expandFile(file, parts.slice(1)) + sub.top;\n      }\n    } else {\n      const sub = this.children.find(obj => obj.file === file);\n      if (sub) {\n        return sub.top;\n      }\n    }\n    return 0;\n  }\n\n  expand() {\n    if (!this.expanded && this.count > 0) {\n      this.expanded = true;\n      if (this.parent) {\n        this.parent.modHeight(this.openHeight - 1, this);\n      }\n    }\n  }\n\n  collapse() {\n    if (this.expanded && this.parent) {\n      this.expanded = false;\n      this.parent.modHeight(1 - this.openHeight, this);\n    }\n  }\n\n  toggle = () => {\n    if (this.expanded) {\n      this.collapse();\n    } else {\n      this.expand();\n    }\n  }\n\n  render() {\n    if (!this.parent) {\n      return <span>no-parent-dir</span>;\n    }\n    return (\n      <div onClick={this.preSelect} className={classNames(\"ObjectGroup\", { expanded: this.expanded, searched: this.searched })}>\n        <span className=\"toggle\" onClick={this.toggle} />\n        <span onDoubleClick={this.toggle}><span className=\"Icon\" />\n          <span className='title'>\n            {this.title}\n          </span>\n        </span>\n      </div>\n    );\n  }\n  firstLevelNode(index) {\n    if (this.expanded) {\n      let left = 0, right = this.children.length - 1;\n      while (left < right) {\n        const mid = (left + right + 1) >> 1;\n        if (this.children[mid].top > index) {\n          right = mid - 1;\n        } else {\n          left = mid;\n        }\n      }\n      return this.children[left];\n    }\n    return null;\n  }\n  renderLine(index) {\n    if (this.parent && !index) {\n      return this.render();\n    }\n    if (this.expanded) {\n      let left = 0, right = this.children.length - 1;\n      while (left < right) {\n        const mid = (left + right + 1) >> 1;\n        if (this.children[mid].top > index) {\n          right = mid - 1;\n        } else {\n          left = mid;\n        }\n      }\n      const child = this.children[left];\n      const subIndex = index - this.children[left].top;\n      const line = this.children[left].renderLine(subIndex);\n      let lineStyle = null;\n      if (this.parent) {\n        if (left < this.children.length - 1) {\n          if (subIndex === 0) {\n            lineStyle = \"tLine\";\n          } else {\n            lineStyle = \"line\";\n          }\n        } else if (subIndex === 0) {\n          lineStyle = \"halfLine\";\n        }\n      }\n      return (\n        <div className={classNames(\"indent\", lineStyle, { searched: child.searched })}>\n          {line}\n        </div>\n      );\n    }\n  }\n}\n\nclass FileListInner extends React.PureComponent {\n  state = { search: \"\", searchResults: null, searched: false };\n\n  constructor(props) {\n    super(props);\n\n    const res = processFiles(props.listFile, !props.isMap);\n    this.files = res.files;\n    this.root = new FileDirectory(res.root);\n    this.root.onResize = this.onResize;\n  }\n  onSearchKeyDown = (e) => {\n    if (e.which === 27) {\n      this.setState({ search: \"\", searchResults: null });\n      this.stateChanged = true;\n    }\n  }\n  onSearch = (e) => {\n    const search = e.target.value.trim();\n    let found = [];\n    let hasSearchResult = false;\n    //reset\n    this.root.downSearchVisit(node => node.searched = false);\n    if (search != '' && this.files) {\n      const re = new RegExp(search.replace(/[|\\\\{}()[\\]^$+*?.]/g, \"\\\\$&\"), \"i\");\n      this.files.forEach((file, i) => {\n        let searched = !!file.path.match(re);\n        file.upSearchVisit((node) => {\n          node.searched = node.searched || searched;\n          if (node.searched) {\n            hasSearchResult = true;\n          }\n        })\n      });\n      this.setState({ search: e.target.value, searchResults: found, searched: hasSearchResult });\n    }\n    else {\n      this.root.downSearchVisit(node => node.searched = false);\n      this.setState({ search: e.target.value, searchResults: null, searched: hasSearchResult });\n    }\n     // console.log('forceUpdateGrid')\n     if (this._list) {\n      this._list.forceUpdateGrid();\n    }\n    this.stateChanged = true;\n  }\n\n  onResize = () => {\n    this.forceUpdate();\n  }\n  rowRenderer = ({ index, ...options }) => {\n\n    const { key, style } = options;\n    const node = this.root.children[index];\n\n    const flNode = this.root.firstLevelNode(index);\n    return (\n      <div className={classNames(\"TreeRow\", { searched: flNode && flNode.searched })} key={key} style={style}>\n        {this.root.renderLine(index)}\n      </div>\n    );\n  }\n  rowRendererSearch = ({ index, ...options }) => {\n    const { key, style } = options;\n    return (\n      <div className={\"TreeRow\"} key={key}>\n        {this.root.renderLine(index)}\n      </div>\n    );\n  }\n  render() {\n    const { listFile, id, className, isMap, ...props } = this.props;\n    const { search, searchResults, searched } = this.state;\n\n    if (!this.root) {\n      return null;\n    }\n\n    if (!searchResults && !equalUid(this.root._id, id)) {\n      const file = this.files && this.files.find(obj => equalUid(obj.key, id));\n      if (file) {\n        this.root.onResize = null;\n        const index = this.root.expandFile(file);\n        this.root.onResize = this.onResize;\n        this.root._id = id;\n        setTimeout(() => {\n          if (this._list) {\n            this._list.scrollToRow(index);\n          }\n        });\n      }\n    }\n    return (\n      <Panel ref={\n        node=>this._panel=node\n      } className={classNames(className, \"ObjectList\")} {...props}>\n        <div className=\"search-box\">\n          <FormControl type=\"text\" value={search} placeholder=\"Search\" onKeyDown={this.onSearchKeyDown} onChange={this.onSearch} />\n        </div>\n        <div className={classNames(\"ObjectListItems\", searched)}>\n          <AutoSizer>\n            {({ width, height }) => (\n              <List className=\"ObjectLines\"\n                ref={node => this._list = node}\n                width={width}\n                height={height}\n                rowCount={this.root.height}\n                rowHeight={18}\n                rowRenderer={this.rowRenderer}\n              />\n            )}\n          </AutoSizer>\n        </div>\n      </Panel>\n    );\n  }\n}\n\nconst EmptyPanel = ({ id, listFile, className, ...props }) => <Panel className={classNames(className, \"ObjectList\")} {...props} />;\n\nexport const FileList = withAsync({\n  listFile: ({ data }) => data.listFile(),\n}, ({ data, ...props }) => <FileListInner key={data.id} isMap={data.isMap} {...props} />, EmptyPanel, EmptyPanel);\n","import React from 'react';\nimport { Table, Column, AutoSizer } from 'react-virtualized';\nimport 'react-virtualized/styles.css'; // 引入样式  \nconst Cell = ({ value, comment }) => {\n  comment = comment && comment.replace(\"\\x1b\", \"\\n\");\n  const content = value == null || value === \"\" ? '' : value.toString();\n  return <div title={comment || content}>{content}</div>;\n}\n\nexport default class FileSlkView extends React.PureComponent {\n  rowGetter = ({ index }) => {\n    return this.props.data.rows[index];\n  };\n\n  getColumnWidth = ({ index }) => {\n    return 500;\n  };\n\n  renderColumns() {\n    const { data } = this.props;\n    // 确保只渲染指定数量的列\n    return Array.from({ length: data.cols }, (_, index) => (\n      <Column className={'col-' + index}\n        key={index}\n        width={this.getColumnWidth({ index })}\n        dataKey={String(index)}\n        cellRenderer={({ cellData, rowIndex }) => (\n          <Cell\n            value={cellData}\n            comment={data.comments && data.comments[rowIndex] && data.comments[rowIndex][index]}\n          />\n        )}\n      />\n    ));\n  }\n\n  render() {\n    const { data, style } = this.props;\n\n    // 确保有数据且cols为有效数值才渲染\n    if (!data || !data.rows || !Number.isInteger(data.cols) || data.cols <= 0) return null;\n\n    const tableWidth = data.cols * 50; // 基于正确的cols计算总宽度\n    return (\n      <div className=\"FileSlk\">\n        <AutoSizer>\n          {({ width, height }) => (\n            <Table\n              style={style}\n              width={tableWidth}\n              height={height - 22} // 可视区域高度，根据需要调整\n              rowHeight={23} // 自定义每行的高度\n              rowGetter={this.rowGetter}\n              rowCount={data.rows.length}\n              overscanRowCount={5} // 预加载行数，可优化滚动性能\n            >\n              {this.renderColumns()}\n            </Table>\n          )}\n        </AutoSizer>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\n\nexport default class FileHexView extends React.PureComponent {\n  state = {\n    foo: parseInt(\"foo\", 10),\n    bar: undefined,\n  }\n\n  onSearch = (text, dir) => {\n    if (this._list) {\n      return this._list.search(text, dir);\n    } else {\n      return null;\n    }\n  }\n\n  get digits() {\n    const length = this.props.data.length;\n    let numDigits = 4;\n    while ((1 << (numDigits * 4)) <= length) {\n      ++numDigits;\n    }\n    return numDigits;\n  }\n\n  rowRenderer = ({index, ...options}) => {\n    const {key, style} = options;\n    const offset = index * 16;\n    const digits = this.digits;\n    const row = [...this.props.data.subarray(offset, offset + 16)];\n    const dot = \".\".charCodeAt(0);\n    return (\n      <div className=\"HexRow\" key={key} style={style}>\n        <span className=\"offset\">{offset.toString(16).padStart(digits, '0')}</span>\n        <span className=\"hex\">\n          {row.map((byte, i) => <span key={i}>{byte.toString(16).padStart(2, '0')}</span>)}\n          {row.length < 16 && [...Array(16 - row.length)].map((nil, i) => <span key={i} className=\"padding\">{\"  \"}</span>)}\n        </span>\n        <span className=\"ascii\">\n          {String.fromCharCode(...row.map(byte => byte >= 32 && byte <= 126 ? byte : dot))}\n        </span>\n      </div>\n    );\n  }\n\n  render() {\n    const { data } = this.props;\n    return (\n      <AutoSizer>\n        {({width, height}) => (\n          <List className=\"HexLines\"\n                width={width}\n                height={height}\n                rowCount={Math.ceil(data.length / 16)}\n                rowHeight={19}\n                rowRenderer={this.rowRenderer}\n            />\n        )}\n      </AutoSizer>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { List, defaultCellRangeRenderer } from 'react-virtualized';\nimport { createChainedFunction, replaceReact } from 'utils';\n\nimport './TextView.scss';\n\nfunction makeRegex(str) {\n  str = str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\n  return new RegExp(\"(\" + str + \")\", \"ig\");\n}\n\nfunction getChildIndex(node, child) {\n  for (let i = 0; i < node.childNodes.length; ++i) {\n    if (node.childNodes[i] === child) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction getChildrenLength(node, count) {\n  if (count >= node.childNodes.length) return node.textContent.length;\n  let length = 0;\n  for (let i = 0; i < count; ++i) {\n    length += node.childNodes[i].textContent.length;\n  }\n  return length;\n}\nfunction getNodeOffset(node, anchor, anchorOffset) {\n  let offset = 0;\n  if (anchor.childNodes.length) {\n    offset = getChildrenLength(anchor, anchorOffset);\n  } else {\n    offset = anchorOffset;\n  }\n  while (anchor && anchor !== node) {\n    const parent = anchor.parentElement || anchor.parentNode;\n    offset += getChildrenLength(parent, getChildIndex(parent, anchor));\n    anchor = parent;\n  }\n  if (anchor !== node) return 0;\n  return offset;\n}\nfunction findNodeOffset(node, offset) {\n  if (!node.childNodes.length) return {node, offset: Math.min(node.textContent.length, offset)};\n  for (let i = 0; i < node.childNodes.length; ++i) {\n    const length = node.childNodes[i].textContent.length;\n    if (offset < length || i === node.childNodes.length - 1) {\n      return findNodeOffset(node.childNodes[i], offset);\n    }\n    offset -= length;\n  }\n  return {node, offset: 0};\n}\n\nfunction findMatches(text, regex, current, lineIndex) {\n  let match;\n  const matches = [];\n  while ((match = regex.exec(text))) {\n    matches.push({\n      index: match.index,\n      length: match[0].length,\n      className: (current && current.line === lineIndex && current.offset === match.index ? \"match-current\" : \"match\")\n    });\n  }\n  return matches;\n}\nfunction highlightMatches(text, matches, offset) {\n  const result = [];\n  let prev = 0;\n  matches.forEach(m => {\n    const start = Math.max(m.index - offset, 0), end = Math.min(m.index + m.length - offset, text.length);\n    if (end <= start) return;\n    if (start > prev) result.push(text.substring(prev, start));\n    result.push(<span className={m.className} key={m.index}>{text.substring(start, end)}</span>);\n    prev = end;\n  });\n  if (prev < text.length) {\n    result.push(text.substring(prev));\n  }\n  if (result.length === 1) {\n    return result[0];\n  }\n  return result;\n}\n\nexport default class TextView extends React.Component {\n  state = {\n    searchText: \"\",\n    searchMatches: [],\n  }\n  selection = {}\n\n  componentDidMount() {\n    document.addEventListener(\"copy\", this.onCopy);\n    document.addEventListener(\"selectionchange\", this.onSelect);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"copy\", this.onCopy);\n    document.removeEventListener(\"selectionchange\", this.onSelect);\n  }\n\n  search(text, direction) {\n    const searchMatch = this.state.searchMatch;\n    let allMatches = [], nextPos = null, found = null, result = null;\n    if (text.trim()) {\n      if (text === this.state.searchText) {\n        allMatches = this.state.searchMatches;\n      } else {\n        const textLower = text.toLowerCase();\n        this.props.lines.forEach((line, index) => {\n          let offset = 0, next;\n          const lineLower = line.toLowerCase();\n          while ((next = lineLower.indexOf(textLower, offset)) !== -1) {\n            allMatches.push({line: index, offset: next});\n            offset = next + textLower.length;\n          }\n        });\n      }\n      let curMatch = -1;\n      if (direction !== -1) {\n        const origin = (direction === 1 && searchMatch ?\n          {line: searchMatch.line, offset: searchMatch.offset + 1} :\n          this.selection.searchPos || {line: 0, offset: 0}\n        );\n        curMatch = allMatches.findIndex(m => m.line > origin.line || (m.line === origin.line && m.offset >= origin.offset));\n        if (curMatch < 0 && allMatches.length) curMatch = 0;\n      } else {\n        const origin = (searchMatch ? {line: searchMatch.line, offset: searchMatch.offset - 1} :\n          this.selection.searchPos || {line: 0, offset: 0}\n        );\n        allMatches.forEach((m, index) => {\n          if (m.line > origin.line || (m.line === origin.line && m.offset > origin.offset)) return;\n          curMatch = index;\n        });\n        if (curMatch < 0 && allMatches.length) curMatch = allMatches.length - 1;\n      }\n      nextPos = allMatches[curMatch];\n      found = nextPos && nextPos.line;\n      result = {pos: curMatch, count: allMatches.length};\n    }\n    if (this._list) {\n      this._list.forceUpdateGrid();\n    }\n    this.setState({\n      searchText: text,\n      searchMatch: nextPos,\n      searchRegex: text && text.trim() ? makeRegex(text) : null,\n      searchMatches: allMatches,\n    }, () => {\n      if (found && this._list) this._list.scrollToRow(found);      \n    });\n    return result;\n  }\n\n  nodeToPos2(node, offset) {\n    return this.nodeToPos({node, offset});\n  }\n  nodeToPos(data) {\n    if (!data || !this._node) return;\n    const {node, offset} = data;\n    if (!this._node.contains(node)) return;\n    if (node === this._firstLine) {\n      const lines = this._node.querySelectorAll(\".line\");\n      if (!lines.length) return;\n      const firstLine = parseInt(lines[0].getAttribute(\"data-line-number\"), 10) - 1;\n      return {line: firstLine, offset: 0};\n    }\n    if (node === this._lastLine) {\n      const lines = this._node.querySelectorAll(\".line\");\n      if (!lines.length) return;\n      const lastLine = parseInt(lines[lines.length - 1].getAttribute(\"data-line-number\"), 10) - 1;\n      return {line: lastLine, offset: lines[lines.length - 1].parentElement.textContent.length - 1};\n    }\n    let line = node;\n    while (line && line !== this._node && (!line.classList || !line.classList.contains(\"TextLine\"))) {\n      line = line.parentElement || line.parentNode;\n    }\n    if (!line || !line.classList || !line.classList.contains(\"TextLine\")) return;\n    const lineNode = line.querySelector(\".line\");\n    if (!lineNode) return;\n    const lineIndex = parseInt(lineNode.getAttribute(\"data-line-number\"), 10);\n    return {line: lineIndex - 1, offset: getNodeOffset(line, node, offset)};\n  }\n  posToNode2(line, offset) {\n    return this.posToNode({line, offset});\n  }\n  posToNode(data) {\n    if (!data || !this._node) return;\n    const {line, offset} = data;\n    let lineNode = this._node.querySelector(`.line[data-line-number=\"${line + 1}\"]`);\n    if (!lineNode) {\n      const lines = this._node.querySelectorAll(\".line\");\n      if (!lines.length) return;\n      const firstLine = parseInt(lines[0].getAttribute(\"data-line-number\"), 10) - 1;\n      if (line < firstLine && this._firstLine) {\n        return {node: this._firstLine, offset: 0};\n      }\n      const lastLine = parseInt(lines[lines.length - 1].getAttribute(\"data-line-number\"), 10) - 1;\n      if (line > lastLine && this._lastLine) {\n        return {node: this._lastLine, offset: 0};\n      }\n      return;\n    }\n\n    lineNode = lineNode.parentElement;\n    return findNodeOffset(lineNode, offset);\n  }\n  \n  onCopy = () => {\n    if (!this._node) return;\n    const selection = window.getSelection();\n    const tempNodes = [];\n    const ts = this.selection;\n    const anchorPos = this.nodeToPos2(selection.anchorNode, selection.anchorOffset);\n    const focusPos = this.nodeToPos2(selection.focusNode, selection.focusOffset);\n    if (ts.anchorPos && ts.focusPos && anchorPos && focusPos) {\n      const tsBegin = (ts.anchorPos.line < ts.focusPos.line ? ts.anchorPos : ts.focusPos);\n      const tsEnd = (ts.anchorPos.line < ts.focusPos.line ? ts.focusPos : ts.anchorPos);\n      const csBeginNode = (anchorPos.line < focusPos.line ? selection.anchorNode : selection.focusNode);\n      const csBegin = (anchorPos.line < focusPos.line ? anchorPos : focusPos);\n      const csEndNode = (anchorPos.line < focusPos.line ? selection.focusNode : selection.anchorNode);\n      const csEnd = (anchorPos.line < focusPos.line ? focusPos : anchorPos);\n      const raw = this.props.lines;\n      if (tsBegin.line < csBegin.line && csBeginNode.nodeType === 1) {\n        const lines = [];\n        for (let i = tsBegin.line; i <= csBegin.line; ++i) {\n          let line = raw[i];\n          if (!line) continue;\n          if (i === tsBegin.line) line = line.substr(tsBegin.offset);\n          else if (i === csBegin.line) line = line.substr(0, csBegin.offset);\n          lines.push(line);\n        }\n        const prepend = lines.join(\"\\n\");\n        if (prepend.length) {\n          const tempNode = document.createElement(\"span\");\n          tempNode.style.position = \"absolute\";\n          tempNode.style.left = \"-10000px\";\n          tempNode.style.top = \"-10000px\";\n          tempNode.style.fontSize = \"0\";\n          tempNode.style.whiteSpace = \"pre\";\n          tempNode.innerText = prepend;\n          tempNodes.push(tempNode);\n          csBeginNode.appendChild(tempNode);\n        }\n      }\n      if (tsEnd.line > csEnd.line && csEndNode.nodeType === 1) {\n        const lines = [];\n        for (let i = csEnd.line + 1; i <= tsEnd.line; ++i) {\n          let line = raw[i];\n          if (!line) continue;\n          if (i === csEnd.line) line = line.substr(csEnd.offset);\n          else if (i === tsEnd.line) line = line.substr(0, tsEnd.offset);\n          lines.push(line);\n        }\n        const append = lines.join(\"\\n\");\n        if (append.length) {\n          const tempNode = document.createElement(\"span\");\n          tempNode.style.position = \"absolute\";\n          tempNode.style.left = \"-10000px\";\n          tempNode.style.top = \"-10000px\";\n          tempNode.style.fontSize = \"0\";\n          tempNode.style.whiteSpace = \"pre\";\n          tempNode.innerText = append;\n          tempNodes.push(tempNode);\n          csEndNode.parentElement.insertBefore(tempNode, csEndNode);\n        }\n      }\n    }\n    if (tempNodes.length) {\n      window.setTimeout(() => {\n        tempNodes.forEach(node => node.parentNode.removeChild(node));\n      }, 100);\n    }\n  }\n  \n  onSelect = () => {\n    if (this.suppressSelect || !this.selection || !this._node) return;\n    const selection = window.getSelection();\n    const ts = this.selection;\n\n    const badNode = node => {\n      let line = node;\n      while (line && line !== this._node && line !== this._firstLine &&\n          line !== this._lastLine && (!line.classList || !line.classList.contains(\"TextLine\"))) {\n        line = line.parentElement || line.parentNode;\n      }\n      if (line === this._firstLine || line === this._lastLine) return false;\n      return !line.classList || !line.classList.contains(\"TextLine\");\n    };\n\n    if (!selection.anchorNode || !this._node.contains(selection.anchorNode)) {\n      ts.anchorPos = null;\n    } else if (!badNode(selection.anchorNode)) {\n      const p2n = this.posToNode(ts.anchorPos);\n      const tsPos = this.nodeToPos(p2n);\n      const csPos = this.nodeToPos2(selection.anchorNode, selection.anchorOffset);\n      if (tsPos && csPos && tsPos.line === csPos.line && tsPos.offset === csPos.offset) {\n        selection.setBaseAndExtent(p2n.node, p2n.offset, selection.focusNode, selection.focusOffset);\n      } else {\n        ts.anchorPos = csPos;\n        ts.searchPos = csPos;\n      }\n    }\n\n    if (!selection.focusNode || !this._node.contains(selection.focusNode)) {\n      ts.focusPos = null;\n    } else if (!badNode(selection.focusNode)) {\n      const tsPos = this.nodeToPos(this.posToNode(ts.focusPos));\n      const csPos = this.nodeToPos2(selection.focusNode, selection.focusOffset);\n      if (tsPos && csPos && tsPos.line === csPos.line && tsPos.offset === csPos.offset) {\n        // do nothing\n      } else {\n        ts.focusPos = csPos;\n      }\n    }\n  }\n  selectRange(fromPos, toPos) {\n    const selection = window.getSelection();\n    const from = this.posToNode(fromPos);\n    const to = this.posToNode(toPos);\n    selection.setBaseAndExtent(\n      from ? from.node : selection.anchorNode,\n      from ? from.offset : selection.anchorOffset,\n      to ? to.node : selection.focusNode,\n      to ? to.offset : selection.focusOffset\n    );\n    this.selection.anchorPos = fromPos;\n    this.selection.searchPos = fromPos;\n    this.selection.focusPos = toPos;\n  }\n  onScroll = ({scrollTop}) => {\n    const ts = this.selection;\n    if (!ts || !ts.anchorPos || !ts.focusPos) return;\n    this.suppressSelect = true;\n    this.selectRange(ts.anchorPos, ts.focusPos);\n    if (this.unsuppress) clearTimeout(this.unsuppress);\n    this.unsuppress = setTimeout(() => {\n      this.suppressSelect = false;\n      delete this.unsuppress;\n    }, 100);\n  }\n\n  cellRangeRenderer = (props) => {\n    const children = defaultCellRangeRenderer(props);\n    children.unshift(<div key=\"first-line\" className=\"fake-line\" ref={node => this._firstLine = node}><span/></div>);\n    children.push(<div key=\"last-line\" className=\"fake-line\" ref={node => this._lastLine = node}><span/></div>);\n    return children;\n  }\n\n  rowRenderer = ({index, key, style}) => {\n    const { highlightExpr, highlightFunc } = this.props;\n    if (this.props.padding) {\n      if (index === 0 || index > this.props.lines.length) {\n        return null;\n      } else {\n        index -= 1;\n      }\n    }\n    const search = this.state.searchRegex;\n    let line = this.props.lines[index];\n    const matches = search && findMatches(line, search, this.state.searchMatch, index);\n    if (highlightExpr && highlightFunc) {\n      line = replaceReact(line, highlightExpr, match => {\n        let str = match[0];\n        if (matches) {\n          str = highlightMatches(match[0], matches, match.index);\n        }\n        return highlightFunc(str, match);\n      }, (start, end) => {\n        let str = line.substring(start, end);\n        if (matches) {\n          str = highlightMatches(str, matches, start);\n        }\n        return str;\n      });\n    } else if (matches) {\n      line = highlightMatches(line, matches, 0);\n    }\n    return (\n      <div className=\"TextLine\" key={key} style={style}>\n        <span className=\"line\" data-line-number={index + 1}/>\n        {line}{\"\\n\"}\n        <span className=\"eol\"/>\n      </div>\n    );\n  }\n\n  rowMeasure = ({index}) => {\n    if (this.props.padding) {\n      if (index === 0 || index > this.props.lines.length) {\n        return this.props.padding;\n      } else {\n        index -= 1;\n      }\n    }\n    return this.props.heights[index];\n  }\n\n  componentDidUpdate() {\n    if (this._lines !== this.props.lines) {\n      this._list.recomputeRowHeights();\n      this._lines = this.props.lines;\n      this.selection = {};\n    }\n  }\n\n  setScroll = scrollTop => {\n    if (this._list) {\n      this._list.scrollToPosition(scrollTop);\n    } else {\n      this._scrollTop = scrollTop;\n    }\n  }\n  setList = e => {\n    this._list = e;\n    this._node = ReactDOM.findDOMNode(e);\n    if (this._scrollTop != null) {\n      this._list.scrollToPosition(this._scrollTop);\n      delete this._scrollTop;\n    }\n  }\n\n  render() {\n    const {\n      className,\n      onScroll,\n      heights,\n      lines,\n      highlightExpr,\n      highlightFunc,\n      padding,\n      ...props\n    } = this.props;\n    let count = lines.length + (padding ? 2 : 0);\n    if (this._heights !== heights) {\n      this._heights = heights;\n      this._avgHeight = heights.reduce((sum, h) => sum + h, (padding || 0) * 2) / count;\n    }\n    return <List\n      className={classNames(className, \"TextView\")}\n      ref={this.setList}\n      rowCount={count}\n      estimatedRowSize={this._avgHeight}\n      onScroll={createChainedFunction(this.onScroll, onScroll)}\n      cellRangeRenderer={this.cellRangeRenderer}\n      rowHeight={this.rowMeasure}\n      rowRenderer={this.rowRenderer}\n      {...props}\n    />;\n  }\n}\n","import React from 'react';\n\nconst makeRegex = (str, middle) => {\n  const prefix = (middle && !str.match(/^\\s/) ? \"\" : \"\\\\b\") + \"(\";\n  const suffix = \")\" + (str.match(/\\s$/) ? \"\\\\b\" : \"\");\n  str = str.trim().replace(/[-[\\]/{}()*+?.\\\\^$|]/g, \"\\\\$&\");\n  if (!str) return;\n  return new RegExp(prefix + str + suffix, \"i\");\n};\nconst underlinerFunc = (value, regex) => {\n  let found = false;\n  return value.split(regex).map((str, index) => {\n    if (!found && str.match(regex)) {\n      found = true;\n      return <u key={index}>{str}</u>;\n    } else {\n      return str;\n    }\n  });\n};\n\nfunction replaceReact(text, regex, func, plain) {\n  const result = [];\n  let prev = 0, match;\n  if (!plain) {\n    plain = (start, end) => text.substring(start, end);\n  }\n  const append = val => {\n    if (val == null) {\n      return;\n    } else if (typeof val === \"string\" && result.length && typeof result[result.length - 1] === \"string\") {\n      result[result.length - 1] += val;\n    } else {\n      result.push(val);\n    }\n  }\n  while ((match = regex.exec(text))) {\n    if (match.index > prev) {\n      append(plain(prev, match.index));\n    }\n    const element = func(match);\n    if (React.isValidElement(element)) {\n      append(React.cloneElement(element, {key: match.index}));\n    } else {\n      append(element);\n    }\n    prev = match.index + match[0].length;\n  }\n  if (prev < text.length) {\n    append(plain(prev, text.length));\n  }\n  return result;\n}\n\nexport { makeRegex, underlinerFunc, replaceReact };\n","import React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport { SearchBox } from 'utils';\nimport TextView from 'text/TextView';\n\nexport default class FileTextView extends React.PureComponent {\n  onSearch = (text, dir) => {\n    if (this._list) {\n      return this._list.search(text, dir);\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const { lines, heights } = this.props;\n    return (\n      <React.Fragment>\n        <SearchBox onSearch={this.onSearch}/>\n        <AutoSizer>\n          {({width, height}) => (\n            <TextView ref={e => this._list = e}\n                      width={width}\n                      height={height}\n                      lines={lines}\n                      heights={heights}\n                      padding={6}/>\n          )}\n        </AutoSizer>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\n\nconst imageInfo = data => {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n  if (view.getUint32(0, false) === 0x424C5031) { // BLP1\n    return {\n      format: \"BLP\",\n      width: view.getUint32(12, true),\n      height: view.getUint32(16, true),\n    };\n  } else if (view.getUint32(0, false) === 0x424C5032) { // BLP2\n    return {\n      format: \"BLP v2\",\n      width: view.getUint32(12, true),\n      height: view.getUint32(16, true),\n    };\n  } else if (view.getUint32(0, false) === 0x44445320) { // DDS\n    return {\n      format: \"DDS\",\n      width: view.getUint32(16, true),\n      height: view.getUint32(12, true),\n    };\n  } else if (view.getUint32(0, false) === 0x47494638 && (data[4] === 0x37 || data[4] === 0x39) && data[5] === 0x61) { // GIF87a / GIF89a\n    const bpp = 1 + 7 & data[10];\n    const hdrPos = 13 + 3 * bpp;\n    return {\n      format: \"GIF\",\n      width: view.getInt16(hdrPos + 5, true),\n      height: view.getInt16(hdrPos + 7, true),\n    };\n  } else if (view.getUint32(0, false) === 0x89504E47 && view.getUint32(4, false) === 0x0D0A1A0A) { // PNG\n    return {\n      format: \"PNG\",\n      width: view.getUint32(16, false),\n      height: view.getUint32(20, false),\n    };\n  } else if (data[0] === 0xFF && data[1] === 0xD8 && data[2] === 0xFF && data[data.length - 2] === 0xFF && data[data.length - 1] === 0xD9) {\n    return {\n      format: \"JPG\",\n      width: \"?\",\n      height: \"?\",\n    };\n  } else { // TGA ?\n    return {\n      format: \"TGA\",\n      width: view.getInt16(12, true),\n      height: view.getInt16(14, true),\n    };\n  }\n};\n\nexport default class FileImageView extends React.PureComponent {\n  render() {\n    const { data, image, name } = this.props;\n    const info = data && imageInfo(data);\n    return (\n      <div>\n        {info != null && <div>{info.width}x{info.height} ({info.format})</div>}\n        <div>\n          <img src={image} alt={name || \"Extracted\"}/>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class FileAudioView extends React.PureComponent {\n  render() {\n    const { audio } = this.props;\n    return (\n      <div>\n        <audio controls controlsList=\"nodownload\" src={audio}/>\n      </div>\n    );\n  }\n}\n","export default function parseKeywords(meta) {\n  const out = {};\n\n  out[\"globals\"] = \"jkey\";\n  out[\"endglobals\"] = \"jkey\";\n  out[\"local\"] = \"jkey\";\n  out[\"type\"] = \"jkey\";\n  out[\"constant\"] = \"jkey\";\n  out[\"native\"] = \"jkey\";\n  out[\"function\"] = \"jkey\";\n  out[\"takes\"] = \"jkey\";\n  out[\"returns\"] = \"jkey\";\n  out[\"endfunction\"] = \"jkey\";\n  out[\"return\"] = \"jkey\";\n  out[\"set\"] = \"jkey\";\n  out[\"call\"] = \"jkey\";\n  out[\"if\"] = \"jkey\";\n  out[\"then\"] = \"jkey\";\n  out[\"endif\"] = \"jkey\";\n  out[\"else\"] = \"jkey\";\n  out[\"elseif\"] = \"jkey\";\n  out[\"loop\"] = \"jkey\";\n  out[\"endloop\"] = \"jkey\";\n  out[\"exitwhen\"] = \"jkey\";\n  out[\"or\"] = \"jkey\";\n  out[\"and\"] = \"jkey\";\n  out[\"not\"] = \"jkey\";\n\n  out[\"array\"] = \"jtyp\";\n  out[\"integer\"] = \"jtyp\";\n  out[\"real\"] = \"jtyp\";\n  out[\"string\"] = \"jtyp\";\n  out[\"boolean\"] = \"jtyp\";\n  out[\"code\"] = \"jtyp\";\n  out[\"handle\"] = \"jtyp\";\n  out[\"nothing\"] = \"jtyp\";\n\n  out[\"null\"] = \"jcon\";\n\n  const common = (meta.loadFile(\"Scripts\\\\common.j\") || \"\").split(/[\\r\\n]/);\n  const commonRe = /^\\s*(?:constant\\s+)?(\\w+)\\s+(?:array\\s+)?(\\w+)\\b/;\n  common.forEach(line => {\n    const m = line.match(commonRe);\n    if (m) {\n      if (m[1] === \"native\") {\n        out[m[2]] = \"jnat\";\n      } else if (m[1] === \"type\") {\n        out[m[2]] = \"jtyp\";\n      } else {\n        out[m[2]] = \"jcon\";\n      }\n    }\n  });\n\n  const blizzard = (meta.loadFile(\"Scripts\\\\Blizzard.j\") || \"\").split(/[\\r\\n]/);\n  let inFunc = false, inGlob = false;\n  blizzard.forEach(line => {\n    let m;\n    if (inFunc) {\n      if (line.match(/^\\s*endfunction\\b/)) {\n        inFunc = false;\n      }\n    } else if ((m = line.match(/^\\s*(globals|endglobals)\\b/))) {\n      inGlob = (m[1] === \"globals\");\n    } else if (inGlob) {\n      if ((m = line.match(/^\\s*(?:constant\\s+)?\\w+\\s+(?:array\\s+)?(\\w+)\\b/))) {\n        out[m[1]] = \"jcon\";\n      }\n    } else {\n      if ((m = line.match(/^\\s*(?:constant\\s+)?function\\s+(\\w+)\\b/))) {\n        out[m[1]] = \"jbjf\";\n      }\n    }\n  });\n\n  return out;\n}\n","import React from 'react';\nimport { AutoSizer } from 'react-virtualized';\nimport { SearchBox } from 'utils';\nimport TextView from 'text/TextView';\nimport AppCache from 'data/cache';\nimport { withAsync } from 'utils';\nimport parseKeywords from 'jass/keywords';\n\nconst tokenRe = /([a-z_]\\w*)|(0x[0-9a-z]+|\\d+\\.?|\\d*\\.\\d+)|('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')|(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")|(\\/\\/.*)/gi;\nconst RowHeight = 16;\n\nclass FileJassInner extends React.PureComponent {\n  onSearch = (text, dir) => this._list ? this._list.search(text, dir) : null;\n\n  constructor(props) {\n    super(props);\n    this.keywords = parseKeywords(props.meta);\n  }\n\n  tokenFunc = (text, [all, id, num, chr, str, com]) => {\n    if (id) {\n      const kw = this.keywords[id];\n      if (kw) {\n        return <span className={kw}>{text}</span>;\n      } else {\n        return text;\n      }\n    } else if (num) {\n      return <span className=\"jnum\">{text}</span>;\n    } else if (chr) {\n      return <span className=\"jchr\">{text}</span>;\n    } else if (str) {\n      return <span className=\"jstr\">{text}</span>;\n    } else if (com) {\n      return <span className=\"jcom\">{text}</span>;\n    } else {\n      return text;\n    }\n  };\n  \n  render() {\n    const {lines} = this.props;\n    const heights = lines.map(line => line.split(\"\\n\").length * RowHeight);\n    return (\n      <React.Fragment>\n        <SearchBox onSearch={this.onSearch}/>\n        <AutoSizer>\n          {({width, height}) => (\n            <TextView ref={e => this._list = e}\n                    className=\"JassColors\"\n                    width={width}\n                    height={height}\n                    lines={lines}\n                    heights={heights}\n                    highlightExpr={tokenRe}\n                    highlightFunc={this.tokenFunc}/>\n          )}\n        </AutoSizer>\n      </React.Fragment>\n    );\n  }\n}\n\nconst FileJassView = withAsync({\n  meta: (props, context) => context.meta(),\n}, FileJassInner, undefined, undefined);\nFileJassView.contextType = AppCache.Context;\n\nexport default FileJassView;\n","import React from 'react';\nimport classNames from 'classnames';\nimport pathHash, { makeUid, parseUid, equalUid } from 'data/hash';\nimport { Glyphicon } from 'react-bootstrap';\nimport { downloadBlob } from 'utils';\nimport SlkFile from 'mdx/parsers/slk/file';\nimport encoding from 'text-encoding';\nimport Title from 'data/title';\nimport { ObjectInspector, TableInspector } from 'react-inspector';\nimport FileSlkView from './FileSlk2';\nimport FileHexView from './FileHex';\nimport FileTextView from './FileText';\nimport FileImageView from './FileImage';\nimport FileAudioView from './FileAudio';\nimport FileModelView from './FileModel';\nimport FileJassView from './FileJass';\n\nimport Formats from 'mdx/parsers/w3x';\nimport ObjectPreviewEx from './ObjectPreviewEx';\n\nconst gameFileTypes = {\n  \"war3map.doo\": Formats.doo.File,\n  \"war3map.imp\": Formats.imp.File,\n  \"war3map.mmp\": Formats.mmp.File,\n  \"war3map.shd\": Formats.shd.File,\n  \"war3mapUnits.doo\": Formats.unitsdoo.File,\n  \"war3map.w3c\": Formats.w3c.File,\n  \"war3map.w3d\": Formats.w3d.File,\n  \"war3map.w3e\": Formats.w3e.File,\n  \"war3map.w3f\": Formats.w3f.File,\n  \"war3map.w3i\": Formats.w3i.File,\n  \"war3map.w3o\": Formats.w3o.File,\n  \"war3map.w3r\": Formats.w3r.File,\n  \"war3map.w3s\": Formats.w3s.File,\n  \"war3map.w3u\": Formats.w3u.File,\n  \"war3map.wct\": Formats.wct.File,\n  \"war3map.wpm\": Formats.wpm.File,\n  \"war3map.wtg\": Formats.wtg.File,\n  \"war3map.wts\": Formats.wts.File,\n};\n\nconst nodeRenderer = ({ depth, name, data, isNonenumerable, expanded }) => {\n  if (depth === 0) {\n    if (typeof name === 'string') {\n      return (\n        <span>\n          <span>{name}</span>\n          <span>: </span>\n          <ObjectPreviewEx data={data} />\n        </span>\n      );\n    } else {\n      return <ObjectPreviewEx data={data} />;\n    }\n  } else {\n    // return <ObjectLabel name={name} data={data} isNonenumerable={isNonenumerable} />;\n    return <span>{name}</span>\n  }\n};\n\nexport class FileData extends React.Component {\n  constructor(props) {\n    super(props);\n    const { id, data } = this.props;\n    const state = { panel: \"hex\" };\n    const file = data && data.archive && data.archive.loadBinary(id);\n    if (file) {\n      this.binary = file.data;\n      this.flags = file.flags;\n      if (this.flags & 1) {\n        const text = new encoding.TextDecoder().decode(this.binary);\n        const lines = text.split(/\\r\\n?|\\n/);\n        if (this.isJass()) {\n          this.jass = lines;\n          state.panel = \"jass\";\n        } else {\n          this.text = [];\n          const maxLength = 2048;\n          lines.forEach(line => {\n            if (line.length > maxLength) {\n              for (let i = 0; i < line.length; i += maxLength) {\n                this.text.push(line.substr(i, maxLength));\n              }\n            } else {\n              this.text.push(line);\n            }\n          });\n          this.textHeights = this.text.map(() => 16);\n          state.panel = \"text\";\n\n          try {\n            this.slk = new SlkFile(text);\n            state.panel = \"slk\";\n          } catch (e) {\n          }\n        }\n      }\n      if (this.flags & 6) {\n        const blob = new Blob([this.binary], { type: (this.flags & 4) ? \"audio/mpeg\" : \"audio/wav\" });\n        this.audio = URL.createObjectURL(blob);\n        state.panel = \"audio\";\n      }\n      if (this.flags & 8) {\n        state.panel = \"model\";\n      }\n      this.image = data.archive.loadImage(id);\n      if (this.image) {\n        state.panel = \"image\";\n      }\n      const name = this.getName();\n      if (gameFileTypes[name]) {\n        try {\n          this.data = new gameFileTypes[name](this.binary.buffer);\n          state.panel = \"data\";\n        } catch (e) {\n          console.error(name,'Unable to decoding map content. ',e);\n        }\n      }\n    }\n    this.state = state;\n  }\n\n  makePanel(name, title) {\n    return <li key={name} className={classNames(\"tab-button\", { \"active\": this.state.panel === name })}\n      onClick={() => this.setState({ panel: name })}>{title}</li>;\n  }\n\n\n  renderPane() {\n    const { panel } = this.state;\n    switch (panel) {\n      case \"hex\": return <FileHexView data={this.binary} />;\n      case \"slk\": return <FileSlkView data={this.slk} />;\n      case \"text\": return <FileTextView lines={this.text} heights={this.textHeights} />;\n      case \"jass\": return <FileJassView lines={this.jass} />;\n      case \"audio\": return <FileAudioView audio={this.audio} />;\n      case \"model\": return <FileModelView id={this.props.id} />;\n      case \"image\": return <FileImageView data={this.binary} image={this.image} />;\n      case \"data\":\n        console.log(this.data)\n        return <ObjectInspector expandLevel={1} data={this.data} />;\n      // case \"data\": throw Error('missing component')\n      default: return null;\n    }\n  }\n\n  getName() {\n    let { data, id } = this.props;\n    if (this.name) {\n      return this.name;\n    }\n    const listfile = data.file(\"listfile.txt\");\n    if (listfile) {\n      const names = listfile.split(\"\\n\").filter(n => n.length > 0);\n      const name = names.find(path => {\n        const unk = path.match(/^Unknown\\\\([0-9A-F]{16})/);\n        const key = unk ? parseUid(unk[1]) : pathHash(path);\n        return equalUid(key, id);\n      });\n      if (name != null) {\n        const parts = name.split(/[\\\\/]/);\n        return this.name = parts[parts.length - 1];\n      }\n    }\n    return this.name = makeUid(id);\n  }\n\n  isJass() {\n    const name = this.getName();\n    if (name && name.match(/\\.j$/i)) {\n      return true;\n    }\n    const id = this.props.id;\n    return equalUid(pathHash('war3map.j'), id) || equalUid(pathHash('Scripts/war3map.j'), id);\n  }\n\n  onDownload = () => {\n    const blob = new Blob([this.binary], { type: \"application/octet-stream\" });\n    downloadBlob(blob, this.getName());\n  }\n\n  render() {\n    if (!this.binary) {\n      return null;\n    }\n\n    return (\n      <div className=\"FileData\">\n        <Title title={this.getName()} />\n        <ul className=\"tab-line\">\n          <li key=\"dl\" className=\"tab-xbutton\" onClick={this.onDownload}>Download <Glyphicon glyph=\"download-alt\" /></li>\n          {this.makePanel(\"hex\", \"Hex\")}\n          {this.text != null && this.makePanel(\"text\", \"Text\")}\n          {this.jass != null && this.makePanel(\"jass\", \"JASS\")}\n          {this.slk != null && this.makePanel(\"slk\", \"SLK\")}\n          {this.audio != null && this.makePanel(\"audio\", \"Audio\")}\n          {(this.flags & 8) !== 0 && this.makePanel(\"model\", \"Model\")}\n          {this.image != null && this.makePanel(\"image\", \"Image\")}\n          {this.data != null && this.makePanel(\"data\", \"Data\")}\n        </ul>\n        <div className={classNames(\"tab-pane\", this.state.panel)}>\n          {this.renderPane()}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nconst Cell = ({type: Type, value, comment}) => {\n  comment = comment && comment.replace(\"\\x1b\", \"\\n\");\n  const cell = value == null || value == \"\" ? <Type title={comment}>&nbsp;</Type> : <Type title={comment}>{value.toString()}</Type>;\n  return cell;\n}\n\nexport default class FileSlkView extends React.PureComponent {\n  render() {\n    const { data } = this.props;\n    const iotaX = [...Array(data.cols)].map((_, i) => i);\n    const iotaY = [...data.rows].map((_, i) => i);\n    return (\n      <div className=\"FileSlk\">\n        <table>\n          {data.rows.length >= 1 && <thead>\n            <tr>\n              {iotaX.map(i => <Cell type=\"th\" key={i} value={data.rows[0][i] || \"\"} comment={data.comments && data.comments[0] && data.comments[0][i]}/>)}\n            </tr>\n          </thead>}\n          <tbody>\n            {iotaY.filter(i => i > 0).map(i => (\n              <tr key={i}>\n                {iotaX.map(j => <Cell type=\"td\" key={j} value={data.rows[i] ? data.rows[i][j] : undefined}\n                  comment={data.comments && data.comments[i] && data.comments[i][j]}/>)}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport pathHash, { parseUid, equalUid } from 'data/hash';\nimport { Glyphicon } from 'react-bootstrap';\nimport { downloadBlob, withAsync } from 'utils';\nimport SlkFile from 'mdx/parsers/slk/file';\nimport encoding from 'text-encoding';\nimport Title from 'data/title';\n\nimport FileSlkView from './FileSlk';\nimport FileHexView from './FileHex';\nimport FileTextView from './FileText';\nimport FileImageView from './FileImage';\nimport FileModelView from './FileModel';\nimport FileJassView from './FileJass';\n\nconst GameFileImage = ({image, name}) => (\n  <div className=\"FileData\">\n    <ul className=\"tab-line\">\n      <li className=\"tab-button active\">Image</li>\n    </ul>\n    <div className=\"tab-pane image\">\n      <FileImageView image={image} name={name}/>\n    </div>\n  </div>\n);\n\nclass GameFileInner extends React.Component {\n  constructor(props) {\n    super(props);\n    const {name, data} = props;\n\n    const state = {panel: \"hex\"};\n\n    const ext = name.substr(name.lastIndexOf(\".\")).toLowerCase();\n    if (ext === \".mdx\") {\n      this.model = true;\n      state.panel = \"model\";\n    } else if (ext === \".j\") {\n      const text = new encoding.TextDecoder().decode(data);\n      this.jass = text.split(/\\r\\n?|\\n/);\n      state.panel = \"jass\";\n    } else if (ext === \".txt\" || ext === \".slk\") {\n      const text = new encoding.TextDecoder().decode(data);\n      const lines = text.split(/\\r\\n?|\\n/);\n      this.text = [];\n      const maxLength = 2048;\n      lines.forEach(line => {\n        if (line.length > maxLength) {\n          for (let i = 0; i < line.length; i += maxLength) {\n            this.text.push(line.substr(i, maxLength));\n          }\n        } else {\n          this.text.push(line);\n        }\n      });\n      this.textHeights = this.text.map(() => 16);\n      state.panel = \"text\";\n      if (ext === \".slk\") {\n        try {\n          this.slk = new SlkFile(text);\n          state.panel = \"slk\";\n        } catch (e) {\n        }\n      }\n    }\n    this.state = state;\n  }\n\n  makePanel(name, title) {\n    return <li key={name} className={classNames(\"tab-button\", {\"active\": this.state.panel === name})}\n      onClick={() => this.setState({panel: name})}>{title}</li>;\n  }\n\n\n  renderPane() {\n    const { panel } = this.state;\n    switch (panel) {\n    case \"hex\": return <FileHexView data={this.props.data}/>;\n    case \"text\": return <FileTextView lines={this.text} heights={this.textHeights}/>;\n    case \"jass\": return <FileJassView lines={this.jass}/>;\n    case \"model\": return <FileModelView id={this.props.id}/>;\n    case \"slk\": return <FileSlkView data={this.slk}/>;\n    default: return null;\n    }\n  }\n\n  onDownload = () => {\n    const blob = new Blob([this.props.data], {type: \"application/octet-stream\"});\n    downloadBlob(blob, this.props.name);\n  }\n\n  render() {\n    return (\n      <div className=\"FileData\">\n        <Title title={this.props.name}/>\n        <ul className=\"tab-line\">\n          <li key=\"dl\" className=\"tab-xbutton\" onClick={this.onDownload}>Download <Glyphicon glyph=\"download-alt\"/></li>\n          {this.makePanel(\"hex\", \"Hex\")}\n          {this.text != null && this.makePanel(\"text\", \"Text\")}\n          {this.jass != null && this.makePanel(\"jass\", \"JASS\")}\n          {this.slk != null && this.makePanel(\"slk\", \"SLK\")}\n          {!!this.model && this.makePanel(\"model\", \"Model\")}\n        </ul>\n        <div className={classNames(\"tab-pane\", this.state.panel)}>\n          {this.renderPane()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst GameFileLoader = withAsync({\n  data: ({data}) => data,\n}, GameFileInner, undefined, undefined);\n\nclass GameFileDataFinder extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    const {id, data, listFile} = this.props;\n\n    const names = listFile.split(\"\\n\").filter(n => n.length > 0);\n    this.name = names.find(path => {\n      const unk = path.match(/^Unknown\\\\([0-9A-F]{16})/);\n      const key = unk ? parseUid(unk[1]) : pathHash(path, true);\n      return equalUid(key, id);\n    });\n    if (this.name != null) {\n      this.name = this.name.split(/[\\\\/]/).pop();\n      const ext = this.name.substr(this.name.lastIndexOf(\".\")).toLowerCase();\n\n      if ([\".blp\", \".dds\", \".gif\", \".jpg\", \".jpeg\", \".png\", \".tga\"].indexOf(ext) >= 0) {\n        this.image = data.image(id);\n      } else {\n        this.data = fetch(data.cache.binary(id))\n          .then(response => response.ok ? response.arrayBuffer() : Promise.reject())\n          .then(ab => new Uint8Array(ab));\n      }\n    }\n  }\n  render() {\n    const { data, id } = this.props;\n    if (this.image) {\n      return <GameFileImage image={this.image} name={this.name}/>;\n    } else if (this.data) {\n      return <GameFileLoader data={this.data} name={this.name} id={id}/>;\n    } else {\n      return <span className=\"message\">File not found</span>;\n    }\n  }\n}\n\nexport const GameFileData = withAsync({\n  listFile: ({data}) => data.listFile(),\n}, GameFileDataFinder, undefined, undefined);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { IdCtx } from './FileCtx';\n\nimport Panel from 'react-flex-panel';\nimport AppCache from 'data/cache';\n\nimport { parseUid } from 'data/hash';\n\nimport { FileList } from './FileList';\nimport { FileData } from './FileData';\nimport { GameFileData } from './GameFileData';\n\nimport './FileView.scss';\n\nclass FileViewComponent extends React.Component {\n  static contextType = AppCache.DataContext;\n\n  render() {\n    const data = this.context;\n    const uid = this.props.match.params.id;\n    const key = uid == null ? null : parseUid(uid);\n    return (\n      <IdCtx.Provider value={key}>\n        <div className=\"FileView\">\n          <Panel cols>\n            <FileList size={300} minSize={100} resizable className=\"LeftPanel\" data={data} id={key}/>\n            <Panel className=\"RightPanel\" minSize={100}>\n              {key == null ? (\n                <span className=\"message\">Select a file to view its contents</span>\n              ) : (data.hasFile(key) ? (\n                <FileData data={data} id={key} key={uid}/>\n              ) : (data.archive ? (\n                <span className=\"message\">File not found</span>\n              ) : (\n                <GameFileData data={data} id={key} key={uid}/>\n              )))}\n            </Panel>\n          </Panel>\n        </div>\n      </IdCtx.Provider>\n    );\n  }\n}\n\nexport const FileView = () => <Route path={`/:build/files/:id?`} component={FileViewComponent}/>;\n","import React from 'react';\nimport AppCache from 'data/cache';\nimport tagString from 'data/tagString';\n\nexport default class MapHome extends React.Component {\n  static contextType = AppCache.DataContext;\n\n  render() {\n    const data = this.context;\n    let info = data.file(\"info.json\");\n    if (info) {\n      info = JSON.parse(info);\n    }\n    let image = null;\n    if (data.archive) {\n      image = data.archive.loadImage(\"war3mapPreview.tga\");\n      if (!image) {\n        image = data.archive.loadImage(\"war3mapMap.blp\");\n      }\n    }\n    return (\n      <div className=\"HomePage\">\n        <h3>{data.core ? \"Warcraft III Patch \" : \"\"}{data.name}</h3>\n        {info != null && (\n          <ul className=\"mapInfo\">\n            <li><b>Name:</b> <span>{tagString(info.name)}</span></li>\n            <li><b>Suggested Players:</b> <span>{tagString(info.players)}</span></li>\n            <li><b>Description:</b> <span>{tagString(info.description)}</span></li>\n            <li><b>Author:</b> <span>{tagString(info.author)}</span></li>\n            <li>\n              {image != null && <img src={image} alt=\"Map preview\" />}\n            </li>\n          </ul>\n        )}\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport keycode from 'keycode';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, NavItem, FormGroup, Glyphicon, Popover } from 'react-bootstrap';\nimport { AutoSizer } from 'react-virtualized';\nimport AppCache from 'data/cache';\nimport Options from 'data/options';\nimport { withAsync, OverlayNav, ScrollSaver, downloadBlob } from 'utils';\nimport parseKeywords from './keywords';\nimport encoding from 'text-encoding';\n\nimport TextView from 'text/TextView';\n\nimport './JassView.scss';\n\nconst tokenRe = /([a-z_]\\w*)|(0x[0-9a-z]+|\\d+\\.?|\\d*\\.\\d+)|('[^'\\\\]*(?:\\\\.[^'\\\\]*)*')|(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")|(\\/\\/.*)/gi;\n\nconst RowHeight = 16;\n\nconst numOption = (setter, key, e) => {\n  const val = parseInt(e.target.value, 10);\n  if (!isNaN(val)) {\n    setter(key, val);\n  }\n}\n\nconst JassOptions = ({options, setOption, ...props}) => {\n  const flag = name => <input type=\"checkbox\" checked={!!options[name]} onChange={e => setOption(name, e.target.checked ? 1 : 0)}/>;\n  const number = name => <input type=\"number\" min={1} max={10} step={1} value={options[name]} onChange={e => numOption(setOption, name, e)}/>;\n  return (\n    <Popover id=\"jass-options\" {...props}>\n      <form>\n        <label>{flag(\"indentFlag\")} Auto Indent</label>\n        {!!options.indentFlag && (\n          <label className=\"indent\">Amount {number(\"indent\")}</label>\n        )}\n        <label>{flag(\"restoreInt\")} Restore numbers</label>\n        <label>{flag(\"restoreId\")} Restore object IDs</label>\n        <label>{flag(\"insertLines\")} Insert blank lines</label>\n        <label>{flag(\"restoreStrings\")} Restore trigger strings</label>\n        <label>{flag(\"renameFunctionsFlag\")} Rename functions</label>\n        {!!options.renameFunctionsFlag && (\n          <label className=\"indent\">Max length {number(\"renameFunctions\")}</label>\n        )}\n        <label>{flag(\"renameGlobalsFlag\")} Rename globals</label>\n        {!!options.renameGlobalsFlag && (\n          <label className=\"indent\">Max length {number(\"renameGlobals\")}</label>\n        )}\n        <label>{flag(\"renameLocalsFlag\")} Rename locals</label>\n        {!!options.renameLocalsFlag && (\n          <label className=\"indent\">Max length {number(\"renameLocals\")}</label>\n        )}\n        <label>{flag(\"inlineFunctions\")} Inline one-line functions</label>\n        <label>{flag(\"getObjectName\")} Restore getObjectName strings</label>\n      </form>\n    </Popover>\n  );\n}\n\nclass JassViewer extends React.Component {\n  state = {\n    searchResults: null,\n    searchText: \"\",\n  }\n\n  search(text, dir) {\n    this.setState({\n      searchText: text,\n      searchResults: this._list ? this._list.search(text, dir) : null,\n    });\n  }\n  \n  findPrev = () => this.search(this.state.searchText, -1);\n  findNext = () => this.search(this.state.searchText, 1);\n  onSearchChange = e => this.search(e.target.value, 0);\n  onSearchKeyDown = e => {\n    switch (e.which) {\n    case keycode.codes.enter:\n      this.search(this.state.searchText, 1);\n      e.preventDefault();\n      break;\n    case keycode.codes.esc:\n      this.search(\"\", 0);\n      e.preventDefault();\n      break;\n    default:\n    }\n  }\n  onKeyDown = e => {\n    const { searchText } = this.state;\n    switch (e.which) {\n    case keycode.codes.f3:\n      if (e.shiftKey) {\n        this.search(searchText, -1);\n      } else {\n        this.search(searchText, 1);\n      }\n      if (this._search) {\n        this._search.focus();\n        this._search.select();\n      }\n      e.preventDefault();\n      break;\n    case keycode.codes.f:\n      if (e.ctrlKey && this._search) {\n        this._search.focus();\n        this._search.select();\n        e.preventDefault();\n      }\n      break;\n    default:\n    }\n  }\n\n  tokenFunc = (text, [all, id, num, chr, str, com]) => {\n    const { data, keywords, objects } = this.props;\n    if (id) {\n      const kw = keywords[id];\n      if (kw) {\n        return <span className={kw}>{text}</span>;\n      } else {\n        return text;\n      }\n    } else if (num) {\n      return <span className=\"jnum\">{text}</span>;\n    } else if (chr) {\n      const m = chr.match(/^'(.*)'$/);\n      const obj = m && objects.objects.find(o => o.id === m[1]);\n      const elt = <span className=\"jchr\">{text}</span>;\n      if (obj) {\n        return (\n          <Link to={`/${data.id}/${obj.type}/${obj.id}`} title={obj.name}>\n            {elt}\n          </Link>\n        );\n      } else {\n        return elt;\n      }\n    } else if (str) {\n      return <span className=\"jstr\">{text}</span>;\n    } else if (com) {\n      return <span className=\"jcom\">{text}</span>;\n    } else {\n      return text;\n    }\n  };\n\n  onDownload = () => {\n    const text = this.props.lines.join(\"\\n\").replace(\"\\n\", \"\\r\\n\");\n    const encoded = new encoding.TextEncoder().encode(text);\n    const blob = new Blob([encoded], {type: \"text/plain\"});\n    downloadBlob(blob, \"war3map.j\");\n  }\n\n  setScroll = scrollTop => {\n    if (this._list) {\n      this._list.setScroll(scrollTop);\n    } else {\n      this._scrollTop = scrollTop;\n    }\n  }\n  setList = e => {\n    this._list = e;\n    if (this._scrollTop != null) {\n      this._list.setScroll(this._scrollTop);\n      delete this._scrollTop;\n    }\n  }\n\n  render() {\n    const { lines, heights, options, setOption } = this.props;\n    const { searchResults, searchText } = this.state;\n    const results = searchResults && searchResults.count;\n    return (\n      <div className=\"JassView\" onKeyDown={this.onKeyDown}>\n        <Navbar fluid className=\"JassHeader\">\n          <Nav>\n            <NavItem eventKey=\"source\" onClick={this.onDownload}>\n              Download <Glyphicon glyph=\"download-alt\"/>\n            </NavItem>\n            <OverlayNav trigger=\"click\" rootClose placement=\"bottom\" overlay={<JassOptions options={options} setOption={setOption}/>}>\n              <NavItem eventKey=\"format\">\n                Formatting\n              </NavItem>\n            </OverlayNav>\n          </Nav>\n          <Navbar.Form pullLeft>\n            <FormGroup>\n              <div className=\"form-control\">\n                <input type=\"text\"\n                       placeholder=\"Search\"\n                       ref={node => this._search = node}\n                       value={searchText}\n                       onChange={this.onSearchChange}\n                       onKeyDown={this.onSearchKeyDown}/>\n                {!!searchResults && <span className=\"search-tag\">{(searchResults.pos + 1) + \"/\" + searchResults.count}</span>}\n                <button disabled={!results} onClick={this.findPrev} title=\"Previous\"><Glyphicon glyph=\"chevron-up\"/></button>\n                <button disabled={!results} onClick={this.findNext} title=\"Next\"><Glyphicon glyph=\"chevron-down\"/></button>\n              </div>\n            </FormGroup>\n          </Navbar.Form>\n        </Navbar>\n        <ScrollSaver onRef={e => this._saver = e} callback={this.setScroll}/>\n        <div className=\"JassSource\" ref={node => this._node = node}>\n          <AutoSizer>\n            {({width, height}) => (\n              <TextView\n                    className=\"JassLines\"\n                    ref={this.setList}\n                    width={width}\n                    height={height}\n                    lines={lines}\n                    heights={heights}\n                    onScroll={this.onScroll}\n                    highlightExpr={tokenRe}\n                    highlightFunc={this.tokenFunc}/>\n            )}\n          </AutoSizer>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst JassViewerWithData = withAsync({\n  objects: ({data}) => data.objects(),\n}, JassViewer, undefined, undefined);\n\nclass JassViewParser extends React.PureComponent {\n  static contextType = AppCache.DataContext;\n\n  render() {\n    const {options, setOption, meta} = this.props;\n    const data = this.context;\n    const {indentFlag, renameGlobalsFlag, renameFunctionsFlag, renameLocalsFlag, ...realOptions} = options;\n    if (!indentFlag) realOptions.indent = 0;\n    if (!renameGlobalsFlag) realOptions.renameGlobals = 0;\n    if (!renameFunctionsFlag) realOptions.renameFunctions = 0;\n    if (!renameLocalsFlag) realOptions.renameLocals = 0;\n    const lines = data.jass(realOptions);\n    const heights = lines.map(line => line.split(\"\\n\").length * RowHeight);\n    const keywords = parseKeywords(meta);\n\n    return <JassViewerWithData keywords={keywords} data={data} lines={lines} heights={heights} options={options} setOption={setOption}/>;\n  }\n}\n\nclass JassViewInner extends React.Component {\n  static defaultState = {\n    indentFlag: true,\n    indent: 2,\n    restoreInt: 1,\n    restoreId: 1,\n    insertLines: 1,\n    restoreStrings: 1,\n    renameGlobalsFlag: true,\n    renameGlobals: 5,\n    renameFunctionsFlag: true,\n    renameFunctions: 5,\n    renameLocalsFlag: true,\n    renameLocals: 5,\n    inlineFunctions: 1,\n    getObjectName: 1,\n  }\n\n  static contextType = Options.Context;\n\n  get options() {\n    return this.context.jassFormatting || JassViewInner.defaultState;\n  }\n\n  setOption = (name, value) => {\n    const opt = {...this.options};\n    opt[name] = value;\n    this.context.update(\"jassFormatting\", opt);\n  }\n\n  render() {\n    return <JassViewParser meta={this.props.meta} options={this.options} setOption={this.setOption}/>;\n  }\n}\n\nconst JassView = withAsync({\n  meta: (props, context) => context.meta(),\n}, JassViewInner, undefined, undefined);\nJassView.contextType = AppCache.Context;\n\nexport default JassView;\n","import React from 'react';\nimport AppCache from 'data/cache';\nimport ModelViewer from 'mdx';\nimport { withAsync } from 'utils';\nimport { AutoSizer } from 'react-virtualized';\nimport { Link } from 'react-router-dom';\n\nimport { vec3, mat4 } from 'gl-matrix';\n\nimport { ObjectIcon } from 'objects/ObjectCtx';\nimport ObjectTooltip from 'objects/Tooltip';\nimport pathHash from 'data/hash';\n\nconst v3pos = vec3.create(), v3dir = vec3.create(), v3up = vec3.create(), v3sub = vec3.create();\nconst m4rot = mat4.create();\nconst f32rot = new Float32Array(1);\n\n/*\nYnI3 = level 3 campaign\nrde2\nYiI7 = level 7 permanent\n\nYYI/ = any item any level\nYiI/ = any permanent\nYnI/ = any campaign\n\nYYI5 = any level 5\nYoI5 = 5 misc\nYmI5 = 5 purchasable\nYlI5 = 5 artifact\nYkI5 = 5 power up\nYjI5 = 5 charged\n\n\\0\\0\\0Q = first group\nram3\n\\0\\0\\0\\0 = none\n\n\\0\\1\\0Q = second group, pos 0\n\\2\\0\\0Q = first group, pos 2\n*/\n\nconst itemGroupTypes = {\n  'i': 'Permanent',\n  'n': 'Campaign',\n  'o': 'Miscellaneous',\n  'm': 'Purchasable',\n  'l': 'Artifact',\n  'k': 'PowerUp',\n  'j': 'Charged',\n};\n\nfunction computeDrops(unit, viewer) {\n  const drops = [];\n  function addTable({items}) {\n    const output = [];\n    function addItem(id, chance) {\n      const item = viewer.unitsData.find(unit => unit.id === id);\n      if (item && item.type === \"item\") {\n        output.push({item, chance});\n      } else if (id === '\\0\\0\\0\\0') {\n        return;\n      } else if (id[3] === 'Q') {\n        const tableId = id.charCodeAt(1) + id.charCodeAt(2) * 256;\n        const columnId = id.charCodeAt(0);\n        const table = viewer.w3i.randomUnitTables.find(tbl => tbl.id === tableId);\n        if (table) {\n          table.units.forEach(({chance: chance2, ids}) => {\n            if (ids[columnId]) {\n              addItem(ids[columnId], chance * chance2 / 100);\n            }\n          });\n        }\n      } else if (id[0] === 'Y' && id[2] === 'I') {\n        const type = itemGroupTypes[id[1]];\n        const level = (id[3] === '/' ? -1 : parseInt(id[3]));\n        const items = viewer.unitsData.filter(unit => {\n          if (unit.type === 'item') {\n            if (level >= 0 && parseInt(unit.data.level) !== level) {\n              return false;\n            }\n            if (type && unit.data.class !== type) {\n              return false;\n            }\n            return true;\n          } else {\n            return false;\n          }\n        });\n        output.push({name: `Random ${level >= 0 ? 'Level ' + level : 'Any Level'} ${type ? (type === 'PowerUp' ? 'Power Up Item' : type + ' Item') : 'Item'}`, chance, items});\n      }\n    }\n    items.forEach(({id, chance}) => addItem(id, chance));\n    drops.push(output);\n  }\n  if (unit.droppedItemTable >= 0) {\n    const table = viewer.w3i.randomItemTables.find(tbl => tbl.id === unit.droppedItemTable);\n    if (table) {\n      table.sets.forEach(set => addTable(set));\n    }\n  }\n  unit.droppedItemSets.forEach(set => addTable(set));\n  return drops;\n}\n\nconst DropInfo = ({item}) => {\n  const [expanded, setExpanded] = React.useState(false);\n  const cache = React.useContext(AppCache.DataContext);\n  return (\n    <li>\n      <ObjectTooltip id={item.item && item.item.id}>\n        {item.item ? (\n          <a href={`/${cache.id}/${item.item.type}/${item.item.id}`} target=\"_blank\">\n            <ObjectIcon object={item.item}/>\n            {item.chance.toFixed(0)}% - {item.item.name}\n          </a>\n        ) : (\n          <span>\n            <ObjectIcon object={{'icon': pathHash('ReplaceableTextures\\\\WorldEditUI\\\\Editor-Random-Item.blp')}}/>\n            {item.chance.toFixed(0)}% - {item.name}\n            {item.items != null && item.items.length > 0 && <span className=\"listToggle\" onClick={() => setExpanded(!expanded)}>{expanded ? `(hide list)` : `(${item.items.length} items)`}</span>}\n          </span>\n        )}\n      </ObjectTooltip>\n      {item.items != null && expanded && (\n        <ul className=\"ItemDrop\">\n          {item.items.map(item => (\n            <li>\n              <ObjectTooltip id={item.id}>\n                <a href={`/${cache.id}/${item.type}/${item.id}`} target=\"_blank\">\n                  <ObjectIcon object={item}/> {item.name}\n                </a>\n              </ObjectTooltip>\n            </li>\n          ))}\n        </ul>\n      )}\n    </li>\n  );\n};\n\nclass SelectionWindow extends React.Component {\n  coords = {x: 50, y: 50}\n\n  static contextType = AppCache.DataContext;\n\n  unregisterEvents() {\n    document.removeEventListener('mousemove', this.onMouseMove, true);\n    document.removeEventListener('mouseup', this.onMouseUp, true);\n  }\n  componentWillUnmount() {\n    this.unregisterEvents();\n  }\n\n  onMouseDown = e => {\n    this.pressed = {x: e.clientX, y: e.clientY};\n    document.addEventListener('mousemove', this.onMouseMove, true);\n    document.addEventListener('mouseup', this.onMouseUp, true);\n  }\n  onMouseMove = e => {\n    const dx = e.clientX - this.pressed.x, dy = e.clientY - this.pressed.y;\n    this.coords.x += dx;\n    this.coords.y += dy;\n    if (this.element) {\n      this.element.style.left = this.coords.x + 'px';\n      this.element.style.top = this.coords.y + 'px';\n    }\n    this.pressed = {x: e.clientX, y: e.clientY};\n  }\n  onMouseUp = () => {\n    delete this.pressed;\n    this.unregisterEvents();\n  }\n\n  render() {\n    const { gameData, units, viewer, deselect } = this.props;\n    const cache = this.context;\n    const style = {left: this.coords.x, top: this.coords.y};\n    if (!units.length) {\n      style.display = \"none\";\n    }\n    const misc = gameData.getSection('Misc');\n    const makeXpFunction = (xpTable, xpA, xpB, xpC) => {\n      return function xpFunction(level) {\n        if (level <= 0) {\n          return 0;\n        } if (level <= xpTable.length) {\n          return xpTable[level - 1];\n        } else {\n          return xpA * xpFunction(level - 1) + xpB * level + xpC;\n        }\n      };\n    };\n    const xpFunction = makeXpFunction(\n      misc.get('grantnormalxp').split(',').map(x => parseInt(x)),\n      parseInt(misc.get('grantnormalxpformulaa')),\n      parseInt(misc.get('grantnormalxpformulab')),\n      parseInt(misc.get('grantnormalxpformulac'))\n    );\n    let totalXp = 0;\n    const body = (\n      <ul className=\"Body\">\n        {units.map(({unit}) => {\n          const data = viewer.unitsData.find(row => row.id === unit.id);\n          if (!data) {\n            return null;\n          }\n          let dropDiv = null;\n          const drops = computeDrops(unit, viewer);\n          if (drops) {\n            const makeDrop = table => (\n              <ul className=\"ItemDrop\">\n                {table.map(item => <DropInfo item={item}/>)}\n              </ul>\n            );\n            if (drops.length > 1) {\n              dropDiv = (\n                <ul className=\"ItemDrops\">\n                  {drops.map((table, idx) => (\n                    <li>\n                      <span>Dropped Item Set {idx + 1} (Total Chance: {table.reduce((sum, {chance}) => sum + chance, 0).toFixed(0)}%)</span>\n                      {makeDrop(table)}\n                    </li>\n                  ))}\n                </ul>\n              );\n            } else if (drops.length) {\n              dropDiv = makeDrop(drops[0]);\n            }\n          }\n          let levelDiv = null;\n          const level = parseInt(data.data.level);\n          if (!isNaN(level)) {\n            const xp = xpFunction(level);\n            totalXp += xp;\n            levelDiv = <span>&nbsp;({xp} XP)</span>;\n          }\n          return (\n            <li>\n              <ObjectTooltip id={unit.id}>\n                <a href={`/${cache.id}/${data.type}/${data.id}`} target=\"_blank\">\n                  <ObjectIcon object={data}/><span className=\"name\">{data.name}</span> {levelDiv}\n                </a>\n              </ObjectTooltip>\n              {dropDiv}\n            </li>\n          );\n        })}\n      </ul>\n    );\n    return (\n      <div className=\"Selection\" style={style} ref={n => this.element = n}>\n        <div className=\"Heading\" onMouseDown={this.onMouseDown}>Selection{totalXp > 0 ? ` (${totalXp} Total XP)` : ''}</div>\n        {body}\n      </div>\n    );\n  }\n}\nconst AsyncSelectionWindow = withAsync({\n  gameData: ({gameData}) => gameData\n}, SelectionWindow);\n\nexport default class MapHome extends React.Component {\n  static contextType = AppCache.DataContext;\n  state = {\n    notifications: [],\n    selection: [],\n  }\n\n  yaw = 0;\n  pitch = -Math.PI / 4;\n  distance = 2000;\n  center = vec3.create();\n  minDistance = 500;\n  maxDistance = 20000;\n\n  constructor(props, context) {\n    super(props, context);\n    const dataPath = \"Units\\\\MiscGame.txt\";\n    if (context.hasFile(dataPath)) {\n      this.gameData = Promise.resolve(context.file(dataPath));\n    } else {\n      this.gameData = fetch(context.cache.binary(dataPath)).then(b => b.text());\n    }\n    this.gameData = this.gameData.then(text => new ModelViewer.parsers.ini.IniFile(text));\n  }\n  \n  componentWillUnmount() {\n    if (this.frame) {\n      cancelAnimationFrame(this.frame);\n      delete this.frame;\n    }\n    this.removeEvents();\n  }\n\n  onContextMenu = e => {\n    e.preventDefault();\n  }\n  onMouseDown = e => {\n    document.addEventListener(\"mousemove\", this.onMouseMove, true);\n    document.addEventListener(\"mouseup\", this.onMouseUp, true);\n    this.dragStart = this.dragPos = {x: e.clientX, y: e.clientY};\n    this.dragButton = (e.ctrlKey ? 2 : (e.shiftKey ? 1 : 0));\n    e.preventDefault();\n  }\n  onMouseMove = e => {\n    if (this.dragPos && this.canvas) {\n      const dx = e.clientX - this.dragPos.x,\n      dy = e.clientY - this.dragPos.y;\n      const dim = (this.canvas.width + this.canvas.height) / 2;\n      if (this.dragButton === 2) {\n        this.yaw += dx * 2 * Math.PI / dim;\n        this.pitch += dy * 2 * Math.PI / dim;\n        while (this.yaw > Math.PI) {\n          this.yaw -= Math.PI * 2;\n        }\n        while (this.yaw < -Math.PI) {\n          this.yaw += Math.PI * 2;\n        }\n        this.pitch = Math.min(this.pitch, 0);\n        this.pitch = Math.max(this.pitch, -Math.PI / 2 + 0.05);\n      } else if (this.dragButton === 1) {\n        let rc = this.canvas.getBoundingClientRect();\n        let x0 = Math.min(this.dragStart.x, this.dragPos.x) - rc.left;\n        let y0 = Math.min(this.dragStart.y, this.dragPos.y) - rc.top;\n        let x1 = Math.max(this.dragStart.x, this.dragPos.x) - rc.left;\n        let y1 = Math.max(this.dragStart.y, this.dragPos.y) - rc.top;\n        if (this.viewer) {\n          this.dragSelection = this.viewer.selectUnits(x0, y0, x1, y1);\n        }\n        if (this.selrect) {\n          this.selrect.style.display = 'block';\n          this.selrect.style.left = `${x0}px`;\n          this.selrect.style.top = `${y0}px`;\n          this.selrect.style.width = `${x1 - x0}px`;\n          this.selrect.style.height = `${y1 - y0}px`;\n        }\n      } else if (this.dragButton === 0) {\n        const vx = vec3.fromValues(-Math.cos(this.yaw), Math.sin(this.yaw), 0);\n        const vy = vec3.fromValues(vx[1], -vx[0], 0);\n        const vel = this.distance / dim;\n        vec3.scaleAndAdd(this.center, this.center, vx, dx * vel);\n        vec3.scaleAndAdd(this.center, this.center, vy, dy * vel);\n      }\n      this.dragPos = {x: e.clientX, y: e.clientY};\n    }\n    e.preventDefault();\n  }\n  onMouseUp = e => {\n    if (this.dragPos && this.viewer) {\n      if (this.dragButton < 2 && Math.abs(this.dragPos.x - this.dragStart.x) < 5 && Math.abs(this.dragPos.y - this.dragStart.y) < 5) {\n        let rc = this.canvas.getBoundingClientRect();\n        let units = this.viewer.selectUnit(e.clientX - rc.left, e.clientY - rc.top, this.dragButton);\n        this.setState({selection: units});\n      }\n      delete this.dragPos;\n    }\n    if (this.dragSelection) {\n      this.setState({selection: this.dragSelection});\n      delete this.dragSelection;\n    }\n    if (this.selrect) {\n      this.selrect.style.display = 'none';\n    }\n    this.removeEvents();\n    e.preventDefault();\n  }\n  onMouseWheel = e => {\n    if (e.deltaY > 0) {\n      this.distance = Math.min(this.distance * 1.2, this.maxDistance);\n    } else {\n      this.distance = Math.max(this.distance / 1.2, this.minDistance);\n    }\n  }\n\n  removeEvents() {\n    document.removeEventListener(\"mousemove\", this.onMouseMove, true);\n    document.removeEventListener(\"mouseup\", this.onMouseUp, true);\n  }\n\n  \n  animate = ts => {\n    // console.log(ts - this.prevTs);\n    this.prevTs = ts;\n    this.frame = requestAnimationFrame(this.animate);\n    this.scene.camera.viewport([0, 0, this.canvas.width, this.canvas.height]);\n\n    if (this.viewer.mapSize) {\n      const size = this.viewer.mapSize, offset = this.viewer.centerOffset;\n      this.center[0] = Math.max(offset[0], Math.min(this.center[0], 128 * size[0] + offset[0]));\n      this.center[1] = Math.max(offset[1], Math.min(this.center[1], 128 * size[1] + offset[1]));\n      if (!this.rOffsets) {\n        this.rOffsets = [];\n        for (let i = 0; i < 32; ++i) {\n          const ang = Math.random() * Math.PI * 2;\n          const dist = Math.random();\n          this.rOffsets.push([Math.cos(ang) * dist, Math.sin(ang) * dist]);\n        }\n      }\n      this.center[2] = 0;\n      this.rOffsets.forEach(([x, y]) => {\n        this.center[2] += this.viewer.heightAt(this.center[0] + x * this.distance / 4, this.center[1] + y * this.distance / 4);\n      });\n      this.center[2] /= this.rOffsets.length;\n    }\n\n    this.scene.camera.perspective(Math.PI / 4, this.canvas.width / this.canvas.height, this.minDistance / 4, this.maxDistance * 2);\n    this.scene.camera.setRotationAroundAngles(this.yaw, this.pitch, this.center, this.distance);\n\n    this.viewer.updateAndRender();\n  }\n\n  componentWillUnmount() {\n    if (this.frame) {\n      cancelAnimationFrame(this.frame);\n      delete this.frame;\n    }\n    this.unmounted = true;\n  }\n\n  addNotification(text, type, expires) {\n    this.setState(({notifications}) => {\n      let line = {text, type};\n      notifications = [...notifications, line];\n      if (expires > 1000) {\n        setTimeout(() => {\n          if (this.unmounted) return;\n          this.setState(({notifications}) => {\n            let idx = notifications.indexOf(line);\n            if (idx >= 0) {\n              notifications = notifications.slice();\n              line = {...line, expiring: true};\n              notifications[idx] = line;\n            }\n            return {notifications};\n          });\n        }, expires - 1000);\n      } else {\n        line.expiring = true;\n      }\n      setTimeout(() => {\n        if (this.unmounted) return;\n        this.setState(({notifications}) => {\n          let idx = notifications.indexOf(line);\n          if (idx >= 0) {\n            notifications = notifications.slice();\n            notifications.splice(idx, 1);\n          }\n          return {notifications};\n        });\n      }, expires);\n      return {notifications};\n    });\n  }\n  \n  componentDidMount() {\n    if (!this.canvas) {\n      return;\n    }\n    const canvas = this.canvas;\n\n    const data = this.context;\n    const resolvePath = (path, tileset) => {\n      const ext = typeof path === \"string\" ? path.substr(path.lastIndexOf(\".\")).toLowerCase() : \".mdx\";\n      if ([\".blp\", \".dds\", \".gif\", \".jpg\", \".jpeg\", \".png\", \".tga\"].indexOf(ext) >= 0) {\n        return [data.image(path, tileset), \".png\", true];\n      } else {\n        const bin = data.binary(path);\n        if (bin) {\n          return [bin.data.buffer, ext, false];\n        } else {\n          return [data.cache.binary(path, tileset), ext, true];\n        }\n      }\n    };\n\n    this.viewer = new ModelViewer.viewer.handlers.w3x.MapViewer(canvas, resolvePath, data);\n    this.viewer.gl.clearColor(0, 0, 0, 1);\n    this.viewer.on('error', (target, error, reason) => {\n      if (error === \"FailedToFetch\") {\n        this.addNotification(`Failed to load ${target.path}`, 'error', 5000);\n      }\n    });\n    this.viewer.on('idle', () => {\n      this.addNotification('Loading complete!', 'success', 5000);\n    });\n    this.scene = this.viewer.scene;\n\n    this.viewer.loadMap(data);\n\n    this.frame = requestAnimationFrame(this.animate);\n  }\n\n  deselect = () => {\n    if (this.viewer) {\n      this.viewer.deselect();\n    }\n    this.setState({selection: []});\n  }\n\n  render() {\n    const { notifications, selection } = this.state;\n    return (\n      <div className=\"ModelPage\">\n        <div className=\"FileModel\">\n          <AutoSizer>\n            {({width, height}) => (\n              <canvas\n              onMouseDown={this.onMouseDown}\n              onContextMenu={this.onContextMenu}\n              onWheel={this.onMouseWheel}\n              ref={n => this.canvas = n}\n              width={Math.max(width, 100)}\n              height={Math.max(height, 100)}\n              />\n            )}\n          </AutoSizer>\n          <div className=\"selRect\" ref={n => this.selrect = n}/>\n          <ul className=\"log\">\n            {notifications.map(({text, type, expiring}, idx) => <li key={idx} className={type + (expiring ? \" expiring\" : \"\")}>{text}</li>)}\n          </ul>\n          <div className=\"credits\">\n            Model viewer by <a href=\"https://github.com/flowtsohg/mdx-m3-viewer\" target=\"_blank\">flowtsohg@github</a>\n          </div>\n          <AsyncSelectionWindow gameData={this.gameData} units={selection} viewer={this.viewer} deselect={this.deselect}/>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Title from 'data/title';\nimport AppCache from 'data/cache';\n\nimport { ObjectView } from 'objects/ObjectView';\nimport { FileView } from 'files/FileView';\nimport MapHome from './MapHome';\nimport objectTypes from 'objects/types';\nimport JassView from './jass/JassView';\nimport MapView from './MapView';\n\nconst DataView = () => (\n  <AppCache.DataContext.Consumer>\n    {data => {\n      let views = (\n        <Switch>\n          <Route path={`/:build/(${Object.keys(objectTypes).join(\"|\")})`} component={ObjectView}/>\n          <Route path=\"/:build/script\" component={JassView}/>\n          <Route path=\"/:build/map\" component={MapView}/>\n          <Route path=\"/:build/files\" component={FileView}/>\n          <Route path=\"/:build\" exact component={MapHome}/>\n        </Switch>\n      );\n      if (data.isMap) {\n        return (\n          <Title title={data.name}>\n            {views}\n          </Title>\n        )\n      } else {\n        return views;\n      }\n    }}\n  </AppCache.DataContext.Consumer>\n);\n\nexport default DataView;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Panel, FormGroup, FormControl, ControlLabel, HelpBlock, Glyphicon } from 'react-bootstrap';\nimport AppCache from 'data/cache';\nimport { setNotifyComponent } from './notify';\n\nimport './HomePage.scss';\n\nconst MapLink = ({id, name, desc}) => {\n  name = name && name.replace(/\\|(c[0-9a-fA-F]{6,8}|r)/g, \"\");\n  desc = desc && desc.replace(/\\|(c[0-9a-fA-F]{6,8}|r)/g, \"\");\n  if (desc) {\n    return <Link to={`/${id}`}>{name} <span className=\"desc\">{desc}</span></Link>;\n  } else {\n    return <Link to={`/${id}`}>{name}</Link>;\n  }\n};\n\nclass MapList extends React.Component {\n  state = {collapsed: true}\n  toggle = () => {\n    this.setState(({collapsed}) => ({collapsed: !collapsed}));\n  }\n  render() {\n    const {level=0, name, items, paths, descs, Comp = \"div\"} = this.props;\n    const {collapsed} = this.state;\n    const Header = (level ? \"h4\" : \"h3\");\n    const subLists = {};\n    const freeItems = [];\n    Object.keys(items).forEach(id => {\n      let path = paths[id];\n      if (!path || path.indexOf(\"maps/\") !== 0) {\n        return;\n      }\n      path = path.substr(5).split(\"~\");\n      if (path.length > level + 1) {\n        subLists[path[level]] = (subLists[path[level]] || {});\n        subLists[path[level]][id] = items[id];\n      } else {\n        freeItems.push(id);\n      }\n    });\n    freeItems.sort((a, b) => items[a].localeCompare(items[b]));\n    return (\n      <Comp className={collapsed ? \"collapsed map-list\" : \"map-list\"}>\n        <Header onClick={this.toggle}><Glyphicon glyph={collapsed ? \"chevron-right\" : \"chevron-down\"}/> {name}</Header>\n        <ul>\n          {Object.keys(subLists).sort().map(sub => <MapList Comp=\"li\" key={sub} level={level+1} name={sub} items={subLists[sub]} paths={paths} descs={descs}/>)}\n          {freeItems.map(id => <li key={id}><MapLink id={id} name={items[id]} desc={paths[id].match(/campaign/i) ? descs[id] : null}/></li>)}\n        </ul>\n      </Comp>\n    );\n  }\n}\n\nexport default class HomePage extends React.Component {\n  static contextType = AppCache.Context;\n  state = {message: null, messageType: \"info\"}\n\n  setNotification(message, messageType) {\n    this.setState({message, messageType});\n  }\n\n  componentDidMount() {\n    setNotifyComponent(this);\n  }\n  componentWillUnmount() {\n    setNotifyComponent(null);\n  }\n\n  parseFile = e => {\n    const files = e.target.files;\n    if (files.length > 0) {\n      this.context.loadMap(files[0]);\n    }\n  }\n\n  render() {\n    const cache = this.context;\n    cache.custom = cache.custom || {};\n    return (\n      <div className=\"HomePage\">\n        {this.state.message != null && (\n          <Panel bsStyle={this.state.messageType}>\n            <Panel.Heading><Panel.Title>{this.state.message}</Panel.Title></Panel.Heading>\n          </Panel>\n        )}\n        <h3>Warcraft III Data</h3>\n        <ul>\n          {Object.entries(cache.versions).sort((a, b) => parseInt(b[0], 10) - parseInt(a[0], 10)).map(([id, name]) => (\n            <li key={id}><Link to={`/${id}`}>Patch {name}</Link></li>\n          ))}\n        </ul>\n        <AppCache.MapsContext.Consumer>\n          {maps => (\n            <MapList name=\"Standard Maps\" items={maps} paths={cache.custom || {}} descs={cache.customDesc || {}}/>\n          )}\n        </AppCache.MapsContext.Consumer>\n        <h3>Custom Maps</h3>\n        <AppCache.MapsContext.Consumer>\n          {maps => (\n            <ul>\n              {Object.entries(maps).filter(([id]) => !cache.custom[id] || !cache.custom[id].match(/^maps\\//))\n                     .sort((a, b) => a[1].localeCompare(a[2])).map(([id, name]) => {\n                let unload = null;\n                if (cache.isLocal(id)) {\n                  unload = <span className=\"unload\" onClick={() => cache.unloadMap(id)}>(unload)</span>;\n                }\n                return <li key={id}><Link to={`/${id}`}>{name}</Link>{unload}</li>;\n              })}\n            </ul>\n          )}\n        </AppCache.MapsContext.Consumer>\n        <form>\n          <FormGroup controlId=\"loadFile\">\n            <ControlLabel className=\"linkLike\">Load a custom Warcraft III map</ControlLabel>\n            <FormControl style={{display: \"none\"}} type=\"file\" onChange={this.parseFile} accept=\".w3x,.w3m,.mpq\" multiple={false} value=\"\"/>\n            <HelpBlock>\n              <p>Or simply drop the map file onto the page</p>\n              <p>The map will be parsed in your browser, and the data will be stored in browser cache. Nothing is sent to the server.</p>\n            </HelpBlock>\n          </FormGroup>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect } from 'react-router-dom';\nimport { Navbar, Modal, Button, Glyphicon, Panel } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { withAsync } from './utils';\nimport AppCache from './data/cache';\nimport Title from './data/title';\nimport Options from './data/options';\nimport { notifyMessage } from 'notify';\nimport './App.scss';\n\nimport DataMenu from './DataMenu';\nimport DataView from './DataView';\nimport HomePage from './HomePage';\n\nconst Spinner = () => <div className=\"Spinner\" />;\n\nconst WithData = withAsync({\n  data: ({ id }, cache) => cache.data(id)\n}, ({ data, children }) => (\n  <AppCache.DataContext.Provider value={data}>\n    {children}\n  </AppCache.DataContext.Provider>\n), undefined, () => <Redirect to=\"/\" />);\nWithData.contextType = AppCache.Context;\n\nfunction isDropFile(e) {\n  if (e.dataTransfer.items) {\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\n      if (e.dataTransfer.items[i].kind === \"file\") {\n        return true;\n      }\n    }\n  } if (e.dataTransfer.files.length) {\n    return true;\n  }\n  return false;\n}\nfunction getDropFile(e) {\n  if (e.dataTransfer.items) {\n    for (let i = 0; i < e.dataTransfer.items.length; ++i) {\n      if (e.dataTransfer.items[i].kind === \"file\") {\n        return e.dataTransfer.items[i].getAsFile();\n      }\n    }\n  } if (e.dataTransfer.files.length) {\n    return e.dataTransfer.files[0];\n  }\n}\n\nclass App extends React.PureComponent {\n  static contextType = AppCache.Context;\n\n  get build() {\n    return this.props.match.params.build;\n  }\n\n  state = {\n    loading: 0,\n    dropping: 0,\n  }\n\n  onLoading = loading => {\n    this.setState({ loading });\n  }\n\n  componentDidMount() {\n    this.context.subscribe(this.onLoading);\n    document.addEventListener(\"drop\", this.onDrop, true);\n    document.addEventListener(\"dragover\", this.onDragOver, true);\n    document.addEventListener(\"dragenter\", this.onDragEnter, true);\n    document.addEventListener(\"dragleave\", this.onDragLeave, true);\n  }\n  componentWillUnmount() {\n    this.context.unsubscribe(this.onLoading);\n\n    document.removeEventListener(\"drop\", this.onDrop, true);\n    document.removeEventListener(\"dragover\", this.onDragOver, true);\n    document.removeEventListener(\"dragenter\", this.onDragEnter, true);\n    document.removeEventListener(\"dragleave\", this.onDragLeave, true);\n  }\n\n  setDropping(inc) {\n    this.setState(({ dropping }) => ({ dropping: Math.max(dropping + inc, 0) }));\n  }\n\n  onDrop = e => {\n    const file = getDropFile(e);\n    if (file) {\n      e.preventDefault();\n      this.context.loadMap(file);\n    }\n    this.setState({ dropping: 0 });\n  }\n  onDragEnter = e => {\n    e.preventDefault();\n    this.setDropping(1);\n  }\n  onDragOver = e => {\n    if (isDropFile(e)) {\n      e.preventDefault();\n    }\n  }\n  onDragLeave = e => {\n    this.setDropping(-1);\n  }\n\n  render() {\n    //const { versions, loading } = this.state;\n    const build = this.build;\n    if (build && !this.context.hasData(build)) {\n      notifyMessage(`No data for ${build}`, \"warning\");\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <React.Fragment>\n        {this.state.dropping > 0 && <div className=\"DropFrame\" />}\n        <Navbar className=\"app-navbar\" fluid>\n          <Navbar.Header>\n\n            <Navbar.Brand>\n\n              <Link to=\"/\"><span className=\"AppIcon\" /> {\n                !build ? <span style={{padding:\"5px 10px\"}}>WC3 Data</span> : <span></span>\n              }</Link>\n            </Navbar.Brand>\n            {!!build &&\n              <WithData id={build}>\n                <DataMenu />\n              </WithData>}\n          </Navbar.Header>\n        </Navbar>\n        {build ? (\n          <WithData id={build}>\n            <DataView />\n          </WithData>\n        ) : (\n          <HomePage />\n        )}\n        {this.state.loading > 0 && <Spinner />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst AppLoader = withAsync({\n  ready: (props, cache) => cache.ready,\n}, App, undefined, undefined);\nAppLoader.contextType = AppCache.Context;\n\nclass MapDialog extends React.Component {\n  renderStep(index, name) {\n    const { progress, status } = this.props;\n    if (progress >= index || (status != null && status !== false)) {\n      return <li className=\"success\"><Glyphicon glyph=\"ok\" />{name}</li>;\n    } else if (status != null) {\n      return <li className=\"failure\"><Glyphicon glyph=\"remove\" />{name}</li>;\n    } else if (progress === index - 1) {\n      return <li className=\"working\"><Glyphicon glyph=\"ok\" />{name}...</li>;\n    } else {\n      return <li className=\"pending\"><Glyphicon glyph=\"ok\" />{name}</li>;\n    }\n  }\n  render() {\n    const { name, status, error, onHide } = this.props;\n    return (\n      <Modal dialogClassName=\"MapDialog\" show={name != null} onHide={onHide}>\n        <Modal.Header closeButton>\n          <Modal.Title>Processing {name}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ul className=\"load-progress\">\n            {this.renderStep(0, \"Downloading meta data\")}\n            {this.renderStep(1, \"Loading objects\")}\n            {this.renderStep(2, \"Writing objects\")}\n            {this.renderStep(3, \"Identifying files\")}\n            {this.renderStep(4, \"Copying files\")}\n            {this.renderStep(5, \"Finishing\")}\n          </ul>\n          {error != null && (\n            <Panel bsStyle=\"danger\">\n              <Panel.Heading><Panel.Title>{error}</Panel.Title></Panel.Heading>\n            </Panel>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          {status == null && <Button bsStyle=\"warning\" onClick={onHide}>Cancel</Button>}\n          {status != null && status !== false && (\n            <LinkContainer to={`/${status}`}>\n              <Button bsStyle=\"info\" onClick={onHide}>Open</Button>\n            </LinkContainer>\n          )}\n          {status != null && <Button bsStyle=\"info\" onClick={onHide}>Ok</Button>}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nclass Root extends React.Component {\n  cache = new AppCache(this);\n  state = {\n    mapLoadName: null,\n    mapLoadProgress: -1,\n    mapLoadStatus: null,\n    mapLoadError: null,\n  }\n\n  navigateTo(url) {\n    if (this.router) {\n      this.router.history.push(url);\n    }\n  }\n\n  beginMapLoad(name) {\n    this.setState({ mapLoadName: name, mapLoadProgress: -1, mapLoadStatus: null, mapLoadError: null });\n  }\n  onMapProgress(stage) {\n    this.setState({ mapLoadProgress: stage });\n  }\n  finishMapLoad(id) {\n    this.setState({ mapLoadStatus: id });\n  }\n  failMapLoad(error) {\n    this.setState({ mapLoadStatus: false, mapLoadError: error });\n  }\n\n  onCloseMapDialog = () => {\n    this.cache.abortMap();\n    this.setState({\n      mapLoadName: null,\n      mapLoadProgress: -1,\n      mapLoadStatus: null,\n      mapLoadError: null,\n    });\n  }\n\n  render() {\n    const { mapLoadName, mapLoadProgress, mapLoadStatus, mapLoadError } = this.state;\n    return (\n      <Router basename=\"/\" ref={e => this.router = e}>\n        <Title title=\"WC3 Data\">\n          <Options>\n            <AppCache.Context.Provider value={this.cache}>\n              <AppCache.MapsContext.Provider value={this.cache.maps}>\n                <div className=\"App\">\n                  <MapDialog name={mapLoadName} status={mapLoadStatus} progress={mapLoadProgress} error={mapLoadError} onHide={this.onCloseMapDialog} />\n                  <Route path=\"/:build?\" component={AppLoader} />\n                </div>\n              </AppCache.MapsContext.Provider>\n            </AppCache.Context.Provider>\n          </Options>\n        </Title>\n      </Router>\n    )\n  }\n}\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}